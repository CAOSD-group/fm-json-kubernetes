[
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffee.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffee.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "gateway-test",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffee1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffee1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coffee",
      "Namespace": "coffee",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coffee",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 53
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffee1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffee1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coffee-svc",
      "Namespace": "coffee",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffeeshop-deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffeeshop-deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coffeeshop-deployment",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coffeeshop",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffeeshop-service.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffeeshop-service.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coffeeshop-service",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffee_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffee_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coffee",
      "Namespace": "gateway-test",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coffee",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffee_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coffee_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coffee-service",
      "Namespace": "gateway-test",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "cofre-senhas",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "cofre-senhas",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 59
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-deployment1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-deployment1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "cofre-senhas",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "cofre-senhas",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 59
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cofre-senhas",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-11.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-11.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cofre-senhas",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-eks-com-classe.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-eks-com-classe.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cofre-senhas",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-eks-com-classe1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-eks-com-classe1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cofre-senhas",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-flask-redis.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-flask-redis.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cofre-senhas",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-flask-redis1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-flask-redis1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cofre-senhas",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-workaround.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-workaround.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cofre-senhas-static",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-workaround1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-ingress-workaround1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cofre-senhas-static",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-service.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-service.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cofre-senhas",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-service1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/cofre-service1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cofre-senhas",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend-ingress-ssl.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend-ingress-ssl.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress has TLS configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-cm-files.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-cm-files.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1-cm-files",
      "Namespace": "",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-cm-files1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-cm-files1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1-cm-files",
      "Namespace": "",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-cm.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-cm.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1-config",
      "Namespace": "",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-cm1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-cm1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1-config",
      "Namespace": "",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-backend1",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-backend1",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-deployment1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-deployment1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-backend1",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-backend1",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-deployment2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-deployment2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-backend1",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-backend1",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-deployment3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-deployment3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-backend1",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-backend1",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-deployment4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-deployment4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-backend1",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-backend1",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-ingress.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-ingress.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-ingress1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-ingress1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-ingress2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-ingress2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-pvc-staticfiles.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-pvc-staticfiles.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1-mystaticfiles",
      "Namespace": "",
      "Kind": "PersistentVolumeClaim",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-pvc-staticfiles1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-pvc-staticfiles1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1-mystaticfiles",
      "Namespace": "",
      "Kind": "PersistentVolumeClaim",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-pvc.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-pvc.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1-myappdata",
      "Namespace": "",
      "Kind": "PersistentVolumeClaim",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-pvc1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-pvc1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1-myappdata",
      "Namespace": "",
      "Kind": "PersistentVolumeClaim",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-secrets.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-secrets.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1-secrets",
      "Namespace": "",
      "Kind": "Secret",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-secrets1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend1-secrets1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-backend1-secrets",
      "Namespace": "",
      "Kind": "Secret",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend2-deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend2-deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-backend2",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-backend2",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend2-deployment1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend2-deployment1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-backend2",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-backend2",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend2-deployment2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-backend2-deployment2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-backend2",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-backend2",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-frontend",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-frontend",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-frontend",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 73
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-frontend",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-frontend",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-frontend",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-deployment6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-frontend",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-hpa.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-hpa.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "HorizontalPodAutoscaler",
      "Results": {
        "hpaMaxAvailability": {
          "ID": "hpaMaxAvailability",
          "Message": "HPA has a valid max and min replica configuration",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "hpaMinAvailability": {
          "ID": "hpaMinAvailability",
          "Message": "HPA minReplicas should be 2 or more",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 66
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-ingress-ssl.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-ingress-ssl.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress has TLS configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-ingress.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-ingress.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress has TLS configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-ingress1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-ingress1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress has TLS configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-ingress2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-ingress2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-ingress3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-ingress3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-patch.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-patch.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-frontend",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-patch1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-patch1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "coit-frontend",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-role-binding.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-role-binding.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-frontend-listpods",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-sa.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/coit-frontend-sa.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "coit-frontend",
      "Namespace": "",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collabora-secrets.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collabora-secrets.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "collabora-admin-secrets",
      "Namespace": "",
      "Kind": "Secret",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collaboration.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collaboration.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "akademia-collaboration",
      "Namespace": "default",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "collaboration",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:07+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collaboration_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collaboration_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "akademia-collaboration-service",
      "Namespace": "default",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:07+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collaboration_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collaboration_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "akademia-collaboration-ingress",
      "Namespace": "default",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress has TLS configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:07+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collect-headless-service.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collect-headless-service.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "all-in-one-collector-headless-svc",
      "Namespace": "default",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:07+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collect-service.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collect-service.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "all-in-one-collector-svc",
      "Namespace": "default",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:07+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collection.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collection.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "collection",
      "Namespace": "collection",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "collection",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 53
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:07+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collections-service.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collections-service.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "collections",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:07+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collections.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collections.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "collections",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "collections",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 70
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:07+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collection_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collection_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "collection-psql",
      "Namespace": "collection",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "collection-psql",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:07+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collection_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collection_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "collection-svc",
      "Namespace": "collection",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:07+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collection_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collection_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "collection-psql",
      "Namespace": "collection",
      "Kind": "PersistentVolumeClaim",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:07+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collection_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collection_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "collection-cm",
      "Namespace": "collection",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:07+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collection_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collection_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "collection-psql-cm",
      "Namespace": "collection",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:08+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collector-daemonset.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collector-daemonset.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "scrutiny-collector-daemonset",
      "Namespace": "scrutiny",
      "Kind": "DaemonSet",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes must be forbidden",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "scrutiny-collector",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Should not be running as privileged",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 45
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:08+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collector-deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collector-deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "wlsm-namespace",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:08+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collector-deployment_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collector-deployment_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "wlsm-collector",
      "Namespace": "wlsm-namespace",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "wlsm-collector-service",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:08+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collector-deployment_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collector-deployment_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "wlsm-collector-deployment",
      "Namespace": "wlsm-namespace",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:08+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-cr.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-cr.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "collectorforkubernetes",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:08+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-crb.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-crb.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "collectorforkubernetes",
      "Namespace": "collectorforkubernetes",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:08+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-deploy-addon.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-deploy-addon.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "collectorforkubernetes-addon",
      "Namespace": "collectorforkubernetes",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes must be forbidden",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "collectorforkubernetes",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Should not be running as privileged",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 47
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:08+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-ds-master.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-ds-master.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "collectorforkubernetes-master",
      "Namespace": "collectorforkubernetes",
      "Kind": "DaemonSet",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network should not be configured",
            "Details": null,
            "Success": false,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes must be forbidden",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "collectorforkubernetes",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Should not be running as privileged",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 42
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:08+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-ds.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-ds.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "collectorforkubernetes",
      "Namespace": "collectorforkubernetes",
      "Kind": "DaemonSet",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network should not be configured",
            "Details": null,
            "Success": false,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes must be forbidden",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "collectorforkubernetes",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Should not be running as privileged",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 42
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:08+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-pc.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-pc.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "collectorforkubernetes-critical",
      "Namespace": "",
      "Kind": "PriorityClass",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:08+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-sa.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/collectord-sa.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "collectorforkubernetes",
      "Namespace": "collectorforkubernetes",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:08+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/color-app.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/color-app.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "webapp-green",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "simple-webapp",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:09+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress-development.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress-development.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "colors-ingress-development",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:09+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress-development1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress-development1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "colors-ingress-development",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:09+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress-staging.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress-staging.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "colors-ingress-staging",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:09+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress-staging1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress-staging1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "colors-ingress-staging",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:09+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "colors-ingress",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:09+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "colors-ingress",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:09+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/colors-ingress2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "colors-ingress",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:09+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/com-volume.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/com-volume.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "volume-demo",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "write",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          },
          {
            "Name": "read",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/1/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 49
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:09+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/com-volume1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/com-volume1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "volume-demo",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "write",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          },
          {
            "Name": "read",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/1/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 49
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:09+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/com-volume2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/com-volume2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "volume-demo",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "write",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          },
          {
            "Name": "read",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/1/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 49
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:09+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/com.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/com.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "command-demo",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "command-demo-container",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:09+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:10+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "app-nginx-service",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:10+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "app-nginx-deployment",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "nginx",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:10+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "read-pod-global",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:10+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "development",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:10+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "postgres-config",
      "Namespace": "development",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:10+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_10.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_10.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "go-api-hpa",
      "Namespace": "development",
      "Kind": "HorizontalPodAutoscaler",
      "Results": {
        "hpaMaxAvailability": {
          "ID": "hpaMaxAvailability",
          "Message": "HPA has a valid max and min replica configuration",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "hpaMinAvailability": {
          "ID": "hpaMinAvailability",
          "Message": "HPA minReplicas should be 2 or more",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 66
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:10+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_11.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_11.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "go-api-loadbalancer",
      "Namespace": "development",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:10+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_12.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_12.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "go-api-ingress",
      "Namespace": "development",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress does not have TLS configured",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:10+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "postgres-secrets",
      "Namespace": "development",
      "Kind": "Secret",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:10+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "postgres-pv",
      "Namespace": "development",
      "Kind": "PersistentVolume",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:10+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "postgres-pvc",
      "Namespace": "development",
      "Kind": "PersistentVolumeClaim",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:10+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "postgres-headless",
      "Namespace": "development",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:11+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "postgres",
      "Namespace": "development",
      "Kind": "StatefulSet",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "postgres",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 53
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:11+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "api-config",
      "Namespace": "development",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:11+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "api-secrets",
      "Namespace": "development",
      "Kind": "Secret",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:11+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_9.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/combined_deployment_9.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "go-api-deployment",
      "Namespace": "development",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "go-api-container",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 68
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:11+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/command-and-args.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/command-and-args.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "ubuntu-sleeper-pod",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "ubuntu-sleeper",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:11+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/command-cont.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/command-cont.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "centos-pod",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "centos-container",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 53
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:11+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/command-demo.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/command-demo.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "command-demo",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "command-demo",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 55
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:11+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/command.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/command.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "command1",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "count",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:11+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commandArgument.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commandArgument.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commandtest",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandtest",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 55
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:11+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-clusterip-service.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-clusterip-service.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:11+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-clusterIP.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-clusterIP.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:11+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:12+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:12+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl10.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl10.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:12+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl10_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl10_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:12+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl11.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl11.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:12+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl11_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl11_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:12+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl12.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl12.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:12+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl12_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl12_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:12+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl13.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl13.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:12+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl13_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl13_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:12+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl14.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl14.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:12+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl14_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl14_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:12+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl2_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl2_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl3_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl3_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "command-service",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl4_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl4_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "command-srv-cluster-ip-service",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl5_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl5_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl6_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl6_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:13+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl8_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl8_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:14+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl9.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl9.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:14+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl9_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl9_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:14+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-deployment",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:14+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-depl_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commands-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:14+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-service.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-service.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commands-deployment",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commandservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:14+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-service_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands-service_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "command-service-cluster-ip",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:14+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commands1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "command-demo",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "command-demo-container",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:14+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-mongo-deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-mongo-deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comment-mongo-deployment",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comment-mongo",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 61
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:14+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-mongo-deployment_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-mongo-deployment_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "mongo-pvc",
      "Namespace": "",
      "Kind": "PersistentVolumeClaim",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:14+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-mongo-deployment_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-mongo-deployment_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comment-mongo-service",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:14+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-service-deploy.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-service-deploy.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comment-microservice-svc",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:14+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-service-deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-service-deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comment-service",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comment-service",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 61
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:15+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-service-deployment_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-service-deployment_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comment-service",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:15+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-service-deploy_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comment-service-deploy_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comment-microservice-deployment",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comment-microservice-c",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 59
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:15+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-db-depl.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-db-depl.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "commentsdb-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commentsdb",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 44
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:15+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-db-depl_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-db-depl_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commentsdb-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:15+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-db-depl_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-db-depl_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commentsdb-loadbalancer-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:15+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:15+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:15+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl10.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl10.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:15+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl10_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl10_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:15+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl11.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl11.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:15+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl11_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl11_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:15+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl12.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl12.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl12_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl12_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl13.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl13.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl13_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl13_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl14.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl14.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl14_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl14_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl15.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl15.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl15_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl15_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl16.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl16.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl16_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl16_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl17.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl17.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl17_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl17_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl18.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl18.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:16+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl18_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl18_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl19.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl19.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl19_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl19_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl20.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl20.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl20_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl20_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl21.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl21.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl21_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl21_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl22.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl22.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl22_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl22_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl23.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl23.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl23_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl23_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:17+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl24.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl24.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:18+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl24_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl24_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:18+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl25.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl25.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:18+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl25_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl25_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:18+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl26.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl26.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "commentsservice",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 44
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:18+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl26_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl26_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:18+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl26_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl26_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-loadbalancer-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:18+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl27.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl27.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:18+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl27_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl27_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:18+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl28.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl28.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:18+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl28_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl28_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:18+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl29.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl29.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:18+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl29_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl29_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl2_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl2_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl3_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl3_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl4_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl4_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl5_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl5_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl6_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl6_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl7_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl7_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:19+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl8_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl8_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:20+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl9.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl9.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:20+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl9_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl9_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:20+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-deployment",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:20+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-deployment1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-deployment1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-deployment",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:20+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-deployment1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-deployment1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:20+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-deployment_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-deployment_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:20+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments-depl_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:20+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments.k8s.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments.k8s.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-depl",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "comment-container",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:20+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments.k8s_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments.k8s_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-clusterip-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:20+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comment-service",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "collectstatic",
            "Results": {
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/initContainers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          },
          {
            "Name": "comment-service",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          },
          {
            "Name": "consumer",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/1/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 43
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:20+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/Comments1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/Comments1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-deployment",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "haalsamachar-comments",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 53
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:21+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comment-service",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:21+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments_delp.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments_delp.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "cicd-comment-container",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 53
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:21+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments_delp_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/comments_delp_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "comments-srv",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:21+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commitstatus_editor_role.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commitstatus_editor_role.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commitstatus-editor-role",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:21+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commitstatus_viewer_role.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/commitstatus_viewer_role.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "commitstatus-viewer-role",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:21+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/committer-role.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/committer-role.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "committer",
      "Namespace": "jx",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role allows Pods/exec or pods/attach",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:21+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-app.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-app.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "echo-resty-config",
      "Namespace": "",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:21+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-app_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-app_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "echo-resty",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "echo-resty",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 65
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:21+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-app_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-app_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "echo-resty",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:21+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-config.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-config.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "common",
      "Namespace": "dev-kube",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:21+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-configmap.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-configmap.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "common-config",
      "Namespace": "",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "Potentially sensitive content is detected in the ConfigMap keys or values",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:21+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-config_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-config_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "common-docker",
      "Namespace": "dev-kube",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-external.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-external.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cluster-mgmt",
      "Namespace": "rook-ceph-external",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding does not reference a Role allowing Pod exec or attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 25
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-external_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-external_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cmd-reporter",
      "Namespace": "rook-ceph-external",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-external_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-external_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cmd-reporter",
      "Namespace": "rook-ceph-external",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-external_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-external_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-default",
      "Namespace": "rook-ceph-external",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-external_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-external_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cmd-reporter",
      "Namespace": "rook-ceph-external",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-scripts-cm2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-scripts-cm2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "mongodb-common-scripts",
      "Namespace": "mongodb",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-scripts-cm3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-scripts-cm3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "mongodb-common-scripts",
      "Namespace": "mongodb",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-scripts-cm4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-scripts-cm4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "mongodb-common-scripts",
      "Namespace": "mongodb",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-scripts-cm5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-scripts-cm5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "mongodb-common-scripts",
      "Namespace": "mongodb",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-service-maps.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common-service-maps.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "common-service-maps",
      "Namespace": "kube-public",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/Common59.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/Common59.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "storage-claim",
      "Namespace": "",
      "Kind": "PersistentVolumeClaim",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/Common59_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/Common59_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "validator-service",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:22+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/Common59_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/Common59_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "calculator-service",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:23+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/Common59_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/Common59_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "validator-deployment",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "validator-container",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:23+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/Common59_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/Common59_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "calculator-deployment",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "calculator-container",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:23+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:23+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:23+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-csi-nodeplugin",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:23+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_10.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_10.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-object-bucket",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:23+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_11.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_11.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:23+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_12.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_12.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole allows Pods/exec or pods/attach",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:23+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_13.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_13.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-csi-nodeplugin-role",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:23+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_14.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_14.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-csi-provisioner-role",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:23+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_15.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_15.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "objectstorage-provisioner-role-binding",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:23+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_16.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_16.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-nodeplugin",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:24+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_17.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_17.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-provisioner-role",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:24+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_18.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_18.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-global",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:24+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_19.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_19.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr-cluster",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:24+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-external-provisioner-runner",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:24+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_20.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_20.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-object-bucket",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:24+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_21.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_21.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:24+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_22.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_22.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:24+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_23.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_23.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-external-provisioner-cfg",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:24+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_24.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_24.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-nodeplugin",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:24+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_25.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_25.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-external-provisioner-cfg",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:24+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_26.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_26.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cmd-reporter",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:24+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_27.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_27.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_28.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_28.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_29.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_29.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-purge-osd",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "objectstorage-provisioner-role",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_30.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_30.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_31.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_31.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-csi-provisioner-role-cfg",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_32.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_32.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-nodeplugin-role-cfg",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_33.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_33.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-provisioner-role-cfg",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_34.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_34.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cluster-mgmt",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding does not reference a Role allowing Pod exec or attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 25
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_35.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_35.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cmd-reporter",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_36.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_36.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_37.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_37.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr-system",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding does not reference a Role allowing Pod exec or attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 25
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_38.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_38.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:25+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_39.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_39.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-purge-osd",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-nodeplugin",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_40.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_40.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_41.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_41.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "objectstorage-provisioner",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_42.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_42.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cmd-reporter",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_43.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_43.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-default",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_44.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_44.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_45.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_45.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_46.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_46.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-purge-osd",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_47.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_47.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-rgw",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_48.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_48.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_49.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_49.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-csi-cephfs-plugin-sa",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-external-provisioner-runner",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:26+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_50.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_50.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-csi-cephfs-provisioner-sa",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:27+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_51.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_51.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-csi-rbd-plugin-sa",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:27+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_52.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_52.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-csi-rbd-provisioner-sa",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:27+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cluster-mgmt",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:27+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-global",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:27+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr-cluster",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:27+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_9.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common61_9.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr-system",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:27+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common67.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common67.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "config-ikukantai",
      "Namespace": "knative-serving",
      "Kind": "ConfigMap",
      "Results": {
        "sensitiveConfigmapContent": {
          "ID": "sensitiveConfigmapContent",
          "Message": "The ConfigMap does not contain potentially sensitive content in its keys and values",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:27+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:27+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-csi-nodeplugin",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:27+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_10.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_10.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-object-bucket",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:27+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_11.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_11.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:27+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_12.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_12.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole allows Pods/exec or pods/attach",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_13.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_13.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-csi-nodeplugin-role",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_14.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_14.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-csi-provisioner-role",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_15.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_15.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "objectstorage-provisioner-role-binding",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_16.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_16.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-nodeplugin",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_17.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_17.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-provisioner-role",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_18.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_18.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-global",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_19.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_19.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr-cluster",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-external-provisioner-runner",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_20.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_20.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-object-bucket",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_21.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_21.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_22.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_22.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_23.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_23.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-external-provisioner-cfg",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_24.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_24.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-nodeplugin",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:28+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_25.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_25.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-external-provisioner-cfg",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_26.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_26.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cmd-reporter",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_27.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_27.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_28.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_28.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_29.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_29.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-purge-osd",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "objectstorage-provisioner-role",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_30.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_30.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_31.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_31.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-csi-provisioner-role-cfg",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_32.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_32.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-nodeplugin-role-cfg",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_33.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_33.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-provisioner-role-cfg",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_34.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_34.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cluster-mgmt",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding does not reference a Role allowing Pod exec or attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 25
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_35.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_35.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cmd-reporter",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_36.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_36.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:29+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_37.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_37.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr-system",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding does not reference a Role allowing Pod exec or attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 25
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_38.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_38.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_39.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_39.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-purge-osd",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-nodeplugin",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_40.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_40.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_41.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_41.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "objectstorage-provisioner",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_42.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_42.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cmd-reporter",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_43.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_43.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-default",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_44.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_44.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_45.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_45.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_46.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_46.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-purge-osd",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_47.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_47.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-rgw",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_48.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_48.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:30+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_49.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_49.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-csi-cephfs-plugin-sa",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-external-provisioner-runner",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_50.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_50.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-csi-cephfs-provisioner-sa",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_51.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_51.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-csi-rbd-plugin-sa",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_52.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_52.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-csi-rbd-provisioner-sa",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cluster-mgmt",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-global",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr-cluster",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_9.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common68_9.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr-system",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-csi-nodeplugin",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_10.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_10.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-object-bucket",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_11.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_11.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_12.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_12.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole allows Pods/exec or pods/attach",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_13.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_13.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-csi-nodeplugin-role",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:31+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_14.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_14.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-csi-provisioner-role",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_15.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_15.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "objectstorage-provisioner-role-binding",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_16.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_16.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-nodeplugin",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_17.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_17.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-provisioner-role",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_18.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_18.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-global",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_19.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_19.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr-cluster",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-external-provisioner-runner",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_20.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_20.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-object-bucket",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_21.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_21.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_22.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_22.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_23.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_23.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-external-provisioner-cfg",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_24.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_24.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-nodeplugin",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_25.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_25.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-external-provisioner-cfg",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:32+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_26.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_26.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cmd-reporter",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_27.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_27.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_28.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_28.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_29.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_29.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-purge-osd",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "objectstorage-provisioner-role",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_30.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_30.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-rgw",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_31.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_31.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "rook-ceph",
      "Kind": "Role",
      "Results": {
        "rolePodExecAttach": {
          "ID": "rolePodExecAttach",
          "Message": "The Role does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_32.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_32.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "cephfs-csi-provisioner-role-cfg",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_33.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_33.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-nodeplugin-role-cfg",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_34.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_34.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-provisioner-role-cfg",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_35.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_35.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cluster-mgmt",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding does not reference a Role allowing Pod exec or attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 25
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_36.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_36.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cmd-reporter",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_37.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_37.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:33+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_38.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_38.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr-system",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding does not reference a Role allowing Pod exec or attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 25
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_39.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_39.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-csi-nodeplugin",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_40.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_40.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-purge-osd",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_41.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_41.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-rgw",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_42.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_42.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "rook-ceph",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_43.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_43.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "objectstorage-provisioner",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_44.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_44.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cmd-reporter",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_45.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_45.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-default",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_46.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_46.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_47.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_47.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-osd",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_48.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_48.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-purge-osd",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_49.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_49.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-rgw",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:34+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rbd-external-provisioner-runner",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_50.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_50.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-system",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_51.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_51.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-csi-cephfs-plugin-sa",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_52.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_52.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-csi-cephfs-provisioner-sa",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_53.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_53.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-csi-rbd-plugin-sa",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_54.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_54.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-csi-rbd-provisioner-sa",
      "Namespace": "rook-ceph",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-cluster-mgmt",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-global",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr-cluster",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_9.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/common6_9.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rook-ceph-mgr-system",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/communication-pods.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/communication-pods.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "server-pod",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "nginx-container",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/communication-pods_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/communication-pods_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "client-pod",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "busybox-container",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "company",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "company",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:35+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-deployment1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-deployment1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "company",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "company",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:36+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-deployment2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-deployment2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "company",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "company",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:36+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-service.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-service.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "company",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:36+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-service1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-service1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "company",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:36+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-service2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-service2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "company",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:36+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-svc1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-svc1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "company-service",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:36+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-svc2_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-svc2_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "company-service",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:36+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-svc_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/company-svc_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "company-service",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:36+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compiler.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compiler.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "compiler",
      "Namespace": "aiml",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "compiler",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:36+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compiler1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compiler1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "compiler",
      "Namespace": "aiml",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "compiler",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:36+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "sock-shop",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:36+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "sock-shop",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:36+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "carts",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "carts",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 76
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:37+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_10.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_10.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "front-end",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:37+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_11.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_11.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "orders",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "orders",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 76
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:37+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_12.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_12.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "orders",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:37+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_13.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_13.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "orders-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "orders-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 58
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:37+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_14.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_14.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "orders-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:37+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_15.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_15.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "payment",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "payment",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:37+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_16.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_16.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "payment",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:37+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_17.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_17.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "queue-master",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "queue-master",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 65
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:37+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_18.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_18.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "queue-master",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:37+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_19.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_19.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "rabbitmq",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "rabbitmq",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          },
          {
            "Name": "rabbitmq-exporter",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/1/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:37+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "carts",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:37+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_20.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_20.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rabbitmq",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:38+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_21.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_21.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "session-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "session-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 62
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:38+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_22.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_22.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "session-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:38+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_23.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_23.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "shipping",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "shipping",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 76
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:38+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_24.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_24.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "shipping",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:38+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_25.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_25.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "user",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "user",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:38+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_26.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_26.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "user",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:38+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_27.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_27.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "user-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "user-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 62
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:38+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_28.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_28.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "user-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:38+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "carts-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "carts-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 58
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:38+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "carts-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:38+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "catalogue",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "catalogue",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:38+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "catalogue",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:39+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "catalogue-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "catalogue-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:39+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "catalogue-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:39+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_9.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo1_9.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "front-end",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "front-end",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:39+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "sock-shop",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:39+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "carts",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "carts",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 76
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:39+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_10.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_10.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "front-end",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:39+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_11.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_11.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "orders",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "orders",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 76
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:39+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_12.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_12.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "orders",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:39+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_13.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_13.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "orders-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "orders-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 58
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:39+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_14.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_14.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "orders-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:39+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_15.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_15.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "payment",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "payment",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:39+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_16.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_16.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "payment",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_17.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_17.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "queue-master",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "queue-master",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 65
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_18.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_18.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "queue-master",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_19.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_19.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "rabbitmq",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "rabbitmq",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          },
          {
            "Name": "rabbitmq-exporter",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/1/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "carts",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_20.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_20.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rabbitmq",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_21.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_21.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "session-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "session-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 62
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_22.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_22.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "session-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_23.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_23.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "shipping",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "shipping",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 76
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_24.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_24.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "shipping",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_25.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_25.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "user",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "user",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_26.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_26.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "user",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_27.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_27.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "user-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "user-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 62
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:40+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_28.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_28.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "user-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:41+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "carts-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "carts-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 58
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:41+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "carts-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:41+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "catalogue",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "catalogue",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:41+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "catalogue",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:41+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "catalogue-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "catalogue-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:41+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "catalogue-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:41+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_9.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo2_9.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "front-end",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "front-end",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:41+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "sock-shop",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:41+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "carts",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "carts",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 76
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:41+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_10.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_10.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "front-end",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:41+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_11.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_11.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "orders",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "orders",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 76
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:41+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_12.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_12.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "orders",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:42+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_13.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_13.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "orders-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "orders-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 58
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:42+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_14.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_14.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "orders-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:42+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_15.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_15.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "payment",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "payment",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:42+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_16.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_16.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "payment",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:42+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_17.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_17.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "queue-master",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "queue-master",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 65
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:42+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_18.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_18.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "queue-master",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:42+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_19.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_19.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "rabbitmq",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "rabbitmq",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          },
          {
            "Name": "rabbitmq-exporter",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/1/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:42+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "carts",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:42+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_20.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_20.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rabbitmq",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:42+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_21.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_21.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "session-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "session-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 62
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:42+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_22.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_22.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "session-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:42+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_23.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_23.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "shipping",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "shipping",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 76
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_24.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_24.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "shipping",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_25.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_25.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "user",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "user",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_26.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_26.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "user",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_27.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_27.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "user-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "user-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 62
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_28.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_28.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "user-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "carts-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "carts-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 58
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "carts-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "catalogue",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "catalogue",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "catalogue",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "catalogue-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "catalogue-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "catalogue-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_9.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo3_9.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "front-end",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "front-end",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:43+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "carts",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "carts",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 76
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_10.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_10.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "front-end",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_11.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_11.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "orders",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "orders",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 76
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_12.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_12.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "orders",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_13.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_13.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "orders-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "orders-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 58
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_14.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_14.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "orders-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_15.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_15.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "payment",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "payment",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_16.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_16.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "payment",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_17.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_17.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "queue-master",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "queue-master",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 65
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_18.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_18.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "queue-master",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_19.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_19.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "rabbitmq",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "rabbitmq",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          },
          {
            "Name": "rabbitmq-exporter",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/1/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "carts",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_20.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_20.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "rabbitmq",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:44+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_21.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_21.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "session-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "session-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 62
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:45+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_22.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_22.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "session-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:45+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_23.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_23.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "shipping",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "shipping",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 76
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:45+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_24.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_24.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "shipping",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:45+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_25.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_25.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "user",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "user",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:45+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_26.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_26.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "user",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:45+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_27.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_27.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "user-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "user-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 62
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:45+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_28.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_28.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "user-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:45+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "carts-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "carts-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 58
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:45+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "carts-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:45+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "catalogue",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "catalogue",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:45+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "catalogue",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:45+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "catalogue-db",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "catalogue-db",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:46+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "catalogue-db",
      "Namespace": "sock-shop",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:46+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_9.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-demo_9.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "front-end",
      "Namespace": "sock-shop",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "front-end",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 81
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:46+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "secrets",
      "Namespace": "",
      "Kind": "Secret",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:46+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "mysql-service",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:46+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "mysql-statefulset",
      "Namespace": "",
      "Kind": "StatefulSet",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "mysql",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 53
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:46+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "petstore-webapp",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "petstore-webapp",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 56
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:46+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "petstore-webapp",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:46+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "ingress-service",
      "Namespace": "",
      "Kind": "Ingress",
      "Results": {
        "tlsSettingsMissing": {
          "ID": "tlsSettingsMissing",
          "Message": "Ingress has TLS configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:46+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "allow-petstore",
      "Namespace": "",
      "Kind": "NetworkPolicy",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:46+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete-deployment_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "allow-mysql",
      "Namespace": "",
      "Kind": "NetworkPolicy",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:46+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "persistent-volume",
      "Namespace": "",
      "Kind": "PersistentVolume",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:46+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "persistent-volume-claim",
      "Namespace": "",
      "Kind": "PersistentVolumeClaim",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:47+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete1_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complete1_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "pod-persistent-volume",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "pod-persistent-volume-container",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:47+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "web-d",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "apache",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:47+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "web-d",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "apache",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 52
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:47+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "web-svc",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:47+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "miespacio",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:47+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo2_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo2_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "nginx",
      "Namespace": "",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "nginx",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:47+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "miespacio",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:47+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo3_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo3_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "nginx",
      "Namespace": "miespacio",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "nginx",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 48
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:47+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/completo_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "web-svc",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:47+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-policy.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-policy.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "network-policy-policy",
      "Namespace": "",
      "Kind": "NetworkPolicy",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:47+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-dep.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-dep.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "complex-web-dep",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "complex-web",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 64
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:47+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-dep1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-dep1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "complex-web-dep",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "complex-web",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 64
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:48+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-hpa.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-hpa.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "complex-web-hpa-1",
      "Namespace": "",
      "Kind": "HorizontalPodAutoscaler",
      "Results": {
        "hpaMaxAvailability": {
          "ID": "hpaMaxAvailability",
          "Message": "HPA has a valid max and min replica configuration",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "hpaMinAvailability": {
          "ID": "hpaMinAvailability",
          "Message": "HPA minReplicas should be 2 or more",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 66
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:48+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-hpa1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-hpa1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "complex-web-hpa-1",
      "Namespace": "",
      "Kind": "HorizontalPodAutoscaler",
      "Results": {
        "hpaMaxAvailability": {
          "ID": "hpaMaxAvailability",
          "Message": "HPA has a valid max and min replica configuration",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "hpaMinAvailability": {
          "ID": "hpaMinAvailability",
          "Message": "HPA minReplicas should be 2 or more",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 66
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:48+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-hpa2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-hpa2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "complex-web-hpa-1",
      "Namespace": "",
      "Kind": "HorizontalPodAutoscaler",
      "Results": {
        "hpaMaxAvailability": {
          "ID": "hpaMaxAvailability",
          "Message": "HPA has a valid max and min replica configuration",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "hpaMinAvailability": {
          "ID": "hpaMinAvailability",
          "Message": "HPA has a valid min replica configuration",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:48+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-hpa21.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-hpa21.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "complex-web-hpa-1",
      "Namespace": "",
      "Kind": "HorizontalPodAutoscaler",
      "Results": {
        "hpaMaxAvailability": {
          "ID": "hpaMaxAvailability",
          "Message": "HPA has a valid max and min replica configuration",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "hpaMinAvailability": {
          "ID": "hpaMinAvailability",
          "Message": "HPA has a valid min replica configuration",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:48+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-load.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-load.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "complex-web-load",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "cw-load-generator",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 55
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:48+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-load1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-load1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "complex-web-load",
      "Namespace": "",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Multiple replicas are scheduled",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "cw-load-generator",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "Use one of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities to restrict containers using unwanted privileges",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy is \"Always\"",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag should be specified",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 55
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:48+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-svc.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-svc.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "complex-web-svc",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:48+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-svc1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/complex-web-svc1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "complex-web-svc",
      "Namespace": "",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:48+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "run-reporter-inventory",
      "Namespace": "tigera-compliance",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes must be forbidden",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "reporter",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 60
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:48+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "run-reporter-inventory",
      "Namespace": "tigera-compliance",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes must be forbidden",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "reporter",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 60
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:48+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "run-reporter-network-access",
      "Namespace": "tigera-compliance",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes must be forbidden",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "reporter",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 60
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:49+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod1_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod1_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "run-reporter-policy-audit",
      "Namespace": "tigera-compliance",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes must be forbidden",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "reporter",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 60
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:49+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod1_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod1_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "run-reporter-cis-benchmark",
      "Namespace": "tigera-compliance",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes must be forbidden",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "reporter",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 60
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:49+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "run-reporter-network-access",
      "Namespace": "tigera-compliance",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes must be forbidden",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "reporter",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 60
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:49+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "run-reporter-policy-audit",
      "Namespace": "tigera-compliance",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes must be forbidden",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "reporter",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 60
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:49+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/compliance-reporter-pod_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "run-reporter-cis-benchmark",
      "Namespace": "tigera-compliance",
      "Kind": "Pod",
      "Results": {
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "automountServiceAccountToken": {
            "ID": "automountServiceAccountToken",
            "Message": "The ServiceAccount will be automounted",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes must be forbidden",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "missingNetworkPolicy": {
            "ID": "missingNetworkPolicy",
            "Message": "A NetworkPolicy should match pod labels and contain applied egress and ingress rules",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "reporter",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "linuxHardening": {
                "ID": "linuxHardening",
                "Message": "One of AppArmor, Seccomp, SELinux, or dropping Linux Capabilities are used to restrict containers using unwanted privileges",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem should be read only",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Should not be allowed to run as root",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container sets potentially sensitive environment variables",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 60
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:49+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1).yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1).yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:49+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:49+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:49+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:49+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:49+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:49+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:50+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:50+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components (1)_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:50+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:50+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:50+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:50+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:50+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:50+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 65
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:50+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:50+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:50+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.61_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:51+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:51+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:51+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:51+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:51+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 65
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:51+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:51+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:51+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.62_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:51+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:51+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:51+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:51+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 65
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.63_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 65
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.64_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:52+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class should be set",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe should be configured",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 65
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.3.6_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:53+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:54+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:54+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.6.1_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:54+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:54+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:54+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:54+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:54+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:54+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:54+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:54+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 85
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:54+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-v0.7.1_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-with-crds.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-with-crds.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "flux-system",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-with-crds_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-with-crds_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "kustomize-controller",
      "Namespace": "flux-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-with-crds_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-with-crds_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "notification-controller",
      "Namespace": "flux-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-without-crds.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-without-crds.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 1,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "flux-system",
      "Namespace": "",
      "Kind": "Namespace",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-without-crds_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-without-crds_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "kustomize-controller",
      "Namespace": "flux-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-without-crds_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components-without-crds_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "notification-controller",
      "Namespace": "flux-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:55+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:56+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:56+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:56+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:56+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components10_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:56+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:56+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:56+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:56+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:56+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:56+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:56+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:56+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:57+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components11_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:57+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:57+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:57+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:57+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:57+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:57+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:57+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:57+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network should not be configured",
            "Details": null,
            "Success": false,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 79
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:57+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components12_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:57+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:57+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:58+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:58+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:58+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:58+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:58+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:58+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 79
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:58+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components13_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:58+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:58+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:58+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:58+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:58+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:59+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:59+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:59+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:59+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components14_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:59+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:59+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:59+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:59+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:59+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:59+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:59+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:03:59+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:00+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components15_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:00+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:00+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:00+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:00+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:00+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:00+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:00+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:00+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:00+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components16_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:00+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:00+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation should not be allowed",
                "Details": null,
                "Success": false,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 73
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components17_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:01+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components18_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:02+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components19_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container does not have any insecure capabilities",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 85
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components1_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:03+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components20_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:04+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components21_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components22_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:05+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_3.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_3.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server-auth-reader",
      "Namespace": "kube-system",
      "Kind": "RoleBinding",
      "Results": {
        "rolebindingClusterAdminClusterRole": {
          "ID": "rolebindingClusterAdminClusterRole",
          "Message": "The RoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterAdminRole": {
          "ID": "rolebindingClusterAdminRole",
          "Message": "The RoleBinding references a Role with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingClusterRolePodExecAttach": {
          "ID": "rolebindingClusterRolePodExecAttach",
          "Message": "The RoleBinding does not reference a ClusterRole allowing pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "rolebindingRolePodExecAttach": {
          "ID": "rolebindingRolePodExecAttach",
          "Message": "The RoleBinding references a Role that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_4.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_4.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server:system:auth-delegator",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding references the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 0
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_5.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_5.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRoleBinding",
      "Results": {
        "clusterrolebindingClusterAdmin": {
          "ID": "clusterrolebindingClusterAdmin",
          "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        },
        "clusterrolebindingPodExecAttach": {
          "ID": "clusterrolebindingPodExecAttach",
          "Message": "The ClusterRoleBinding references a ClusterRole that allows Pods/exec, allows pods/attach, or that does not exist",
          "Details": null,
          "Success": false,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 50
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_6.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_6.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Service",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_7.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_7.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 1
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "Deployment",
      "Results": {
        "deploymentMissingReplicas": {
          "ID": "deploymentMissingReplicas",
          "Message": "Only one replica is scheduled",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "metadataAndInstanceMismatched": {
          "ID": "metadataAndInstanceMismatched",
          "Message": "Label app.kubernetes.io/instance must match metadata.name",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "missingPodDisruptionBudget": {
          "ID": "missingPodDisruptionBudget",
          "Message": "Should have a PodDisruptionBudget",
          "Details": null,
          "Success": false,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        },
        "pdbMinAvailableGreaterThanHPAMinReplicas": {
          "ID": "pdbMinAvailableGreaterThanHPAMinReplicas",
          "Message": "PDB and HPA are correctly configured",
          "Details": null,
          "Success": true,
          "Severity": "warning",
          "Category": "Reliability",
          "Mutations": null
        }
      },
      "PodResult": {
        "Name": "",
        "Results": {
          "hostIPCSet": {
            "ID": "hostIPCSet",
            "Message": "Host IPC is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostNetworkSet": {
            "ID": "hostNetworkSet",
            "Message": "Host network is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPIDSet": {
            "ID": "hostPIDSet",
            "Message": "Host PID is not configured",
            "Details": null,
            "Success": true,
            "Severity": "danger",
            "Category": "Security",
            "Mutations": null
          },
          "hostPathSet": {
            "ID": "hostPathSet",
            "Message": "HostPath volumes are not configured",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "hostProcess": {
            "ID": "hostProcess",
            "Message": "Privileged access to the host check is valid",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "priorityClassNotSet": {
            "ID": "priorityClassNotSet",
            "Message": "Priority class has been set",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          },
          "procMount": {
            "ID": "procMount",
            "Message": "The default /proc masks are set up to reduce attack surface, and should be required",
            "Details": null,
            "Success": true,
            "Severity": "warning",
            "Category": "Security",
            "Mutations": null
          },
          "topologySpreadConstraint": {
            "ID": "topologySpreadConstraint",
            "Message": "Pod should be configured with a valid topology spread constraint",
            "Details": null,
            "Success": false,
            "Severity": "warning",
            "Category": "Reliability",
            "Mutations": null
          }
        },
        "ContainerResults": [
          {
            "Name": "metrics-server",
            "Results": {
              "cpuLimitsMissing": {
                "ID": "cpuLimitsMissing",
                "Message": "CPU limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "cpuRequestsMissing": {
                "ID": "cpuRequestsMissing",
                "Message": "CPU requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "dangerousCapabilities": {
                "ID": "dangerousCapabilities",
                "Message": "Container does not have any dangerous capabilities",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "hostPortSet": {
                "ID": "hostPortSet",
                "Message": "Host port is not configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "insecureCapabilities": {
                "ID": "insecureCapabilities",
                "Message": "Container should not have insecure capabilities",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "livenessProbeMissing": {
                "ID": "livenessProbeMissing",
                "Message": "Liveness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "memoryLimitsMissing": {
                "ID": "memoryLimitsMissing",
                "Message": "Memory limits should be set",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "memoryRequestsMissing": {
                "ID": "memoryRequestsMissing",
                "Message": "Memory requests are set",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Efficiency",
                "Mutations": null
              },
              "notReadOnlyRootFilesystem": {
                "ID": "notReadOnlyRootFilesystem",
                "Message": "Filesystem is read only",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Security",
                "Mutations": null
              },
              "privilegeEscalationAllowed": {
                "ID": "privilegeEscalationAllowed",
                "Message": "Privilege escalation not allowed",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "pullPolicyNotAlways": {
                "ID": "pullPolicyNotAlways",
                "Message": "Image pull policy should be \"Always\"",
                "Details": null,
                "Success": false,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": [
                  {
                    "Path": "/spec/template/spec/containers/0/imagePullPolicy",
                    "Op": "add",
                    "Value": "Always",
                    "Comment": ""
                  }
                ]
              },
              "readinessProbeMissing": {
                "ID": "readinessProbeMissing",
                "Message": "Readiness probe is configured",
                "Details": null,
                "Success": true,
                "Severity": "warning",
                "Category": "Reliability",
                "Mutations": null
              },
              "runAsPrivileged": {
                "ID": "runAsPrivileged",
                "Message": "Not running as privileged",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "runAsRootAllowed": {
                "ID": "runAsRootAllowed",
                "Message": "Is not allowed to run as root",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "sensitiveContainerEnvVar": {
                "ID": "sensitiveContainerEnvVar",
                "Message": "The container does not set potentially sensitive environment variables",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Security",
                "Mutations": null
              },
              "tagNotSpecified": {
                "ID": "tagNotSpecified",
                "Message": "Image tag is specified",
                "Details": null,
                "Success": true,
                "Severity": "danger",
                "Category": "Reliability",
                "Mutations": null
              }
            }
          }
        ]
      },
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 83
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_8.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components23_8.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "v1beta1.metrics.k8s.io",
      "Namespace": "",
      "Kind": "APIService",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components24.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components24.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "metrics-server",
      "Namespace": "kube-system",
      "Kind": "ServiceAccount",
      "Results": {},
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components24_1.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components24_1.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:aggregated-metrics-reader",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
,
{
  "PolarisOutputVersion": "1.0",
  "AuditTime": "2025-06-16T09:04:06+02:00",
  "SourceType": "Path",
  "SourceName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components24_2.yaml",
  "DisplayName": "../scriptJsonToUvl/yamls_agrupation/yamls-tools-files/components24_2.yaml",
  "ClusterInfo": {
    "Version": "unknown",
    "Nodes": 0,
    "Pods": 0,
    "Namespaces": 0,
    "Controllers": 0
  },
  "Results": [
    {
      "Name": "system:metrics-server",
      "Namespace": "",
      "Kind": "ClusterRole",
      "Results": {
        "clusterrolePodExecAttach": {
          "ID": "clusterrolePodExecAttach",
          "Message": "The ClusterRole does not allow pods/exec or pods/attach",
          "Details": null,
          "Success": true,
          "Severity": "danger",
          "Category": "Security",
          "Mutations": null
        }
      },
      "PodResult": null,
      "CreatedTime": "0001-01-01T00:00:00Z"
    }
  ],
  "Score": 100
}
]
