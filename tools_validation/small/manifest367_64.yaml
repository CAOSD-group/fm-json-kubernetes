apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: default
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-10.1.0
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  podManagementPolicy: ''
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: mysql
      app.kubernetes.io/component: primary
  serviceName: mysql
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: d640f104cfbe85517e97b98d76f48ff697a88b6638cd59f0818ca5741af02c2d
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mysql
        app.kubernetes.io/version: 8.0.36
        helm.sh/chart: mysql-10.1.0
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: mysql
      automountServiceAccountToken: false
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/name: mysql
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
      - name: preserve-logs-symlinks
        image: docker.io/bitnami/mysql:8.0.36-debian-12-r8
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        resources:
          limits:
            cpu: 750m
            ephemeral-storage: 1024Mi
            memory: 768Mi
          requests:
            cpu: 500m
            ephemeral-storage: 50Mi
            memory: 512Mi
        command:
        - /bin/bash
        args:
        - -ec
        - "#!/bin/bash\n\n. /opt/bitnami/scripts/libfs.sh\n# We copy the logs folder\
          \ because it has symlinks to stdout and stderr\nif ! is_dir_empty /opt/bitnami/mysql/logs;\
          \ then\n  cp -r /opt/bitnami/mysql/logs /emptydir/app-logs-dir\nfi\n"
        volumeMounts:
        - name: empty-dir
          mountPath: /emptydir
      containers:
      - name: mysql
        image: docker.io/bitnami/mysql:8.0.36-debian-12-r8
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: mysql-root-password
        - name: MYSQL_USER
          value: admin
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: mysql-password
        - name: MYSQL_PORT
          value: '3306'
        - name: MYSQL_DATABASE
          value: my_database
        envFrom: null
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          exec:
            command:
            - /bin/bash
            - -ec
            - "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\"\
              \ ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\n\
              fi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          exec:
            command:
            - /bin/bash
            - -ec
            - "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\"\
              \ ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\n\
              fi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
        startupProbe:
          failureThreshold: 10
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          exec:
            command:
            - /bin/bash
            - -ec
            - "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\"\
              \ ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\n\
              fi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
        resources:
          limits:
            cpu: 750m
            ephemeral-storage: 1024Mi
            memory: 768Mi
          requests:
            cpu: 500m
            ephemeral-storage: 50Mi
            memory: 512Mi
        volumeMounts:
        - name: data
          mountPath: /bitnami/mysql
        - name: empty-dir
          mountPath: /tmp
          subPath: tmp-dir
        - name: empty-dir
          mountPath: /opt/bitnami/mysql/conf
          subPath: app-conf-dir
        - name: empty-dir
          mountPath: /opt/bitnami/mysql/tmp
          subPath: app-tmp-dir
        - name: empty-dir
          mountPath: /opt/bitnami/mysql/logs
          subPath: app-logs-dir
        - name: custom-init-scripts
          mountPath: /docker-entrypoint-initdb.d
        - name: config
          mountPath: /opt/bitnami/mysql/conf/my.cnf
          subPath: my.cnf
      volumes:
      - name: config
        configMap:
          name: mysql
      - name: custom-init-scripts
        configMap:
          name: mysql-init-scripts
      - name: empty-dir
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: mysql
        app.kubernetes.io/component: primary
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
