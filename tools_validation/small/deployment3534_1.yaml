apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-aflow-airflow-web
  labels:
    app.kubernetes.io/name: airflow
    helm.sh/chart: airflow-10.3.2
    app.kubernetes.io/instance: app-aflow
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: web
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: airflow
      app.kubernetes.io/instance: app-aflow
      app.kubernetes.io/component: web
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: airflow
        helm.sh/chart: airflow-10.3.2
        app.kubernetes.io/instance: app-aflow
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: web
      annotations:
        checksum/configmap: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      priorityClassName: ''
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: airflow
                  app.kubernetes.io/instance: app-aflow
                  app.kubernetes.io/component: web
              namespaces:
              - ml-workshop
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity: null
      serviceAccountName: airflow2-proxy
      initContainers:
      - name: waifordatabase
        image: registry.access.redhat.com/rhscl/postgresql-96-rhel7:latest
        command:
        - sh
        - -c
        - until nslookup app-aflow-postgresql.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local;
          do echo waiting for airflow db service; sleep 5; done
      containers:
      - resources: {}
        terminationMessagePath: /dev/termination-log
        name: git-sync
        command:
        - /git-sync
        env:
        - name: GIT_SYNC_REPO
          value: $(DAG_REPO)
        - name: GIT_SYNC_DEST
          value: gitdags
        - name: GIT_SYNC_BRANCH
          value: main
        - name: GIT_SYNC_ROOT
          value: /tmp/git
        - name: GIT_SYNC_ONE_TIME
          value: 'false'
        - name: GIT_SYNC_REV
        - name: HOME
          value: /tmp
        ports:
        - name: gitsync
          protocol: TCP
          containerPort: 2020
        imagePullPolicy: Always
        volumeMounts:
        - name: dags-data
          mountPath: /tmp/git
        terminationMessagePolicy: File
        image: k8s.gcr.io/git-sync/git-sync:v3.2.2
      - name: airflow-web
        image: quay.io/ml-on-k8s/airflow:2.1.7.web.keycloak
        imagePullPolicy: Always
        env:
        - name: AIRFLOW_FERNET_KEY
          valueFrom:
            secretKeyRef:
              name: app-aflow-airflow
              key: airflow-fernetKey
        - name: AIRFLOW_LOAD_EXAMPLES
          value: 'no'
        - name: AIRFLOW_DATABASE_NAME
          value: bitnami_airflow
        - name: AIRFLOW_DATABASE_USERNAME
          value: bn_airflow
        - name: AIRFLOW_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-aflow-postgresql
              key: postgresql-password
        - name: AIRFLOW_DATABASE_HOST
          value: app-aflow-postgresql
        - name: AIRFLOW_DATABASE_PORT_NUMBER
          value: '5432'
        - name: REDIS_HOST
          value: app-aflow-redis-master
        - name: REDIS_PORT_NUMBER
          value: '6379'
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-aflow-redis
              key: redis-password
        - name: AIRFLOW_EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW_WEBSERVER_HOST
          value: 0.0.0.0
        - name: AIRFLOW_WEBSERVER_PORT_NUMBER
          value: '8080'
        - name: AIRFLOW__WEBSERVER__RBAC
          value: 'False'
        - name: AIRFLOW__WEBSERVER__AUTHENTICATE
          value: 'False'
        - name: AIRFLOW_USERNAME
          value: user
        - name: AIRFLOW_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-aflow-airflow
              key: airflow-password
        - name: AIRFLOW_BASE_URL
          value: http://127.0.0.1:8080
        - name: AIRFLOW_LDAP_ENABLE
          value: 'no'
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          value: IKnowWhatYouDidLastYear
        - name: AUTH_ROLE_PUBLIC
          value: Public
        - name: AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX
          value: 'True'
        - name: OAUTH_API_BASE_URL
          value: https://$(KEYCLOAK_URL)
        - name: REQUESTS_CA_BUNDLE
          value: ''
        - name: CURL_CA_BUNDLE
          value: ''
        - name: AUTH_ROLE_PUBLIC
          value: Public
        - name: AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX
          value: 'True'
        - name: OAUTH_TOKEN_URL
          value: https://$(KEYCLOAK_URL)/auth/realms/master/protocol/openid-connect/token
        - name: OAUTH_AUTHORIZE_URL
          value: https://$(KEYCLOAK_URL)/auth/realms/master/protocol/openid-connect/auth
        - name: CLIENT_ID
          value: aflow
        - name: CLIENT_SECRET
          value: $(CLIENT_SECRET)
        - name: AIRFLOW_NAMESPACE
          value: ml-workshop
        - name: SA_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: airflow2-proxy
              key: token
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          tcpSocket:
            port: http
          failureThreshold: 6
          initialDelaySeconds: 180
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: http
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
        - name: dags-data
          mountPath: /opt/bitnami/airflow/dags
        resources:
          limits: {}
          requests: {}
      volumes:
      - name: dags-data
        emptyDir: {}
