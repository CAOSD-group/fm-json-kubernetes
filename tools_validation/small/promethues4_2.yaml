apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
  namespace: monitoring
data:
  prometheus.rules: "groups:\n- name: Visualpath POD memory demo alert\n  rules:\n\
    \  - alert: High Pod Memory\n    expr: sum(container_memory_usage_bytes) > 1\n\
    \    for: 1m\n    labels:\n      severity: slack\n    annotations:\n      summary:\
    \ High Memory Usage"
  prometheus.yml: "global:\n  scrape_interval: 5s # Set the scrape interval to every\
    \ 15 seconds. Default is every 1 minute.\n  evaluation_interval: 5s # Evaluate\
    \ rules every 15 seconds. The default is every 1 minute.\n  # scrape_timeout is\
    \ set to the global default (10s).\n\n  # Attach these labels to any time series\
    \ or alerts when communicating with\n  # external systems (federation, remote\
    \ storage, Alertmanager).\nrule_files:\n  - /etc/prometheus/prometheus.rules\n\
    alerting:\n  alertmanagers:\n  - scheme: http\n    static_configs:\n    - targets:\n\
    \      - \"alertmanager.monitoring.svc:9093\"\nscrape_configs:\n  - job_name:\
    \ 'node'\n    scheme: https\n    static_configs:\n    - targets: ['nodeexporter-service.monitoring.svc.cluster.local:9100']\n\
    \n  - job_name: 'fluentd'\n    static_configs:\n    - targets: ['fluentd.kube-logging.svc.cluster.local:24231']\n\
    \  \n  - job_name: 'kubernetes-apiservers'\n\n    kubernetes_sd_configs:\n   \
    \ - role: endpoints\n    scheme: https\n\n    tls_config:\n      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
    \    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
    \    relabel_configs:\n    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,\
    \ __meta_kubernetes_endpoint_port_name]\n      action: keep\n      regex: default;kubernetes;https\n\
    \n  - job_name: 'kubernetes-nodes'\n\n    scheme: https\n\n    tls_config:\n \
    \     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    bearer_token_file:\
    \ /var/run/secrets/kubernetes.io/serviceaccount/token\n    relabel_configs:\n\
    \    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,\
    \ __meta_kubernetes_endpoint_port_name]\n      action: keep\n      regex: default;kubernetes;https\n\
    \n  - job_name: 'kubernetes-nodes'\n\n    scheme: https\n\n    tls_config:\n \
    \     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    bearer_token_file:\
    \ /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    kubernetes_sd_configs:\n\
    \    - role: node\n\n    relabel_configs:\n    - action: labelmap\n      regex:\
    \ __meta_kubernetes_node_label_(.+)\n    - target_label: __address__\n      replacement:\
    \ kubernetes.default.svc:443\n    - source_labels: [__meta_kubernetes_node_name]\n\
    \      regex: (.+)\n      target_label: __metrics_path__\n      replacement: /api/v1/nodes/${1}/proxy/metrics\n\
    \  - job_name: 'kubernetes-pods'\n\n    kubernetes_sd_configs:\n    - role: pod\n\
    \n    relabel_configs:\n    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n\
    \      action: keep\n      regex: true\n    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n\
    \      action: replace\n      target_label: __metrics_path__\n      regex: (.+)\n\
    \    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
    \      action: replace\n      regex: ([^:]+)(?::\\d+)?;(\\d+)\n      replacement:\
    \ $1:$2\n      target_label: __address__\n    - action: labelmap\n      regex:\
    \ __meta_kubernetes_pod_label_(.+)\n    - source_labels: [__meta_kubernetes_namespace]\n\
    \      action: replace\n      target_label: kubernetes_namespace\n    - source_labels:\
    \ [__meta_kubernetes_pod_name]\n      action: replace\n      target_label: kubernetes_pod_name\n\
    \  - job_name: 'kubernetes-cadvisor'\n\n    scheme: https\n\n    tls_config:\n\
    \      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    bearer_token_file:\
    \ /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    kubernetes_sd_configs:\n\
    \    - role: node\n\n    relabel_configs:\n    - action: labelmap\n      regex:\
    \ __meta_kubernetes_node_label_(.+)\n    - target_label: __address__\n      replacement:\
    \ kubernetes.default.svc:443\n    - source_labels: [__meta_kubernetes_node_name]\n\
    \      regex: (.+)\n      target_label: __metrics_path__\n      replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor\n\
    \n  - job_name: 'kubernetes-service-endpoints'\n\n    kubernetes_sd_configs:\n\
    \    - role: endpoints\n\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n\
    \      action: keep\n      regex: true\n    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n\
    \      action: replace\n      target_label: __scheme__\n      regex: (https?)\n\
    \    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n\
    \      action: replace\n      target_label: __metrics_path__\n      regex: (.+)\n\
    \    - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n\
    \      action: replace\n      target_label: __address__\n      regex: ([^:]+)(?::\\\
    d+)?;(\\d+)\n      replacement: $1:$2\n    - action: labelmap\n      regex: __meta_kubernetes_service_label_(.+)\n\
    \    - source_labels: [__meta_kubernetes_namespace]\n      action: replace\n \
    \     target_label: kubernetes_namespace\n    - source_labels: [__meta_kubernetes_service_name]\n\
    \      action: replace\n      target_label: kubernetes_name"
