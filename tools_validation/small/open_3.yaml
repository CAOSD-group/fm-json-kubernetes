apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector
  namespace: default
data:
  config.yaml: "receivers:\n  prometheus:\n    config:\n      scrape_configs:\n  \
    \      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\
    \          job_name: integrations/kubernetes/cadvisor\n          kubernetes_sd_configs:\n\
    \            - role: node\n          relabel_configs:\n            - replacement:\
    \ kubernetes.default.svc.cluster.local:443\n              target_label: __address__\n\
    \            - regex: (.+)\n              replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor\n\
    \              source_labels:\n                - __meta_kubernetes_node_name\n\
    \              target_label: __metrics_path__\n          scheme: https\n     \
    \     tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
    \            insecure_skip_verify: true\n            server_name: kubernetes\n\
    \        - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\
    \          job_name: integrations/kubernetes/kubelet\n          kubernetes_sd_configs:\n\
    \            - role: node\n          relabel_configs:\n            - replacement:\
    \ kubernetes.default.svc.cluster.local:443\n              target_label: __address__\n\
    \            - regex: (.+)\n              replacement: /api/v1/nodes/$${1}/proxy/metrics\n\
    \              source_labels:\n                - __meta_kubernetes_node_name\n\
    \              target_label: __metrics_path__\n          scheme: https\n     \
    \     tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
    \            insecure_skip_verify: true\n            server_name: kubernetes\n\
    \        - job_name: integrations/kubernetes/kube-state-metrics\n          kubernetes_sd_configs:\n\
    \            - role: pod\n          relabel_configs:\n            - action: keep\n\
    \              regex: kube-state-metrics\n              source_labels:\n     \
    \           - __meta_kubernetes_pod_label_app_kubernetes_io_name\n        - job_name:\
    \ integrations/node_exporter\n          kubernetes_sd_configs:\n            -\
    \ namespaces:\n                names:\n                  - default\n         \
    \     role: pod\n          relabel_configs:\n            - action: keep\n    \
    \          regex: prometheus-node-exporter.*\n              source_labels:\n \
    \               - __meta_kubernetes_pod_label_app_kubernetes_io_name\n       \
    \     - action: replace\n              source_labels:\n                - __meta_kubernetes_pod_node_name\n\
    \              target_label: instance\n            - action: replace\n       \
    \       source_labels:\n                - __meta_kubernetes_namespace\n      \
    \        target_label: namespace\n  kubeletstats:\n    collection_interval: 10s\n\
    \    auth_type: \"serviceAccount\"\n    insecure_skip_verify: true\n    endpoint:\
    \ \"https://${env:K8S_NODE_NAME}:10250\"\n    metric_groups:\n      - node\n \
    \     - pod\n      - container\n  hostmetrics:\n    collection_interval: 10s\n\
    \    scrapers:\n      load:\n      filesystem:\n      memory:\n      network:\n\
    \      disk:\n      cpu:\n  k8s_cluster:\n    collection_interval: 10s\n    auth_type:\
    \ kubeConfig\n    node_conditions_to_report: [Ready, MemoryPressure]\n    allocatable_types_to_report:\
    \ [cpu, memory]\n  filelog:\n    include:\n      - /var/log/pods/*/*/*.log\n \
    \   exclude:\n      - /var/log/pods/*/otel-collector/*.log\n    start_at: beginning\n\
    \    include_file_path: true\n    include_file_name: false\n    operators:\n \
    \     - type: router\n        id: get-format\n        routes:\n          - output:\
    \ parser-docker\n            expr: 'body matches \"^\\\\{\"'\n          - output:\
    \ parser-crio\n            expr: 'body matches \"^[^ Z]+ \"'\n          - output:\
    \ parser-containerd\n            expr: 'body matches \"^[^ Z]+Z\"'\n      - type:\
    \ regex_parser\n        id: parser-crio\n        regex: '^(?P<time>[^ Z]+) (?P<stream>stdout|stderr)\
    \ (?P<logtag>[^ ]*) ?(?P<log>.*)$'\n        output: extract_metadata_from_filepath\n\
    \        timestamp:\n          parse_from: attributes.time\n          layout_type:\
    \ gotime\n          layout: '2006-01-02T15:04:05.999999999Z07:00'\n      - type:\
    \ regex_parser\n        id: parser-containerd\n        regex: '^(?P<time>[^ ^Z]+Z)\
    \ (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$'\n        output:\
    \ extract_metadata_from_filepath\n        timestamp:\n          parse_from: attributes.time\n\
    \          layout: '%Y-%m-%dT%H:%M:%S.%LZ'\n      - type: json_parser\n      \
    \  id: parser-docker\n        output: extract_metadata_from_filepath\n       \
    \ timestamp:\n          parse_from: attributes.time\n          layout: '%Y-%m-%dT%H:%M:%S.%LZ'\n\
    \      - type: move\n        from: attributes.log\n        to: body\n      - type:\
    \ regex_parser\n        id: extract_metadata_from_filepath\n        regex: '^.*\\\
    /(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\\-]{36})\\/(?P<container_name>[^\\\
    ._]+)\\/(?P<restart_count>\\d+)\\.log$'\n        parse_from: attributes[\"log.file.path\"\
    ]\n        cache:\n          size: 128\n      - type: move\n        from: attributes.stream\n\
    \        to: attributes[\"log.iostream\"]\n      - type: move\n        from: attributes.container_name\n\
    \        to: resource[\"k8s.container.name\"]\n      - type: move\n        from:\
    \ attributes.namespace\n        to: resource[\"k8s.namespace.name\"]\n      -\
    \ type: move\n        from: attributes.pod_name\n        to: resource[\"k8s.pod.name\"\
    ]\n      - type: move\n        from: attributes.restart_count\n        to: resource[\"\
    k8s.container.restart_count\"]\n      - type: move\n        from: attributes.uid\n\
    \        to: resource[\"k8s.pod.uid\"]\n\n    attributes:\n      service.name:\
    \ \"kubernetes\"\nprocessors:\n  cumulativetodelta:\n  batch:\n    send_batch_size:\
    \ 10000\n    timeout: 10s\n  k8sattributes:\n    auth_type: \"serviceAccount\"\
    \n    passthrough: true\n    filter:\n      node_from_env_var: KUBE_NODE_NAME\n\
    \    extract:\n      metadata:\n        - k8s.pod.name\n        - k8s.pod.uid\n\
    \        - k8s.deployment.name\n        - k8s.namespace.name\n        - k8s.node.name\n\
    \        - k8s.pod.start_time\n      labels:\n        - tag_name: app.label.component\n\
    \          key: app.kubernetes.io/component\n          from: pod\n    pod_association:\n\
    \      - sources:\n          - from: resource_attribute\n            name: k8s.pod.ip\n\
    \      - sources:\n          - from: resource_attribute\n            name: k8s.pod.uid\n\
    \      - sources:\n          - from: connection\n  resourcedetection:\n    detectors:\n\
    \        - env\n        - ec2\n        - system\n        - docker\n    timeout:\
    \ 5s\n    override: false\n  attributes/logs:\n    actions:\n        - key: source\n\
    \          from_attribute: name\n          action: upsert\n        - key: source\n\
    \          from_attribute: operator_type\n          action: upsert\n        -\
    \ key: source\n          from_attribute: log.file.name\n          action: upsert\n\
    \        - key: source\n          from_attribute: fluent.tag\n          action:\
    \ upsert\n        - key: source\n          from_attribute: service.name\n    \
    \      action: upsert\n        - key: source\n          from_attribute: project.name\n\
    \          action: upsert\n        - key: source\n          from_attribute: serviceName\n\
    \          action: upsert\n        - key: source\n          from_attribute: projectName\n\
    \          action: upsert\n        - key: source\n          from_attribute: pod_name\n\
    \          action: upsert\n        - key: source\n          from_attribute: container_name\n\
    \          action: upsert\n        - key: source\n          from_attribute: namespace\n\
    \          action: upsert\n\n\n\nexporters:\n  \n  otlphttp:\n    endpoint: 'https://otel.kloudmate.dev:4318'\n\
    \    headers:\n      Authorization: sk_YlSAboAEbvWcmYsLwGCZVvU7\n  otlp/uptrace:\n\
    \    endpoint: https://otlp.uptrace.dev:4317\n    tls: { insecure: false }\n \
    \   headers:\n      uptrace-dsn: 'https://utSLsaP28IVKuR_a5YGtuw@api.uptrace.dev?grpc=4317'\n\
    \  logging:\n    verbosity: detailed\n\nservice:\n  pipelines:\n   \n    metrics:\n\
    \      receivers: [prometheus, kubeletstats, hostmetrics, k8s_cluster]\n     \
    \ #processors: [cumulativetodelta]\n      exporters: [otlphttp, otlp/uptrace]\n\
    \    logs:\n      receivers: [ filelog]\n      processors: [k8sattributes, resourcedetection,\
    \ attributes/logs]\n      exporters: [otlphttp]\n"
