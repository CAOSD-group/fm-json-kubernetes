apiVersion: apps/v1
kind: Deployment
metadata:
  name: lgtm-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-8.5.1
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: lgtm
    app.kubernetes.io/version: 11.2.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: lgtm
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: lgtm
      annotations:
        checksum/config: 9e981a9980a5d04c727f944383c3161e3cfdfd61d7d188e012c18e63eb3c737d
        checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
        checksum/secret: bed677784356b2af7fb0d87455db21f077853059b594101a4f6532bfbd962a7f
        kubectl.kubernetes.io/default-container: grafana
    spec:
      serviceAccountName: lgtm-grafana
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      enableServiceLinks: true
      containers:
      - name: grafana-sc-dashboard
        image: quay.io/kiwigrid/k8s-sidecar:1.27.4
        imagePullPolicy: IfNotPresent
        env:
        - name: METHOD
          value: WATCH
        - name: LABEL
          value: grafana_dashboard
        - name: FOLDER
          value: /tmp/dashboards
        - name: RESOURCE
          value: both
        - name: REQ_USERNAME
          valueFrom:
            secretKeyRef:
              name: lgtm-grafana
              key: admin-user
        - name: REQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: lgtm-grafana
              key: admin-password
        - name: REQ_URL
          value: http://localhost:3000/api/admin/provisioning/dashboards/reload
        - name: REQ_METHOD
          value: POST
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: sc-dashboard-volume
          mountPath: /tmp/dashboards
      - name: grafana-sc-datasources
        image: quay.io/kiwigrid/k8s-sidecar:1.27.4
        imagePullPolicy: IfNotPresent
        env:
        - name: METHOD
          value: WATCH
        - name: LABEL
          value: grafana_datasource
        - name: FOLDER
          value: /etc/grafana/provisioning/datasources
        - name: RESOURCE
          value: both
        - name: REQ_USERNAME
          valueFrom:
            secretKeyRef:
              name: lgtm-grafana
              key: admin-user
        - name: REQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: lgtm-grafana
              key: admin-password
        - name: REQ_URL
          value: http://localhost:3000/api/admin/provisioning/datasources/reload
        - name: REQ_METHOD
          value: POST
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: sc-datasources-volume
          mountPath: /etc/grafana/provisioning/datasources
      - name: grafana
        image: docker.io/grafana/grafana:11.2.0
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: config
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
        - name: storage
          mountPath: /var/lib/grafana
        - name: config
          mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
          subPath: datasources.yaml
        - name: sc-dashboard-volume
          mountPath: /tmp/dashboards
        - name: sc-dashboard-provider
          mountPath: /etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml
          subPath: provider.yaml
        - name: sc-datasources-volume
          mountPath: /etc/grafana/provisioning/datasources
        ports:
        - name: grafana
          containerPort: 3000
          protocol: TCP
        - name: gossip-tcp
          containerPort: 9094
          protocol: TCP
        - name: gossip-udp
          containerPort: 9094
          protocol: UDP
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: lgtm-grafana
              key: admin-user
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: lgtm-grafana
              key: admin-password
        - name: GF_PATHS_DATA
          value: /var/lib/grafana/
        - name: GF_PATHS_LOGS
          value: /var/log/grafana
        - name: GF_PATHS_PLUGINS
          value: /var/lib/grafana/plugins
        - name: GF_PATHS_PROVISIONING
          value: /etc/grafana/provisioning
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
      volumes:
      - name: config
        configMap:
          name: lgtm-grafana
      - name: storage
        emptyDir: {}
      - name: sc-dashboard-volume
        emptyDir: {}
      - name: sc-dashboard-provider
        configMap:
          name: lgtm-grafana-config-dashboards
      - name: sc-datasources-volume
        emptyDir: {}
