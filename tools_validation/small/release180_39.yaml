apiVersion: v1
kind: ConfigMap
metadata:
  name: config-defaults
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
data:
  _example: "################################\n#                              #\n\
    #    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\
    \n# This block is not actually functional configuration,\n# but serves to illustrate\
    \ the available configuration\n# options and document them in a way that is accessible\n\
    # to users that `kubectl edit` this config map.\n#\n# These sample configuration\
    \ options may be copied out of\n# this example block and unindented to be in the\
    \ data block\n# to actually change the configuration.\n\n# default-timeout-minutes\
    \ contains the default number of\n# minutes to use for TaskRun and PipelineRun,\
    \ if none is specified.\ndefault-timeout-minutes: \"60\"  # 60 minutes\n\n# default-service-account\
    \ contains the default service account name\n# to use for TaskRun and PipelineRun,\
    \ if none is specified.\ndefault-service-account: \"default\"\n\n# default-managed-by-label-value\
    \ contains the default value given to the\n# \"app.kubernetes.io/managed-by\"\
    \ label applied to all Pods created for\n# TaskRuns. If a user's requested TaskRun\
    \ specifies another value for this\n# label, the user's request supercedes.\n\
    default-managed-by-label-value: \"tekton-pipelines\"\n\n# default-pod-template\
    \ contains the default pod template to use for\n# TaskRun and PipelineRun. If\
    \ a pod template is specified on the\n# PipelineRun, the default-pod-template\
    \ is merged with that one.\n# default-pod-template:\n\n# default-affinity-assistant-pod-template\
    \ contains the default pod template\n# to use for affinity assistant pods. If\
    \ a pod template is specified on the\n# PipelineRun, the default-affinity-assistant-pod-template\
    \ is merged with\n# that one.\n# default-affinity-assistant-pod-template:\n\n\
    # default-cloud-events-sink contains the default CloudEvents sink to be\n# used\
    \ for TaskRun and PipelineRun, when no sink is specified.\n# Note that right now\
    \ it is still not possible to set a PipelineRun or\n# TaskRun specific sink, so\
    \ the default is the only option available.\n# If no sink is specified, no CloudEvent\
    \ is generated\n# default-cloud-events-sink:\n\n# default-task-run-workspace-binding\
    \ contains the default workspace\n# configuration provided for any Workspaces\
    \ that a Task declares\n# but that a TaskRun does not explicitly provide.\n# default-task-run-workspace-binding:\
    \ |\n#   emptyDir: {}\n\n# default-max-matrix-combinations-count contains the\
    \ default maximum number\n# of combinations from a Matrix, if none is specified.\n\
    default-max-matrix-combinations-count: \"256\"\n\n# default-forbidden-env contains\
    \ comma seperated environment variables that cannot be\n# overridden by podTemplate.\n\
    default-forbidden-env:\n\n# default-resolver-type contains the default resolver\
    \ type to be used in the cluster,\n# no default-resolver-type is specified by\
    \ default\ndefault-resolver-type:\n\n# default-imagepullbackoff-timeout contains\
    \ the default duration to wait\n# before requeuing the TaskRun to retry, specifying\
    \ 0 here is equivalent to fail fast\n# possible values could be 1m, 5m, 10s, 1h,\
    \ etc\n# default-imagepullbackoff-timeout: \"5m\"\n\n# default-container-resource-requirements\
    \ allow users to update default resource requirements\n# to a init-containers\
    \ and containers of a pods create by the controller\n# Onet: All the resource\
    \ requirements are applied to init-containers and containers\n# only if the existing\
    \ resource requirements are empty.\ndefault-container-resource-requirements: |\n\
    \  place-scripts: # updates resource requirements of a 'place-scripts' container\n\
    \    requests:\n      memory: \"64Mi\"\n      cpu: \"250m\"\n    limits:\n   \
    \   memory: \"128Mi\"\n      cpu: \"500m\"\n\n  prepare: # updates resource requirements\
    \ of a 'prepare' container\n    requests:\n      memory: \"64Mi\"\n      cpu:\
    \ \"250m\"\n    limits:\n      memory: \"256Mi\"\n      cpu: \"500m\"\n\n  working-dir-initializer:\
    \ # updates resource requirements of a 'working-dir-initializer' container\n \
    \   requests:\n      memory: \"64Mi\"\n      cpu: \"250m\"\n    limits:\n    \
    \  memory: \"512Mi\"\n      cpu: \"500m\"\n\n  prefix-scripts: # updates resource\
    \ requirements of containers which starts with 'scripts-'\n    requests:\n   \
    \   memory: \"64Mi\"\n      cpu: \"250m\"\n    limits:\n      memory: \"128Mi\"\
    \n      cpu: \"500m\"\n\n  prefix-sidecar-scripts: # updates resource requirements\
    \ of containers which starts with 'sidecar-scripts-'\n    requests:\n      memory:\
    \ \"64Mi\"\n      cpu: \"250m\"\n    limits:\n      memory: \"128Mi\"\n      cpu:\
    \ \"500m\"\n\n  default: # updates resource requirements of init-containers and\
    \ containers which has empty resource resource requirements\n    requests:\n \
    \     memory: \"64Mi\"\n      cpu: \"250m\"\n    limits:\n      memory: \"256Mi\"\
    \n      cpu: \"500m\"\n"
