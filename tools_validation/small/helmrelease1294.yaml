---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 4.6.8
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    image:
      flavor: fpm
    nginx:
      enabled: true
    cronjob:
      enabled: true
      failedJobsHistoryLimit: 1
      successfulJobsHistoryLimit: 1
    nextcloud:
  #     datadir: /var/www/data
      extraEnv:
        # - name: PHP_MEMORY_LIMIT
        #   value: 10G
        - name: REDIS_HOST
          value: redis-master.database.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"
        - name: REDIS_HOST_PASSWORD
          value: ${SECRET_REDIS_PASSWORD}
        - name: PASSWORD_SALT
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: password-salt
        - name: SECRET
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: secret
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
      host: "nextcloud.${SECRET_DOMAIN}"
      phpConfigs:
        opcache.ini: |
          opcache.enable=1
          opcache.interned_strings_buffer=8
          opcache.max_accelerated_files=10000
          opcache.memory_consumption=128
          opcache.save_comments=1
          opcache.revalidate_freq=1
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 3600
        # Made things actually worse
        # www2.conf: |
        #   [www]
        #   pm = dynamic
        #   pm.max_children = 120
        #   pm.start_servers = 12
        #   pm.min_spare_servers = 6
        #   pm.max_spare_servers = 18
      defaultConfigs:
        # To protect /var/www/html/config
        .htaccess: true
        # Redis default configuration
        redis.config.php: true
        # Apache configuration for rewrite urls
        apache-pretty-urls.config.php: true
        # Define APCu as local cache
        apcu.config.php: true
        # Apps directory configs
        apps.config.php: true
        # Used for auto configure database
        autoconfig.php: true
        # SMTP default configuration
        smtp.config.php: true
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' =>
              array(
                0 => '${CLUSTER_CIDR}',
              ),
            'forwarded_for_headers' =>
              array (
                0 => 'HTTP_X_FORWARDED_FOR',
              ),
          );
        #Circumvention for client freezes - https://github.com/nextcloud/desktop/issues/5094
        # bulkupload.config.php: |-
        #   <?php
        #   $CONFIG = array (
        #     'bulkupload.enabled' => false,
        #   );
        cron.config.php: |-
          <?php
          $CONFIG = array (
            'maintenance_window_start' => 1,
          );
        region.config.php: |-
          <?php
          $CONFIG = array (
            'default_phone_region' => 'IT',
            'default_timezone' => 'Europe/Rome',
          );
        instance.config.php: |-
          <?php
          $CONFIG = array (
            'passwordsalt' => getenv('PASSWORD_SALT'),
            'secret' => getenv('SECRET'),
          );
      mail:
        enabled: true
        fromAddress: "${SECRET_EMAIL_USER}"
        domain: "${SECRET_EMAIL_DOMAIN}"
        smtp:
          secure: ssl
          port: 465
          authtype: LOGIN
  #     # securityContext:
  #     #   runAsUser: 82
  #     #   runAsGroup: 82
  #     #   runAsNonRoot: true
    deploymentAnnotations:
      reloader.stakater.com/auto: "true"
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: postgresql.database.svc.cluster.local
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: db-username
        passwordKey: db-password
    ingress:
      enabled: true
      className: internal
      annotations:
        # external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hajimari.io/icon: mdi:dropbox
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          # Rule borrowed from .htaccess to handle Microsoft DAV clients
          location = / {
            if ( $http_user_agent ~ ^DavClnt ) {
              return 302 /remote.php/webdav/$is_args$args;
            }
          }

          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }

          location ^~ /.well-known {
            # The rules in this block are an adaptation of the rules
            # in .htaccess that concern /.well-known.

            location = /.well-known/carddav { return 301 /remote.php/dav/; }
            location = /.well-known/caldav  { return 301 /remote.php/dav/; }

            location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
            location /.well-known/pki-validation    { try_files $uri $uri/ =404; }

            # Let Nextcloud's API for /.well-known URIs handle all other
            # requests by passing them to the front-end controller.
            return 301 /index.php$request_uri;
          }

          # Rules borrowed from .htaccess to hide certain paths from clients
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }

          # Rule borrowed from .htaccess
          #location /remote {
          #    return 301 /remote.php$request_uri;
          #}
      path: /
      pathType: Prefix
  #   metrics:
  #     enabled: true
    persistence:
      enabled: true
      existingClaim: nextcloud-config-v1
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data-v1
    # # this seems to be required for nextcloud initialization which takes a long time
    # startupProbe:
    #   enabled: true
    #   initialDelaySeconds: 10
    #   periodSeconds: 20
    #   timeoutSeconds: 5
    #   failureThreshold: 30
    #   successThreshold: 1
    startupProbe:
      enabled: false
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
