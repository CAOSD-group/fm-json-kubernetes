file,valid,failed_checks,remediations,avg_validation_time_ms
01-Prometheus1_1.yaml,True,,,0.0
01-Prometheus2_1.yaml,True,,,0.0
01-Prometheus3_1.yaml,True,,,0.0
01-Prometheus_1.yaml,True,,,0.0
01-contour-config.yaml,True,,,0.0
01-kafka_1.yaml,True,,,0.0
01-prom-configs-configmap.yaml,True,,,0.0
02-Prometheus_1.yaml,True,,,0.0
02-connect_4.yaml,True,,,0.0
02-prometheus-configmap1.yaml,True,,,0.0
02_EFK_7.yaml,True,,,0.0
03-Prometheus-Node-Exporter1_1.yaml,True,,,0.0
03-Prometheus-Node-Exporter2_1.yaml,True,,,0.0
03-Prometheus-Node-Exporter3_1.yaml,True,,,0.0
03-Prometheus-Node-Exporter_1.yaml,True,,,0.0
04-prometheus-configmap.yaml,True,,,0.0
04-prometheus-configmap1.yaml,True,,,0.0
04-prometheus-configmap2.yaml,True,,,0.0
04-prometheus-configmap3.yaml,True,,,0.0
04-prometheus-configmap4.yaml,True,,,0.0
04-prometheus-configmap5.yaml,True,,,0.0
04_monitor_6.yaml,True,,,0.0
10-mail-conf.yaml,True,,,0.0
11-prometheus_4.yaml,True,,,0.0
172.16_net_calico1_19.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
172.16_net_calico_19.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
2-config-map.yaml,True,,,0.0
2-config-map1.yaml,True,,,0.0
2-config-map2.yaml,True,,,0.0
2-config-map3.yaml,True,,,0.0
2-sts.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.4912
2.1.2_32.yaml,False,unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.,6.4912
2.1.2_33.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
2.1.2_34.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
20-imap-conf.yaml,True,,,0.0
21_configmap.yaml,True,,,0.0
3-statefulset.yaml,False,no-read-only-root-fs,Set readOnlyRootFilesystem to true in the container securityContext.,6.4912
3-statefulset1.yaml,False,no-read-only-root-fs,Set readOnlyRootFilesystem to true in the container securityContext.,6.4912
5-mongodb-statefulset.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
5-mongodb-statefulset1.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
90-sieve-conf.yaml,True,,,0.0
Calico48_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
ConfigMap-cilium-config.yaml,True,,,0.0
DaemonSet-cilium.yaml,False,drop-net-raw-capability; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
Deployment-argocd-applicationset-controller.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
Deployment-argocd-repo-server.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
Deployment-argocd-server.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
Ejemplo10-configmap1_3.yaml,True,,,0.0
Ejemplo10-configmap_3.yaml,True,,,0.0
EnableContainerInsights_10.yaml,True,,,0.0
KIADA1_2.yaml,True,,,0.0
KIADA_2.yaml,True,,,0.0
StatefulSet-argocd-application-controller.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
acl-jwt-custom.yaml,True,,,0.0
addc_8.yaml,False,drop-net-raw-capability; no-anti-affinity; no-read-only-root-fs; privilege-escalation-container; run-as-non-root,"Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.4912
adguard-home.yaml,True,,,0.0
allowed-capabilities1.yaml,True,,,0.0
ama-metrics-prometheus-config-configmap.yaml,True,,,0.0
ama-metrics-prometheus-config-configmap1.yaml,True,,,0.0
ambassador-istio-configmap.yaml,True,,,0.0
amf-configmap1.yaml,True,,,0.0
amf-configmap2.yaml,True,,,0.0
api-server-infraassessmentreport-expected.yaml,True,,,0.0
apim-configmap.yaml,True,,,0.0
apiresourceschema-clusterworkspaces.tenancy.kcp.io.yaml,True,,,0.0
apiresourceschema-logicalclusters.core.kcp.io.yaml,True,,,0.0
apiresourceschema-partitionsets.topology.kcp.io.yaml,True,,,0.0
apiresourceschema-shards.core.kcp.io.yaml,True,,,0.0
apiresourceschema-workspaces.tenancy.kcp.io.yaml,True,,,0.0
apiresourceschema-workspacetypes.tenancy.kcp.io.yaml,True,,,0.0
apiserver.servicemonitor1.yaml,True,,,0.0
apiserver.servicemonitor11.yaml,True,,,0.0
apiserver.servicemonitor3.yaml,True,,,0.0
apiserver.servicemonitor5.yaml,True,,,0.0
apiserver.servicemonitor7.yaml,True,,,0.0
apiserver.servicemonitor9.yaml,True,,,0.0
app-of-apps20.yaml,True,,,0.0
app126_3.yaml,True,,,0.0
app_logs.yaml,True,,,0.0
app_logs1.yaml,True,,,0.0
apps.v1.DaemonSet.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.DaemonSet.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.DaemonSet13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.DaemonSet25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.Deployment.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.Deployment.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.Deployment13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.Deployment25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.ReplicaSet.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.ReplicaSet.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.ReplicaSet13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.ReplicaSet25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.StatefulSet.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.StatefulSet.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.StatefulSet13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1.StatefulSet25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta1.Deployment.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta1.Deployment.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta1.Deployment13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta1.Deployment25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta1.StatefulSet.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta1.StatefulSet.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta1.StatefulSet13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta1.StatefulSet25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.DaemonSet.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.DaemonSet.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.DaemonSet13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.DaemonSet25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.Deployment.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.Deployment.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.Deployment13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.Deployment25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.ReplicaSet.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.ReplicaSet.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.ReplicaSet13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.ReplicaSet25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.StatefulSet.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.StatefulSet.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.StatefulSet13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
apps.v1beta2.StatefulSet25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
argo-cd.v2.10.6_42.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argo-cd.v2.10.6_44.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argo-cd.v2.10.6_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argo-cd.v2.10.6_48.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argo-cm-nodeport_43.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argo-cm-nodeport_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argo-cm-nodeport_48.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argo-cm-nodeport_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argo-dex.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argo-quick-start-minimal_37.yaml,True,,,0.0
argo-secret.yaml,True,,,0.0
argocd-application-controller-deployment.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
argocd-application-controller-deployment1.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
argocd-application-controller-statefulset.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
argocd-application-controller-statefulset4.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
argocd-applicationset-controller-deployment.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
argocd-applicationset-controller-deployment1.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
argocd-repo-server-deployment.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
argocd-repo-server-deployment3.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
argocd-secret.enc.yaml,True,,,0.0
argocd-server-deployment.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
argocd-server-deployment3.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
argocd-workload.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd-workload1.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd-workload1_3.yaml,False,no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
argocd-workload1_4.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd-workload1_5.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd-workload_3.yaml,False,no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
argocd-workload_4.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd-workload_5.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd.install1_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd.install1_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd.install1_50.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd.install1_51.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd.install_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd.install_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd.install_50.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd.install_51.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd.v2.8.11_41.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd.v2.8.11_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd.v2.8.11_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd.v2.8.11_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd13_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd13_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd13_50.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd13_51.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd44_43.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd44_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd44_48.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd44_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd45_43.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd45_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd45_48.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd45_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd4_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd4_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd4_50.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd4_51.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd50_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd50_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd50_48.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd63_43.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd63_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd63_48.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd63_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd_install_41.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd_install_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd_install_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
argocd_install_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
asyncapi-example-api.yaml,True,,,0.0
autoscaler-custom10.yaml,True,,,0.0
autoscaler-custom11.yaml,True,,,0.0
autoscaler-custom12.yaml,True,,,0.0
autoscaler-custom13.yaml,True,,,0.0
autoscaler-custom14.yaml,True,,,0.0
autoscaler-custom15.yaml,True,,,0.0
autoscaler-custom16.yaml,True,,,0.0
autoscaler-custom17.yaml,True,,,0.0
autoscaler-custom18.yaml,True,,,0.0
autoscaler-custom19.yaml,True,,,0.0
autoscaler-custom20_2.yaml,True,,,0.0
autoscaler-custom21_2.yaml,True,,,0.0
autoscaler-custom22_2.yaml,True,,,0.0
autoscaler-custom23_2.yaml,True,,,0.0
autoscaler-custom24_2.yaml,True,,,0.0
autoscaler-custom25.yaml,True,,,0.0
autoscaler-custom26.yaml,True,,,0.0
autoscaler-custom27.yaml,True,,,0.0
autoscaler-custom28.yaml,True,,,0.0
autoscaler-custom29.yaml,True,,,0.0
autoscaler-custom5.yaml,True,,,0.0
autoscaler-custom6.yaml,True,,,0.0
autoscaler-custom7.yaml,True,,,0.0
autoscaler-custom8.yaml,True,,,0.0
autoscaler-custom9.yaml,True,,,0.0
autoscaler10.yaml,True,,,0.0
autoscaler11.yaml,True,,,0.0
autoscaler12.yaml,True,,,0.0
autoscaler13.yaml,True,,,0.0
autoscaler14.yaml,True,,,0.0
autoscaler15.yaml,True,,,0.0
autoscaler16.yaml,True,,,0.0
autoscaler17.yaml,True,,,0.0
autoscaler18.yaml,True,,,0.0
autoscaler19.yaml,True,,,0.0
autoscaler20.yaml,True,,,0.0
autoscaler21.yaml,True,,,0.0
autoscaler22.yaml,True,,,0.0
autoscaler23.yaml,True,,,0.0
autoscaler24_2.yaml,True,,,0.0
autoscaler25_2.yaml,True,,,0.0
autoscaler26_2.yaml,True,,,0.0
autoscaler27_2.yaml,True,,,0.0
autoscaler28_2.yaml,True,,,0.0
autoscaler29.yaml,True,,,0.0
autoscaler30.yaml,True,,,0.0
autoscaler31.yaml,True,,,0.0
autoscaler32.yaml,True,,,0.0
autoscaler33.yaml,True,,,0.0
autoscaler9.yaml,True,,,0.0
autoscaling.v2.HorizontalPodAutoscaler10.yaml,True,,,0.0
autoscaling.v2.HorizontalPodAutoscaler13.yaml,True,,,0.0
autoscaling.v2.HorizontalPodAutoscaler21.yaml,True,,,0.0
autoscaling.v2.HorizontalPodAutoscaler4.yaml,True,,,0.0
autoscaling.v2beta2.HorizontalPodAutoscaler10.yaml,True,,,0.0
autoscaling.v2beta2.HorizontalPodAutoscaler16.yaml,True,,,0.0
autoscaling.v2beta2.HorizontalPodAutoscaler17.yaml,True,,,0.0
autoscaling.v2beta2.HorizontalPodAutoscaler28.yaml,True,,,0.0
autoscaling.v2beta2.HorizontalPodAutoscaler29.yaml,True,,,0.0
autoscaling.v2beta2.HorizontalPodAutoscaler39.yaml,True,,,0.0
autoscaling.v2beta2.HorizontalPodAutoscaler4.yaml,True,,,0.0
autoscaling.v2beta2.HorizontalPodAutoscaler40.yaml,True,,,0.0
autoscaling.v2beta2.HorizontalPodAutoscaler41.yaml,True,,,0.0
aws-k8s-cni_6.yaml,False,drop-net-raw-capability; host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
azkv-pushsecret-certificate.yaml,True,,,0.0
backend92.yaml,True,,,0.0
backup-dashboard.yaml,True,,,0.0
batch.v1.Job.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
batch.v1.Job.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
batch.v1.Job13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
batch.v1.Job25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-pid; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
batch.v1beta1.CronJob.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
batch.v1beta1.CronJob.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
batch.v1beta1.CronJob13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
batch.v1beta1.CronJob25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; mismatching-selector; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Confirm that your deployment selector correctly matches the labels in its pod template.; Create the missing service account, or refer to an existing service account.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
batch.v1beta1.JobTemplate.after_roundtrip.yaml,True,,,0.0
batch.v1beta1.JobTemplate.after_roundtrip1.yaml,True,,,0.0
batch.v1beta1.JobTemplate13.yaml,True,,,0.0
batch.v1beta1.JobTemplate7.yaml,True,,,0.0
batch.v2alpha1.CronJob.after_roundtrip.yaml,True,,,0.0
batch.v2alpha1.CronJob.after_roundtrip1.yaml,True,,,0.0
batch.v2alpha1.CronJob3.yaml,True,,,0.0
batch.v2alpha1.CronJob8.yaml,True,,,0.0
batch.v2alpha1.JobTemplate.after_roundtrip.yaml,True,,,0.0
batch.v2alpha1.JobTemplate.after_roundtrip1.yaml,True,,,0.0
batch.v2alpha1.JobTemplate3.yaml,True,,,0.0
batch.v2alpha1.JobTemplate8.yaml,True,,,0.0
bitbucket-pipeline_1.yaml,True,,,0.0
bookstore-configmap.yaml,True,,,0.0
bookstore-tls.yaml,True,,,0.0
build12.yaml,True,,,0.0
build3_42.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
build3_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
build3_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
build3_48.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
build8_42.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
build8_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
build8_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
build8_48.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
bunny-secret.yaml,True,,,0.0
ca9.yaml,True,,,0.0
caddy2_5.yaml,False,liveness-port; no-anti-affinity; non-existent-service-account; readiness-port; startup-port; unsafe-sysctls,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Ensure container does not allow unsafe allocation of system resources by removing unsafe sysctls configurations. For more details see https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ https://docs.docker.com/engine/reference/commandline/run/#configure-namespaced-kernel-parameters-sysctls-at-runtime.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.4912
calico-3.18.1_22.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico-ipv6_31.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico-typha_31.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico-v3.28.1_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico1.yaml,False,host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico10_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico11_19.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico13_19.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico14_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico16_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico17_31.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico18_27.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico25_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico26_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico27_37.yaml,False,duplicate-env-var; host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Confirm that your DeploymentLike doesn't have duplicate env vars names.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico29_37.yaml,False,duplicate-env-var; host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Confirm that your DeploymentLike doesn't have duplicate env vars names.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico2_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico30_19.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico31_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico32_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico33_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico34_22.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico36_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico37_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico38_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico39_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico3_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico40_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico41_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico42_22.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico43_22.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico44_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico45_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico46_37.yaml,False,duplicate-env-var; host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Confirm that your DeploymentLike doesn't have duplicate env vars names.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico47_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico4_19.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico50_19.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico51_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico52_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico53_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico54_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico55_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico56_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico57.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico58_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico59_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico5_19.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico6.yaml,False,host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico60_27.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico61_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico62_24.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico63_37.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico67_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico68_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico69_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico70_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico71_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico72_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico73_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico74_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico75_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico76_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico77_27.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico78_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico79_29.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico7_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico81_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico82_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico8_25.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico9_19.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico_19.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico_cni1_37.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
calico_cni_37.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
canal-etcd_13.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
canal1_31.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
canal2_27.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
canal3_31.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
carina-csi-driver_templates_csi-node_25.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
certificates-apiresourceschema.yaml,True,,,0.0
certificates-apiresourceschema_1.yaml,True,,,0.0
certificates-apiresourceschema_5.yaml,True,,,0.0
chat.sealed-secret.helm.yaml,True,,,0.0
chat.sealed-secret.helm1.yaml,True,,,0.0
cilium-cni1_12.yaml,False,drop-net-raw-capability; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
cilium-cni1_3.yaml,True,,,0.0
cilium-cni_12.yaml,False,drop-net-raw-capability; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
cilium-cni_3.yaml,True,,,0.0
cilium-workload.yaml,False,drop-net-raw-capability; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
cilium-workload1.yaml,False,drop-net-raw-capability; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
cilium10.yaml,False,drop-net-raw-capability; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
cilium21_12.yaml,False,drop-net-raw-capability; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
cilium21_3.yaml,True,,,0.0
cilium22_12.yaml,False,drop-net-raw-capability; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
cilium22_3.yaml,True,,,0.0
cilium39_11.yaml,False,drop-net-raw-capability; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
cilium39_4.yaml,True,,,0.0
clickhouse-secrets.yaml,True,,,0.0
cluster-ip10_2.yaml,False,non-existent-service-account; unsafe-sysctls; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Ensure container does not allow unsafe allocation of system resources by removing unsafe sysctls configurations. For more details see https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ https://docs.docker.com/engine/reference/commandline/run/#configure-namespaced-kernel-parameters-sysctls-at-runtime.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
cluster-role-bindings.yaml,True,,,0.0
cluster-role-bindings1.yaml,True,,,0.0
cluster-role-bindings10.yaml,True,,,0.0
cluster-role-bindings11.yaml,True,,,0.0
cluster-role-bindings13.yaml,True,,,0.0
cluster-role-bindings14.yaml,True,,,0.0
cluster-role-bindings16.yaml,True,,,0.0
cluster-role-bindings17.yaml,True,,,0.0
cluster-role-bindings18.yaml,True,,,0.0
cluster-role-bindings19.yaml,True,,,0.0
cluster-role-bindings2.yaml,True,,,0.0
cluster-role-bindings3.yaml,True,,,0.0
cluster-role-bindings5.yaml,True,,,0.0
cluster-role-bindings6.yaml,True,,,0.0
cluster-role-bindings7.yaml,True,,,0.0
cluster-role-bindings9.yaml,True,,,0.0
cluster-roles.yaml,True,,,0.0
cluster-roles1.yaml,True,,,0.0
cluster-roles14.yaml,True,,,0.0
cluster-roles15.yaml,True,,,0.0
cluster-roles16.yaml,True,,,0.0
cluster-roles17.yaml,True,,,0.0
cluster-roles2.yaml,True,,,0.0
cluster-roles22.yaml,True,,,0.0
cluster-roles29.yaml,True,,,0.0
cluster-roles3.yaml,True,,,0.0
cluster-roles31.yaml,True,,,0.0
cluster-roles32.yaml,True,,,0.0
cluster-roles33.yaml,True,,,0.0
cluster-roles34.yaml,True,,,0.0
cluster-roles5.yaml,True,,,0.0
cluster-roles6.yaml,True,,,0.0
cluster-roles7.yaml,True,,,0.0
cluster-roles8.yaml,True,,,0.0
cms-operator.clusterserviceversion.yaml,True,,,0.0
cnpg-1.22.11_8.yaml,True,,,0.0
cnpg-1.22.1_8.yaml,True,,,0.0
cnpg-1.24.1_10.yaml,True,,,0.0
code-scan.yaml,True,,,0.0
component1_1.yaml,True,,,0.0
composite_4.yaml,True,,,0.0
composition2.yaml,True,,,0.0
config-backup.yaml,True,,,0.0
config-map115.yaml,True,,,0.0
config-map20.yaml,True,,,0.0
config-map5.yaml,True,,,0.0
config-map81.yaml,True,,,0.0
config483.yaml,True,,,0.0
config494.yaml,True,,,0.0
configmap-config11.yaml,True,,,0.0
configmap-jcasc.yaml,True,,,0.0
configmap-pack_conf.yaml,True,,,0.0
configmap-windows1_1.yaml,True,,,0.0
configmap-windows_1.yaml,True,,,0.0
configmap100.yaml,True,,,0.0
configmap104.yaml,True,,,0.0
configmap1049.yaml,True,,,0.0
configmap1050.yaml,True,,,0.0
configmap1051.yaml,True,,,0.0
configmap1052.yaml,True,,,0.0
configmap1224.yaml,True,,,0.0
configmap138.yaml,True,,,0.0
configmap1449.yaml,True,,,0.0
configmap1450.yaml,True,,,0.0
configmap1451.yaml,True,,,0.0
configmap1452.yaml,True,,,0.0
configmap1708.yaml,True,,,0.0
configmap1709.yaml,True,,,0.0
configmap1901.yaml,True,,,0.0
configmap252.yaml,True,,,0.0
configmap256.yaml,True,,,0.0
configmap290.yaml,True,,,0.0
configmap801.yaml,True,,,0.0
configmap803.yaml,True,,,0.0
configmap946.yaml,True,,,0.0
container-azm-ms-agentconfig.yaml,True,,,0.0
container-azm-ms-agentconfig1.yaml,True,,,0.0
container-limits1.yaml,True,,,0.0
contents1.yaml,True,,,0.0
contour-deployment_3.yaml,True,,,0.0
contour2_3.yaml,True,,,0.0
controller-registration.yaml,True,,,0.0
controller-registration1.yaml,True,,,0.0
controller-role-bindings.yaml,True,,,0.0
controller-role-bindings1.yaml,True,,,0.0
controller-role-bindings10.yaml,True,,,0.0
controller-role-bindings11.yaml,True,,,0.0
controller-role-bindings13.yaml,True,,,0.0
controller-role-bindings14.yaml,True,,,0.0
controller-role-bindings15.yaml,True,,,0.0
controller-role-bindings16.yaml,True,,,0.0
controller-role-bindings17.yaml,True,,,0.0
controller-role-bindings18.yaml,True,,,0.0
controller-role-bindings2.yaml,True,,,0.0
controller-role-bindings3.yaml,True,,,0.0
controller-role-bindings4.yaml,True,,,0.0
controller-role-bindings5.yaml,True,,,0.0
controller-role-bindings6.yaml,True,,,0.0
controller-role-bindings7.yaml,True,,,0.0
controller-role-bindings8.yaml,True,,,0.0
controller-role-bindings9.yaml,True,,,0.0
controller-roles13.yaml,True,,,0.0
controller-roles4.yaml,True,,,0.0
controller-roles8.yaml,True,,,0.0
controller22.yaml,False,deprecated-service-account-field; no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
controller23.yaml,False,deprecated-service-account-field; no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
controller24.yaml,False,deprecated-service-account-field; no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
controller25.yaml,False,deprecated-service-account-field; no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
controller26.yaml,False,deprecated-service-account-field; no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
controller27.yaml,False,deprecated-service-account-field; latest-tag; no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
controlplane-gateway_1.yaml,False,non-existent-service-account; run-as-non-root,"Create the missing service account, or refer to an existing service account.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
core-install1_24.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
core-install1_26.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
core-install1_27.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
core-install2_24.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
core-install2_26.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
core-install2_27.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.4912
core-install_26.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
core-install_28.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
core-install_29.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
core.v1.PersistentVolume.yaml,True,,,0.0
core.v1.PersistentVolume1.yaml,True,,,0.0
core.v1.PersistentVolume11.yaml,True,,,0.0
core.v1.PersistentVolume15.yaml,True,,,0.0
core.v1.PersistentVolume18.yaml,True,,,0.0
core.v1.PersistentVolume19.yaml,True,,,0.0
core.v1.PersistentVolume2.yaml,True,,,0.0
core.v1.PersistentVolume20.yaml,True,,,0.0
core.v1.PersistentVolume21.yaml,True,,,0.0
core.v1.PersistentVolume22.yaml,True,,,0.0
core.v1.PersistentVolume23.yaml,True,,,0.0
core.v1.PersistentVolume27.yaml,True,,,0.0
core.v1.PersistentVolume3.yaml,True,,,0.0
core.v1.PersistentVolume30.yaml,True,,,0.0
core.v1.PersistentVolume31.yaml,True,,,0.0
core.v1.PersistentVolume32.yaml,True,,,0.0
core.v1.PersistentVolume33.yaml,True,,,0.0
core.v1.PersistentVolume34.yaml,True,,,0.0
core.v1.PersistentVolume35.yaml,True,,,0.0
core.v1.PersistentVolume42.yaml,True,,,0.0
core.v1.PersistentVolume43.yaml,True,,,0.0
core.v1.PersistentVolume44.yaml,True,,,0.0
core.v1.PersistentVolume45.yaml,True,,,0.0
core.v1.PersistentVolume46.yaml,True,,,0.0
core.v1.PersistentVolume47.yaml,True,,,0.0
core.v1.PersistentVolume48.yaml,True,,,0.0
core.v1.PersistentVolume49.yaml,True,,,0.0
core.v1.PersistentVolume5.yaml,True,,,0.0
core.v1.PersistentVolume50.yaml,True,,,0.0
core.v1.PersistentVolume51.yaml,True,,,0.0
core.v1.PersistentVolume52.yaml,True,,,0.0
core.v1.PersistentVolume53.yaml,True,,,0.0
core.v1.PersistentVolume54.yaml,True,,,0.0
core.v1.PersistentVolume55.yaml,True,,,0.0
core.v1.PersistentVolume56.yaml,True,,,0.0
core.v1.PersistentVolume6.yaml,True,,,0.0
core.v1.PersistentVolume7.yaml,True,,,0.0
core.v1.PersistentVolume8.yaml,True,,,0.0
core.v1.PersistentVolume9.yaml,True,,,0.0
core.v1.Pod.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-ipc; host-network; invalid-target-ports; latest-tag; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's IPC namespace is not shared.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
core.v1.Pod.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-ipc; host-network; invalid-target-ports; latest-tag; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's IPC namespace is not shared.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
core.v1.Pod13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-ipc; host-network; invalid-target-ports; latest-tag; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's IPC namespace is not shared.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
core.v1.Pod25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-ipc; host-network; invalid-target-ports; latest-tag; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's IPC namespace is not shared.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
core.v1.PodStatusResult30.yaml,True,,,0.0
core.v1.PodStatusResult33.yaml,True,,,0.0
core.v1.PodStatusResult42.yaml,True,,,0.0
core.v1.PodStatusResult45.yaml,True,,,0.0
core.v1.PodStatusResult48.yaml,True,,,0.0
core.v1.PodStatusResult50.yaml,True,,,0.0
core.v1.PodStatusResult51.yaml,True,,,0.0
core.v1.PodStatusResult53.yaml,True,,,0.0
core.v1.PodStatusResult54.yaml,True,,,0.0
core.v1.PodStatusResult56.yaml,True,,,0.0
core.v1.PodTemplate.after_roundtrip4.yaml,True,,,0.0
core.v1.PodTemplate.after_roundtrip7.yaml,True,,,0.0
core.v1.PodTemplate12.yaml,True,,,0.0
core.v1.PodTemplate13.yaml,True,,,0.0
core.v1.PodTemplate14.yaml,True,,,0.0
core.v1.PodTemplate24.yaml,True,,,0.0
core.v1.PodTemplate25.yaml,True,,,0.0
core.v1.PodTemplate26.yaml,True,,,0.0
core.v1.ReplicationController.after_roundtrip4.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
core.v1.ReplicationController.after_roundtrip7.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
core.v1.ReplicationController13.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
core.v1.ReplicationController25.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-network; invalid-target-ports; latest-tag; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure that port naming is in conjunction with the specification. For more information, please look at the Kubernetes Service specification on this page: https://kubernetes.io/docs/reference/_print/#ServiceSpec. And additional information about IANA Service naming can be found on the following page: https://www.rfc-editor.org/rfc/rfc6335.html#section-5.1.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.4912
coredns11.yaml,False,liveness-port; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
coredns12.yaml,False,liveness-port; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
crdb-operator_4.yaml,False,no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
cron_dag_final.yaml,True,,,0.0
cronjob-configauditreport-expected.yaml,True,,,0.0
cronjob-expected-scan.yaml,False,mismatching-selector; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.4912
cs-db-br-script-cm.yaml,True,,,0.0
csi-hostpath-plugin11_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin13_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin14_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin15_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin18_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin19_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin1_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin20_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin21_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin22_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin2_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin3_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin5_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin6_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin7_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin9_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-hostpath-plugin_11.yaml,False,no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
csi-node3.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
customizations1.yaml,True,,,0.0
customizations12.yaml,True,,,0.0
customizations14.yaml,True,,,0.0
customizations2.yaml,True,,,0.0
customizations3.yaml,True,,,0.0
customizations4.yaml,True,,,0.0
customizations5.yaml,True,,,0.0
customizations6.yaml,True,,,0.0
customizations7.yaml,True,,,0.0
daemonset-configauditreport-expected.yaml,True,,,0.0
daemonset-expected-scan.yaml,False,mismatching-selector; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.4912
daemonset319.yaml,False,docker-sock; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the Docker socket is not mounted inside any containers by removing the associated  Volume and VolumeMount in deployment yaml specification. If the Docker socket is mounted inside a container it could allow processes running within  the container to execute Docker commands which would effectively allow for full control of the host.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
daemonset367.yaml,False,drop-net-raw-capability; host-network; latest-tag; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.",6.4912
dapr_sidecar_injector_deployment2.yaml,True,,,0.0
dashboard-v1.yaml,True,,,0.0
dashboard-v11.yaml,True,,,0.0
dashboard-v2.yaml,True,,,0.0
dashboard-v21.yaml,True,,,0.0
dashboard15.yaml,True,,,0.0
dashboards-trace.yaml,True,,,0.0
definition4.yaml,True,,,0.0
demo_v1alpha1_guestbook.yaml,True,,,0.0
deploy-tp-aks.yaml,True,,,0.0
deploy-tp-eks.yaml,True,,,0.0
deploy-tp-gke.yaml,True,,,0.0
deployment-canary1.yaml,True,,,0.0
deployment-referencing-non-existent-resources.yaml,True,,,0.0
deployment-referencing-non-existent-resources1.yaml,True,,,0.0
deployment304.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
deployment3534_1.yaml,False,duplicate-env-var; env-var-secret; latest-tag; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Confirm that your DeploymentLike doesn't have duplicate env vars names.; Create the missing service account, or refer to an existing service account.; Do not use raw secrets in environment variables. Instead, either mount the secret as a file or use a secretKeyRef. Refer to https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets for details.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.",6.4912
deployment4806.yaml,False,latest-tag; no-read-only-root-fs; run-as-non-root,Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.,6.4912
deployment6356.yaml,True,,,0.0
deployment6374.yaml,True,,,0.0
deployment6378.yaml,True,,,0.0
deployment849.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
deprecated-secret-tls_1.yaml,True,,,0.0
diff-cache.yaml,True,,,0.0
diff-cache1.yaml,True,,,0.0
dify-mirror-deployment_23.yaml,False,env-var-secret; no-read-only-root-fs; run-as-non-root,"Do not use raw secrets in environment variables. Instead, either mount the secret as a file or use a secretKeyRef. Refer to https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.4912
disallow-selinux11.yaml,True,,,0.0
disallow-selinux3.yaml,True,,,0.0
disallow-selinux5.yaml,True,,,0.0
disallow-selinux7.yaml,True,,,0.0
disallow-selinux9.yaml,True,,,0.0
dovecot-conf.yaml,True,,,0.0
dovecot-ldap-conf.yaml,True,,,0.0
dovecot-sql-conf-ext.yaml,True,,,0.0
dovecot-statefulset.yaml,False,latest-tag; no-anti-affinity; no-read-only-root-fs; run-as-non-root; ssh-port; unset-cpu-requirements; unset-memory-requirements,"Ensure that non-SSH services are not using port 22. Confirm that any actual SSH servers have been vetted.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.; Use a container image with a specific tag other than latest.",6.4912
druid-cluster.yaml,True,,,0.0
dummy-k8s-operator.clusterserviceversion.yaml,True,,,0.0
e2e-cm.yaml,True,,,0.0
email-operator.clusterserviceversion.yaml,True,,,0.0
etcd-certs.yaml,True,,,0.0
extensions.v1beta1.DaemonSet.after_roundtrip4.yaml,False,no-extensions-v1beta,Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.,6.4912
extensions.v1beta1.DaemonSet.after_roundtrip7.yaml,False,no-extensions-v1beta,Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.,6.4912
extensions.v1beta1.DaemonSet13.yaml,False,no-extensions-v1beta,Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.,6.4912
extensions.v1beta1.DaemonSet25.yaml,False,no-extensions-v1beta,Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.,6.4912
extensions.v1beta1.Deployment.after_roundtrip4.yaml,False,no-extensions-v1beta,Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.,6.4912
extensions.v1beta1.Deployment.after_roundtrip7.yaml,False,no-extensions-v1beta,Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.,6.4912
extensions.v1beta1.Deployment13.yaml,False,no-extensions-v1beta,Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.,6.4912
extensions.v1beta1.Deployment25.yaml,False,no-extensions-v1beta,Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.,6.4912
extensions.v1beta1.ReplicaSet.after_roundtrip4.yaml,False,no-extensions-v1beta,Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.,6.4912
extensions.v1beta1.ReplicaSet.after_roundtrip7.yaml,False,no-extensions-v1beta,Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.,6.4912
extensions.v1beta1.ReplicaSet13.yaml,False,no-extensions-v1beta,Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.,6.4912
extensions.v1beta1.ReplicaSet25.yaml,False,no-extensions-v1beta,Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.,6.4912
fdb-operator_templates_secrets_3.yaml,True,,,0.0
flag_output_set_values.golden.yaml,False,latest-tag; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Use a container image with a specific tag other than latest.",6.4912
flagger-v1.yaml,True,,,0.0
flagger-v11.yaml,True,,,0.0
flow-visibility_templates_configmap_2.yaml,True,,,0.0
fluentd-configmap3.yaml,True,,,0.0
fluentd-es-configmap1.yaml,True,,,0.0
fluentd-es-configmap5.yaml,True,,,0.0
gameserver_v1alpha1_dayz.yaml,True,,,0.0
generate2.yaml,True,,,0.0
generated1_7.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
generated_7.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
git-clone-task.yaml,True,,,0.0
git-clone-task1.yaml,True,,,0.0
git-clone.yaml,True,,,0.0
git-clone1.yaml,True,,,0.0
gitea-config1_2.yaml,True,,,0.0
gitea-config_2.yaml,True,,,0.0
gitea2_3.yaml,False,no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.4912
gitea_3.yaml,False,no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.4912
github-deploy-key.sops6.yaml,True,,,0.0
github-pipeline_1.yaml,True,,,0.0
gitlab-pipeline_1.yaml,True,,,0.0
gitlab-rails.sops.yaml,True,,,0.0
grafana-dashboard-numbers-api-v2.yaml,True,,,0.0
grafana-dashboard-numbers-api-v21.yaml,True,,,0.0
grafana-dashboard-numbers-api-v22.yaml,True,,,0.0
grafana-dashboard-numbers-api-v23.yaml,True,,,0.0
grafana-deployment12.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment13.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment14.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment15.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment16.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment2.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment24.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.4912
grafana-deployment28.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.4912
grafana-deployment3.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment30.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.4912
grafana-deployment32.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment33.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment34.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment35.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment36.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment37.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment4.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment40.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment41.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment42.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment45_1.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.4912
grafana-deployment5.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment51.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment55.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment56.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment57.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment6.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment60.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.4912
grafana-deployment67.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.4912
grafana-deployment70.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment72.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.4912
grafana-deployment73.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment74.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment75.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment78_3.yaml,True,,,0.0
grafana-deployment80.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.4912
grafana-deployment81.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana-deployment86.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.4912
grafana-deployment88.yaml,False,no-read-only-root-fs; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.",6.4912
grafana126.yaml,True,,,0.0
graphite1_1.yaml,True,,,0.0
graphite_1.yaml,True,,,0.0
gvm-2204-basic_2.yaml,False,latest-tag; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.,6.4912
gvm-2204-basic_21.yaml,True,,,0.0
gvm-2204-remote-scanner-kilo_2.yaml,False,latest-tag; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.,6.4912
gvm-2204-remote-scanner-kilo_22.yaml,True,,,0.0
gvm-2204-remote-scanner-kilo_3.yaml,False,drop-net-raw-capability; latest-tag; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.",6.4912
happy-compute-ingress1.yaml,True,,,0.0
harvester-rke2-clusterctl-mgmt001_12.yaml,True,,,0.0
harvester-rke2-clusterctl-mgmt001_13.yaml,True,,,0.0
harvester-rke2-clusterctl_12.yaml,True,,,0.0
harvester-rke2-clusterctl_13.yaml,True,,,0.0
helm-release103.yaml,True,,,0.0
helm-release104.yaml,True,,,0.0
helm-release110.yaml,True,,,0.0
helm-release134.yaml,True,,,0.0
helm-release135.yaml,True,,,0.0
helm58.yaml,True,,,0.0
helmrelease1035.yaml,True,,,0.0
helmrelease1046.yaml,True,,,0.0
helmrelease1063.yaml,True,,,0.0
helmrelease1079.yaml,True,,,0.0
helmrelease1195.yaml,True,,,0.0
helmrelease1207.yaml,True,,,0.0
helmrelease1219.yaml,True,,,0.0
helmrelease1268.yaml,True,,,0.0
helmrelease1275.yaml,True,,,0.0
helmrelease1294.yaml,True,,,0.0
helmrelease1334.yaml,True,,,0.0
helmrelease1399.yaml,True,,,0.0
helmrelease1437.yaml,True,,,0.0
helmrelease1440.yaml,True,,,0.0
helmrelease1446.yaml,True,,,0.0
helmrelease1466.yaml,True,,,0.0
helmrelease1472.yaml,True,,,0.0
helmrelease1491.yaml,True,,,0.0
helmrelease1529.yaml,True,,,0.0
helmrelease1542.yaml,True,,,0.0
helmrelease1574.yaml,True,,,0.0
helmrelease1577.yaml,True,,,0.0
helmrelease1610.yaml,True,,,0.0
helmrelease1615.yaml,True,,,0.0
helmrelease1669.yaml,True,,,0.0
helmrelease1720.yaml,True,,,0.0
helmrelease1729.yaml,True,,,0.0
helmrelease1755.yaml,True,,,0.0
helmrelease181.yaml,True,,,0.0
helmrelease20.yaml,True,,,0.0
helmrelease224.yaml,True,,,0.0
helmrelease233.yaml,True,,,0.0
helmrelease237.yaml,True,,,0.0
helmrelease247.yaml,True,,,0.0
helmrelease286.yaml,True,,,0.0
helmrelease294.yaml,True,,,0.0
helmrelease30.yaml,True,,,0.0
helmrelease34.yaml,True,,,0.0
helmrelease384.yaml,True,,,0.0
helmrelease44.yaml,True,,,0.0
helmrelease499.yaml,True,,,0.0
helmrelease510.yaml,True,,,0.0
helmrelease541.yaml,True,,,0.0
helmrelease570.yaml,True,,,0.0
helmrelease607.yaml,True,,,0.0
helmrelease757.yaml,True,,,0.0
helmrelease777.yaml,True,,,0.0
helmrelease83.yaml,True,,,0.0
helmrelease833.yaml,True,,,0.0
helmrelease855.yaml,True,,,0.0
helmrelease91.yaml,True,,,0.0
helmrelease924.yaml,True,,,0.0
helmrelease927.yaml,True,,,0.0
helmrelease941.yaml,True,,,0.0
helmrelease979.yaml,True,,,0.0
hivems-hive-metastore-stateful.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
hivems-postgresql-stateful.yaml,False,no-read-only-root-fs; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.,6.9867
httpd-cm.yaml,True,,,0.0
httpd-configmap.yaml,True,,,0.0
httpd-configmap1.yaml,True,,,0.0
hwameistor_templates_local-storage_11.yaml,False,drop-net-raw-capability; host-pid; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
hydra_deployment.yaml,False,no-read-only-root-fs; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.,6.9867
hydra_deployment1.yaml,False,no-read-only-root-fs; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.,6.9867
ibm_cp4a_cr_production_workflow.yaml,True,,,0.0
infrastructure-labels-annotations_2.yaml,False,non-existent-service-account; unsafe-sysctls; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Ensure container does not allow unsafe allocation of system resources by removing unsafe sysctls configurations. For more details see https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ https://docs.docker.com/engine/reference/commandline/run/#configure-namespaced-kernel-parameters-sysctls-at-runtime.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
ingress-gateway6.yaml,False,no-anti-affinity; non-existent-service-account; readiness-port,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
ingress-nginx-controller5.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
ingress1753.yaml,True,,,0.0
ingressgateway_k8s_settings.golden.yaml,False,latest-tag; non-existent-service-account; unsafe-sysctls,"Create the missing service account, or refer to an existing service account.; Ensure container does not allow unsafe allocation of system resources by removing unsafe sysctls configurations. For more details see https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ https://docs.docker.com/engine/reference/commandline/run/#configure-namespaced-kernel-parameters-sysctls-at-runtime.; Use a container image with a specific tag other than latest.",6.9867
ingressgateway_k8s_settings.golden_1.yaml,False,latest-tag; non-existent-service-account,"Create the missing service account, or refer to an existing service account.; Use a container image with a specific tag other than latest.",6.9867
init10.yaml,True,,,0.0
init12.yaml,True,,,0.0
init13.yaml,True,,,0.0
init14.yaml,True,,,0.0
init15.yaml,True,,,0.0
init16.yaml,True,,,0.0
init17.yaml,True,,,0.0
init18.yaml,True,,,0.0
init8.yaml,True,,,0.0
init9.yaml,True,,,0.0
install122_40.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install122_44.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install122_45.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install122_46.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install127_43.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install127_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install127_48.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install127_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install128_43.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install128_47.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install128_48.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install128_49.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install131_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install131_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install131_50.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install131_51.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install133_43.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install133_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install133_48.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install133_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install138_43.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install138_47.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install138_48.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install138_49.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install13_41.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install13_45.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install13_46.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install13_47.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install145_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install145_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install145_50.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install145_51.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install14_41.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install14_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install14_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install14_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install17_33.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install17_36.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install17_37.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install17_38.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install1_33.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install1_36.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install1_37.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install1_38.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install29_41.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install29_45.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install29_46.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install29_47.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
install30_41.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install30_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install30_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install30_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install33_41.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install33_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install33_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install33_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install34_41.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install34_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install34_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install34_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install36_41.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install36_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install36_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install36_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install37_41.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install37_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install37_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install37_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install39_41.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install39_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install39_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install39_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install51_41.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install51_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install51_46.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install51_47.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install53_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install53_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install53_50.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
install53_51.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
integration-grafana-logs.yaml,True,,,0.0
invalid_cluster_certificate_both.yaml,True,,,0.0
invalid_cluster_proxyurl.yaml,True,,,0.0
invalid_cluster_proxyurl_scheme.yaml,True,,,0.0
invalid_cluster_server.yaml,True,,,0.0
invalid_clusters_duplicate.yaml,True,,,0.0
invalid_clusters_name.yaml,True,,,0.0
invalid_context_cluster.yaml,True,,,0.0
invalid_context_cluster_missing.yaml,True,,,0.0
invalid_context_namespace_format.yaml,True,,,0.0
invalid_context_namespace_length.yaml,True,,,0.0
invalid_context_user.yaml,True,,,0.0
invalid_context_user_missing.yaml,True,,,0.0
invalid_contexts_context.yaml,True,,,0.0
invalid_contexts_duplicate.yaml,True,,,0.0
invalid_contexts_name.yaml,True,,,0.0
invalid_contexts_required.yaml,True,,,0.0
invalid_current_context.yaml,True,,,0.0
invalid_user_certificate_both.yaml,True,,,0.0
invalid_user_clientkey_both.yaml,True,,,0.0
invalid_user_impersonating.yaml,True,,,0.0
invalid_users_duplicate.yaml,True,,,0.0
invalid_users_name.yaml,True,,,0.0
invidious-postgresql-init-configmap.yaml,True,,,0.0
job-configauditreport-expected.yaml,True,,,0.0
job-expected-scan.yaml,False,mismatching-selector; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
jwtchecker.yaml,True,,,0.0
k8s-dev.sealedsecret.yaml,True,,,0.0
k8s-metrics_15.yaml,True,,,0.0
k8s-monitoring.yaml,True,,,0.0
k8s.rules1.yaml,True,,,0.0
k8s.rules5.yaml,True,,,0.0
k8ssandra1_29.yaml,True,,,0.0
k8ssandra_29.yaml,True,,,0.0
kafka-persistent1_4.yaml,True,,,0.0
kafka17_1.yaml,True,,,0.0
kiada-ssl.kiada-test2-namespace1_2.yaml,True,,,0.0
kiada-ssl.kiada-test2-namespace_2.yaml,True,,,0.0
kiada-ssl1_2.yaml,True,,,0.0
kiada-ssl_2.yaml,True,,,0.0
kiada-stable-and-canary1_5.yaml,True,,,0.0
kiada-stable-and-canary_5.yaml,True,,,0.0
knative_serving_0.18.0_21.yaml,True,,,0.0
knative_serving_0.18.0_22.yaml,True,,,0.0
kong-conf4.yaml,True,,,0.0
kratos_deployment.yaml,False,no-read-only-root-fs; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.,6.9867
kratos_deployment1.yaml,False,no-read-only-root-fs; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.,6.9867
kraven-org-production-tls.sops.yaml,True,,,0.0
kraven-org-staging-tls.sops.yaml,True,,,0.0
kserve1_9.yaml,True,,,0.0
kube-apiserver-availability.rules1.yaml,True,,,0.0
kube-apiserver-availability.rules5.yaml,True,,,0.0
kube-apiserver-burnrate.rules1.yaml,True,,,0.0
kube-apiserver-burnrate.rules5.yaml,True,,,0.0
kube-apiserver-minikube.yaml,False,host-network; liveness-port; no-read-only-root-fs; readiness-port; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
kube-fieldforge.clusterserviceversion.yaml,True,,,0.0
kube-gateway-ambient-redirect_2.yaml,False,non-existent-service-account; unsafe-sysctls; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Ensure container does not allow unsafe allocation of system resources by removing unsafe sysctls configurations. For more details see https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ https://docs.docker.com/engine/reference/commandline/run/#configure-namespaced-kernel-parameters-sysctls-at-runtime.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
kube-prometheus-helm.yaml,True,,,0.0
kube_apiserver_service_monitor.yaml,True,,,0.0
kubeconfig-unit.yaml,True,,,0.0
kubeconfig26.yaml,True,,,0.0
kubeconfig27.yaml,True,,,0.0
kubeconfig28.yaml,True,,,0.0
kubeconfig4.yaml,True,,,0.0
kubeconfig8.yaml,True,,,0.0
kubeless-v1.0.71_6.yaml,True,,,0.0
kubeless-v1.0.72_6.yaml,True,,,0.0
kubeless-v1.0.73_6.yaml,True,,,0.0
kubeless-v1.0.7_6.yaml,True,,,0.0
kubeless-v1.0.8.yaml,True,,,0.0
kubelet-servicemonitor.yaml,True,,,0.0
kubelet.servicemonitor.yaml,True,,,0.0
kubelet.servicemonitor1.yaml,True,,,0.0
kubelet.servicemonitor10.yaml,True,,,0.0
kubelet.servicemonitor11.yaml,True,,,0.0
kubelet.servicemonitor2.yaml,True,,,0.0
kubelet.servicemonitor3.yaml,True,,,0.0
kubelet.servicemonitor4.yaml,True,,,0.0
kubelet.servicemonitor5.yaml,True,,,0.0
kubelet.servicemonitor6.yaml,True,,,0.0
kubelet.servicemonitor7.yaml,True,,,0.0
kubelet.servicemonitor8.yaml,True,,,0.0
kubelet.servicemonitor9.yaml,True,,,0.0
kubernetes-manifest.yaml,False,latest-tag; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.,6.9867
kubernetes-serviceMonitorApiserver.yaml,True,,,0.0
kubernetes-serviceMonitorApiserver1.yaml,True,,,0.0
kubernetes-serviceMonitorApiserver2.yaml,True,,,0.0
kubernetes-serviceMonitorApiserver3.yaml,True,,,0.0
kubernetes-serviceMonitorApiserver4.yaml,True,,,0.0
kubernetes-serviceMonitorApiserver5.yaml,True,,,0.0
kubernetes-serviceMonitorKubeControllerManager.yaml,True,,,0.0
kubernetes-serviceMonitorKubeControllerManager1.yaml,True,,,0.0
kubernetes-serviceMonitorKubeControllerManager2.yaml,True,,,0.0
kubernetes-serviceMonitorKubeControllerManager3.yaml,True,,,0.0
kubernetes-serviceMonitorKubeControllerManager4.yaml,True,,,0.0
kubernetes-serviceMonitorKubeControllerManager5.yaml,True,,,0.0
kubernetes-serviceMonitorKubelet.yaml,True,,,0.0
kubernetes-serviceMonitorKubelet1.yaml,True,,,0.0
kubernetes-serviceMonitorKubelet2.yaml,True,,,0.0
kubernetes-serviceMonitorKubelet3.yaml,True,,,0.0
kubernetes-serviceMonitorKubelet4.yaml,True,,,0.0
kubernetes-serviceMonitorKubelet5.yaml,True,,,0.0
kubernetes30.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver1.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver10.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver11.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver12.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver13.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver2.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver3.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver4.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver5.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver6.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver7.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver8.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorApiserver9.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager1.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager10.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager11.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager12.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager13.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager2.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager3.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager4.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager5.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager6.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager7.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager8.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubeControllerManager9.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet1.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet10.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet11.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet12.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet13.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet2.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet3.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet4.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet5.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet6.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet7.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet8.yaml,True,,,0.0
kubernetesControlPlane-serviceMonitorKubelet9.yaml,True,,,0.0
kubevirt-operator-v1.3.1_7.yaml,True,,,0.0
kubevirt-operator1_7.yaml,True,,,0.0
kubevirt-operator2_7.yaml,True,,,0.0
kubevirt-operator3_7.yaml,True,,,0.0
kubevirt-operator4_7.yaml,True,,,0.0
kubevirt-operator5_7.yaml,True,,,0.0
kubevirt-operator6_7.yaml,True,,,0.0
kubevirt-operator8_7.yaml,True,,,0.0
kubevirt-operator_7.yaml,True,,,0.0
kubewell-ingress-operator.clusterserviceversion.yaml,True,,,0.0
kustomization1009.yaml,True,,,0.0
kustomization1447.yaml,True,,,0.0
kustomization2068.yaml,True,,,0.0
kustomization2641.yaml,True,,,0.0
kustomization2668.yaml,True,,,0.0
kustomization2679.yaml,True,,,0.0
kustomization2702.yaml,True,,,0.0
kustomization3707.yaml,True,,,0.0
kustomization389.yaml,True,,,0.0
kustomization4004.yaml,True,,,0.0
kustomization4251.yaml,True,,,0.0
kustomization4917.yaml,True,,,0.0
kustomization5713.yaml,True,,,0.0
kustomization6162.yaml,True,,,0.0
kustomization6843.yaml,True,,,0.0
kustomization9222.yaml,True,,,0.0
kustomization9533.yaml,True,,,0.0
kustomization9992.yaml,True,,,0.0
kyverno-generate-role1.yaml,True,,,0.0
lgtm1_29.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
linkerd-edge-20.10.11_54.yaml,True,,,0.0
linkerd-edge-20.10.11_59.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.11_62.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.11_66.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.11_71.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.11_73.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.11_77.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.11_80.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.11_88.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.11_96.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.1_54.yaml,True,,,0.0
linkerd-edge-20.10.1_59.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.1_62.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.1_66.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.1_71.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.1_73.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.1_77.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.1_80.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.1_88.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
linkerd-edge-20.10.1_96.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
ll_3.yaml,True,,,0.0
loadtest_template_basic_all_languages.yaml,True,,,0.0
loadtest_template_prebuilt_all_languages.yaml,True,,,0.0
loadtest_template_psm_proxied_basic_all_languages.yaml,True,,,0.0
loadtest_template_psm_proxied_prebuilt_all_languages.yaml,True,,,0.0
loadtest_template_psm_proxyless_basic_all_languages.yaml,True,,,0.0
loadtest_template_psm_proxyless_prebuilt_all_languages.yaml,True,,,0.0
local-lan-vernal-dev-tls.sealedsecret.yaml,True,,,0.0
local-storage7.yaml,False,drop-net-raw-capability; host-pid; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
mainnet.expect_5.yaml,False,no-read-only-root-fs; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
mainnet2.expect_6.yaml,False,no-read-only-root-fs; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
mainnet2.expect_7.yaml,False,liveness-port; no-anti-affinity; no-read-only-root-fs; readiness-port; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
manifest221_1.yaml,True,,,0.0
manifest222_10.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-ipc; host-network; latest-tag; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's IPC namespace is not shared.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.9867
manifest367_62.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.9867
manifest367_63.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.9867
manifest367_64.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.9867
manifest367_65.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.9867
manifest367_67.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.9867
manifest385_10.yaml,True,,,0.0
manifest402_9.yaml,False,no-read-only-root-fs; non-existent-service-account; run-as-non-root,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
manifest96_1.yaml,True,,,0.0
manifest97_10.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-ipc; host-network; latest-tag; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's IPC namespace is not shared.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match.",6.9867
manifests18_22.yaml,True,,,0.0
manifests18_57.yaml,True,,,0.0
manifests68.yaml,True,,,0.0
manual-sa_2.yaml,False,non-existent-service-account; unsafe-sysctls; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Ensure container does not allow unsafe allocation of system resources by removing unsafe sysctls configurations. For more details see https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ https://docs.docker.com/engine/reference/commandline/run/#configure-namespaced-kernel-parameters-sysctls-at-runtime.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
mariadb-operator_16.yaml,True,,,0.0
mariadb_node1-configmap.yaml,True,,,0.0
mariadb_node2-configmap.yaml,True,,,0.0
mariadb_node3-configmap.yaml,True,,,0.0
matrix-hookshot.yaml,True,,,0.0
memcached-operator.clusterserviceversion.yaml,True,,,0.0
merge-probers.yaml,False,drop-net-raw-capability; latest-tag; liveness-port; no-anti-affinity; no-read-only-root-fs; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.; Use a container image with a specific tag other than latest.",6.9867
metrics310_1.yaml,True,,,0.0
metrics31_1.yaml,True,,,0.0
metrics3_1.yaml,True,,,0.0
meu-rabbit-mq_8.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account.",6.9867
mlquickstarts.yaml,True,,,0.0
mlquickstarts1.yaml,True,,,0.0
mlquickstarts10.yaml,True,,,0.0
mlquickstarts11.yaml,True,,,0.0
mlquickstarts12.yaml,True,,,0.0
mlquickstarts13.yaml,True,,,0.0
mlquickstarts14.yaml,True,,,0.0
mlquickstarts2.yaml,True,,,0.0
mlquickstarts3.yaml,True,,,0.0
mlquickstarts4.yaml,True,,,0.0
mlquickstarts5.yaml,True,,,0.0
mlquickstarts6.yaml,True,,,0.0
mlquickstarts7.yaml,True,,,0.0
mlquickstarts8.yaml,True,,,0.0
mlquickstarts9.yaml,True,,,0.0
mongo-exported.yaml,False,no-anti-affinity; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
mongo-exported1.yaml,False,no-anti-affinity; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
multi-container-pod16.yaml,False,latest-tag; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.,6.9867
my-tls-secret.yaml,True,,,0.0
mysql-ha-read-write-separation_3.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
mysql-statefulset11.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
mysql-statefulset13.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
mysql-statefulset2.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
mysql-statefulset3.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
mysql-statefulset4.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
mysql-statefulset5.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
mysql-statefulset6.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
mysql-statefulset7.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
mysql-statefulset9.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
mysql1_2.yaml,True,,,0.0
mysql20.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
mysql6_2.yaml,True,,,0.0
namespace-install1_36.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
namespace-install1_40.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
namespace-install1_41.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
namespace-install1_42.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
namespace-install4_34.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
namespace-install4_38.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
namespace-install4_39.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
namespace-install4_40.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest.",6.9867
neko-deployment.yaml,False,no-read-only-root-fs; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
neko-service.yaml,True,,,0.0
netbox-deployment.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root,"Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
netbox-deployment1.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root,"Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
netbox-startup-configmap.yaml,True,,,0.0
netbox-startup-configmap1.yaml,True,,,0.0
networking.amazon-vpc-routed-eni-k8s-1.161_6.yaml,False,drop-net-raw-capability; host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
networking.amazon-vpc-routed-eni-k8s-1.16_6.yaml,False,drop-net-raw-capability; host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
newrelic-agent-operator.clusterserviceversion.yaml,True,,,0.0
nextcloud-cm-subdir.yaml,True,,,0.0
nextcloud-cm-subdir1.yaml,True,,,0.0
nextcloud1.yaml,True,,,0.0
nextcloud1_4.yaml,False,no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
nextcloud4.yaml,True,,,0.0
nextcloud4_4.yaml,False,no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
nginx-config49.yaml,True,,,0.0
nginx-deployment31.yaml,True,,,0.0
nginx-deployment9.yaml,True,,,0.0
node-pod.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
node10.yaml,True,,,0.0
node100.yaml,True,,,0.0
node101.yaml,True,,,0.0
node102.yaml,True,,,0.0
node104.yaml,True,,,0.0
node105.yaml,True,,,0.0
node106.yaml,True,,,0.0
node107.yaml,True,,,0.0
node108.yaml,True,,,0.0
node111.yaml,True,,,0.0
node112.yaml,True,,,0.0
node114.yaml,True,,,0.0
node115.yaml,True,,,0.0
node116.yaml,True,,,0.0
node13.yaml,True,,,0.0
node19.yaml,True,,,0.0
node20.yaml,True,,,0.0
node22.yaml,True,,,0.0
node23.yaml,True,,,0.0
node25.yaml,True,,,0.0
node26.yaml,True,,,0.0
node28.yaml,True,,,0.0
node29.yaml,True,,,0.0
node3.yaml,True,,,0.0
node32.yaml,True,,,0.0
node33.yaml,True,,,0.0
node34.yaml,True,,,0.0
node35.yaml,True,,,0.0
node37.yaml,True,,,0.0
node38.yaml,True,,,0.0
node4.yaml,True,,,0.0
node40.yaml,True,,,0.0
node41.yaml,True,,,0.0
node42.yaml,True,,,0.0
node43.yaml,True,,,0.0
node44.yaml,True,,,0.0
node45.yaml,True,,,0.0
node46.yaml,True,,,0.0
node49.yaml,True,,,0.0
node51.yaml,True,,,0.0
node53.yaml,True,,,0.0
node54.yaml,True,,,0.0
node56.yaml,True,,,0.0
node57.yaml,True,,,0.0
node6.yaml,True,,,0.0
node75.yaml,True,,,0.0
node77.yaml,True,,,0.0
node78.yaml,True,,,0.0
node80.yaml,True,,,0.0
node81.yaml,True,,,0.0
node82.yaml,True,,,0.0
node83.yaml,True,,,0.0
node84.yaml,True,,,0.0
node86.yaml,True,,,0.0
node87.yaml,True,,,0.0
node88.yaml,True,,,0.0
node89.yaml,True,,,0.0
node9.yaml,True,,,0.0
node90.yaml,True,,,0.0
node91.yaml,True,,,0.0
node92.yaml,True,,,0.0
node93.yaml,True,,,0.0
node94.yaml,True,,,0.0
node95.yaml,True,,,0.0
node97.yaml,True,,,0.0
node98.yaml,True,,,0.0
node99.yaml,True,,,0.0
node_v1alpha1_relay_2.yaml,True,,,0.0
nss-managed-bedrock-core-role.yaml,True,,,0.0
nssf-configmap1.yaml,True,,,0.0
oidc-apps-controller-registration.yaml,True,,,0.0
oidc-apps-controller-registration1.yaml,True,,,0.0
ollama-pod.yaml,False,latest-tag; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.,6.9867
open_3.yaml,True,,,0.0
opentelemetrycollector.yaml,True,,,0.0
opentelemetrycollector2.yaml,True,,,0.0
operator.clusterserviceversion.yaml,True,,,0.0
oracle-database-operator_14.yaml,True,,,0.0
otel3_3.yaml,True,,,0.0
outline-sealedsecret.yaml,True,,,0.0
paperless-secret.yaml,True,,,0.0
patch-globalrole-workspace-manager.yaml,True,,,0.0
peer0-org1.yaml,True,,,0.0
peer0-org2.yaml,True,,,0.0
persistentvolumesusage17.yaml,True,,,0.0
pod-configauditreport-expected.yaml,True,,,0.0
pod-expected-scan.yaml,False,mismatching-selector; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
pod-total17.yaml,True,,,0.0
pod873.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline1.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline11.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline12.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline13.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline14.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline15.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline2.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline3.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline4.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline5.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline6.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline7.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline8.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_baseline9.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_initContainerStatuses.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
pod_restricted.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted1.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted11.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted12.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted13.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted14.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted15.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted2.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted3.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted4.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted5.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted6.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted7.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted8.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pod_restricted9.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
pods-with-expired-certificates.yaml,True,,,0.0
pods-with-expired-certificates1.yaml,True,,,0.0
pods-with-outdated-secret-data.yaml,True,,,0.0
pods-with-outdated-secret-data1.yaml,True,,,0.0
policies4_4.yaml,True,,,0.0
policies4_5.yaml,True,,,0.0
policies4_6.yaml,True,,,0.0
policies4_7.yaml,True,,,0.0
policies4_8.yaml,True,,,0.0
policy10.yaml,True,,,0.0
policy6.yaml,True,,,0.0
policy7.yaml,True,,,0.0
policy8.yaml,True,,,0.0
policy9.yaml,True,,,0.0
postfix-mastercf.yaml,True,,,0.0
postgres-conf.yaml,True,,,0.0
postgres_configmap.yaml,True,,,0.0
postgres_statefulset.yaml,False,no-read-only-root-fs; run-as-non-root; unset-cpu-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
pp-o11y-full1.yaml,True,,,0.0
private-chain.expect_14.yaml,False,no-anti-affinity; no-read-only-root-fs; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
private-chain.expect_3.yaml,True,,,0.0
profile-demo88.yaml,True,,,0.0
profile-demo89.yaml,True,,,0.0
project-tenant.yaml,True,,,0.0
project-tenant1.yaml,True,,,0.0
project-tenant2.yaml,True,,,0.0
prom-configmap.yaml,True,,,0.0
prometheus-config-map.yaml,True,,,0.0
prometheus-configmap4.yaml,True,,,0.0
prometheus-configmap5.yaml,True,,,0.0
prometheus-deployment18_2.yaml,True,,,0.0
prometheus-grafana.yaml,True,,,0.0
prometheus113_1.yaml,True,,,0.0
prometheus124_1.yaml,True,,,0.0
prometheus128_6.yaml,True,,,0.0
prometheus135_1.yaml,True,,,0.0
prometheus144_1.yaml,True,,,0.0
prometheus162_1.yaml,True,,,0.0
prometheus203_1.yaml,True,,,0.0
prometheus205_3.yaml,True,,,0.0
prometheus206_1.yaml,True,,,0.0
prometheus211_1.yaml,True,,,0.0
prometheus213_1.yaml,True,,,0.0
prometheus215_1.yaml,True,,,0.0
prometheus216_1.yaml,True,,,0.0
prometheus225_1.yaml,True,,,0.0
prometheus226.yaml,True,,,0.0
prometheus231_1.yaml,True,,,0.0
prometheus266_1.yaml,True,,,0.0
prometheus270_1.yaml,True,,,0.0
prometheus272_1.yaml,True,,,0.0
prometheus280_1.yaml,True,,,0.0
prometheus290_1.yaml,True,,,0.0
prometheus293_1.yaml,True,,,0.0
prometheus297_1.yaml,True,,,0.0
prometheus310_1.yaml,True,,,0.0
prometheus35_1.yaml,True,,,0.0
prometheus37_6.yaml,True,,,0.0
prometheus5_1.yaml,True,,,0.0
prometheus61.yaml,True,,,0.0
prometheus66_1.yaml,True,,,0.0
prometheus79_1.yaml,True,,,0.0
prometheus7_6.yaml,True,,,0.0
prometheus_component-render_manifest.golden_19.yaml,True,,,0.0
prometheus_config.yaml,True,,,0.0
prometheus_vm1_1.yaml,True,,,0.0
prometheus_vm2_1.yaml,True,,,0.0
prometheus_vm3_1.yaml,True,,,0.0
prometheus_vm4_1.yaml,True,,,0.0
prometheus_vm5_1.yaml,True,,,0.0
prometheus_vm_1.yaml,True,,,0.0
prometheus_vm_tls1_1.yaml,True,,,0.0
prometheus_vm_tls2_1.yaml,True,,,0.0
prometheus_vm_tls3_1.yaml,True,,,0.0
prometheus_vm_tls4_1.yaml,True,,,0.0
prometheus_vm_tls5_1.yaml,True,,,0.0
prometheus_vm_tls_1.yaml,True,,,0.0
promethues2_2.yaml,True,,,0.0
promethues4_2.yaml,True,,,0.0
promethues_2.yaml,True,,,0.0
pull-request-comment.yaml,True,,,0.0
pull-request-comment1.yaml,True,,,0.0
pull-request-comment2.yaml,True,,,0.0
pull-request-comment3.yaml,True,,,0.0
pull-secret1.yaml,True,,,0.0
quality-definition-resizings.yaml,False,no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
quay2.yaml,False,latest-tag; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.,6.9867
rbac132_1.yaml,True,,,0.0
reactsealedsecret.yaml,True,,,0.0
redis-cluster2_1.yaml,False,latest-tag; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.,6.9867
release180_39.yaml,True,,,0.0
release302.yaml,True,,,0.0
release307.yaml,True,,,0.0
release428.yaml,True,,,0.0
rendered_11.yaml,True,,,0.0
rendered_12.yaml,True,,,0.0
rendered_15.yaml,True,,,0.0
replicaset-configauditreport-expected.yaml,True,,,0.0
replicaset-expected-scan.yaml,False,mismatching-selector; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
replicationcontroller-configauditreport-expected.yaml,True,,,0.0
replicationcontroller-expected-scan.yaml,False,mismatching-selector; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
resource792_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
resource792_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
resource792_50.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
resource792_51.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
resource793_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
resource793_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
resource793_50.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
resource793_51.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",6.9867
reverse-proxy-certificate.yaml,True,,,0.0
role-tenant.yaml,True,,,0.0
role-tenant1.yaml,True,,,0.0
role-tenant2.yaml,True,,,0.0
role188.yaml,True,,,0.0
role898.yaml,True,,,0.0
rosa-hcp-deprovision.yaml,True,,,0.0
rosa-hcp-deprovision1.yaml,True,,,0.0
rosa-hcp-deprovision2.yaml,True,,,0.0
rosa-hcp-provision.yaml,True,,,0.0
rosa-hcp-provision1.yaml,True,,,0.0
rosa-hcp-provision2.yaml,True,,,0.0
scope.yaml,False,mismatching-selector; no-extensions-v1beta; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
scope1.yaml,False,mismatching-selector; no-extensions-v1beta; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
scripts-cm1.yaml,True,,,0.0
sealed-secret11.yaml,True,,,0.0
sealed-secret13.yaml,True,,,0.0
sealed-secret15.yaml,True,,,0.0
sealed-secret21.yaml,True,,,0.0
sealed-secret24.yaml,True,,,0.0
sealed-secret25.yaml,True,,,0.0
sealed-secret9.yaml,True,,,0.0
sealed-secrets-dev_3.yaml,True,,,0.0
sealed-secrets-keypair.yaml,True,,,0.0
sealed-secrets-prod_3.yaml,True,,,0.0
sealedsecret-tls-crt.yaml,True,,,0.0
secret-oauth.sops.yaml,True,,,0.0
secret-tls19.yaml,True,,,0.0
secret.kiada-tls.yaml,True,,,0.0
secret.kiada-tls1.yaml,True,,,0.0
secret.kiada-tls10.yaml,True,,,0.0
secret.kiada-tls11.yaml,True,,,0.0
secret.kiada-tls12.yaml,True,,,0.0
secret.kiada-tls13.yaml,True,,,0.0
secret.kiada-tls14.yaml,True,,,0.0
secret.kiada-tls15.yaml,True,,,0.0
secret.kiada-tls2.yaml,True,,,0.0
secret.kiada-tls3.yaml,True,,,0.0
secret.kiada-tls4.yaml,True,,,0.0
secret.kiada-tls5.yaml,True,,,0.0
secret.kiada-tls6.yaml,True,,,0.0
secret.kiada-tls7.yaml,True,,,0.0
secret.kiada-tls8.yaml,True,,,0.0
secret.kiada-tls9.yaml,True,,,0.0
secret.sops111.yaml,True,,,0.0
secret.sops145_1.yaml,True,,,0.0
secret.sops155.yaml,True,,,0.0
secret1150.yaml,True,,,0.0
secret542.yaml,True,,,0.0
secret543.yaml,True,,,0.0
secrets-configuration.yaml,True,,,0.0
secrets-configuration_1.yaml,True,,,0.0
secrets-configuration_2.yaml,True,,,0.0
secrets-configuration_3.yaml,True,,,0.0
secrets379.yaml,True,,,0.0
secrets456.yaml,True,,,0.0
secure-app1_3.yaml,True,,,0.0
secure-ingress-step2_1.yaml,True,,,0.0
server-mp-secret.yaml,True,,,0.0
server-secret10.yaml,True,,,0.0
server-tls-secret.yaml,True,,,0.0
server-tls-secret1.yaml,True,,,0.0
server_config_map.yaml,True,,,0.0
service-ca-deployment_7.yaml,True,,,0.0
settings.k8s.io.v1alpha1.PodPreset.after_roundtrip.yaml,True,,,0.0
settings.k8s.io.v1alpha1.PodPreset.after_roundtrip1.yaml,True,,,0.0
settings.k8s.io.v1alpha1.PodPreset.yaml,True,,,0.0
settings.k8s.io.v1alpha1.PodPreset1.yaml,True,,,0.0
settings.k8s.io.v1alpha1.PodPreset2.yaml,True,,,0.0
settings.k8s.io.v1alpha1.PodPreset3.yaml,True,,,0.0
settings.k8s.io.v1alpha1.PodPreset4.yaml,True,,,0.0
settings.k8s.io.v1alpha1.PodPreset5.yaml,True,,,0.0
settings.k8s.io.v1alpha1.PodPreset6.yaml,True,,,0.0
settings.k8s.io.v1alpha1.PodPreset7.yaml,True,,,0.0
settings.k8s.io.v1alpha1.PodPreset8.yaml,True,,,0.0
sharding.kustomization.yaml,True,,,0.0
shrek-cm.yaml,True,,,0.0
shrek-cm1.yaml,True,,,0.0
sofa-mesh-demo_2.yaml,True,,,0.0
sofa-mesh-demo_5.yaml,True,,,0.0
sonar1_12.yaml,False,no-read-only-root-fs; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
sonar_12.yaml,False,no-read-only-root-fs; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",6.9867
stale-secrets-watch.clusterserviceversion.yaml,True,,,0.0
state11.yaml,True,,,0.0
state12.yaml,True,,,0.0
state13.yaml,True,,,0.0
state2.yaml,True,,,0.0
state21.yaml,True,,,0.0
state22.yaml,True,,,0.0
state3.yaml,True,,,0.0
state31.yaml,True,,,0.0
state32.yaml,True,,,0.0
state4.yaml,True,,,0.0
state41.yaml,True,,,0.0
state42.yaml,True,,,0.0
statefulset-expected-scan.yaml,False,mismatching-selector; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.,6.9867
statefulset-my-rabbitmq.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
statefulset-my-rabbitmq1.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",6.9867
statefulset219.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
statefulset378.yaml,False,no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
statefulset379.yaml,False,no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
statefulset380.yaml,False,no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
statefulset381.yaml,False,no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
statefulset389.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
statefulset440.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
statefulset449.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
statefulsets5.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",6.9867
storage.k8s.io.v1.VolumeAttachment.after_roundtrip.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment.after_roundtrip1.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment1.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment10.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment11.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment12.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment13.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment14.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment15.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment16.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment17.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment18.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment19.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment2.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment20.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment21.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment22.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment23.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment24.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment25.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment26.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment27.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment28.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment29.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment3.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment30.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment31.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment32.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment33.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment34.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment35.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment39.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment4.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment40.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment41.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment42.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment43.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment44.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment45.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment46.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment47.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment48.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment49.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment5.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment50.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment51.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment52.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment53.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment54.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment55.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment56.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment6.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment7.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment8.yaml,True,,,0.0
storage.k8s.io.v1.VolumeAttachment9.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment.after_roundtrip.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment.after_roundtrip1.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment1.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment10.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment11.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment12.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment13.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment14.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment15.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment16.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment17.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment18.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment19.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment2.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment20.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment21.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment22.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment23.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment24.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment25.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment26.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment27.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment28.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment29.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment3.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment30.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment31.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment32.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment33.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment34.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment35.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment39.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment4.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment40.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment41.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment42.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment43.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment44.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment45.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment46.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment47.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment48.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment49.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment5.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment50.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment51.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment52.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment53.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment54.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment55.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment56.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment6.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment7.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment8.yaml,True,,,0.0
storage.k8s.io.v1alpha1.VolumeAttachment9.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment.after_roundtrip.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment.after_roundtrip1.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment1.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment10.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment11.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment12.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment13.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment14.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment15.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment16.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment17.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment18.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment19.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment2.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment20.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment21.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment22.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment23.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment24.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment25.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment26.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment27.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment28.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment29.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment3.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment30.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment31.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment32.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment33.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment34.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment35.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment39.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment4.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment40.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment41.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment42.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment43.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment44.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment45.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment46.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment47.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment48.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment49.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment5.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment50.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment51.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment52.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment53.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment54.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment55.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment56.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment6.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment7.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment8.yaml,True,,,0.0
storage.k8s.io.v1beta1.VolumeAttachment9.yaml,True,,,0.0
streetlights-api.yaml,True,,,0.0
sts-mysql.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",15.8788
sts-mysql1.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.",15.8788
surrealdb-schema.sealed-secret.yaml,True,,,0.0
surrealdb-schema.sealed-secret1.yaml,True,,,0.0
sv-config.yaml,True,,,0.0
tasks32_1.yaml,True,,,0.0
tekton-pipelines-controller-deploy.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",15.8788
tekton1_39.yaml,True,,,0.0
tekton2_45.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",15.8788
template-1_6.yaml,True,,,0.0
test-metadata.yaml,True,,,0.0
test-metadata2.yaml,True,,,0.0
test_clusterrole.yaml,True,,,0.0
test_clusterrole1.yaml,True,,,0.0
theodolite-benchmark-kstreams.yaml,True,,,0.0
tls-secret51.yaml,True,,,0.0
tls-secret51_1.yaml,True,,,0.0
tls-secret51_2.yaml,True,,,0.0
tls-secret51_3.yaml,True,,,0.0
tls-wildcard-lan-stamx-nl.yaml,True,,,0.0
tls-wildcard-lan-stamx-nl1.yaml,True,,,0.0
tls-wildcard-stamx-nl.yaml,True,,,0.0
tls-wildcard-stamx-nl1.yaml,True,,,0.0
today.apiresourceschemas1_2.yaml,True,,,0.0
today.apiresourceschemas_2.yaml,True,,,0.0
tour.sealed-secret.helm.yaml,True,,,0.0
tour.sealed-secret.helm1.yaml,True,,,0.0
tp-base-on-prem-https.yaml,True,,,0.0
tp-base-on-prem-https1.yaml,True,,,0.0
tp-base-on-prem.yaml,True,,,0.0
tp-base-on-prem1.yaml,True,,,0.0
traefik17.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.",15.8788
tretboot_1.yaml,True,,,0.0
trigger-jenkins-job.yaml,True,,,0.0
upgrade-example.yaml,True,,,0.0
v0.13.10.metallb-frr1_23.yaml,False,drop-net-raw-capability; env-var-secret; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Create the missing service account, or refer to an existing service account.; Do not use raw secrets in environment variables. Instead, either mount the secret as a file or use a secretKeyRef. Refer to https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets for details.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
v0.13.10.metallb-frr_23.yaml,False,drop-net-raw-capability; env-var-secret; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Create the missing service account, or refer to an existing service account.; Do not use raw secrets in environment variables. Instead, either mount the secret as a file or use a secretKeyRef. Refer to https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets for details.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
v0.13.12.metallb-frr1_23.yaml,False,drop-net-raw-capability; env-var-secret; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Create the missing service account, or refer to an existing service account.; Do not use raw secrets in environment variables. Instead, either mount the secret as a file or use a secretKeyRef. Refer to https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets for details.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
v0.13.12.metallb-frr_23.yaml,False,drop-net-raw-capability; env-var-secret; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Create the missing service account, or refer to an existing service account.; Do not use raw secrets in environment variables. Instead, either mount the secret as a file or use a secretKeyRef. Refer to https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets for details.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
v0.13.4.metallb-frr_24.yaml,False,drop-net-raw-capability; host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
v0.13.7.metallb-frr_22.yaml,False,drop-net-raw-capability; host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
v0.13.9.metallb-frr_22.yaml,False,drop-net-raw-capability; env-var-secret; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Create the missing service account, or refer to an existing service account.; Do not use raw secrets in environment variables. Instead, either mount the secret as a file or use a secretKeyRef. Refer to https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets for details.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
valid.yaml,True,,,0.0
valid_multi.yaml,True,,,0.0
validatingwebhookconfiguration-02.yaml,True,,,0.0
vector-config.yaml,True,,,0.0
vsphere-csi-driver_11.yaml,True,,,0.0
waypoint-no-network-label_2.yaml,False,no-read-only-root-fs; non-existent-service-account; run-as-non-root,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s1.yaml,False,host-network; latest-tag; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.",15.8788
weave-daemonset-k8s10.yaml,False,host-network; latest-tag; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.",15.8788
weave-daemonset-k8s11.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s12.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s13.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s14.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s15.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s16.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s2.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s3.yaml,False,host-network; latest-tag; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.",15.8788
weave-daemonset-k8s4.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s5.yaml,False,host-network; latest-tag; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.",15.8788
weave-daemonset-k8s6.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s7.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s8.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave-daemonset-k8s9.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
weave.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
webhook-configuration1.yaml,False,no-read-only-root-fs; non-existent-service-account; run-as-non-root,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.",15.8788
windows-bios-installer-configmaps.yaml,True,,,0.0
windows-bios-installer-pipeline.yaml,True,,,0.0
windows-efi-installer-configmaps.yaml,True,,,0.0
windows-efi-installer-configmaps_1.yaml,True,,,0.0
windows-efi-installer-pipeline.yaml,True,,,0.0
worker-sts.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory requests and limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.",15.8788
write_checks_1.yaml,True,,,0.0
wso2am-conf.yaml,True,,,0.0
xld.clusterserviceversion.yaml,True,,,0.0
xlr.clusterserviceversion.yaml,True,,,0.0
xrd1.yaml,True,,,0.0
your-spotify.yaml,True,,,0.0
your-spotify1.yaml,True,,,0.0

VÁLIDOS,INVÁLIDOS,TOTAL,,
1189,599,1788,,
