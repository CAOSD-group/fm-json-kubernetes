file,valid,failed_checks,remediations
01-Prometheus1_1.yaml,True,,
01-Prometheus2_1.yaml,True,,
01-Prometheus3_1.yaml,True,,
01-Prometheus_1.yaml,True,,
01-contour-config.yaml,True,,
01-kafka_1.yaml,True,,
01-prom-configs-configmap.yaml,True,,
02-Prometheus_1.yaml,True,,
02-connect_4.yaml,True,,
02-prometheus-configmap1.yaml,True,,
02_EFK_7.yaml,True,,
03-Prometheus-Node-Exporter1_1.yaml,True,,
03-Prometheus-Node-Exporter2_1.yaml,True,,
03-Prometheus-Node-Exporter3_1.yaml,True,,
03-Prometheus-Node-Exporter_1.yaml,True,,
04-prometheus-configmap.yaml,True,,
04-prometheus-configmap1.yaml,True,,
04-prometheus-configmap2.yaml,True,,
04-prometheus-configmap3.yaml,True,,
04-prometheus-configmap4.yaml,True,,
04-prometheus-configmap5.yaml,True,,
04_monitor_6.yaml,True,,
10-mail-conf.yaml,True,,
11-prometheus_4.yaml,True,,
172.16_net_calico1_19.yaml,True,,
172.16_net_calico_19.yaml,True,,
2-config-map.yaml,True,,
2-config-map1.yaml,True,,
2-config-map2.yaml,True,,
2-config-map3.yaml,True,,
2-sts.yaml,True,,
2.1.2_32.yaml,True,,
2.1.2_33.yaml,True,,
2.1.2_34.yaml,True,,
20-imap-conf.yaml,True,,
21_configmap.yaml,True,,
3-statefulset.yaml,True,,
3-statefulset1.yaml,True,,
5-mongodb-statefulset.yaml,True,,
5-mongodb-statefulset1.yaml,True,,
90-sieve-conf.yaml,True,,
Calico48_29.yaml,True,,
ConfigMap-cilium-config.yaml,True,,
DaemonSet-cilium.yaml,True,,
Deployment-argocd-applicationset-controller.yaml,True,,
Deployment-argocd-repo-server.yaml,True,,
Deployment-argocd-server.yaml,True,,
Ejemplo10-configmap1_3.yaml,True,,
Ejemplo10-configmap_3.yaml,True,,
EnableContainerInsights_10.yaml,True,,
KIADA1_2.yaml,True,,
KIADA_2.yaml,True,,
StatefulSet-argocd-application-controller.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
acl-jwt-custom.yaml,True,,
addc_8.yaml,True,,
adguard-home.yaml,True,,
allowed-capabilities1.yaml,True,,
ama-metrics-prometheus-config-configmap.yaml,True,,
ama-metrics-prometheus-config-configmap1.yaml,True,,
ambassador-istio-configmap.yaml,True,,
amf-configmap1.yaml,True,,
amf-configmap2.yaml,True,,
api-server-infraassessmentreport-expected.yaml,True,,
apim-configmap.yaml,True,,
apiresourceschema-clusterworkspaces.tenancy.kcp.io.yaml,True,,
apiresourceschema-logicalclusters.core.kcp.io.yaml,True,,
apiresourceschema-partitionsets.topology.kcp.io.yaml,True,,
apiresourceschema-shards.core.kcp.io.yaml,True,,
apiresourceschema-workspaces.tenancy.kcp.io.yaml,True,,
apiresourceschema-workspacetypes.tenancy.kcp.io.yaml,True,,
apiserver.servicemonitor1.yaml,True,,
apiserver.servicemonitor11.yaml,True,,
apiserver.servicemonitor3.yaml,True,,
apiserver.servicemonitor5.yaml,True,,
apiserver.servicemonitor7.yaml,True,,
apiserver.servicemonitor9.yaml,True,,
app-of-apps20.yaml,True,,
app126_3.yaml,True,,
app_logs.yaml,True,,
app_logs1.yaml,True,,
apps.v1.DaemonSet.after_roundtrip4.yaml,True,,
apps.v1.DaemonSet.after_roundtrip7.yaml,True,,
apps.v1.DaemonSet13.yaml,True,,
apps.v1.DaemonSet25.yaml,True,,
apps.v1.Deployment.after_roundtrip4.yaml,True,,
apps.v1.Deployment.after_roundtrip7.yaml,True,,
apps.v1.Deployment13.yaml,True,,
apps.v1.Deployment25.yaml,True,,
apps.v1.ReplicaSet.after_roundtrip4.yaml,True,,
apps.v1.ReplicaSet.after_roundtrip7.yaml,True,,
apps.v1.ReplicaSet13.yaml,True,,
apps.v1.ReplicaSet25.yaml,True,,
apps.v1.StatefulSet.after_roundtrip4.yaml,True,,
apps.v1.StatefulSet.after_roundtrip7.yaml,True,,
apps.v1.StatefulSet13.yaml,True,,
apps.v1.StatefulSet25.yaml,True,,
apps.v1beta1.Deployment.after_roundtrip4.yaml,True,,
apps.v1beta1.Deployment.after_roundtrip7.yaml,True,,
apps.v1beta1.Deployment13.yaml,True,,
apps.v1beta1.Deployment25.yaml,True,,
apps.v1beta1.StatefulSet.after_roundtrip4.yaml,True,,
apps.v1beta1.StatefulSet.after_roundtrip7.yaml,True,,
apps.v1beta1.StatefulSet13.yaml,True,,
apps.v1beta1.StatefulSet25.yaml,True,,
apps.v1beta2.DaemonSet.after_roundtrip4.yaml,True,,
apps.v1beta2.DaemonSet.after_roundtrip7.yaml,True,,
apps.v1beta2.DaemonSet13.yaml,True,,
apps.v1beta2.DaemonSet25.yaml,True,,
apps.v1beta2.Deployment.after_roundtrip4.yaml,True,,
apps.v1beta2.Deployment.after_roundtrip7.yaml,True,,
apps.v1beta2.Deployment13.yaml,True,,
apps.v1beta2.Deployment25.yaml,True,,
apps.v1beta2.ReplicaSet.after_roundtrip4.yaml,True,,
apps.v1beta2.ReplicaSet.after_roundtrip7.yaml,True,,
apps.v1beta2.ReplicaSet13.yaml,True,,
apps.v1beta2.ReplicaSet25.yaml,True,,
apps.v1beta2.StatefulSet.after_roundtrip4.yaml,True,,
apps.v1beta2.StatefulSet.after_roundtrip7.yaml,True,,
apps.v1beta2.StatefulSet13.yaml,True,,
apps.v1beta2.StatefulSet25.yaml,True,,
argo-cd.v2.10.6_42.yaml,True,,
argo-cd.v2.10.6_44.yaml,True,,
argo-cd.v2.10.6_45.yaml,True,,
argo-cd.v2.10.6_48.yaml,True,,
argo-cm-nodeport_43.yaml,True,,
argo-cm-nodeport_47.yaml,True,,
argo-cm-nodeport_48.yaml,True,,
argo-cm-nodeport_49.yaml,True,,
argo-dex.yaml,True,,
argo-quick-start-minimal_37.yaml,True,,
argo-secret.yaml,True,,
argocd-application-controller-deployment.yaml,True,,
argocd-application-controller-deployment1.yaml,True,,
argocd-application-controller-statefulset.yaml,True,,
argocd-application-controller-statefulset4.yaml,True,,
argocd-applicationset-controller-deployment.yaml,True,,
argocd-applicationset-controller-deployment1.yaml,True,,
argocd-repo-server-deployment.yaml,True,,
argocd-repo-server-deployment3.yaml,True,,
argocd-secret.enc.yaml,True,,
argocd-server-deployment.yaml,True,,
argocd-server-deployment3.yaml,True,,
argocd-workload.yaml,True,,
argocd-workload1.yaml,True,,
argocd-workload1_3.yaml,True,,
argocd-workload1_4.yaml,True,,
argocd-workload1_5.yaml,True,,
argocd-workload_3.yaml,True,,
argocd-workload_4.yaml,True,,
argocd-workload_5.yaml,True,,
argocd.install1_45.yaml,True,,
argocd.install1_49.yaml,True,,
argocd.install1_50.yaml,True,,
argocd.install1_51.yaml,True,,
argocd.install_45.yaml,True,,
argocd.install_49.yaml,True,,
argocd.install_50.yaml,True,,
argocd.install_51.yaml,True,,
argocd.v2.8.11_41.yaml,True,,
argocd.v2.8.11_45.yaml,True,,
argocd.v2.8.11_46.yaml,True,,
argocd.v2.8.11_47.yaml,True,,
argocd13_45.yaml,True,,
argocd13_49.yaml,True,,
argocd13_50.yaml,True,,
argocd13_51.yaml,True,,
argocd44_43.yaml,True,,
argocd44_47.yaml,True,,
argocd44_48.yaml,True,,
argocd44_49.yaml,True,,
argocd45_43.yaml,True,,
argocd45_47.yaml,True,,
argocd45_48.yaml,True,,
argocd45_49.yaml,True,,
argocd4_45.yaml,True,,
argocd4_49.yaml,True,,
argocd4_50.yaml,True,,
argocd4_51.yaml,True,,
argocd50_46.yaml,True,,
argocd50_47.yaml,True,,
argocd50_48.yaml,True,,
argocd63_43.yaml,True,,
argocd63_47.yaml,True,,
argocd63_48.yaml,True,,
argocd63_49.yaml,True,,
argocd_install_41.yaml,True,,
argocd_install_45.yaml,True,,
argocd_install_46.yaml,True,,
argocd_install_47.yaml,True,,
asyncapi-example-api.yaml,True,,
autoscaler-custom10.yaml,True,,
autoscaler-custom11.yaml,True,,
autoscaler-custom12.yaml,True,,
autoscaler-custom13.yaml,True,,
autoscaler-custom14.yaml,True,,
autoscaler-custom15.yaml,True,,
autoscaler-custom16.yaml,True,,
autoscaler-custom17.yaml,True,,
autoscaler-custom18.yaml,True,,
autoscaler-custom19.yaml,True,,
autoscaler-custom20_2.yaml,True,,
autoscaler-custom21_2.yaml,True,,
autoscaler-custom22_2.yaml,True,,
autoscaler-custom23_2.yaml,True,,
autoscaler-custom24_2.yaml,True,,
autoscaler-custom25.yaml,True,,
autoscaler-custom26.yaml,True,,
autoscaler-custom27.yaml,True,,
autoscaler-custom28.yaml,True,,
autoscaler-custom29.yaml,True,,
autoscaler-custom5.yaml,True,,
autoscaler-custom6.yaml,True,,
autoscaler-custom7.yaml,True,,
autoscaler-custom8.yaml,True,,
autoscaler-custom9.yaml,True,,
autoscaler10.yaml,True,,
autoscaler11.yaml,True,,
autoscaler12.yaml,True,,
autoscaler13.yaml,True,,
autoscaler14.yaml,True,,
autoscaler15.yaml,True,,
autoscaler16.yaml,True,,
autoscaler17.yaml,True,,
autoscaler18.yaml,True,,
autoscaler19.yaml,True,,
autoscaler20.yaml,True,,
autoscaler21.yaml,True,,
autoscaler22.yaml,True,,
autoscaler23.yaml,True,,
autoscaler24_2.yaml,True,,
autoscaler25_2.yaml,True,,
autoscaler26_2.yaml,True,,
autoscaler27_2.yaml,True,,
autoscaler28_2.yaml,True,,
autoscaler29.yaml,True,,
autoscaler30.yaml,True,,
autoscaler31.yaml,True,,
autoscaler32.yaml,True,,
autoscaler33.yaml,True,,
autoscaler9.yaml,True,,
autoscaling.v2.HorizontalPodAutoscaler10.yaml,True,,
autoscaling.v2.HorizontalPodAutoscaler13.yaml,True,,
autoscaling.v2.HorizontalPodAutoscaler21.yaml,True,,
autoscaling.v2.HorizontalPodAutoscaler4.yaml,True,,
autoscaling.v2beta2.HorizontalPodAutoscaler10.yaml,True,,
autoscaling.v2beta2.HorizontalPodAutoscaler16.yaml,True,,
autoscaling.v2beta2.HorizontalPodAutoscaler17.yaml,True,,
autoscaling.v2beta2.HorizontalPodAutoscaler28.yaml,True,,
autoscaling.v2beta2.HorizontalPodAutoscaler29.yaml,True,,
autoscaling.v2beta2.HorizontalPodAutoscaler39.yaml,True,,
autoscaling.v2beta2.HorizontalPodAutoscaler4.yaml,True,,
autoscaling.v2beta2.HorizontalPodAutoscaler40.yaml,True,,
autoscaling.v2beta2.HorizontalPodAutoscaler41.yaml,True,,
aws-k8s-cni_6.yaml,True,,
azkv-pushsecret-certificate.yaml,True,,
backend92.yaml,True,,
backup-dashboard.yaml,True,,
batch.v1.Job.after_roundtrip4.yaml,True,,
batch.v1.Job.after_roundtrip7.yaml,True,,
batch.v1.Job13.yaml,True,,
batch.v1.Job25.yaml,True,,
batch.v1beta1.CronJob.after_roundtrip4.yaml,True,,
batch.v1beta1.CronJob.after_roundtrip7.yaml,True,,
batch.v1beta1.CronJob13.yaml,True,,
batch.v1beta1.CronJob25.yaml,True,,
batch.v1beta1.JobTemplate.after_roundtrip.yaml,True,,
batch.v1beta1.JobTemplate.after_roundtrip1.yaml,True,,
batch.v1beta1.JobTemplate13.yaml,True,,
batch.v1beta1.JobTemplate7.yaml,True,,
batch.v2alpha1.CronJob.after_roundtrip.yaml,True,,
batch.v2alpha1.CronJob.after_roundtrip1.yaml,True,,
batch.v2alpha1.CronJob3.yaml,True,,
batch.v2alpha1.CronJob8.yaml,True,,
batch.v2alpha1.JobTemplate.after_roundtrip.yaml,True,,
batch.v2alpha1.JobTemplate.after_roundtrip1.yaml,True,,
batch.v2alpha1.JobTemplate3.yaml,True,,
batch.v2alpha1.JobTemplate8.yaml,True,,
bitbucket-pipeline_1.yaml,True,,
bookstore-configmap.yaml,True,,
bookstore-tls.yaml,True,,
build12.yaml,True,,
build3_42.yaml,True,,
build3_46.yaml,True,,
build3_47.yaml,True,,
build3_48.yaml,True,,
build8_42.yaml,True,,
build8_46.yaml,True,,
build8_47.yaml,True,,
build8_48.yaml,True,,
bunny-secret.yaml,True,,
ca9.yaml,True,,
caddy2_5.yaml,True,,
calico-3.18.1_22.yaml,True,,
calico-ipv6_31.yaml,True,,
calico-typha_31.yaml,True,,
calico-v3.28.1_29.yaml,True,,
calico1.yaml,True,,
calico10_29.yaml,True,,
calico11_19.yaml,True,,
calico13_19.yaml,True,,
calico14_29.yaml,True,,
calico16_25.yaml,True,,
calico17_31.yaml,True,,
calico18_27.yaml,True,,
calico25_25.yaml,True,,
calico26_29.yaml,True,,
calico27_37.yaml,True,,
calico29_37.yaml,True,,
calico2_25.yaml,True,,
calico30_19.yaml,True,,
calico31_25.yaml,True,,
calico32_25.yaml,True,,
calico33_29.yaml,True,,
calico34_22.yaml,True,,
calico36_25.yaml,True,,
calico37_25.yaml,True,,
calico38_25.yaml,True,,
calico39_25.yaml,True,,
calico3_25.yaml,True,,
calico40_25.yaml,True,,
calico41_25.yaml,True,,
calico42_22.yaml,True,,
calico43_22.yaml,True,,
calico44_25.yaml,True,,
calico45_25.yaml,True,,
calico46_37.yaml,True,,
calico47_29.yaml,True,,
calico4_19.yaml,True,,
calico50_19.yaml,True,,
calico51_25.yaml,True,,
calico52_25.yaml,True,,
calico53_25.yaml,True,,
calico54_29.yaml,True,,
calico55_25.yaml,True,,
calico56_25.yaml,True,,
calico57.yaml,True,,
calico58_25.yaml,True,,
calico59_25.yaml,True,,
calico5_19.yaml,True,,
calico6.yaml,True,,
calico60_27.yaml,True,,
calico61_29.yaml,True,,
calico62_24.yaml,True,,
calico63_37.yaml,True,,
calico67_25.yaml,True,,
calico68_29.yaml,True,,
calico69_29.yaml,True,,
calico70_29.yaml,True,,
calico71_29.yaml,True,,
calico72_25.yaml,True,,
calico73_25.yaml,True,,
calico74_29.yaml,True,,
calico75_25.yaml,True,,
calico76_29.yaml,True,,
calico77_27.yaml,True,,
calico78_29.yaml,True,,
calico79_29.yaml,True,,
calico7_25.yaml,True,,
calico81_25.yaml,True,,
calico82_25.yaml,True,,
calico8_25.yaml,True,,
calico9_19.yaml,True,,
calico_19.yaml,True,,
calico_cni1_37.yaml,True,,
calico_cni_37.yaml,True,,
canal-etcd_13.yaml,True,,
canal1_31.yaml,True,,
canal2_27.yaml,True,,
canal3_31.yaml,True,,
carina-csi-driver_templates_csi-node_25.yaml,True,,
certificates-apiresourceschema.yaml,True,,
certificates-apiresourceschema_1.yaml,True,,
certificates-apiresourceschema_5.yaml,True,,
chat.sealed-secret.helm.yaml,True,,
chat.sealed-secret.helm1.yaml,True,,
cilium-cni1_12.yaml,True,,
cilium-cni1_3.yaml,True,,
cilium-cni_12.yaml,True,,
cilium-cni_3.yaml,True,,
cilium-workload.yaml,True,,
cilium-workload1.yaml,True,,
cilium10.yaml,True,,
cilium21_12.yaml,True,,
cilium21_3.yaml,True,,
cilium22_12.yaml,True,,
cilium22_3.yaml,True,,
cilium39_11.yaml,True,,
cilium39_4.yaml,True,,
clickhouse-secrets.yaml,True,,
cluster-ip10_2.yaml,True,,
cluster-role-bindings.yaml,True,,
cluster-role-bindings1.yaml,True,,
cluster-role-bindings10.yaml,True,,
cluster-role-bindings11.yaml,True,,
cluster-role-bindings13.yaml,True,,
cluster-role-bindings14.yaml,True,,
cluster-role-bindings16.yaml,True,,
cluster-role-bindings17.yaml,True,,
cluster-role-bindings18.yaml,True,,
cluster-role-bindings19.yaml,True,,
cluster-role-bindings2.yaml,True,,
cluster-role-bindings3.yaml,True,,
cluster-role-bindings5.yaml,True,,
cluster-role-bindings6.yaml,True,,
cluster-role-bindings7.yaml,True,,
cluster-role-bindings9.yaml,True,,
cluster-roles.yaml,True,,
cluster-roles1.yaml,True,,
cluster-roles14.yaml,True,,
cluster-roles15.yaml,True,,
cluster-roles16.yaml,True,,
cluster-roles17.yaml,True,,
cluster-roles2.yaml,True,,
cluster-roles22.yaml,True,,
cluster-roles29.yaml,True,,
cluster-roles3.yaml,True,,
cluster-roles31.yaml,True,,
cluster-roles32.yaml,True,,
cluster-roles33.yaml,True,,
cluster-roles34.yaml,True,,
cluster-roles5.yaml,True,,
cluster-roles6.yaml,True,,
cluster-roles7.yaml,True,,
cluster-roles8.yaml,True,,
cms-operator.clusterserviceversion.yaml,True,,
cnpg-1.22.11_8.yaml,True,,
cnpg-1.22.1_8.yaml,True,,
cnpg-1.24.1_10.yaml,True,,
code-scan.yaml,True,,
component1_1.yaml,True,,
composite_4.yaml,True,,
composition2.yaml,True,,
config-backup.yaml,True,,
config-map115.yaml,True,,
config-map20.yaml,True,,
config-map5.yaml,True,,
config-map81.yaml,True,,
config483.yaml,True,,
config494.yaml,True,,
configmap-config11.yaml,True,,
configmap-jcasc.yaml,True,,
configmap-pack_conf.yaml,True,,
configmap-windows1_1.yaml,True,,
configmap-windows_1.yaml,True,,
configmap100.yaml,True,,
configmap104.yaml,True,,
configmap1049.yaml,True,,
configmap1050.yaml,True,,
configmap1051.yaml,True,,
configmap1052.yaml,True,,
configmap1224.yaml,True,,
configmap138.yaml,True,,
configmap1449.yaml,True,,
configmap1450.yaml,True,,
configmap1451.yaml,True,,
configmap1452.yaml,True,,
configmap1708.yaml,True,,
configmap1709.yaml,True,,
configmap1901.yaml,True,,
configmap252.yaml,True,,
configmap256.yaml,True,,
configmap290.yaml,True,,
configmap801.yaml,True,,
configmap803.yaml,True,,
configmap946.yaml,True,,
container-azm-ms-agentconfig.yaml,True,,
container-azm-ms-agentconfig1.yaml,True,,
container-limits1.yaml,True,,
contents1.yaml,True,,
contour-deployment_3.yaml,True,,
contour2_3.yaml,True,,
controller-registration.yaml,True,,
controller-registration1.yaml,True,,
controller-role-bindings.yaml,True,,
controller-role-bindings1.yaml,True,,
controller-role-bindings10.yaml,True,,
controller-role-bindings11.yaml,True,,
controller-role-bindings13.yaml,True,,
controller-role-bindings14.yaml,True,,
controller-role-bindings15.yaml,True,,
controller-role-bindings16.yaml,True,,
controller-role-bindings17.yaml,True,,
controller-role-bindings18.yaml,True,,
controller-role-bindings2.yaml,True,,
controller-role-bindings3.yaml,True,,
controller-role-bindings4.yaml,True,,
controller-role-bindings5.yaml,True,,
controller-role-bindings6.yaml,True,,
controller-role-bindings7.yaml,True,,
controller-role-bindings8.yaml,True,,
controller-role-bindings9.yaml,True,,
controller-roles13.yaml,True,,
controller-roles4.yaml,True,,
controller-roles8.yaml,True,,
controller22.yaml,True,,
controller23.yaml,True,,
controller24.yaml,True,,
controller25.yaml,True,,
controller26.yaml,True,,
controller27.yaml,True,,
controlplane-gateway_1.yaml,True,,
core-install1_24.yaml,True,,
core-install1_26.yaml,True,,
core-install1_27.yaml,True,,
core-install2_24.yaml,True,,
core-install2_26.yaml,True,,
core-install2_27.yaml,True,,
core-install_26.yaml,True,,
core-install_28.yaml,True,,
core-install_29.yaml,True,,
core.v1.PersistentVolume.yaml,True,,
core.v1.PersistentVolume1.yaml,True,,
core.v1.PersistentVolume11.yaml,True,,
core.v1.PersistentVolume15.yaml,True,,
core.v1.PersistentVolume18.yaml,True,,
core.v1.PersistentVolume19.yaml,True,,
core.v1.PersistentVolume2.yaml,True,,
core.v1.PersistentVolume20.yaml,True,,
core.v1.PersistentVolume21.yaml,True,,
core.v1.PersistentVolume22.yaml,True,,
core.v1.PersistentVolume23.yaml,True,,
core.v1.PersistentVolume27.yaml,True,,
core.v1.PersistentVolume3.yaml,True,,
core.v1.PersistentVolume30.yaml,True,,
core.v1.PersistentVolume31.yaml,True,,
core.v1.PersistentVolume32.yaml,True,,
core.v1.PersistentVolume33.yaml,True,,
core.v1.PersistentVolume34.yaml,True,,
core.v1.PersistentVolume35.yaml,True,,
core.v1.PersistentVolume42.yaml,True,,
core.v1.PersistentVolume43.yaml,True,,
core.v1.PersistentVolume44.yaml,True,,
core.v1.PersistentVolume45.yaml,True,,
core.v1.PersistentVolume46.yaml,True,,
core.v1.PersistentVolume47.yaml,True,,
core.v1.PersistentVolume48.yaml,True,,
core.v1.PersistentVolume49.yaml,True,,
core.v1.PersistentVolume5.yaml,True,,
core.v1.PersistentVolume50.yaml,True,,
core.v1.PersistentVolume51.yaml,True,,
core.v1.PersistentVolume52.yaml,True,,
core.v1.PersistentVolume53.yaml,True,,
core.v1.PersistentVolume54.yaml,True,,
core.v1.PersistentVolume55.yaml,True,,
core.v1.PersistentVolume56.yaml,True,,
core.v1.PersistentVolume6.yaml,True,,
core.v1.PersistentVolume7.yaml,True,,
core.v1.PersistentVolume8.yaml,True,,
core.v1.PersistentVolume9.yaml,True,,
core.v1.Pod.after_roundtrip4.yaml,True,,
core.v1.Pod.after_roundtrip7.yaml,True,,
core.v1.Pod13.yaml,True,,
core.v1.Pod25.yaml,True,,
core.v1.PodStatusResult30.yaml,True,,
core.v1.PodStatusResult33.yaml,True,,
core.v1.PodStatusResult42.yaml,True,,
core.v1.PodStatusResult45.yaml,True,,
core.v1.PodStatusResult48.yaml,True,,
core.v1.PodStatusResult50.yaml,True,,
core.v1.PodStatusResult51.yaml,True,,
core.v1.PodStatusResult53.yaml,True,,
core.v1.PodStatusResult54.yaml,True,,
core.v1.PodStatusResult56.yaml,True,,
core.v1.PodTemplate.after_roundtrip4.yaml,True,,
core.v1.PodTemplate.after_roundtrip7.yaml,True,,
core.v1.PodTemplate12.yaml,True,,
core.v1.PodTemplate13.yaml,True,,
core.v1.PodTemplate14.yaml,True,,
core.v1.PodTemplate24.yaml,True,,
core.v1.PodTemplate25.yaml,True,,
core.v1.PodTemplate26.yaml,True,,
core.v1.ReplicationController.after_roundtrip4.yaml,True,,
core.v1.ReplicationController.after_roundtrip7.yaml,True,,
core.v1.ReplicationController13.yaml,True,,
core.v1.ReplicationController25.yaml,True,,
coredns11.yaml,True,,
coredns12.yaml,True,,
crdb-operator_4.yaml,True,,
cron_dag_final.yaml,True,,
cronjob-configauditreport-expected.yaml,True,,
cronjob-expected-scan.yaml,True,,
cs-db-br-script-cm.yaml,True,,
csi-hostpath-plugin11_11.yaml,True,,
csi-hostpath-plugin13_11.yaml,True,,
csi-hostpath-plugin14_11.yaml,True,,
csi-hostpath-plugin15_11.yaml,True,,
csi-hostpath-plugin18_11.yaml,True,,
csi-hostpath-plugin19_11.yaml,True,,
csi-hostpath-plugin1_11.yaml,True,,
csi-hostpath-plugin20_11.yaml,True,,
csi-hostpath-plugin21_11.yaml,True,,
csi-hostpath-plugin22_11.yaml,True,,
csi-hostpath-plugin2_11.yaml,True,,
csi-hostpath-plugin3_11.yaml,True,,
csi-hostpath-plugin5_11.yaml,True,,
csi-hostpath-plugin6_11.yaml,True,,
csi-hostpath-plugin7_11.yaml,True,,
csi-hostpath-plugin9_11.yaml,True,,
csi-hostpath-plugin_11.yaml,True,,
csi-node3.yaml,True,,
customizations1.yaml,True,,
customizations12.yaml,True,,
customizations14.yaml,True,,
customizations2.yaml,True,,
customizations3.yaml,True,,
customizations4.yaml,True,,
customizations5.yaml,True,,
customizations6.yaml,True,,
customizations7.yaml,True,,
daemonset-configauditreport-expected.yaml,True,,
daemonset-expected-scan.yaml,True,,
daemonset319.yaml,True,,
daemonset367.yaml,True,,
dapr_sidecar_injector_deployment2.yaml,True,,
dashboard-v1.yaml,True,,
dashboard-v11.yaml,True,,
dashboard-v2.yaml,True,,
dashboard-v21.yaml,True,,
dashboard15.yaml,True,,
dashboards-trace.yaml,True,,
definition4.yaml,True,,
demo_v1alpha1_guestbook.yaml,True,,
deploy-tp-aks.yaml,True,,
deploy-tp-eks.yaml,True,,
deploy-tp-gke.yaml,True,,
deployment-canary1.yaml,True,,
deployment-referencing-non-existent-resources.yaml,True,,
deployment-referencing-non-existent-resources1.yaml,True,,
deployment304.yaml,True,,
deployment3534_1.yaml,True,,
deployment4806.yaml,True,,
deployment6356.yaml,True,,
deployment6374.yaml,True,,
deployment6378.yaml,True,,
deployment849.yaml,True,,
deprecated-secret-tls_1.yaml,True,,
diff-cache.yaml,True,,
diff-cache1.yaml,True,,
dify-mirror-deployment_23.yaml,True,,
disallow-selinux11.yaml,True,,
disallow-selinux3.yaml,True,,
disallow-selinux5.yaml,True,,
disallow-selinux7.yaml,True,,
disallow-selinux9.yaml,True,,
dovecot-conf.yaml,True,,
dovecot-ldap-conf.yaml,True,,
dovecot-sql-conf-ext.yaml,True,,
dovecot-statefulset.yaml,True,,
druid-cluster.yaml,True,,
dummy-k8s-operator.clusterserviceversion.yaml,True,,
e2e-cm.yaml,True,,
email-operator.clusterserviceversion.yaml,True,,
etcd-certs.yaml,True,,
extensions.v1beta1.DaemonSet.after_roundtrip4.yaml,True,,
extensions.v1beta1.DaemonSet.after_roundtrip7.yaml,True,,
extensions.v1beta1.DaemonSet13.yaml,True,,
extensions.v1beta1.DaemonSet25.yaml,True,,
extensions.v1beta1.Deployment.after_roundtrip4.yaml,True,,
extensions.v1beta1.Deployment.after_roundtrip7.yaml,True,,
extensions.v1beta1.Deployment13.yaml,True,,
extensions.v1beta1.Deployment25.yaml,True,,
extensions.v1beta1.ReplicaSet.after_roundtrip4.yaml,True,,
extensions.v1beta1.ReplicaSet.after_roundtrip7.yaml,True,,
extensions.v1beta1.ReplicaSet13.yaml,True,,
extensions.v1beta1.ReplicaSet25.yaml,True,,
fdb-operator_templates_secrets_3.yaml,True,,
flag_output_set_values.golden.yaml,True,,
flagger-v1.yaml,True,,
flagger-v11.yaml,True,,
flow-visibility_templates_configmap_2.yaml,True,,
fluentd-configmap3.yaml,True,,
fluentd-es-configmap1.yaml,True,,
fluentd-es-configmap5.yaml,True,,
gameserver_v1alpha1_dayz.yaml,True,,
generate2.yaml,True,,
generated1_7.yaml,True,,
generated_7.yaml,True,,
git-clone-task.yaml,True,,
git-clone-task1.yaml,True,,
git-clone.yaml,True,,
git-clone1.yaml,True,,
gitea-config1_2.yaml,True,,
gitea-config_2.yaml,True,,
gitea2_3.yaml,True,,
gitea_3.yaml,True,,
github-deploy-key.sops6.yaml,True,,
github-pipeline_1.yaml,True,,
gitlab-pipeline_1.yaml,True,,
gitlab-rails.sops.yaml,True,,
grafana-dashboard-numbers-api-v2.yaml,True,,
grafana-dashboard-numbers-api-v21.yaml,True,,
grafana-dashboard-numbers-api-v22.yaml,True,,
grafana-dashboard-numbers-api-v23.yaml,True,,
grafana-deployment12.yaml,True,,
grafana-deployment13.yaml,True,,
grafana-deployment14.yaml,True,,
grafana-deployment15.yaml,True,,
grafana-deployment16.yaml,True,,
grafana-deployment2.yaml,True,,
grafana-deployment24.yaml,True,,
grafana-deployment28.yaml,True,,
grafana-deployment3.yaml,True,,
grafana-deployment30.yaml,True,,
grafana-deployment32.yaml,True,,
grafana-deployment33.yaml,True,,
grafana-deployment34.yaml,True,,
grafana-deployment35.yaml,True,,
grafana-deployment36.yaml,True,,
grafana-deployment37.yaml,True,,
grafana-deployment4.yaml,True,,
grafana-deployment40.yaml,True,,
grafana-deployment41.yaml,True,,
grafana-deployment42.yaml,True,,
grafana-deployment45_1.yaml,True,,
grafana-deployment5.yaml,True,,
grafana-deployment51.yaml,True,,
grafana-deployment55.yaml,True,,
grafana-deployment56.yaml,True,,
grafana-deployment57.yaml,True,,
grafana-deployment6.yaml,True,,
grafana-deployment60.yaml,True,,
grafana-deployment67.yaml,True,,
grafana-deployment70.yaml,True,,
grafana-deployment72.yaml,True,,
grafana-deployment73.yaml,True,,
grafana-deployment74.yaml,True,,
grafana-deployment75.yaml,True,,
grafana-deployment78_3.yaml,True,,
grafana-deployment80.yaml,True,,
grafana-deployment81.yaml,True,,
grafana-deployment86.yaml,True,,
grafana-deployment88.yaml,True,,
grafana126.yaml,True,,
graphite1_1.yaml,True,,
graphite_1.yaml,True,,
gvm-2204-basic_2.yaml,True,,
gvm-2204-basic_21.yaml,True,,
gvm-2204-remote-scanner-kilo_2.yaml,True,,
gvm-2204-remote-scanner-kilo_22.yaml,True,,
gvm-2204-remote-scanner-kilo_3.yaml,True,,
happy-compute-ingress1.yaml,True,,
harvester-rke2-clusterctl-mgmt001_12.yaml,True,,
harvester-rke2-clusterctl-mgmt001_13.yaml,True,,
harvester-rke2-clusterctl_12.yaml,True,,
harvester-rke2-clusterctl_13.yaml,True,,
helm-release103.yaml,True,,
helm-release104.yaml,True,,
helm-release110.yaml,True,,
helm-release134.yaml,True,,
helm-release135.yaml,True,,
helm58.yaml,True,,
helmrelease1035.yaml,True,,
helmrelease1046.yaml,True,,
helmrelease1063.yaml,True,,
helmrelease1079.yaml,True,,
helmrelease1195.yaml,True,,
helmrelease1207.yaml,True,,
helmrelease1219.yaml,True,,
helmrelease1268.yaml,True,,
helmrelease1275.yaml,True,,
helmrelease1294.yaml,True,,
helmrelease1334.yaml,True,,
helmrelease1399.yaml,True,,
helmrelease1437.yaml,True,,
helmrelease1440.yaml,True,,
helmrelease1446.yaml,True,,
helmrelease1466.yaml,True,,
helmrelease1472.yaml,True,,
helmrelease1491.yaml,True,,
helmrelease1529.yaml,True,,
helmrelease1542.yaml,True,,
helmrelease1574.yaml,True,,
helmrelease1577.yaml,True,,
helmrelease1610.yaml,True,,
helmrelease1615.yaml,True,,
helmrelease1669.yaml,True,,
helmrelease1720.yaml,True,,
helmrelease1729.yaml,True,,
helmrelease1755.yaml,True,,
helmrelease181.yaml,True,,
helmrelease20.yaml,True,,
helmrelease224.yaml,True,,
helmrelease233.yaml,True,,
helmrelease237.yaml,True,,
helmrelease247.yaml,True,,
helmrelease286.yaml,True,,
helmrelease294.yaml,True,,
helmrelease30.yaml,True,,
helmrelease34.yaml,True,,
helmrelease384.yaml,True,,
helmrelease44.yaml,True,,
helmrelease499.yaml,True,,
helmrelease510.yaml,True,,
helmrelease541.yaml,True,,
helmrelease570.yaml,True,,
helmrelease607.yaml,True,,
helmrelease757.yaml,True,,
helmrelease777.yaml,True,,
helmrelease83.yaml,True,,
helmrelease833.yaml,True,,
helmrelease855.yaml,True,,
helmrelease91.yaml,True,,
helmrelease924.yaml,True,,
helmrelease927.yaml,True,,
helmrelease941.yaml,True,,
helmrelease979.yaml,True,,
hivems-hive-metastore-stateful.yaml,True,,
hivems-postgresql-stateful.yaml,True,,
httpd-cm.yaml,True,,
httpd-configmap.yaml,True,,
httpd-configmap1.yaml,True,,
hwameistor_templates_local-storage_11.yaml,True,,
hydra_deployment.yaml,True,,
hydra_deployment1.yaml,True,,
ibm_cp4a_cr_production_workflow.yaml,True,,
infrastructure-labels-annotations_2.yaml,True,,
ingress-gateway6.yaml,True,,
ingress-nginx-controller5.yaml,True,,
ingress1753.yaml,True,,
ingressgateway_k8s_settings.golden.yaml,True,,
ingressgateway_k8s_settings.golden_1.yaml,True,,
init10.yaml,True,,
init12.yaml,True,,
init13.yaml,True,,
init14.yaml,True,,
init15.yaml,True,,
init16.yaml,True,,
init17.yaml,True,,
init18.yaml,True,,
init8.yaml,True,,
init9.yaml,True,,
install122_40.yaml,True,,
install122_44.yaml,True,,
install122_45.yaml,True,,
install122_46.yaml,True,,
install127_43.yaml,True,,
install127_47.yaml,True,,
install127_48.yaml,True,,
install127_49.yaml,True,,
install128_43.yaml,True,,
install128_47.yaml,True,,
install128_48.yaml,True,,
install128_49.yaml,True,,
install131_45.yaml,True,,
install131_49.yaml,True,,
install131_50.yaml,True,,
install131_51.yaml,True,,
install133_43.yaml,True,,
install133_47.yaml,True,,
install133_48.yaml,True,,
install133_49.yaml,True,,
install138_43.yaml,True,,
install138_47.yaml,True,,
install138_48.yaml,True,,
install138_49.yaml,True,,
install13_41.yaml,True,,
install13_45.yaml,True,,
install13_46.yaml,True,,
install13_47.yaml,True,,
install145_45.yaml,True,,
install145_49.yaml,True,,
install145_50.yaml,True,,
install145_51.yaml,True,,
install14_41.yaml,True,,
install14_45.yaml,True,,
install14_46.yaml,True,,
install14_47.yaml,True,,
install17_33.yaml,True,,
install17_36.yaml,True,,
install17_37.yaml,True,,
install17_38.yaml,True,,
install1_33.yaml,True,,
install1_36.yaml,True,,
install1_37.yaml,True,,
install1_38.yaml,True,,
install29_41.yaml,True,,
install29_45.yaml,True,,
install29_46.yaml,True,,
install29_47.yaml,True,,
install30_41.yaml,True,,
install30_45.yaml,True,,
install30_46.yaml,True,,
install30_47.yaml,True,,
install33_41.yaml,True,,
install33_45.yaml,True,,
install33_46.yaml,True,,
install33_47.yaml,True,,
install34_41.yaml,True,,
install34_45.yaml,True,,
install34_46.yaml,True,,
install34_47.yaml,True,,
install36_41.yaml,True,,
install36_45.yaml,True,,
install36_46.yaml,True,,
install36_47.yaml,True,,
install37_41.yaml,True,,
install37_45.yaml,True,,
install37_46.yaml,True,,
install37_47.yaml,True,,
install39_41.yaml,True,,
install39_45.yaml,True,,
install39_46.yaml,True,,
install39_47.yaml,True,,
install51_41.yaml,True,,
install51_45.yaml,True,,
install51_46.yaml,True,,
install51_47.yaml,True,,
install53_45.yaml,True,,
install53_49.yaml,True,,
install53_50.yaml,True,,
install53_51.yaml,True,,
integration-grafana-logs.yaml,True,,
invalid_cluster_certificate_both.yaml,True,,
invalid_cluster_proxyurl.yaml,True,,
invalid_cluster_proxyurl_scheme.yaml,True,,
invalid_cluster_server.yaml,True,,
invalid_clusters_duplicate.yaml,True,,
invalid_clusters_name.yaml,True,,
invalid_context_cluster.yaml,True,,
invalid_context_cluster_missing.yaml,True,,
invalid_context_namespace_format.yaml,True,,
invalid_context_namespace_length.yaml,True,,
invalid_context_user.yaml,True,,
invalid_context_user_missing.yaml,True,,
invalid_contexts_context.yaml,True,,
invalid_contexts_duplicate.yaml,True,,
invalid_contexts_name.yaml,True,,
invalid_contexts_required.yaml,True,,
invalid_current_context.yaml,True,,
invalid_user_certificate_both.yaml,True,,
invalid_user_clientkey_both.yaml,True,,
invalid_user_impersonating.yaml,True,,
invalid_users_duplicate.yaml,True,,
invalid_users_name.yaml,True,,
invidious-postgresql-init-configmap.yaml,True,,
job-configauditreport-expected.yaml,True,,
job-expected-scan.yaml,True,,
jwtchecker.yaml,True,,
k8s-dev.sealedsecret.yaml,True,,
k8s-metrics_15.yaml,True,,
k8s-monitoring.yaml,True,,
k8s.rules1.yaml,True,,
k8s.rules5.yaml,True,,
k8ssandra1_29.yaml,True,,
k8ssandra_29.yaml,True,,
kafka-persistent1_4.yaml,True,,
kafka17_1.yaml,True,,
kiada-ssl.kiada-test2-namespace1_2.yaml,True,,
kiada-ssl.kiada-test2-namespace_2.yaml,True,,
kiada-ssl1_2.yaml,True,,
kiada-ssl_2.yaml,True,,
kiada-stable-and-canary1_5.yaml,True,,
kiada-stable-and-canary_5.yaml,True,,
knative_serving_0.18.0_21.yaml,True,,
knative_serving_0.18.0_22.yaml,True,,
kong-conf4.yaml,True,,
kratos_deployment.yaml,True,,
kratos_deployment1.yaml,True,,
kraven-org-production-tls.sops.yaml,True,,
kraven-org-staging-tls.sops.yaml,True,,
kserve1_9.yaml,True,,
kube-apiserver-availability.rules1.yaml,True,,
kube-apiserver-availability.rules5.yaml,True,,
kube-apiserver-burnrate.rules1.yaml,True,,
kube-apiserver-burnrate.rules5.yaml,True,,
kube-apiserver-minikube.yaml,True,,
kube-fieldforge.clusterserviceversion.yaml,True,,
kube-gateway-ambient-redirect_2.yaml,True,,
kube-prometheus-helm.yaml,True,,
kube_apiserver_service_monitor.yaml,True,,
kubeconfig-unit.yaml,True,,
kubeconfig26.yaml,True,,
kubeconfig27.yaml,True,,
kubeconfig28.yaml,True,,
kubeconfig4.yaml,True,,
kubeconfig8.yaml,True,,
kubeless-v1.0.71_6.yaml,True,,
kubeless-v1.0.72_6.yaml,True,,
kubeless-v1.0.73_6.yaml,True,,
kubeless-v1.0.7_6.yaml,True,,
kubeless-v1.0.8.yaml,True,,
kubelet-servicemonitor.yaml,True,,
kubelet.servicemonitor.yaml,True,,
kubelet.servicemonitor1.yaml,True,,
kubelet.servicemonitor10.yaml,True,,
kubelet.servicemonitor11.yaml,True,,
kubelet.servicemonitor2.yaml,True,,
kubelet.servicemonitor3.yaml,True,,
kubelet.servicemonitor4.yaml,True,,
kubelet.servicemonitor5.yaml,True,,
kubelet.servicemonitor6.yaml,True,,
kubelet.servicemonitor7.yaml,True,,
kubelet.servicemonitor8.yaml,True,,
kubelet.servicemonitor9.yaml,True,,
kubernetes-manifest.yaml,True,,
kubernetes-serviceMonitorApiserver.yaml,True,,
kubernetes-serviceMonitorApiserver1.yaml,True,,
kubernetes-serviceMonitorApiserver2.yaml,True,,
kubernetes-serviceMonitorApiserver3.yaml,True,,
kubernetes-serviceMonitorApiserver4.yaml,True,,
kubernetes-serviceMonitorApiserver5.yaml,True,,
kubernetes-serviceMonitorKubeControllerManager.yaml,True,,
kubernetes-serviceMonitorKubeControllerManager1.yaml,True,,
kubernetes-serviceMonitorKubeControllerManager2.yaml,True,,
kubernetes-serviceMonitorKubeControllerManager3.yaml,True,,
kubernetes-serviceMonitorKubeControllerManager4.yaml,True,,
kubernetes-serviceMonitorKubeControllerManager5.yaml,True,,
kubernetes-serviceMonitorKubelet.yaml,True,,
kubernetes-serviceMonitorKubelet1.yaml,True,,
kubernetes-serviceMonitorKubelet2.yaml,True,,
kubernetes-serviceMonitorKubelet3.yaml,True,,
kubernetes-serviceMonitorKubelet4.yaml,True,,
kubernetes-serviceMonitorKubelet5.yaml,True,,
kubernetes30.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver1.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver10.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver11.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver12.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver13.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver2.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver3.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver4.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver5.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver6.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver7.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver8.yaml,True,,
kubernetesControlPlane-serviceMonitorApiserver9.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager1.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager10.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager11.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager12.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager13.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager2.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager3.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager4.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager5.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager6.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager7.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager8.yaml,True,,
kubernetesControlPlane-serviceMonitorKubeControllerManager9.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet1.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet10.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet11.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet12.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet13.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet2.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet3.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet4.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet5.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet6.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet7.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet8.yaml,True,,
kubernetesControlPlane-serviceMonitorKubelet9.yaml,True,,
kubevirt-operator-v1.3.1_7.yaml,True,,
kubevirt-operator1_7.yaml,True,,
kubevirt-operator2_7.yaml,True,,
kubevirt-operator3_7.yaml,True,,
kubevirt-operator4_7.yaml,True,,
kubevirt-operator5_7.yaml,True,,
kubevirt-operator6_7.yaml,True,,
kubevirt-operator8_7.yaml,True,,
kubevirt-operator_7.yaml,True,,
kubewell-ingress-operator.clusterserviceversion.yaml,True,,
kustomization1009.yaml,True,,
kustomization1447.yaml,True,,
kustomization2068.yaml,True,,
kustomization2641.yaml,True,,
kustomization2668.yaml,True,,
kustomization2679.yaml,True,,
kustomization2702.yaml,True,,
kustomization3707.yaml,True,,
kustomization389.yaml,True,,
kustomization4004.yaml,True,,
kustomization4251.yaml,True,,
kustomization4917.yaml,True,,
kustomization5713.yaml,True,,
kustomization6162.yaml,True,,
kustomization6843.yaml,True,,
kustomization9222.yaml,True,,
kustomization9533.yaml,True,,
kustomization9992.yaml,True,,
kyverno-generate-role1.yaml,True,,
lgtm1_29.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
linkerd-edge-20.10.11_54.yaml,True,,
linkerd-edge-20.10.11_59.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.11_62.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.11_66.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.11_71.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.11_73.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.11_77.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.11_80.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.11_88.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.11_96.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.1_54.yaml,True,,
linkerd-edge-20.10.1_59.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.1_62.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.1_66.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.1_71.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.1_73.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.1_77.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.1_80.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.1_88.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
linkerd-edge-20.10.1_96.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
ll_3.yaml,True,,
loadtest_template_basic_all_languages.yaml,True,,
loadtest_template_prebuilt_all_languages.yaml,True,,
loadtest_template_psm_proxied_basic_all_languages.yaml,True,,
loadtest_template_psm_proxied_prebuilt_all_languages.yaml,True,,
loadtest_template_psm_proxyless_basic_all_languages.yaml,True,,
loadtest_template_psm_proxyless_prebuilt_all_languages.yaml,True,,
local-lan-vernal-dev-tls.sealedsecret.yaml,True,,
local-storage7.yaml,False,drop-net-raw-capability; host-pid; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's process namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
mainnet.expect_5.yaml,False,no-read-only-root-fs; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.
mainnet2.expect_6.yaml,False,no-read-only-root-fs; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.
mainnet2.expect_7.yaml,False,liveness-port; no-anti-affinity; no-read-only-root-fs; readiness-port; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Check which ports you've exposed and ensure they match what you have specified in the startup probe.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
manifest221_1.yaml,True,,
manifest222_10.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-ipc; host-network; latest-tag; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's IPC namespace is not shared.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match."
manifest367_62.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account."
manifest367_63.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account."
manifest367_64.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account."
manifest367_65.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account."
manifest367_67.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account."
manifest385_10.yaml,True,,
manifest402_9.yaml,False,no-read-only-root-fs; non-existent-service-account; run-as-non-root,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
manifest96_1.yaml,True,,
manifest97_10.yaml,False,deprecated-service-account-field; drop-net-raw-capability; host-ipc; host-network; latest-tag; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's IPC namespace is not shared.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.; Use the serviceAccountName field instead. If you must specify serviceAccount, ensure values for serviceAccount and serviceAccountName match."
manifests18_22.yaml,True,,
manifests18_57.yaml,True,,
manifests68.yaml,True,,
manual-sa_2.yaml,False,non-existent-service-account; unsafe-sysctls; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Ensure container does not allow unsafe allocation of system resources by removing unsafe sysctls configurations. For more details see https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ https://docs.docker.com/engine/reference/commandline/run/#configure-namespaced-kernel-parameters-sysctls-at-runtime.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
mariadb-operator_16.yaml,True,,
mariadb_node1-configmap.yaml,True,,
mariadb_node2-configmap.yaml,True,,
mariadb_node3-configmap.yaml,True,,
matrix-hookshot.yaml,True,,
memcached-operator.clusterserviceversion.yaml,True,,
merge-probers.yaml,False,drop-net-raw-capability; latest-tag; liveness-port; no-anti-affinity; no-read-only-root-fs; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details.; Use a container image with a specific tag other than latest."
metrics310_1.yaml,True,,
metrics31_1.yaml,True,,
metrics3_1.yaml,True,,
meu-rabbit-mq_8.yaml,False,non-existent-service-account,"Create the missing service account, or refer to an existing service account."
mlquickstarts.yaml,True,,
mlquickstarts1.yaml,True,,
mlquickstarts10.yaml,True,,
mlquickstarts11.yaml,True,,
mlquickstarts12.yaml,True,,
mlquickstarts13.yaml,True,,
mlquickstarts14.yaml,True,,
mlquickstarts2.yaml,True,,
mlquickstarts3.yaml,True,,
mlquickstarts4.yaml,True,,
mlquickstarts5.yaml,True,,
mlquickstarts6.yaml,True,,
mlquickstarts7.yaml,True,,
mlquickstarts8.yaml,True,,
mlquickstarts9.yaml,True,,
mongo-exported.yaml,False,no-anti-affinity; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
mongo-exported1.yaml,False,no-anti-affinity; no-read-only-root-fs; non-existent-service-account; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
multi-container-pod16.yaml,False,latest-tag; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.
my-tls-secret.yaml,True,,
mysql-ha-read-write-separation_3.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
mysql-statefulset11.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
mysql-statefulset13.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
mysql-statefulset2.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
mysql-statefulset3.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
mysql-statefulset4.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
mysql-statefulset5.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
mysql-statefulset6.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
mysql-statefulset7.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
mysql-statefulset9.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
mysql1_2.yaml,True,,
mysql20.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
mysql6_2.yaml,True,,
namespace-install1_36.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
namespace-install1_40.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
namespace-install1_41.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
namespace-install1_42.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
namespace-install4_34.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest."
namespace-install4_38.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest."
namespace-install4_39.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest."
namespace-install4_40.yaml,False,latest-tag; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Use a container image with a specific tag other than latest."
neko-deployment.yaml,False,no-read-only-root-fs; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
neko-service.yaml,True,,
netbox-deployment.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root,"Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
netbox-deployment1.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root,"Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
netbox-startup-configmap.yaml,True,,
netbox-startup-configmap1.yaml,True,,
networking.amazon-vpc-routed-eni-k8s-1.161_6.yaml,False,drop-net-raw-capability; host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
networking.amazon-vpc-routed-eni-k8s-1.16_6.yaml,False,drop-net-raw-capability; host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
newrelic-agent-operator.clusterserviceversion.yaml,True,,
nextcloud-cm-subdir.yaml,True,,
nextcloud-cm-subdir1.yaml,True,,
nextcloud1.yaml,True,,
nextcloud1_4.yaml,False,no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.
nextcloud4.yaml,True,,
nextcloud4_4.yaml,False,no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.
nginx-config49.yaml,True,,
nginx-deployment31.yaml,True,,
nginx-deployment9.yaml,True,,
node-pod.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
node10.yaml,True,,
node100.yaml,True,,
node101.yaml,True,,
node102.yaml,True,,
node104.yaml,True,,
node105.yaml,True,,
node106.yaml,True,,
node107.yaml,True,,
node108.yaml,True,,
node111.yaml,True,,
node112.yaml,True,,
node114.yaml,True,,
node115.yaml,True,,
node116.yaml,True,,
node13.yaml,True,,
node19.yaml,True,,
node20.yaml,True,,
node22.yaml,True,,
node23.yaml,True,,
node25.yaml,True,,
node26.yaml,True,,
node28.yaml,True,,
node29.yaml,True,,
node3.yaml,True,,
node32.yaml,True,,
node33.yaml,True,,
node34.yaml,True,,
node35.yaml,True,,
node37.yaml,True,,
node38.yaml,True,,
node4.yaml,True,,
node40.yaml,True,,
node41.yaml,True,,
node42.yaml,True,,
node43.yaml,True,,
node44.yaml,True,,
node45.yaml,True,,
node46.yaml,True,,
node49.yaml,True,,
node51.yaml,True,,
node53.yaml,True,,
node54.yaml,True,,
node56.yaml,True,,
node57.yaml,True,,
node6.yaml,True,,
node75.yaml,True,,
node77.yaml,True,,
node78.yaml,True,,
node80.yaml,True,,
node81.yaml,True,,
node82.yaml,True,,
node83.yaml,True,,
node84.yaml,True,,
node86.yaml,True,,
node87.yaml,True,,
node88.yaml,True,,
node89.yaml,True,,
node9.yaml,True,,
node90.yaml,True,,
node91.yaml,True,,
node92.yaml,True,,
node93.yaml,True,,
node94.yaml,True,,
node95.yaml,True,,
node97.yaml,True,,
node98.yaml,True,,
node99.yaml,True,,
node_v1alpha1_relay_2.yaml,True,,
nss-managed-bedrock-core-role.yaml,True,,
nssf-configmap1.yaml,True,,
oidc-apps-controller-registration.yaml,True,,
oidc-apps-controller-registration1.yaml,True,,
ollama-pod.yaml,False,latest-tag; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.
open_3.yaml,True,,
opentelemetrycollector.yaml,True,,
opentelemetrycollector2.yaml,True,,
operator.clusterserviceversion.yaml,True,,
oracle-database-operator_14.yaml,True,,
otel3_3.yaml,True,,
outline-sealedsecret.yaml,True,,
paperless-secret.yaml,True,,
patch-globalrole-workspace-manager.yaml,True,,
peer0-org1.yaml,True,,
peer0-org2.yaml,True,,
persistentvolumesusage17.yaml,True,,
pod-configauditreport-expected.yaml,True,,
pod-expected-scan.yaml,False,mismatching-selector; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.
pod-total17.yaml,True,,
pod873.yaml,False,drop-net-raw-capability; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline1.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline11.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline12.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline13.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline14.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline15.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline2.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline3.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline4.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline5.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline6.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline7.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline8.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_baseline9.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_initContainerStatuses.yaml,False,host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
pod_restricted.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted1.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted11.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted12.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted13.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted14.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted15.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted2.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted3.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted4.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted5.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted6.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted7.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted8.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pod_restricted9.yaml,False,liveness-port; no-read-only-root-fs; non-existent-service-account; readiness-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
pods-with-expired-certificates.yaml,True,,
pods-with-expired-certificates1.yaml,True,,
pods-with-outdated-secret-data.yaml,True,,
pods-with-outdated-secret-data1.yaml,True,,
policies4_4.yaml,True,,
policies4_5.yaml,True,,
policies4_6.yaml,True,,
policies4_7.yaml,True,,
policies4_8.yaml,True,,
policy10.yaml,True,,
policy6.yaml,True,,
policy7.yaml,True,,
policy8.yaml,True,,
policy9.yaml,True,,
postfix-mastercf.yaml,True,,
postgres-conf.yaml,True,,
postgres_configmap.yaml,True,,
postgres_statefulset.yaml,False,no-read-only-root-fs; run-as-non-root,Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.
pp-o11y-full1.yaml,True,,
private-chain.expect_14.yaml,False,no-anti-affinity; no-read-only-root-fs; readiness-port; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
private-chain.expect_3.yaml,True,,
profile-demo88.yaml,True,,
profile-demo89.yaml,True,,
project-tenant.yaml,True,,
project-tenant1.yaml,True,,
project-tenant2.yaml,True,,
prom-configmap.yaml,True,,
prometheus-config-map.yaml,True,,
prometheus-configmap4.yaml,True,,
prometheus-configmap5.yaml,True,,
prometheus-deployment18_2.yaml,True,,
prometheus-grafana.yaml,True,,
prometheus113_1.yaml,True,,
prometheus124_1.yaml,True,,
prometheus128_6.yaml,True,,
prometheus135_1.yaml,True,,
prometheus144_1.yaml,True,,
prometheus162_1.yaml,True,,
prometheus203_1.yaml,True,,
prometheus205_3.yaml,True,,
prometheus206_1.yaml,True,,
prometheus211_1.yaml,True,,
prometheus213_1.yaml,True,,
prometheus215_1.yaml,True,,
prometheus216_1.yaml,True,,
prometheus225_1.yaml,True,,
prometheus226.yaml,True,,
prometheus231_1.yaml,True,,
prometheus266_1.yaml,True,,
prometheus270_1.yaml,True,,
prometheus272_1.yaml,True,,
prometheus280_1.yaml,True,,
prometheus290_1.yaml,True,,
prometheus293_1.yaml,True,,
prometheus297_1.yaml,True,,
prometheus310_1.yaml,True,,
prometheus35_1.yaml,True,,
prometheus37_6.yaml,True,,
prometheus5_1.yaml,True,,
prometheus61.yaml,True,,
prometheus66_1.yaml,True,,
prometheus79_1.yaml,True,,
prometheus7_6.yaml,True,,
prometheus_component-render_manifest.golden_19.yaml,True,,
prometheus_config.yaml,True,,
prometheus_vm1_1.yaml,True,,
prometheus_vm2_1.yaml,True,,
prometheus_vm3_1.yaml,True,,
prometheus_vm4_1.yaml,True,,
prometheus_vm5_1.yaml,True,,
prometheus_vm_1.yaml,True,,
prometheus_vm_tls1_1.yaml,True,,
prometheus_vm_tls2_1.yaml,True,,
prometheus_vm_tls3_1.yaml,True,,
prometheus_vm_tls4_1.yaml,True,,
prometheus_vm_tls5_1.yaml,True,,
prometheus_vm_tls_1.yaml,True,,
promethues2_2.yaml,True,,
promethues4_2.yaml,True,,
promethues_2.yaml,True,,
pull-request-comment.yaml,True,,
pull-request-comment1.yaml,True,,
pull-request-comment2.yaml,True,,
pull-request-comment3.yaml,True,,
pull-secret1.yaml,True,,
quality-definition-resizings.yaml,False,no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.
quay2.yaml,False,latest-tag; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.
rbac132_1.yaml,True,,
reactsealedsecret.yaml,True,,
redis-cluster2_1.yaml,False,latest-tag; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest.
release180_39.yaml,True,,
release302.yaml,True,,
release307.yaml,True,,
release428.yaml,True,,
rendered_11.yaml,True,,
rendered_12.yaml,True,,
rendered_15.yaml,True,,
replicaset-configauditreport-expected.yaml,True,,
replicaset-expected-scan.yaml,False,mismatching-selector; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.
replicationcontroller-configauditreport-expected.yaml,True,,
replicationcontroller-expected-scan.yaml,False,mismatching-selector; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.
resource792_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
resource792_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
resource792_50.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
resource792_51.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
resource793_45.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
resource793_49.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
resource793_50.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
resource793_51.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
reverse-proxy-certificate.yaml,True,,
role-tenant.yaml,True,,
role-tenant1.yaml,True,,
role-tenant2.yaml,True,,
role188.yaml,True,,
role898.yaml,True,,
rosa-hcp-deprovision.yaml,True,,
rosa-hcp-deprovision1.yaml,True,,
rosa-hcp-deprovision2.yaml,True,,
rosa-hcp-provision.yaml,True,,
rosa-hcp-provision1.yaml,True,,
rosa-hcp-provision2.yaml,True,,
scope.yaml,False,mismatching-selector; no-extensions-v1beta; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.
scope1.yaml,False,mismatching-selector; no-extensions-v1beta; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Migrate using the apps/v1 API versions for the objects. Refer to https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/ for details.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.
scripts-cm1.yaml,True,,
sealed-secret11.yaml,True,,
sealed-secret13.yaml,True,,
sealed-secret15.yaml,True,,
sealed-secret21.yaml,True,,
sealed-secret24.yaml,True,,
sealed-secret25.yaml,True,,
sealed-secret9.yaml,True,,
sealed-secrets-dev_3.yaml,True,,
sealed-secrets-keypair.yaml,True,,
sealed-secrets-prod_3.yaml,True,,
sealedsecret-tls-crt.yaml,True,,
secret-oauth.sops.yaml,True,,
secret-tls19.yaml,True,,
secret.kiada-tls.yaml,True,,
secret.kiada-tls1.yaml,True,,
secret.kiada-tls10.yaml,True,,
secret.kiada-tls11.yaml,True,,
secret.kiada-tls12.yaml,True,,
secret.kiada-tls13.yaml,True,,
secret.kiada-tls14.yaml,True,,
secret.kiada-tls15.yaml,True,,
secret.kiada-tls2.yaml,True,,
secret.kiada-tls3.yaml,True,,
secret.kiada-tls4.yaml,True,,
secret.kiada-tls5.yaml,True,,
secret.kiada-tls6.yaml,True,,
secret.kiada-tls7.yaml,True,,
secret.kiada-tls8.yaml,True,,
secret.kiada-tls9.yaml,True,,
secret.sops111.yaml,True,,
secret.sops145_1.yaml,True,,
secret.sops155.yaml,True,,
secret1150.yaml,True,,
secret542.yaml,True,,
secret543.yaml,True,,
secrets-configuration.yaml,True,,
secrets-configuration_1.yaml,True,,
secrets-configuration_2.yaml,True,,
secrets-configuration_3.yaml,True,,
secrets379.yaml,True,,
secrets456.yaml,True,,
secure-app1_3.yaml,True,,
secure-ingress-step2_1.yaml,True,,
server-mp-secret.yaml,True,,
server-secret10.yaml,True,,
server-tls-secret.yaml,True,,
server-tls-secret1.yaml,True,,
server_config_map.yaml,True,,
service-ca-deployment_7.yaml,True,,
settings.k8s.io.v1alpha1.PodPreset.after_roundtrip.yaml,True,,
settings.k8s.io.v1alpha1.PodPreset.after_roundtrip1.yaml,True,,
settings.k8s.io.v1alpha1.PodPreset.yaml,True,,
settings.k8s.io.v1alpha1.PodPreset1.yaml,True,,
settings.k8s.io.v1alpha1.PodPreset2.yaml,True,,
settings.k8s.io.v1alpha1.PodPreset3.yaml,True,,
settings.k8s.io.v1alpha1.PodPreset4.yaml,True,,
settings.k8s.io.v1alpha1.PodPreset5.yaml,True,,
settings.k8s.io.v1alpha1.PodPreset6.yaml,True,,
settings.k8s.io.v1alpha1.PodPreset7.yaml,True,,
settings.k8s.io.v1alpha1.PodPreset8.yaml,True,,
sharding.kustomization.yaml,True,,
shrek-cm.yaml,True,,
shrek-cm1.yaml,True,,
sofa-mesh-demo_2.yaml,True,,
sofa-mesh-demo_5.yaml,True,,
sonar1_12.yaml,False,no-read-only-root-fs; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
sonar_12.yaml,False,no-read-only-root-fs; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
stale-secrets-watch.clusterserviceversion.yaml,True,,
state11.yaml,True,,
state12.yaml,True,,
state13.yaml,True,,
state2.yaml,True,,
state21.yaml,True,,
state22.yaml,True,,
state3.yaml,True,,
state31.yaml,True,,
state32.yaml,True,,
state4.yaml,True,,
state41.yaml,True,,
state42.yaml,True,,
statefulset-expected-scan.yaml,False,mismatching-selector; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,Confirm that your deployment selector correctly matches the labels in its pod template.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.
statefulset-my-rabbitmq.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
statefulset-my-rabbitmq1.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
statefulset219.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-memory-requirements,"Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
statefulset378.yaml,False,no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
statefulset379.yaml,False,no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
statefulset380.yaml,False,no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
statefulset381.yaml,False,no-anti-affinity; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; privileged-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
statefulset389.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
statefulset440.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
statefulset449.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
statefulsets5.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
storage.k8s.io.v1.VolumeAttachment.after_roundtrip.yaml,True,,
storage.k8s.io.v1.VolumeAttachment.after_roundtrip1.yaml,True,,
storage.k8s.io.v1.VolumeAttachment.yaml,True,,
storage.k8s.io.v1.VolumeAttachment1.yaml,True,,
storage.k8s.io.v1.VolumeAttachment10.yaml,True,,
storage.k8s.io.v1.VolumeAttachment11.yaml,True,,
storage.k8s.io.v1.VolumeAttachment12.yaml,True,,
storage.k8s.io.v1.VolumeAttachment13.yaml,True,,
storage.k8s.io.v1.VolumeAttachment14.yaml,True,,
storage.k8s.io.v1.VolumeAttachment15.yaml,True,,
storage.k8s.io.v1.VolumeAttachment16.yaml,True,,
storage.k8s.io.v1.VolumeAttachment17.yaml,True,,
storage.k8s.io.v1.VolumeAttachment18.yaml,True,,
storage.k8s.io.v1.VolumeAttachment19.yaml,True,,
storage.k8s.io.v1.VolumeAttachment2.yaml,True,,
storage.k8s.io.v1.VolumeAttachment20.yaml,True,,
storage.k8s.io.v1.VolumeAttachment21.yaml,True,,
storage.k8s.io.v1.VolumeAttachment22.yaml,True,,
storage.k8s.io.v1.VolumeAttachment23.yaml,True,,
storage.k8s.io.v1.VolumeAttachment24.yaml,True,,
storage.k8s.io.v1.VolumeAttachment25.yaml,True,,
storage.k8s.io.v1.VolumeAttachment26.yaml,True,,
storage.k8s.io.v1.VolumeAttachment27.yaml,True,,
storage.k8s.io.v1.VolumeAttachment28.yaml,True,,
storage.k8s.io.v1.VolumeAttachment29.yaml,True,,
storage.k8s.io.v1.VolumeAttachment3.yaml,True,,
storage.k8s.io.v1.VolumeAttachment30.yaml,True,,
storage.k8s.io.v1.VolumeAttachment31.yaml,True,,
storage.k8s.io.v1.VolumeAttachment32.yaml,True,,
storage.k8s.io.v1.VolumeAttachment33.yaml,True,,
storage.k8s.io.v1.VolumeAttachment34.yaml,True,,
storage.k8s.io.v1.VolumeAttachment35.yaml,True,,
storage.k8s.io.v1.VolumeAttachment39.yaml,True,,
storage.k8s.io.v1.VolumeAttachment4.yaml,True,,
storage.k8s.io.v1.VolumeAttachment40.yaml,True,,
storage.k8s.io.v1.VolumeAttachment41.yaml,True,,
storage.k8s.io.v1.VolumeAttachment42.yaml,True,,
storage.k8s.io.v1.VolumeAttachment43.yaml,True,,
storage.k8s.io.v1.VolumeAttachment44.yaml,True,,
storage.k8s.io.v1.VolumeAttachment45.yaml,True,,
storage.k8s.io.v1.VolumeAttachment46.yaml,True,,
storage.k8s.io.v1.VolumeAttachment47.yaml,True,,
storage.k8s.io.v1.VolumeAttachment48.yaml,True,,
storage.k8s.io.v1.VolumeAttachment49.yaml,True,,
storage.k8s.io.v1.VolumeAttachment5.yaml,True,,
storage.k8s.io.v1.VolumeAttachment50.yaml,True,,
storage.k8s.io.v1.VolumeAttachment51.yaml,True,,
storage.k8s.io.v1.VolumeAttachment52.yaml,True,,
storage.k8s.io.v1.VolumeAttachment53.yaml,True,,
storage.k8s.io.v1.VolumeAttachment54.yaml,True,,
storage.k8s.io.v1.VolumeAttachment55.yaml,True,,
storage.k8s.io.v1.VolumeAttachment56.yaml,True,,
storage.k8s.io.v1.VolumeAttachment6.yaml,True,,
storage.k8s.io.v1.VolumeAttachment7.yaml,True,,
storage.k8s.io.v1.VolumeAttachment8.yaml,True,,
storage.k8s.io.v1.VolumeAttachment9.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment.after_roundtrip.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment.after_roundtrip1.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment1.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment10.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment11.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment12.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment13.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment14.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment15.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment16.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment17.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment18.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment19.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment2.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment20.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment21.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment22.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment23.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment24.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment25.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment26.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment27.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment28.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment29.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment3.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment30.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment31.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment32.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment33.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment34.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment35.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment39.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment4.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment40.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment41.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment42.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment43.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment44.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment45.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment46.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment47.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment48.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment49.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment5.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment50.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment51.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment52.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment53.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment54.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment55.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment56.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment6.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment7.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment8.yaml,True,,
storage.k8s.io.v1alpha1.VolumeAttachment9.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment.after_roundtrip.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment.after_roundtrip1.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment1.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment10.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment11.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment12.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment13.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment14.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment15.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment16.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment17.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment18.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment19.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment2.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment20.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment21.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment22.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment23.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment24.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment25.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment26.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment27.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment28.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment29.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment3.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment30.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment31.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment32.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment33.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment34.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment35.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment39.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment4.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment40.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment41.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment42.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment43.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment44.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment45.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment46.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment47.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment48.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment49.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment5.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment50.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment51.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment52.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment53.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment54.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment55.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment56.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment6.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment7.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment8.yaml,True,,
storage.k8s.io.v1beta1.VolumeAttachment9.yaml,True,,
streetlights-api.yaml,True,,
sts-mysql.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
sts-mysql1.yaml,False,no-anti-affinity; no-read-only-root-fs; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Specify anti-affinity in your pod specification to ensure that the orchestrator attempts to schedule replicas on different nodes. Using podAntiAffinity, specify a labelSelector that matches pods for the deployment, and set the topologyKey to kubernetes.io/hostname. Refer to https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for details."
surrealdb-schema.sealed-secret.yaml,True,,
surrealdb-schema.sealed-secret1.yaml,True,,
sv-config.yaml,True,,
tasks32_1.yaml,True,,
tekton-pipelines-controller-deploy.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
tekton1_39.yaml,True,,
tekton2_45.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
template-1_6.yaml,True,,
test-metadata.yaml,True,,
test-metadata2.yaml,True,,
test_clusterrole.yaml,True,,
test_clusterrole1.yaml,True,,
theodolite-benchmark-kstreams.yaml,True,,
tls-secret51.yaml,True,,
tls-secret51_1.yaml,True,,
tls-secret51_2.yaml,True,,
tls-secret51_3.yaml,True,,
tls-wildcard-lan-stamx-nl.yaml,True,,
tls-wildcard-lan-stamx-nl1.yaml,True,,
tls-wildcard-stamx-nl.yaml,True,,
tls-wildcard-stamx-nl1.yaml,True,,
today.apiresourceschemas1_2.yaml,True,,
today.apiresourceschemas_2.yaml,True,,
tour.sealed-secret.helm.yaml,True,,
tour.sealed-secret.helm1.yaml,True,,
tp-base-on-prem-https.yaml,True,,
tp-base-on-prem-https1.yaml,True,,
tp-base-on-prem.yaml,True,,
tp-base-on-prem1.yaml,True,,
traefik17.yaml,False,non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details."
tretboot_1.yaml,True,,
trigger-jenkins-job.yaml,True,,
upgrade-example.yaml,True,,
v0.13.10.metallb-frr1_23.yaml,False,drop-net-raw-capability; env-var-secret; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the startup probe.; Create the missing service account, or refer to an existing service account.; Do not use raw secrets in environment variables. Instead, either mount the secret as a file or use a secretKeyRef. Refer to https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets for details.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
v0.13.10.metallb-frr_23.yaml,False,drop-net-raw-capability; env-var-secret; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the startup probe.; Create the missing service account, or refer to an existing service account.; Do not use raw secrets in environment variables. Instead, either mount the secret as a file or use a secretKeyRef. Refer to https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets for details.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
v0.13.12.metallb-frr1_23.yaml,False,drop-net-raw-capability; env-var-secret; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the startup probe.; Create the missing service account, or refer to an existing service account.; Do not use raw secrets in environment variables. Instead, either mount the secret as a file or use a secretKeyRef. Refer to https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets for details.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
v0.13.12.metallb-frr_23.yaml,False,drop-net-raw-capability; env-var-secret; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the startup probe.; Create the missing service account, or refer to an existing service account.; Do not use raw secrets in environment variables. Instead, either mount the secret as a file or use a secretKeyRef. Refer to https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets for details.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
v0.13.4.metallb-frr_24.yaml,False,drop-net-raw-capability; host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
v0.13.7.metallb-frr_22.yaml,False,drop-net-raw-capability; host-network; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
v0.13.9.metallb-frr_22.yaml,False,drop-net-raw-capability; env-var-secret; host-network; liveness-port; no-read-only-root-fs; non-existent-service-account; privilege-escalation-container; run-as-non-root; startup-port; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the liveness probe.; Check which ports you've exposed and ensure they match what you have specified in the startup probe.; Create the missing service account, or refer to an existing service account.; Do not use raw secrets in environment variables. Instead, either mount the secret as a file or use a secretKeyRef. Refer to https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets for details.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure the host's network namespace is not shared.; NET_RAW makes it so that an application within the container is able to craft raw packets, use raw sockets, and bind to any address. Remove this capability in the containers under containers security contexts.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
valid.yaml,True,,
valid_multi.yaml,True,,
validatingwebhookconfiguration-02.yaml,True,,
vector-config.yaml,True,,
vsphere-csi-driver_11.yaml,True,,
waypoint-no-network-label_2.yaml,False,no-read-only-root-fs; non-existent-service-account; run-as-non-root,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s1.yaml,False,host-network; latest-tag; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest."
weave-daemonset-k8s10.yaml,False,host-network; latest-tag; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest."
weave-daemonset-k8s11.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s12.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s13.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s14.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s15.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s16.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s2.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s3.yaml,False,host-network; latest-tag; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest."
weave-daemonset-k8s4.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s5.yaml,False,host-network; latest-tag; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details.; Use a container image with a specific tag other than latest."
weave-daemonset-k8s6.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s7.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s8.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave-daemonset-k8s9.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
weave.yaml,False,host-network; no-read-only-root-fs; privilege-escalation-container; privileged-container; readiness-port; run-as-non-root; sensitive-host-mounts; unset-cpu-requirements; unset-memory-requirements,"Check which ports you've exposed and ensure they match what you have specified in the readiness probe.; Do not run your container as privileged unless it is required.; Ensure containers do not allow privilege escalation by setting allowPrivilegeEscalation=false, privileged=false and removing CAP_SYS_ADMIN capability. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for more details.; Ensure sensitive host system directories are not mounted in containers by removing those Volumes and VolumeMounts.; Ensure the host's network namespace is not shared.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
webhook-configuration1.yaml,False,no-read-only-root-fs; non-existent-service-account; run-as-non-root,"Create the missing service account, or refer to an existing service account.; Set readOnlyRootFilesystem to true in the container securityContext.; Set runAsUser to a non-zero number and runAsNonRoot to true in your pod or container securityContext. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ for details."
windows-bios-installer-configmaps.yaml,True,,
windows-bios-installer-pipeline.yaml,True,,
windows-efi-installer-configmaps.yaml,True,,
windows-efi-installer-configmaps_1.yaml,True,,
windows-efi-installer-pipeline.yaml,True,,
worker-sts.yaml,False,no-read-only-root-fs; non-existent-service-account; unset-cpu-requirements; unset-memory-requirements,"Create the missing service account, or refer to an existing service account.; Set CPU requests for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set memory limits for your container based on its requirements. Refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for details.; Set readOnlyRootFilesystem to true in the container securityContext."
write_checks_1.yaml,True,,
wso2am-conf.yaml,True,,
xld.clusterserviceversion.yaml,True,,
xlr.clusterserviceversion.yaml,True,,
xrd1.yaml,True,,
your-spotify.yaml,True,,
your-spotify1.yaml,True,,
