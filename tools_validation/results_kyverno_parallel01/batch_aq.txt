##### FILE: all_in_one_deploy_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/kube-state-metrics:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kube-state-metrics
  name: kube-state-metrics
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-state-metrics
  template:
    metadata:
      labels:
        app: kube-state-metrics
    spec:
      containers:
      - image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.7.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        name: kube-state-metrics
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: telemetry
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
      serviceAccountName: kube-state-metrics

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/kube-state-metrics

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/kube-state-metrics
policy drop-all-capabilities -> resource kube-system/Deployment/kube-state-metrics failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Deployment/kube-state-metrics failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/kube-state-metrics failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/Deployment/kube-state-metrics failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource kube-system/Deployment/kube-state-metrics failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Deployment/kube-state-metrics failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: all_in_one_deploy_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/kube-state-metrics:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-state-metrics
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: all_in_one_deploy_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-state-metrics:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kube-state-metrics
  name: kube-state-metrics
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 8080
    targetPort: http
  selector:
    app: kube-state-metrics

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: all_in_one_deploy_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/kube-state-metrics:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-state-metrics
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - nodes
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - persistentvolumes
  - namespaces
  - endpoints
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - replicasets
  - ingresses
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  - daemonsets
  - deployments
  - replicasets
  - cronjobs
  - jobs
  verbs:
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: all_in_one_deploy_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/kube-state-metrics:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-state-metrics
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-state-metrics
subjects:
- kind: ServiceAccount
  name: kube-state-metrics
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpaca-prod-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alpaca-prod:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: alpaca
    env: prod
    ver: "1"
  name: alpaca-prod
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: alpaca
  template:
    metadata:
      labels:
        app: alpaca
        env: prod
        ver: "1"
    spec:
      containers:
      - image: gcr.io/kuar-demo/kuard-amd64:blue
        name: kuard

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpaca-prod

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpaca-prod
policy disallow-default-namespace -> resource default/Deployment/alpaca-prod failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/alpaca-prod failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alpaca-prod failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alpaca-prod failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alpaca-prod failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/alpaca-prod failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/alpaca-prod failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alpaca-prod failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: alpaca-prod-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alpaca-prod:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: alpaca
    env: prod
    ver: "1"
  name: alpaca-prod
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: alpaca
  template:
    metadata:
      labels:
        app: alpaca
        env: prod
        ver: "1"
    spec:
      containers:
      - image: gcr.io/kuar-demo/kuard-amd64:blue
        name: kuard
        ports:
        - containerPort: 8080
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 0
          periodSeconds: 2
          successThreshold: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpaca-prod

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpaca-prod
policy disallow-default-namespace -> resource default/Deployment/alpaca-prod failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/alpaca-prod failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alpaca-prod failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alpaca-prod failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alpaca-prod failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/alpaca-prod failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alpaca-prod failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpaca-test-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alpaca-test:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: alpaca
    env: test
    ver: "2"
  name: alpaca-test
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alpaca
  template:
    metadata:
      labels:
        app: alpaca
        env: test
        ver: "2"
    spec:
      containers:
      - image: gcr.io/kuar-demo/kuard-amd64:green
        name: kuard

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpaca-test

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpaca-test
policy disallow-default-namespace -> resource default/Deployment/alpaca-test failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/alpaca-test failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alpaca-test failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alpaca-test failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alpaca-test failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/alpaca-test failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/alpaca-test failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alpaca-test failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: alpha.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/alpha:
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: alpha
  namespace: default
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/scale-to-zero-pod-retention-period: 0s
        autoscaling.knative.dev/target: "10"
        autoscaling.knative.dev/target-burst-capacity: "-1"
        autoscaling.knative.dev/window: 12s
    spec:
      containers:
      - env:
        - name: TARGET
          value: alpha
        image: docker.io/bonavadeur/shuka:v1.3
        resources:
          limits:
            cpu: 500m
            memory: 640M

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alpha-example:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpha-example
  namespace: default
spec:
  replicas: 7
  selector:
    matchLabels:
      app: alpha-example
  template:
    metadata:
      labels:
        app: alpha-example
    spec:
      containers:
      - image: registry.k8s.io/pause:3.1
        name: pause
        resources:
          limits:
            cpu: 50m
            memory: 64Mi
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: alpha-example
        maxSkew: 1
        topologyKey: alpha
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpha-example

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpha-example
policy disallow-default-namespace -> resource default/Deployment/alpha-example failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/alpha-example failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alpha-example failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alpha-example failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alpha-example failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/alpha-example failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/alpha-example failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alpha-example failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: alpha-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alpha-example:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpha-example
  namespace: default
spec:
  replicas: 7
  selector:
    matchLabels:
      app: alpha-example
  template:
    metadata:
      labels:
        app: alpha-example
    spec:
      containers:
      - image: registry.k8s.io/pause:3.1
        name: pause
        resources:
          limits:
            cpu: 50m
            memory: 64Mi
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: alpha-example
        maxSkew: 1
        topologyKey: alpha
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpha-example

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpha-example
policy disallow-default-namespace -> resource default/Deployment/alpha-example failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/alpha-example failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alpha-example failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alpha-example failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alpha-example failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/alpha-example failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/alpha-example failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alpha-example failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-13_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-13_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-131.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-131_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-131_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-131_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-1310.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-1310_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-1310_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-1310_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-1311.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-1311_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-1311_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-1311_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-1312.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-1312_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-1312_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-1312_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-132.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-132_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-132_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-132_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-133.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-133_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-133_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-133_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-134.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-134_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-134_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-134_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-135.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-135_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-135_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-135_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-136.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-136_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-136_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-136_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-137.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-137_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-137_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-137_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-138.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-138_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-138_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-138_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-139.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: Namespace
metadata:
  name: alpha-ns-apd
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: alpha-ns-apd
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/alpha-ns-apd:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: alpha-ns-apd
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: alpha-ns-apd
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/alpha-ns-apd:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: alpha-ns-apd
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-139_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/ruby-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zxc: alpha1
  name: ruby-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v1
        name: ruby-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/ruby-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/ruby-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpha-ns-apd-139_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Service/alpha-apd-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alpha-apd-service
  name: alpha-apd-service
  namespace: alpha-ns-apd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    alpha: v1
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource alpha-ns-apd/Service/alpha-apd-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: alpha-ns-apd-139_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alpha-ns-apd/Deployment/cube-alpha-apd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mark-zyx: alpha2
  name: cube-alpha-apd
  namespace: alpha-ns-apd
spec:
  replicas: 5
  selector:
    matchLabels:
      alpha: v1
  template:
    metadata:
      labels:
        alpha: v1
    spec:
      containers:
      - image: kodekloud/webapp-color:v2
        name: cube-alpha-apd

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd

skipped mutate policy add-safe-to-evict -> resource alpha-ns-apd/Deployment/cube-alpha-apd
policy drop-all-capabilities -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource alpha-ns-apd/Deployment/cube-alpha-apd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: alpine.statefulset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/alpine:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: alpine
  name: alpine
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alpine
  template:
    metadata:
      labels:
        app: alpine
    spec:
      containers:
      - command:
        - sh
        - -c
        - sleep 1d
        image: public.ecr.aws/docker/library/alpine:latest
        name: alpine
        volumeMounts:
        - mountPath: /data
          name: data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: gp2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/alpine

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/alpine
policy disallow-default-namespace -> resource default/StatefulSet/alpine failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/StatefulSet/alpine failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/StatefulSet/alpine failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/alpine failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/alpine failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/alpine failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/StatefulSet/alpine failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/alpine failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/alpine failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: alpine.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/alpine:
apiVersion: v1
kind: Pod
metadata:
  name: alpine
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - 1d
    image: alpine
    name: alpine

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/alpine

skipped mutate policy add-safe-to-evict -> resource default/Pod/alpine
policy disallow-default-namespace -> resource default/Pod/alpine failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/alpine failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/alpine failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/alpine failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/alpine failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/alpine failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/alpine failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/alpine failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/alpine failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: alpine1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/alpine:
apiVersion: v1
kind: Pod
metadata:
  name: alpine
  namespace: default
spec:
  containers:
  - args:
    - sleep
    - infinity
    image: alpine:latest
    name: alpine

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/alpine

skipped mutate policy add-safe-to-evict -> resource default/Pod/alpine
policy disallow-default-namespace -> resource default/Pod/alpine failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/alpine failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/alpine failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/alpine failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/alpine failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/alpine failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/alpine failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/alpine failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/alpine failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: alpine2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/alpine:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: alpine
  name: alpine
  namespace: default
spec:
  containers:
  - image: alpine
    name: alpine
    stdin: true
    tty: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/alpine

skipped mutate policy add-safe-to-evict -> resource default/Pod/alpine
policy disallow-default-namespace -> resource default/Pod/alpine failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/alpine failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/alpine failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/alpine failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/alpine failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/alpine failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/alpine failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/alpine failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/alpine failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: alpine3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/alpine-pod:
apiVersion: v1
kind: Pod
metadata:
  name: alpine-pod
  namespace: default
spec:
  containers:
  - args:
    - sleep
    - 1d
    image: alpine:3.21
    name: alpine-c

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/alpine-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/alpine-pod
policy disallow-default-namespace -> resource default/Pod/alpine-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/alpine-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/alpine-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/alpine-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/alpine-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/alpine-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/alpine-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/alpine-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: alpine4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alpine-echo-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpine-echo-server
  namespace: default
spec:
  selector:
    matchLabels:
      app: echo
  template:
    metadata:
      labels:
        app: echo
    spec:
      containers:
      - command:
        - sh
        - -c
        - apk add --no-cache netcat-openbsd && while true; do echo 'Hello World' |
          nc -l 8080; done
        image: alpine:latest
        name: alpine

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpine-echo-server

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpine-echo-server
policy disallow-default-namespace -> resource default/Deployment/alpine-echo-server failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/alpine-echo-server failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/alpine-echo-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alpine-echo-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alpine-echo-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alpine-echo-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/alpine-echo-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/alpine-echo-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alpine-echo-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: alpine4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alpine-echo-client:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpine-echo-client
  namespace: default
spec:
  selector:
    matchLabels:
      app: echo-client
  template:
    metadata:
      labels:
        app: echo-client
    spec:
      containers:
      - command:
        - sh
        - -c
        - apk add --no-cache netcat-openbsd && sleep infinity
        image: alpine:latest
        name: alpine

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpine-echo-client

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpine-echo-client
policy disallow-default-namespace -> resource default/Deployment/alpine-echo-client failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/alpine-echo-client failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/alpine-echo-client failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alpine-echo-client failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alpine-echo-client failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alpine-echo-client failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/alpine-echo-client failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/alpine-echo-client failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alpine-echo-client failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: alpine4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/echo:
apiVersion: v1
kind: Service
metadata:
  name: echo
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: echo

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alpine-d.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/alpine-d:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: alpine
  name: alpine-d
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alpine
  template:
    metadata:
      labels:
        app: alpine
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - apk update; apk upgrade; apk add curl; sleep 60m
        image: alpine:3.15.2
        name: alpine

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpine-d

skipped mutate policy add-safe-to-evict -> resource default/Deployment/alpine-d
policy disallow-default-namespace -> resource default/Deployment/alpine-d failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/alpine-d failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/alpine-d failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/alpine-d failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/alpine-d failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/alpine-d failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/alpine-d failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/alpine-d failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: alpine-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to services/Pod/alpine:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: alpine
  name: alpine
  namespace: services
spec:
  containers:
  - command:
    - sh
    - -c
    - echo Hello from alpine pod! && sleep 360000
    image: docker.io/library/alpine:latest
    name: alpine
  imagePullSecrets:
  - name: docker-io

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource services/Pod/alpine

skipped mutate policy add-safe-to-evict -> resource services/Pod/alpine
policy disallow-latest-tag -> resource services/Pod/alpine failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource services/Pod/alpine failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource services/Pod/alpine failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource services/Pod/alpine failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource services/Pod/alpine failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource services/Pod/alpine failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource services/Pod/alpine failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource services/Pod/alpine failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: alpine-pod20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/alpine:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: alpine
  name: alpine
  namespace: default
spec:
  containers:
  - args:
    - -c
    - sleep infinity
    command:
    - /bin/sh
    image: alpine:latest
    imagePullPolicy: IfNotPresent
    name: alpine
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 250m
        memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/alpine

skipped mutate policy add-safe-to-evict -> resource default/Pod/alpine
policy disallow-default-namespace -> resource default/Pod/alpine failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/alpine failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/alpine failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/alpine failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/alpine failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/alpine failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/alpine failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/alpine failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: alpine-pod21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ns-two/Pod/alpine:
apiVersion: v1
kind: Pod
metadata:
  labels:
    key: testingPodProtector
  name: alpine
  namespace: ns-two
spec:
  containers:
  - command:
    - sh
    - -c
    - while true; do sleep 3600; done
    image: alpine:latest
    name: alpine
    resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ns-two/Pod/alpine

skipped mutate policy add-safe-to-evict -> resource ns-two/Pod/alpine
policy disallow-latest-tag -> resource ns-two/Pod/alpine failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource ns-two/Pod/alpine failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ns-two/Pod/alpine failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ns-two/Pod/alpine failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ns-two/Pod/alpine failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource ns-two/Pod/alpine failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ns-two/Pod/alpine failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource ns-two/Pod/alpine failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: alumet-user.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/alumet_cluster_role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: alumet_cluster_role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/logs
  - pods/status
  - nodes
  - namespaces
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alumet-user_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to alumet/ServiceAccount/alumet-reader:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alumet-reader
  namespace: alumet

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alumet-user_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/alumet_cluster_role_binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: alumet_cluster_role_binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: alumet_cluster_role
subjects:
- kind: ServiceAccount
  name: alumet-reader
  namespace: alumet

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: always.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/always-pod:
apiVersion: v1
kind: Pod
metadata:
  name: always-pod
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - sleep 10
    image: busybox
    name: busybox
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/always-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/always-pod
policy disallow-default-namespace -> resource default/Pod/always-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/always-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/always-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/always-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/always-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/always-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/always-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/always-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/always-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: Always1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to system/Deployment/controller-manager:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
spec:
  template:
    spec:
      containers:
      - imagePullPolicy: Always
        name: manager

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource system/Deployment/controller-manager

skipped mutate policy add-safe-to-evict -> resource system/Deployment/controller-manager
policy disallow-helm-tiller -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource system/Deployment/controller-manager failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource system/Deployment/controller-manager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource system/Deployment/controller-manager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource system/Deployment/controller-manager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 5, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: Always2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to system/Deployment/controller-manager:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
spec:
  template:
    spec:
      containers:
      - imagePullPolicy: Always
        name: manager

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource system/Deployment/controller-manager

skipped mutate policy add-safe-to-evict -> resource system/Deployment/controller-manager
policy disallow-helm-tiller -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource system/Deployment/controller-manager failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource system/Deployment/controller-manager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource system/Deployment/controller-manager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource system/Deployment/controller-manager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 5, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: Always3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to system/Deployment/controller-manager:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
spec:
  template:
    spec:
      containers:
      - imagePullPolicy: Always
        name: manager

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource system/Deployment/controller-manager

skipped mutate policy add-safe-to-evict -> resource system/Deployment/controller-manager
policy disallow-helm-tiller -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource system/Deployment/controller-manager failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource system/Deployment/controller-manager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource system/Deployment/controller-manager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource system/Deployment/controller-manager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 5, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: always4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/always-pod:
apiVersion: v1
kind: Pod
metadata:
  name: always-pod
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - sleep 10
    image: busybox
    name: busybox
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/always-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/always-pod
policy disallow-default-namespace -> resource default/Pod/always-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/always-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/always-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/always-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/always-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/always-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/always-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/always-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/always-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: Always5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to system/Deployment/controller-manager:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
spec:
  template:
    spec:
      containers:
      - imagePullPolicy: Always
        name: manager

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource system/Deployment/controller-manager

skipped mutate policy add-safe-to-evict -> resource system/Deployment/controller-manager
policy disallow-helm-tiller -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-helm-tiller validation failure: validation error: Helm Tiller is not allowed. rule autogen-validate-helm-tiller failed at path /image/

policy disallow-latest-tag -> resource system/Deployment/controller-manager failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource system/Deployment/controller-manager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource system/Deployment/controller-manager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource system/Deployment/controller-manager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource system/Deployment/controller-manager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 5, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: always-outofsync.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/always-outofsync:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: always-outofsync
  namespace: default
roleRef:
  apiGroup: ""
  kind: Role
  name: does-not-matter
subjects:
- apiGroup: ""
  kind: User
  name: jane

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: always-outofsync1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/always-outofsync:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: always-outofsync
  namespace: default
roleRef:
  apiGroup: ""
  kind: Role
  name: does-not-matter
subjects:
- apiGroup: ""
  kind: User
  name: jane

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: alwayspolicy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/student-app:
apiVersion: v1
kind: Pod
metadata:
  name: student-app
  namespace: default
spec:
  containers:
  - image: nginx:21t67et46
    imagePullPolicy: Always
    name: student-app
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/student-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/student-app
policy disallow-default-namespace -> resource default/Pod/student-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/student-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/student-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/student-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/student-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/student-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/student-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/student-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: always-restart.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/restart-always-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: restart-always-pod
  name: restart-always-pod
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "20"
    image: alpine
    name: always-restart-app
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/restart-always-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/restart-always-pod
policy disallow-default-namespace -> resource default/Pod/restart-always-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/restart-always-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/restart-always-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/restart-always-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/restart-always-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/restart-always-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/restart-always-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/restart-always-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/restart-always-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: always-restart-policy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/my-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    type: frontend-server
  name: my-pod
  namespace: default
spec:
  containers:
  - command:
    - sh
    - -c
    - sleep 10
    image: busybox
    name: my-busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/my-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/my-pod
policy disallow-default-namespace -> resource default/Pod/my-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/my-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/my-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/my-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/my-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/my-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/my-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/my-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/my-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: always-ubuntu-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    type: frontend
  name: myapp
  namespace: default
spec:
  containers:
  - image: 8072388539/studentstore:v2.0
    name: app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp
policy disallow-default-namespace -> resource default/Pod/myapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/myapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/myapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/myapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: always-ubuntu-app1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myappone:
apiVersion: v1
kind: Pod
metadata:
  labels:
    type: frontend
  name: myappone
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "10"
    image: ubuntu
    name: app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myappone

skipped mutate policy add-safe-to-evict -> resource default/Pod/myappone
policy disallow-default-namespace -> resource default/Pod/myappone failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/myappone failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/myappone failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myappone failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myappone failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/myappone failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/myappone failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myappone failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myappone failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: ama-metrics-settings-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/ama-metrics-settings-configmap:
apiVersion: v1
data:
  config-version: ver1
  debug-mode: enabled = false
  default-scrape-settings-enabled: |-
    kubelet = true
    coredns = false
    cadvisor = true
    kubeproxy = false
    apiserver = false
    kubestate = true
    nodeexporter = true
    windowsexporter = true
    windowskubeproxy = true
    kappiebasic = true
    prometheuscollectorhealth = false
  default-targets-metrics-keep-list: |-
    kubelet = ""
    coredns = ""
    cadvisor = ""
    kubeproxy = ""
    apiserver = ""
    kubestate = ""
    nodeexporter = ""
    windowsexporter = ""
    windowskubeproxy = ""
    podannotations = ""
    kappiebasic = ""
    minimalingestionprofile = true
  default-targets-scrape-interval-settings: |-
    kubelet = "30s"
    coredns = "30s"
    cadvisor = "30s"
    kubeproxy = "30s"
    apiserver = "30s"
    kubestate = "30s"
    nodeexporter = "30s"
    windowsexporter = "30s"
    windowskubeproxy = "30s"
    kappiebasic = "30s"
    prometheuscollectorhealth = "30s"
    podannotations = "30s"
  pod-annotation-based-scraping: podannotationnamespaceregex = ""
  prometheus-collector-settings: cluster_alias = ""
  schema-version: v1
kind: ConfigMap
metadata:
  name: ama-metrics-settings-configmap
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ama-metrics-settings-configmap1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/ama-metrics-settings-configmap:
apiVersion: v1
data:
  config-version: ver1
  debug-mode: enabled = false
  default-scrape-settings-enabled: |-
    kubelet = true
    coredns = false
    cadvisor = true
    kubeproxy = false
    apiserver = false
    kubestate = true
    nodeexporter = true
    windowsexporter = false
    windowskubeproxy = false
    retinabasic = true
    prometheuscollectorhealth = false
  default-targets-metrics-keep-list: |-
    kubelet = ""
    coredns = ""
    cadvisor = ""
    kubeproxy = ""
    apiserver = ""
    kubestate = ""
    nodeexporter = ""
    windowsexporter = ""
    windowskubeproxy = ""
    retinabasic = ""
    minimalingestionprofile = true
  default-targets-scrape-interval-settings: |-
    kubelet = "30s"
    coredns = "30s"
    cadvisor = "30s"
    kubeproxy = "30s"
    apiserver = "30s"
    kubestate = "30s"
    nodeexporter = "30s"
    windowsexporter = "30s"
    windowskubeproxy = "30s"
    retinabasic = "30s"
    prometheusCollectorHealth = "30s"
  prometheus-collector-settings: cluster_alias = ""
  schema-version: v1
kind: ConfigMap
metadata:
  name: ama-metrics-settings-configmap
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ama-metrics-settings-configmap2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/ama-metrics-settings-configmap:
apiVersion: v1
data:
  config-version: ver1
  debug-mode: enabled = false
  default-scrape-settings-enabled: |-
    kubelet = true
    coredns = false
    cadvisor = true
    kubeproxy = false
    apiserver = false
    kubestate = true
    nodeexporter = true
    windowsexporter = true
    windowskubeproxy = true
    kappiebasic = true
    prometheuscollectorhealth = false
  default-targets-metrics-keep-list: |-
    kubelet = ""
    coredns = ""
    cadvisor = ""
    kubeproxy = ""
    apiserver = ""
    kubestate = ""
    nodeexporter = ""
    windowsexporter = ""
    windowskubeproxy = ""
    podannotations = ""
    kappiebasic = ""
    minimalingestionprofile = true
  default-targets-scrape-interval-settings: |-
    kubelet = "30s"
    coredns = "30s"
    cadvisor = "30s"
    kubeproxy = "30s"
    apiserver = "30s"
    kubestate = "30s"
    nodeexporter = "30s"
    windowsexporter = "30s"
    windowskubeproxy = "30s"
    kappiebasic = "30s"
    prometheuscollectorhealth = "30s"
    podannotations = "30s"
  pod-annotation-based-scraping: podannotationnamespaceregex = ""
  prometheus-collector-settings: cluster_alias = ""
  schema-version: v1
kind: ConfigMap
metadata:
  name: ama-metrics-settings-configmap
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ama-metrics-settings-configmap3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/ama-metrics-settings-configmap:
apiVersion: v1
data:
  config-version: ver1
  debug-mode: enabled = false
  default-scrape-settings-enabled: |-
    kubelet = true
    coredns = false
    cadvisor = true
    kubeproxy = false
    apiserver = false
    kubestate = true
    nodeexporter = true
    windowsexporter = false
    windowskubeproxy = false
    retinabasic = true
    prometheuscollectorhealth = false
  default-targets-metrics-keep-list: |-
    kubelet = ""
    coredns = ""
    cadvisor = ""
    kubeproxy = ""
    apiserver = ""
    kubestate = ""
    nodeexporter = ""
    windowsexporter = ""
    windowskubeproxy = ""
    retinabasic = ""
    minimalingestionprofile = true
  default-targets-scrape-interval-settings: |-
    kubelet = "30s"
    coredns = "30s"
    cadvisor = "30s"
    kubeproxy = "30s"
    apiserver = "30s"
    kubestate = "30s"
    nodeexporter = "30s"
    windowsexporter = "30s"
    windowskubeproxy = "30s"
    retinabasic = "30s"
    prometheusCollectorHealth = "30s"
  prometheus-collector-settings: cluster_alias = ""
  schema-version: v1
kind: ConfigMap
metadata:
  name: ama-metrics-settings-configmap
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: amazonlinux.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/amazonlinux:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: amazonlinux
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: amazonlinux
  template:
    metadata:
      labels:
        app: amazonlinux
    spec:
      containers:
      - command:
        - sleep
        - infinity
        image: amazonlinux:2
        name: amazonlinux
      serviceAccount: myserviceaccount

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/amazonlinux

skipped mutate policy add-safe-to-evict -> resource default/Deployment/amazonlinux
policy disallow-default-namespace -> resource default/Deployment/amazonlinux failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/amazonlinux failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/amazonlinux failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/amazonlinux failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: amazonlinux1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/amazonlinux:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: amazonlinux
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: amazonlinux
  template:
    metadata:
      labels:
        app: amazonlinux
    spec:
      containers:
      - command:
        - sleep
        - infinity
        image: amazonlinux:2
        name: amazonlinux
      serviceAccount: myserviceaccount

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/amazonlinux

skipped mutate policy add-safe-to-evict -> resource default/Deployment/amazonlinux
policy disallow-default-namespace -> resource default/Deployment/amazonlinux failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/amazonlinux failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/amazonlinux failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/amazonlinux failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: amazonlinux-nonroot.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/amazonlinux:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: amazonlinux
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: amazonlinux
  template:
    metadata:
      labels:
        app: amazonlinux
    spec:
      containers:
      - command:
        - sleep
        - infinity
        image: amazonlinux:2
        name: amazonlinux
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccount: myserviceaccount

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/amazonlinux

skipped mutate policy add-safe-to-evict -> resource default/Deployment/amazonlinux
policy disallow-default-namespace -> resource default/Deployment/amazonlinux failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/amazonlinux failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/amazonlinux failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/amazonlinux failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: amazonlinux-nonroot1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/amazonlinux:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: amazonlinux
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: amazonlinux
  template:
    metadata:
      labels:
        app: amazonlinux
    spec:
      containers:
      - command:
        - sleep
        - infinity
        image: amazonlinux:2
        name: amazonlinux
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccount: myserviceaccount

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/amazonlinux

skipped mutate policy add-safe-to-evict -> resource default/Deployment/amazonlinux
policy disallow-default-namespace -> resource default/Deployment/amazonlinux failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/amazonlinux failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/amazonlinux failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/amazonlinux failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/amazonlinux failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: amazon-ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/amazon:
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  labels:
    platform: e-commerce
  name: amazon
  namespace: default
spec: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/amazon:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: amazon
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/amazon:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: amazon
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/amazon:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: amazon
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/amazon:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: amazon
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ambassador-backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: ambassador-backend
  name: ambassador-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ambassador-backend
  template:
    metadata:
      labels:
        io.kompose.service: ambassador-backend
    spec:
      containers:
      - args:
        - npm
        - run
        - start:dev
        env:
        - name: BOOTSTRAP_SERVERS
          value: pkc-41p56.asia-south1.gcp.confluent.cloud:9092
        - name: DB_DATABASE
          value: ambassador
        - name: DB_HOST
          value: 34.93.151.246
        - name: DB_PASSWORD
          value: root
        - name: DB_PORT
          value: "3306"
        - name: DB_USERNAME
          value: root
        - name: GROUP_ID
          value: ambassador_consumer
        - name: SASL_PASSWORD
          value: qT7k8wzjXZQY+X2B2Jfakb3b/VrGNfpugthG3JFZRRx4hLNuci79DSGV8kGM1Kix
        - name: SASL_USERNAME
          value: 442V3XBIVI6K43UW
        - name: USERS_MS
          value: http://users-backend:8001
        image: afsalkp/ambassador:0.0.1
        name: ambassador-backend
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ambassador-backend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ambassador-backend
policy disallow-default-namespace -> resource default/Deployment/ambassador-backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ambassador-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ambassador-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ambassador-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ambassador-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/ambassador-backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ambassador-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ambassador-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ambassador1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ambassador-backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: ambassador-backend
  name: ambassador-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ambassador-backend
  template:
    metadata:
      labels:
        io.kompose.service: ambassador-backend
    spec:
      containers:
      - args:
        - npm
        - run
        - start:dev
        env:
        - name: BOOTSTRAP_SERVERS
          valueFrom:
            secretKeyRef:
              key: BOOTSTRAP_SERVERS
              name: kafka-secrets
        - name: DB_DATABASE
          value: ambassador
        - name: DB_HOST
          value: 34.93.151.246
        - name: DB_PASSWORD
          value: root
        - name: DB_PORT
          value: "3306"
        - name: DB_USERNAME
          value: root
        - name: GROUP_ID
          value: ambassador_consumer
        - name: SASL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: SASL_PASSWORD
              name: kafka-secrets
        - name: SASL_USERNAME
          valueFrom:
            secretKeyRef:
              key: SASL_USERNAME
              name: kafka-secrets
        - name: USERS_MS
          value: http://users-backend:8001
        image: afsalkp/ambassador:0.0.1
        name: ambassador-backend
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ambassador-backend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ambassador-backend
policy disallow-default-namespace -> resource default/Deployment/ambassador-backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ambassador-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ambassador-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ambassador-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/ambassador-backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ambassador-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ambassador-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ambassador1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ambassador-consumer:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: ambassador-consumer
  name: ambassador-consumer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ambassador-consumer
  template:
    metadata:
      labels:
        io.kompose.service: ambassador-consumer
    spec:
      containers:
      - args:
        - npm
        - run
        - consume
        env:
        - name: BOOTSTRAP_SERVERS
          valueFrom:
            secretKeyRef:
              key: BOOTSTRAP_SERVERS
              name: kafka-secrets
        - name: DB_DATABASE
          value: ambassador
        - name: DB_HOST
          value: 34.93.151.246
        - name: DB_PASSWORD
          value: root
        - name: DB_PORT
          value: "3306"
        - name: DB_USERNAME
          value: root
        - name: GROUP_ID
          value: ambassador_consumer
        - name: SASL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: SASL_PASSWORD
              name: kafka-secrets
        - name: SASL_USERNAME
          valueFrom:
            secretKeyRef:
              key: SASL_USERNAME
              name: kafka-secrets
        - name: USERS_MS
          value: http://users-backend:8001
        image: afsalkp/ambassador:0.0.1
        name: ambassador-consumer
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ambassador-consumer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ambassador-consumer
policy disallow-default-namespace -> resource default/Deployment/ambassador-consumer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ambassador1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador-backend:
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: ambassador-backend
  name: ambassador-backend
  namespace: default
spec:
  ports:
  - name: "8003"
    port: 8003
    targetPort: 3000
  selector:
    io.kompose.service: ambassador-backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/ServiceAccount/dynamic_parameters-agent:
apiVersion: v1
imagePullSecrets:
- name: dynamic_parameters
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent
    product: aes
  name: dynamic_parameters-agent
  namespace: dynamic_parameters

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/RoleBinding/dynamic_parameters-agent-config:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent
    product: aes
  name: dynamic_parameters-agent-config
  namespace: dynamic_parameters
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dynamic_parameters-agent-config
subjects:
- kind: ServiceAccount
  name: dynamic_parameters-agent
  namespace: dynamic_parameters

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dynamic_parameters-agent-applications:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent
    product: aes
    rbac.getambassador.io/role-group: dynamic_parameters-agent
  name: dynamic_parameters-agent-applications
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/ConfigMap/dynamic_parameters-agent-cloud-token:
apiVersion: v1
data:
  CLOUD_CONNECT_TOKEN: dynamic_parameters
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent-cloud-token
    product: aes
  name: dynamic_parameters-agent-cloud-token
  namespace: dynamic_parameters

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/Deployment/dynamic_parameters-agent:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent
    product: aes
  name: dynamic_parameters-agent
  namespace: dynamic_parameters
spec:
  progressDeadlineSeconds: dynamic_parameters
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: dynamic_parameters
      app.kubernetes.io/name: dynamic_parameters-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dynamic_parameters-agent
        product: aes
    spec:
      affinity: null
      containers:
      - env:
        - name: AGENT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AGENT_CONFIG_RESOURCE_NAME
          value: dynamic_parameters-agent-cloud-token
        - name: RPC_CONNECTION_ADDRESS
          value: dynamic_parameters
        - name: AES_SNAPSHOT_URL
          value: http://dynamic_parameters-admin.dynamic_parameters:dynamic_parameters/snapshot-external
        - name: AES_REPORT_DIAGNOSTICS_TO_CLOUD
          value: dynamic_parameters
        - name: AES_DIAGNOSTICS_URL
          value: http://dynamic_parameters-admin.dynamic_parameters:dynamic_parameters/ambassador/v0/diag/?json=true
        image: dynamic_parameters:dynamic_parameters
        imagePullPolicy: dynamic_parameters
        name: agent
        ports:
        - containerPort: 8080
          name: http
        securityContext: null
      nodeSelector: null
      securityContext: null
      serviceAccountName: dynamic_parameters-agent
      tolerations: null

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dynamic_parameters/Deployment/dynamic_parameters-agent

skipped mutate policy add-safe-to-evict -> resource dynamic_parameters/Deployment/dynamic_parameters-agent
policy drop-all-capabilities -> resource dynamic_parameters/Deployment/dynamic_parameters-agent failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dynamic_parameters/Deployment/dynamic_parameters-agent failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource dynamic_parameters/Deployment/dynamic_parameters-agent failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dynamic_parameters/Deployment/dynamic_parameters-agent failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dynamic_parameters/Deployment/dynamic_parameters-agent failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dynamic_parameters/Deployment/dynamic_parameters-agent failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: ambassador-agent_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/Service/dynamic_parameters-agent:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: dynamic_parameters
    app.kubernetes.io/managed-by: dynamic_parameters
    app.kubernetes.io/name: dynamic_parameters-agent
    app.kubernetes.io/part-of: dynamic_parameters
    helm.sh/chart: dynamic_parameters
    product: aes
  name: dynamic_parameters-agent
  namespace: dynamic_parameters
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: dynamic_parameters
    app.kubernetes.io/name: dynamic_parameters-agent

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dynamic_parameters/Role/dynamic_parameters-agent-config:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent
    product: aes
  name: dynamic_parameters-agent-config
  namespace: dynamic_parameters
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/dynamic_parameters-agent:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent
    product: aes
  name: dynamic_parameters-agent
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dynamic_parameters-agent
subjects:
- kind: ServiceAccount
  name: dynamic_parameters-agent
  namespace: dynamic_parameters

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dynamic_parameters-agent:
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.getambassador.io/role-group: dynamic_parameters-agent
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent
    product: aes
  name: dynamic_parameters-agent
  namespace: default
rules: []

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dynamic_parameters-agent-pods:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent
    product: aes
    rbac.getambassador.io/role-group: dynamic_parameters-agent
  name: dynamic_parameters-agent-pods
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dynamic_parameters-agent-deployments:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent
    product: aes
    rbac.getambassador.io/role-group: dynamic_parameters-agent
  name: dynamic_parameters-agent-deployments
  namespace: default
rules:
- apiGroups:
  - apps
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dynamic_parameters-agent-endpoints:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent
    product: aes
    rbac.getambassador.io/role-group: dynamic_parameters-agent
  name: dynamic_parameters-agent-endpoints
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dynamic_parameters-agent-configmaps:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent
    product: aes
    rbac.getambassador.io/role-group: dynamic_parameters-agent
  name: dynamic_parameters-agent-configmaps
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-agent_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/dynamic_parameters-agent-rollouts:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: dynamic_parameters-agent
    product: aes
    rbac.getambassador.io/role-group: dynamic_parameters-agent
  name: dynamic_parameters-agent-rollouts
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  - rollouts/status
  verbs:
  - get
  - list
  - watch
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-backend-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador-backend:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-prod.yaml
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: ambassador-backend
  name: ambassador-backend
  namespace: default
spec:
  ports:
  - name: "8003"
    port: 8003
    targetPort: 3000
  selector:
    io.kompose.service: ambassador-backend
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-consul-connector.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ambassador-consul-connect:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ambassador-consul-connect
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - create
  - delete
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-consul-connector_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/ServiceAccount/ambassador-consul-connect:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador-consul-connect
  namespace: ambassador

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-consul-connector_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ambassador-consul-connect:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ambassador-consul-connect
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambassador-consul-connect
subjects:
- kind: ServiceAccount
  name: ambassador-consul-connect
  namespace: ambassador

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-consul-connector_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/Service/ambassador-consul-connector:
apiVersion: v1
kind: Service
metadata:
  annotations:
    a8r.io/bugs: https://github.com/datawire/ambassador/issues
    a8r.io/chat: http://a8r.io/Slack
    a8r.io/dependencies: consul-server.default
    a8r.io/description: The Ambassador Edge Stack Consul Connect integration.
    a8r.io/documentation: https://www.getambassador.io/docs/edge-stack/latest/
    a8r.io/owner: Ambassador Labs
    a8r.io/repository: github.com/datawire/ambassador
    a8r.io/support: https://www.getambassador.io/about-us/support/
  name: ambassador-consul-connector
  namespace: ambassador
spec:
  ports:
  - name: ambassador-consul-connector
    port: 80
  selector:
    component: consul-connect

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-consul-connector_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/Deployment/ambassador-consul-connect-integration:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ambassador
    component: consul-connect
  name: ambassador-consul-connect-integration
  namespace: ambassador
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ambassador
      component: consul-connect
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        consul.hashicorp.com/connect-inject: "false"
      labels:
        app: ambassador
        component: consul-connect
    spec:
      containers:
      - command:
        - consul_connect_integration
        env:
        - name: _CONSUL_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: _AMBASSADOR_TLS_SECRET_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.io/datawire/aes:$version$
        name: consul-connect-integration
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 50Mi
      serviceAccountName: ambassador-consul-connect
      terminationGracePeriodSeconds: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ambassador/Deployment/ambassador-consul-connect-integration

skipped mutate policy add-safe-to-evict -> resource ambassador/Deployment/ambassador-consul-connect-integration
policy drop-all-capabilities -> resource ambassador/Deployment/ambassador-consul-connect-integration failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ambassador/Deployment/ambassador-consul-connect-integration failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ambassador/Deployment/ambassador-consul-connect-integration failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource ambassador/Deployment/ambassador-consul-connect-integration failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ambassador/Deployment/ambassador-consul-connect-integration failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ambassador/Deployment/ambassador-consul-connect-integration failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: ambassador-consul-connector-old.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/ambassador-consul-connect:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador-consul-connect
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-consul-connector-old_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador-consul-connector:
apiVersion: v1
kind: Service
metadata:
  annotations:
    a8r.io/bugs: https://github.com/datawire/ambassador/issues
    a8r.io/chat: http://a8r.io/Slack
    a8r.io/dependencies: Consul
    a8r.io/description: The Ambassador Edge Stack Consul Connect integration.
    a8r.io/documentation: https://www.getambassador.io/docs/edge-stack/latest/
    a8r.io/owner: Ambassador Labs
    a8r.io/repository: github.com/datawire/ambassador
    a8r.io/support: https://www.getambassador.io/about-us/support/
  name: ambassador-consul-connector
  namespace: default
spec:
  ports:
  - name: ambassador-consul-connector
    port: 80
  selector:
    component: consul-connect

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-consul-connector-old_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ambassador-consul-connect-integration:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ambassador
    component: consul-connect
  name: ambassador-consul-connect-integration
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ambassador
      component: consul-connect
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        consul.hashicorp.com/connect-inject: "false"
      labels:
        app: ambassador
        component: consul-connect
    spec:
      containers:
      - command:
        - consul_connect_integration
        env:
        - name: _CONSUL_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: _AMBASSADOR_TLS_SECRET_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.io/datawire/aes:$version$
        name: consul-connect-integration
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 50Mi
      serviceAccountName: ambassador-consul-connect
      terminationGracePeriodSeconds: 0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ambassador-consul-connect-integration

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ambassador-consul-connect-integration
policy disallow-default-namespace -> resource default/Deployment/ambassador-consul-connect-integration failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ambassador-consul-connect-integration failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ambassador-consul-connect-integration failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ambassador-consul-connect-integration failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/ambassador-consul-connect-integration failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ambassador-consul-connect-integration failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ambassador-consul-connect-integration failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ambassador-consumer-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ambassador-consumer:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-prod.yaml
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: ambassador-consumer
  name: ambassador-consumer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ambassador-consumer
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-prod.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: ambassador-consumer
    spec:
      containers:
      - args:
        - npm
        - run
        - consume
        env:
        - name: BOOTSTRAP_SERVERS
          value: pkc-41p56.asia-south1.gcp.confluent.cloud:9092
        - name: DB_DATABASE
          value: ambassador
        - name: DB_HOST
          value: 34.93.151.246
        - name: DB_PASSWORD
          value: root
        - name: DB_PORT
          value: "3306"
        - name: DB_USERNAME
          value: root
        - name: GROUP_ID
          value: ambassador_consumer
        - name: SASL_PASSWORD
          value: qT7k8wzjXZQY+X2B2Jfakb3b/VrGNfpugthG3JFZRRx4hLNuci79DSGV8kGM1Kix
        - name: SASL_USERNAME
          value: 442V3XBIVI6K43UW
        - name: USERS_MS
          value: http://users-backend:8001
        image: afsalkp/ambassador:0.0.1
        name: ambassador-consumer
        resources: {}
      restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ambassador-consumer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ambassador-consumer
policy disallow-default-namespace -> resource default/Deployment/ambassador-consumer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ambassador-consumer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ambassador-container.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/themoviedb:
apiVersion: v1
kind: Pod
metadata:
  name: themoviedb
  namespace: default
spec:
  containers:
  - args:
    - sleep
    - "600"
    image: radial/busyboxplus:curl
    name: main
  - env:
    - name: API_KEY
      valueFrom:
        secretKeyRef:
          key: apikey
          name: themoviedb
    image: startkubernetes/ambassador:0.1.0
    name: ambassador
    ports:
    - containerPort: 8080
      name: http

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/themoviedb

skipped mutate policy add-safe-to-evict -> resource default/Pod/themoviedb
policy disallow-default-namespace -> resource default/Pod/themoviedb failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/themoviedb failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/themoviedb failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/themoviedb failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/themoviedb failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/themoviedb failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/themoviedb failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/themoviedb failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ambassador-container1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/themoviedb:
apiVersion: v1
kind: Pod
metadata:
  name: themoviedb
  namespace: default
spec:
  containers:
  - args:
    - sleep
    - "600"
    image: radial/busyboxplus:curl
    name: main
  - env:
    - name: API_KEY
      valueFrom:
        secretKeyRef:
          key: apikey
          name: themoviedb
    image: startkubernetes/ambassador:0.1.0
    name: ambassador
    ports:
    - containerPort: 8080
      name: http

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/themoviedb

skipped mutate policy add-safe-to-evict -> resource default/Pod/themoviedb
policy disallow-default-namespace -> resource default/Pod/themoviedb failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/themoviedb failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/themoviedb failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/themoviedb failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/themoviedb failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/themoviedb failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/themoviedb failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/themoviedb failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ambassador-injector.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/Secret/ambassador-injector-tls:
apiVersion: v1
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2VENDQWRFQ0NRREI1M0duaHdlRDREQU5CZ2txaGtpRzl3MEJBUVVGQURCQU1UNHdQQVlEVlFRREREVkIKYldKaGMzTmhaRzl5SUVWa1oyVWdVM1JoWTJzZ1FXUnRhWE56YVc5dUlFTnZiblJ5YjJ4c1pYSWdWMlZpYUc5dgpheUJEUVRBZUZ3MHlNREEwTXpBeE5UVXlNakphRncweU1UQTBNalV4TlRVeU1qSmFNQzB4S3pBcEJnTlZCQU1NCkltRnRZbUZ6YzJGa2IzSXRhVzVxWldOMGIzSXVZVzFpWVhOellXUnZjaTV6ZG1Nd2dnRWlNQTBHQ1NxR1NJYjMKRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEM2ZIM0dRMjBKU21KZ0lINUZXWHNKVXNvZ3NvUVN0bDVOcUtZeAp2VnRHRkVMTXN5Z1FReWx3aHR6RDlablZiNjNPWWxlWTNzM0NkM1dScnl3T003ZjZ4UUxNaUsrbFF1L3NjQ3pDCnYxVzFUVzNJeTJpR0kxS1U5bXN2TVdDbGpOaUZML0IxRnYrbGgycjN5NHQ3WXJCNGNKcWxWNXdwb1grdjhycEwKd2xxU29ib042Zm1JdlBuZktuZjRFdjhZM0VJSnZWVlk2VXZmTS9haXRvTFQ4bm5PWFpzb1VXR2dHdFY0YlVBUApQbGtEVUhmZE13NitqZC9CbTJpRklrWkNtaytrZzQxdHRwczBRWklqK3piaVJrMmhTeWN1QjVoZVQ0NFhZY2s5CnlKTXVNbVNmU2VQck96N2lmTHk5d2RzalZncS9ZNGVGTDdyMFpncGxCZDlhdkFmMUFnTUJBQUV3RFFZSktvWkkKaHZjTkFRRUZCUUFEZ2dFQkFERlU1UGZtK0RhSW9nMTRUdHZqRUhiS3ZZWld6OVdsTXd5Y1Z5a25ORXVVSUpWRwpFMUJvZE1FUHpZUmR2ajAreTBBY3VaLzUrYnpCdnp3amRuSmhkMklHMmloTm83UlcvY1JkYmJ4cE1HT2d1N0xOCmtXRkR0QlpNeUpES3JmNlIwZzNWcTRNcUdGQk9vblpJSjk0cUYzMlJaNDgyRzMyYlhhNlVHWmVOTUs3SVM4aTEKbUhRdWl5aGRzNDVmMVMwSXMzREtoM2wzQm5NNTlWU0VGVDNkb3NEanhRbG13Q1pOQUhPTk9mNVhtbHhZbDArNgo0ZVhRR0I1cERoUkJ2elhEblNBUWZCWTBpZHNRQWhhTm5Cczc2d1g0VFRkVURobFpReE00RFQzVXcvSkFBMmFMCnlyNDNoYytmZDNKSHlXYTRUeHAwQ2RDTjZ3emlnQTFRK0dtRFpxWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBOTN4OXhrTnRDVXBpWUNCK1JWbDdDVkxLSUxLRUVyWmVUYWltTWIxYlJoUkN6TE1vCkVFTXBjSWJjdy9XWjFXK3R6bUpYbU43TnduZDFrYThzRGpPMytzVUN6SWl2cFVMdjdIQXN3cjlWdFUxdHlNdG8KaGlOU2xQWnJMekZncFl6WWhTL3dkUmIvcFlkcTk4dUxlMkt3ZUhDYXBWZWNLYUYvci9LNlM4SmFrcUc2RGVuNQppTHo1M3lwMytCTC9HTnhDQ2IxVldPbEwzelAyb3JhQzAvSjV6bDJiS0ZGaG9CclZlRzFBRHo1WkExQjMzVE1PCnZvM2Z3WnRvaFNKR1FwcFBwSU9OYmJhYk5FR1NJL3MyNGtaTm9Vc25MZ2VZWGsrT0YySEpQY2lUTGpKa24wbmoKNnpzKzRueTh2Y0hiSTFZS3YyT0hoUys2OUdZS1pRWGZXcndIOVFJREFRQUJBb0lCQVFERHpPQ05YWWNFbEs4awpNbEQwZVFqWXBZRjVRUU13OHN2RlVTcTdxMzV0QVZhZ01SWC9WOE9QWFlPSUhlV3BjWVBuQnZNYTVSdVJRWVhvCnp0aGlIQlR3OTdGeE5Lc1NhdFQ3RVB5NHp6djJCdDVXd0dkZnlNNXJRRklvc2o0dWZESkpuVlgyclUxeEhxUkkKaStjOHBTWE5BL20xMm95WWUwZFVZd3QxS0wwVHlBWG56dW5zcnZXTGNQam5aNUpFSHlMT3hDTVNOdWZCUzAzYwpmVFlYSEhvYUVIUUk5VmJuUVFFemE1Yk4rSXhxWVpodWZ4dStOa0pjR1lMS3c0Rkg5QU4xWTlQbXBrTEJNMFI0Cm1VZTFqRkJLL2xVK3Bud2xpNlZHOFpsbVRXbnVwVGpYcGt3K3Q4V1dBbE9CTHpucXNhQ3hLRGlIWVR0Q3ludi8KV3lBMFpIeEJBb0dCQVA0TkhzQlJjU0ZDcHI4ZEpDaTdpN3pVZjdGc3NmUUV4RlVlTGNoTWNZelErdUlSUnltLwpJbWgxR1FJeHpOV2d4TzNhMzltNmZHZW1vUld3bGVlclJ1dkZEV1IzU0laV1J5ZHByaFliZk1wSlNiR3V1ODNSCkEzR0RYNWtpUGpPQXlpdW9aZlN0K2ZET3hyNW45ay9vZGxRMkJ0Mm5qdUxYbk5hVkcrZnl1Vys5QW9HQkFQbGkKZXNheElwUXlxbTNRNDFyVERZUXVkazFDMnp1U1FkRVlRTjQyOUJGaWtYMGlWR2c0MnVzTkFKZXRVVTlqNy9YTQoyS1JUZi9RamtjUTRLWVl1WkRXa2paRC8zQWRYYlI5UTEyUWxweGRDYUNKZ3FBbEJlSkswbnNJc2VMVDBWMEFqCms4MW5YRWZ2b1NGN1BISHVlZDU1d1dxQWpSZDgzaEJJdEhBczdVQ1pBb0dBQW1GUkZuQXM1U2pnc3cyczF3emEKeEV3aFhpSXNrS0t5ekRGYU1IUTI1Q0RaR09FY2o1R1Eydld0NUUxZkkrazdyeGJMM2hoWExnbHJuTzVvbVNFTApxdzNQa0U5bHlJeHFZajRsT1dQTWlZQ2lSaDNpK0l5cXdaZC9mOG5JVjJjdmZiVTRMMUNwOU0yYkl4R0tSemxnClVtMm5KdEI1RURzQTV5bkNkeXZZL09rQ2dZQmxPRHRzK2VoM0RqbHVhU0plY3R0Qmt6b2hFY201M0JzcXF4VnAKSEJUa0dZWERySE5sK2UyaENaMzc4alRXYkZHeENudkQ5c0F3YjE5eXJQanRwVmEzRHhzR2gxTGZCL1VhaU0xagpzSVNwUkNMUUVUc2l4cGdSczQzY2NnQnNNZUJZQUJpMWZnWk9qRXh5TW5yT0kyVURqNWVaaXFPNXJNelUveTE5CmVqNnh3UUtCZ0RLUXFsWXFjZ0I5cEEwODFrZVBlRUdXSVVNdXQySkZOeThON2Q4YjBrOEpZejdwUGM2TWx2VWQKd2dGdS9JNDg0YVR5MEhUNTJPQVVmUGNhYmY5b3orNkd0a0dSQ2Q1QVJrSlhtS2huNGN1Z1IyNDJOVi9Sa1RBQwpOU0dtWjZOdGcwdDJLcFg0L00vK2dCWXlOdUxxNzNpQ1B5MUZvcjl5M202NlE5SXpUenlhCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: ambassador-injector-tls
  namespace: ambassador
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-injector_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/MutatingWebhookConfiguration/ambassador-injector-webhook-config:
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: ambassador-injector-webhook-config
  namespace: default
webhooks:
- clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvRENDQWVRQ0NRRGc2ZXpnOWthazZEQU5CZ2txaGtpRzl3MEJBUXNGQURCQU1UNHdQQVlEVlFRREREVkIKYldKaGMzTmhaRzl5SUVWa1oyVWdVM1JoWTJzZ1FXUnRhWE56YVc5dUlFTnZiblJ5YjJ4c1pYSWdWMlZpYUc5dgpheUJEUVRBZUZ3MHlNREEwTXpBeE5UVXlNakphRncweU1UQTBNalV4TlRVeU1qSmFNRUF4UGpBOEJnTlZCQU1NCk5VRnRZbUZ6YzJGa2IzSWdSV1JuWlNCVGRHRmpheUJCWkcxcGMzTnBiMjRnUTI5dWRISnZiR3hsY2lCWFpXSm8KYjI5cklFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTVIelBTeVg2QmxXdApDMjgvMTNFdnl6VFV1QjZiYU1PVHBhM2N5QlVyWlRaeFZqVXJkRGVMTHVUMmNjcW4yM3NobXd4cWpRNFNoTUxOCjZGZWwrQklQc2YwWW40bVg5Rng4M3p5YjY1T1dsQzNHQ2QyTkVFMkpKVGVkQXJxa28wbXFwRVovb09uRTNJbW4Kb0E1V3VQM0NSZHFCekpoQk9iR2N5aGpMNVY3b1ZYL0JtdVFSZlVaRWJXUkp5elpOTVBtUWdyT0lvS2FmWWtRaQpMNG5xTzJzUldQVythUFhkWnJQMjFkYThrZ2U5UWRGZ3JLOG5VVGhzb0l3bFFpOVFVcW5hTURWbzJYTnNwQ2R1CkZQWnVFV25VL1pQQk0vZTNxbDRwQkZxaGJvdWRCNUJWZzE4Um54V0VQZDZWTzJoRmJRQ2c0ekdnZDZlZmIvUkwKeXdrRURsSUpNUUlEQVFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQzh0UTlHNVJqam0zQUFKYVN5NytNTgpBam12Snp0dkoyRVZQd3V0N3ZsV1YvclE5VHp4RnhHa3ZHU0JjRjA2ait1V2NxTktlTHhTeTZNZ21ER0JGKytnCnRYS1VMY0pCanVZZGt6N2Y0QTQ3Yzl4a0Fpckh3c2RnekcwK2R6MHFZOE1ab2x0RmtzRm9JdG1MaVZOYkNucGIKRDZKZlFSc3k0MHc5aVo4Q0RXczhYRU54ZmtxTTNZSlQ0cTFQbWFOTS96eWErblNVTWVyV0tWcFBwb3lyZHhqWApLekZFdFlPL1FwU2ZPa2UwUDN0NW90OEpnSVM3TUd3VzRGMFVub01UNTRCR25KaDBHbmlyWDF4bVZMVE81Sy8wClM5YzZLU2FaK1BoNmFFNzAzenFDZkxvSnY5N1FFS3lVTmE0Y1FBbXAzSWdaNFBNN2dJODFjL3ZGeU1xL3NEYjcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: ambassador-injector
      namespace: ambassador
      path: /traffic-agent
  failurePolicy: Ignore
  name: ambassador-injector.getambassador.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-injector_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/Deployment/ambassador-injector:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ambassador-injector
  namespace: ambassador
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: ambassador
      app.kubernetes.io/name: ambassador-injector
  template:
    metadata:
      annotations:
        consul.hashicorp.com/connect-inject: "false"
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/instance: ambassador
        app.kubernetes.io/name: ambassador-injector
    spec:
      containers:
      - command:
        - aes-injector
        env:
        - name: TRAFFIC_AGENT_IMAGE
          value: docker.io/datawire/aes:$version$
        - name: TRAFFIC_AGENT_SERVICE_ACCOUNT_NAME
          value: traffic-agent
        - name: TRAFFIC_AGENT_AGENT_LISTEN_PORT
          value: "9900"
        - name: AGENT_MANAGER_NAMESPACE
          value: ambassador
        image: docker.io/datawire/aes:$version$
        livenessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
        name: webhook
        ports:
        - containerPort: 8443
          name: https
        volumeMounts:
        - mountPath: /var/run/secrets/tls
          name: tls
          readOnly: true
      volumes:
      - name: tls
        secret:
          secretName: ambassador-injector-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ambassador/Deployment/ambassador-injector

skipped mutate policy add-safe-to-evict -> resource ambassador/Deployment/ambassador-injector
policy drop-all-capabilities -> resource ambassador/Deployment/ambassador-injector failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ambassador/Deployment/ambassador-injector failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ambassador/Deployment/ambassador-injector failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource ambassador/Deployment/ambassador-injector failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ambassador/Deployment/ambassador-injector failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: ambassador-injector_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/Service/ambassador-injector:
apiVersion: v1
kind: Service
metadata:
  annotations:
    a8r.io/bugs: https://github.com/datawire/ambassador/issues
    a8r.io/chat: http://a8r.io/Slack
    a8r.io/dependencies: None
    a8r.io/description: The Ambassador Edge Stack Service Preview Traffic Agent Sidecar
      injector.
    a8r.io/documentation: https://www.getambassador.io/docs/edge-stack/latest/
    a8r.io/owner: Ambassador Labs
    a8r.io/repository: github.com/datawire/ambassador
    a8r.io/support: https://www.getambassador.io/about-us/support/
  name: ambassador-injector
  namespace: ambassador
spec:
  ports:
  - name: ambassador-injector
    port: 443
    targetPort: https
  selector:
    app.kubernetes.io/instance: ambassador
    app.kubernetes.io/name: ambassador-injector
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-no-rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador-admin:
apiVersion: v1
kind: Service
metadata:
  labels:
    service: ambassador-admin
  name: ambassador-admin
  namespace: default
spec:
  ports:
  - name: ambassador-admin
    port: 8877
    targetPort: 8877
  selector:
    service: ambassador
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/ambassador-admin failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-no-rbac_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/ambassador:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-operator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ambassador:
apiVersion: v1
kind: Namespace
metadata:
  name: ambassador
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ambassador:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ambassador
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ambassador:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ambassador
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ambassador:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ambassador
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ambassador:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ambassador
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-operator_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/ConfigMap/static-helm-values:
apiVersion: v1
data:
  values.yaml: |
    deploymentTool: amb-oper-manifest
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: ambassador
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ambassador-operator
    app.kubernetes.io/part-of: ambassador
    getambassador.io/installer: operator
    helm.sh/chart: ambassador-operator-0.2.0
  name: static-helm-values
  namespace: ambassador

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-operator_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/ServiceAccount/ambassador-operator:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: ambassador
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ambassador-operator
    app.kubernetes.io/part-of: ambassador
    getambassador.io/installer: operator
    helm.sh/chart: ambassador-operator-0.2.0
  name: ambassador-operator
  namespace: ambassador

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-operator_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/ClusterRole/ambassador-operator-cluster:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ambassador
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ambassador-operator
    app.kubernetes.io/part-of: ambassador
    getambassador.io/installer: operator
    helm.sh/chart: ambassador-operator-0.2.0
  name: ambassador-operator-cluster
  namespace: ambassador
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-operator_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/ClusterRoleBinding/ambassador-operator-cluster:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ambassador
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ambassador-operator
    app.kubernetes.io/part-of: ambassador
    getambassador.io/installer: operator
    helm.sh/chart: ambassador-operator-0.2.0
  name: ambassador-operator-cluster
  namespace: ambassador
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambassador-operator-cluster
subjects:
- kind: ServiceAccount
  name: ambassador-operator
  namespace: ambassador

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-operator_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/Role/ambassador-operator:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: ambassador
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ambassador-operator
    app.kubernetes.io/part-of: ambassador
    getambassador.io/installer: operator
    helm.sh/chart: ambassador-operator-0.2.0
  name: ambassador-operator
  namespace: ambassador
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - services/finalizers
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  - customresourcedefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - ambassador-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - replicasets
  - deployments
  verbs:
  - get
- apiGroups:
  - getambassador.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-operator_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/RoleBinding/ambassador-operator:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ambassador
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ambassador-operator
    app.kubernetes.io/part-of: ambassador
    getambassador.io/installer: operator
    helm.sh/chart: ambassador-operator-0.2.0
  name: ambassador-operator
  namespace: ambassador
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ambassador-operator
subjects:
- kind: ServiceAccount
  name: ambassador-operator

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-operator_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ambassador/Deployment/ambassador-operator:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: ambassador
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ambassador-operator
    app.kubernetes.io/part-of: ambassador
    getambassador.io/installer: operator
    helm.sh/chart: ambassador-operator-0.2.0
  name: ambassador-operator
  namespace: ambassador
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ambassador-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ambassador
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ambassador-operator
        app.kubernetes.io/part-of: ambassador
        getambassador.io/installer: operator
        helm.sh/chart: ambassador-operator-0.2.0
        name: ambassador-operator
    spec:
      containers:
      - command:
        - ambassador-operator
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: ambassador-operator
        image: docker.io/datawire/ambassador-operator:v1.2.6
        imagePullPolicy: IfNotPresent
        name: ambassador-operator
        volumeMounts:
        - mountPath: /tmp/helm
          name: static-helm-values
      serviceAccountName: ambassador-operator
      volumes:
      - configMap:
          name: static-helm-values
        name: static-helm-values

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ambassador/Deployment/ambassador-operator

skipped mutate policy add-safe-to-evict -> resource ambassador/Deployment/ambassador-operator
policy drop-all-capabilities -> resource ambassador/Deployment/ambassador-operator failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ambassador/Deployment/ambassador-operator failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ambassador/Deployment/ambassador-operator failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource ambassador/Deployment/ambassador-operator failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ambassador/Deployment/ambassador-operator failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ambassador/Deployment/ambassador-operator failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: ambassador-rate-limiter.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ratelimiter:
apiVersion: v1
kind: Service
metadata:
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind: RateLimitService
      name: ratelimiter_svc
      service: "ratelimiter:50051"
  labels:
    app: ratelimiter
  name: ratelimiter
  namespace: default
spec:
  ports:
  - name: http
    port: 50051
    protocol: TCP
  selector:
    app: ratelimiter
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-rate-limiter_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicationController/ratelimiter:
apiVersion: v1
kind: ReplicationController
metadata:
  name: ratelimiter
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ratelimiter
    spec:
      containers:
      - image: danielbryantuk/ratelimiter:0.3
        name: ratelimiter
        ports:
        - containerPort: 50051

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/ratelimiter

skipped mutate policy add-safe-to-evict -> resource default/ReplicationController/ratelimiter
policy drop-all-capabilities -> resource default/ReplicationController/ratelimiter failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicationController/ratelimiter failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicationController/ratelimiter failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicationController/ratelimiter failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicationController/ratelimiter failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicationController/ratelimiter failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: ambassador-rate-limiter1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ratelimiter:
apiVersion: v1
kind: Service
metadata:
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind: RateLimitService
      name: ratelimiter_svc
      service: "ratelimiter:50051"
  labels:
    app: ratelimiter
  name: ratelimiter
  namespace: default
spec:
  ports:
  - name: http
    port: 50051
    protocol: TCP
  selector:
    app: ratelimiter
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador-admin:
apiVersion: v1
kind: Service
metadata:
  labels:
    service: ambassador-admin
  name: ambassador-admin
  namespace: default
spec:
  ports:
  - name: ambassador-admin
    port: 8877
    targetPort: 8877
  selector:
    service: ambassador
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/ambassador-admin failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-rbac_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/ambassador:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador:
apiVersion: v1
kind: Service
metadata:
  name: ambassador
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - port: 80
    targetPort: 8080
  selector:
    service: ambassador
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador:
apiVersion: v1
kind: Service
metadata:
  name: ambassador
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - port: 80
    targetPort: 8080
  selector:
    service: ambassador
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador:
apiVersion: v1
kind: Service
metadata:
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name:  shopfront_stable
      prefix: /shopfront/
      service: shopfront:8010
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name:  shopfront_canary
      prefix: /shopfront/
      weight: 50
      service: shopfront-canary:8010
  labels:
    service: ambassador
  name: ambassador
  namespace: default
spec:
  ports:
  - name: ambassador
    port: 80
    targetPort: 80
  selector:
    service: ambassador
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador:
apiVersion: v1
kind: Service
metadata:
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name:  shopfront_stable
      prefix: /shopfront/
      service: shopfront:8010
      rate_limits:
        - descriptor: Example descriptor
  labels:
    service: ambassador
  name: ambassador
  namespace: default
spec:
  ports:
  - name: ambassador
    port: 80
    targetPort: 80
  selector:
    service: ambassador
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador:
apiVersion: v1
kind: Service
metadata:
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name:  shopfront_stable
      prefix: /shopfront/
      service: shopfront:8010
      rate_limits:
        - descriptor: Example descriptor
          headers:
            - "X-MyHeader"
        - descriptor: New descriptor
          headers:
            - "Y-MyHeader:123"
        - descriptor: My default
  labels:
    service: ambassador
  name: ambassador
  namespace: default
spec:
  ports:
  - name: ambassador
    port: 80
    targetPort: 80
  selector:
    service: ambassador
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador:
apiVersion: v1
kind: Service
metadata:
  annotations:
    a8r.io/bugs: https://github.com/datawire/ambassador/issues
    a8r.io/chat: http://a8r.io/Slack
    a8r.io/dependencies: ambassador-redis
    a8r.io/description: The Ambassador Edge Stack goes beyond traditional API Gateways
      and Ingress Controllers with the advanced edge features needed to support developer
      self-service and full-cycle development.
    a8r.io/documentation: https://www.getambassador.io/docs/edge-stack/latest/
    a8r.io/owner: Ambassador Labs
    a8r.io/repository: github.com/datawire/ambassador
    a8r.io/support: https://www.getambassador.io/about-us/support/
  labels:
    app.kubernetes.io/component: ambassador-service
  name: ambassador
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - port: 80
    targetPort: 8080
  selector:
    service: ambassador
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador:
apiVersion: v1
kind: Service
metadata:
  name: ambassador
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: https
    port: 443
    targetPort: 8443
  selector:
    service: ambassador
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ambassador-svc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ambassador:
apiVersion: v1
kind: Service
metadata:
  name: ambassador
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: https
    port: 443
    targetPort: 8443
  selector:
    service: ambassador
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: amf-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/free5gc-amf:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: free5gc
    name: amf
    nf: amf
  name: free5gc-amf
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: free5gc
      name: amf
      nf: amf
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: '[ { "name": "n2network", "interface": "n3",
          "ips": [ "10.10.2.1/24" ] } ]'
      labels:
        app: free5gc
        name: amf
        nf: amf
    spec:
      containers:
      - args:
        - --config
        - config/amfcfg.yaml
        command:
        - ./amf
        env:
        - name: GIN_MODE
          value: release
        image: edierbra/free5gc:v3.2.5
        imagePullPolicy: Always
        name: amf
        ports:
        - containerPort: 8000
          name: namf
        - containerPort: 38412
          name: n2
          protocol: SCTP
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /free5gc/config/
          name: amf-volume
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until curl -s -o /dev/null -w "%!{(MISSING)http_code}" http://nrf-nnrf:8000 | grep
          "200"; do sleep 1; done;
        image: appropriate/curl
        name: wait-nrf
      restartPolicy: Always
      volumes:
      - name: amf-volume
        projected:
          sources:
          - configMap:
              name: amf-configmap

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/free5gc-amf

skipped mutate policy add-safe-to-evict -> resource default/Deployment/free5gc-amf
policy disallow-default-namespace -> resource default/Deployment/free5gc-amf failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/free5gc-amf failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/free5gc-amf failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/free5gc-amf failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/free5gc-amf failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/free5gc-amf failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/free5gc-amf failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/free5gc-amf failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/free5gc-amf failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: amf-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/free5gc-amf2:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: free5gc
    name: amf2
    nf: amf
  name: free5gc-amf2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: free5gc
      name: amf2
      nf: amf
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: '[ { "name": "n2network", "interface": "n3",
          "ips": [ "10.10.2.2/24" ] } ]'
      labels:
        app: free5gc
        name: amf2
        nf: amf
    spec:
      containers:
      - args:
        - --config
        - config/amfcfg.yaml
        command:
        - ./amf
        env:
        - name: GIN_MODE
          value: release
        image: edierbra/free5gc:v3.2.5
        imagePullPolicy: Always
        name: amf
        ports:
        - containerPort: 8000
          name: namf
        - containerPort: 38412
          name: n2
          protocol: SCTP
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /free5gc/config/
          name: amf2-volume
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until curl -s -o /dev/null -w "%!{(MISSING)http_code}" http://nrf-nnrf:8000 | grep
          "200"; do sleep 1; done;
        image: appropriate/curl
        name: wait-nrf
      restartPolicy: Always
      volumes:
      - name: amf2-volume
        projected:
          sources:
          - configMap:
              name: amf2-configmap

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/free5gc-amf2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/free5gc-amf2
policy disallow-default-namespace -> resource default/Deployment/free5gc-amf2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/free5gc-amf2 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/free5gc-amf2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/free5gc-amf2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/free5gc-amf2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/free5gc-amf2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/free5gc-amf2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/free5gc-amf2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/free5gc-amf2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: amf-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/amf-namf:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: free5gc
    name: amf
    nf: amf
  name: amf-namf
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    app: free5gc
    name: amf
    nf: amf

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: amf-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/amf2-namf:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: free5gc
    name: amf2
    nf: amf
  name: amf2-namf
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    app: free5gc
    name: amf2
    nf: amf

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: amigos_deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/amigos-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: amigos-deploy
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 20
  selector:
    matchLabels:
      app: amigos-deploy
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubernetes.io/change-cause: Hello-World Version 4
      labels:
        app: amigos-deploy
        department: engineering
        environment: test
        tier: frontend-exercise
    spec:
      containers:
      - image: amigoscode/kubernetes:hello-world-v4
        name: amigos-deploy
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/amigos-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/amigos-deploy
policy disallow-default-namespace -> resource default/Deployment/amigos-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/amigos-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/amigos-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/amigos-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/amigos-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/amigos-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/amigos-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/amigos-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: analista-csr.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CertificateSigningRequest/analista-csr:
apiVersion: certificates.k8s.io/v1
kind: CertificateSigningRequest
metadata:
  name: analista-csr
  namespace: default
spec:
  groups:
  - system:authenticated
  request: REQUEST
  signerName: kubernetes.io/kube-apiserver-client
  usages:
  - client auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking:
apiVersion: v1
kind: Service
metadata:
  name: coworking
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    service: coworking
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking
  name: coworking
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - env:
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              key: DB_USERNAME
              name: db-env
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: db-secret
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: db-env
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              key: DB_PORT
              name: db-env
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: db-env
        image: 844420410082.dkr.ecr.us-east-1.amazonaws.com/coworking-analytics:25
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking
policy disallow-default-namespace -> resource default/Deployment/coworking failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: analytics_config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-analytics-config:
apiVersion: v1
data:
  ANALYTICS_ENABLED: "false"
kind: ConfigMap
metadata:
  name: pl-analytics-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics_config1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-analytics-config:
apiVersion: v1
data:
  ANALYTICS_ENABLED: "true"
kind: ConfigMap
metadata:
  name: pl-analytics-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics_config2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-analytics-config:
apiVersion: v1
data:
  ANALYTICS_ENABLED: "true"
kind: ConfigMap
metadata:
  name: pl-analytics-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics_config3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-analytics-config:
apiVersion: v1
data:
  ANALYTICS_ENABLED: "false"
kind: ConfigMap
metadata:
  name: pl-analytics-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics_config4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-analytics-config:
apiVersion: v1
data:
  ANALYTICS_ENABLED: "false"
kind: ConfigMap
metadata:
  name: pl-analytics-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics_config5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-analytics-config:
apiVersion: v1
data:
  ANALYTICS_ENABLED: "true"
kind: ConfigMap
metadata:
  name: pl-analytics-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics_config6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-analytics-config:
apiVersion: v1
data:
  ANALYTICS_ENABLED: "true"
kind: ConfigMap
metadata:
  name: pl-analytics-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics_config7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/pl-analytics-config:
apiVersion: v1
data:
  ANALYTICS_ENABLED: "false"
kind: ConfigMap
metadata:
  name: pl-analytics-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/supabase-analytics-service:
apiVersion: v1
kind: Service
metadata:
  name: supabase-analytics-service
  namespace: default
spec:
  ports:
  - port: 4000
    protocol: TCP
  selector:
    app: supabase-analytics

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/supabase-analytics:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supabase-analytics
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: supabase-analytics
  template:
    metadata:
      labels:
        app: supabase-analytics
    spec:
      containers:
      - env:
        - name: LOGFLARE_NODE_HOST
          value: 127.0.0.1
        - name: DB_USERNAME
          value: supabase_admin
        - name: DB_DATABASE
          value: postgres
        - name: DB_HOSTNAME
          value: supabase-postgres-service
        - name: DB_PORT
          value: "5432"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: supabase-db
        - name: DB_SCHEMA
          value: _analytics
        - name: LOGFLARE_API_KEY
          valueFrom:
            secretKeyRef:
              key: apiKey
              name: supabase-logflare
        - name: LOGFLARE_SINGLE_TENANT
          value: "true"
        - name: LOGFLARE_SUPABASE_MODE
          value: "true"
        - name: POSTGRES_BACKEND_URL
          value: postgresql://supabase_admin:$(DB_PASSWORD)@supabase-postgres-service:5432/postgres
        - name: POSTGRES_BACKEND_SCHEMA
          value: _analytics
        - name: LOGFLARE_FEATURE_FLAG_OVERRIDE
          value: multibackend=true
        image: supabase/logflare:1.4.0
        name: supabase-analytics
        ports:
        - containerPort: 4000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/supabase-analytics

skipped mutate policy add-safe-to-evict -> resource default/Deployment/supabase-analytics
policy disallow-default-namespace -> resource default/Deployment/supabase-analytics failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/supabase-analytics failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/supabase-analytics failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/supabase-analytics failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/supabase-analytics failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/supabase-analytics failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/supabase-analytics failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/supabase-analytics failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: analyticsaggregator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to splunkuba/ReplicationController/analyticsaggregator-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  name: analyticsaggregator-rc
  namespace: splunkuba
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: analyticsaggregator
        uba-displayName: Analytics_Aggregator_Service
        uba-groupName: ubaanalytics
        uba-serviceName: analyticsaggregator
    spec:
      containers:
      - command:
        - /opt/caspida/bin/UBAFunctionExecutor
        - com.caspida.streaming.docker.launchers.GenericFunctionLauncher
        - -n
        - splunkuba
        - -f
        - analyticsaggregator
        - -c
        - com.caspida.streaming.docker.AnalyticsAggregatorFunction
        env:
        - name: UBA_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: UBA_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UBA_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: UBA_HOSTIP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: UBA_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: UBA_POD_MAXHEAP
          value: 4G
        - name: UBA_POD_GROUPNAME
          value: ubaanalytics
        - name: RUN_AS_USER
          value: null
        - name: RUN_AS_GROUP
          value: null
        image: sujits-uba53-rhel-k8s-01:5000/ubabase:latest
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command:
              - /opt/caspida/bin/ContainerLifecycleHook.sh
              - startup
          preStop:
            exec:
              command:
              - /opt/caspida/bin/ContainerLifecycleHook.sh
              - shutdown
        livenessProbe:
          exec:
            command:
            - /opt/caspida/bin/ContainerLivenessProbe.sh
          failureThreshold: 2
          initialDelaySeconds: 900
          periodSeconds: 900
          timeoutSeconds: 60
        name: analyticsaggregator
        volumeMounts:
        - mountPath: /var/vcap/sys/log/caspida/containerization
          name: log-volume
          readOnly: false
      hostAliases:
      - hostnames:
        - sujits-uba53-rhel-k8s-01.sv.splunk.com
        - sujits-uba53-rhel-k8s-01
        ip: 10.141.39.46
      - hostnames:
        - sujits-uba53-rhel-k8s-02.sv.splunk.com
        - sujits-uba53-rhel-k8s-02
        ip: 10.141.39.205
      - hostnames:
        - sujits-uba53-rhel-k8s-03.sv.splunk.com
        - sujits-uba53-rhel-k8s-03
        ip: 10.141.39.184
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/vcap/sys/log/caspida/containerization
        name: log-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource splunkuba/ReplicationController/analyticsaggregator-rc
policy disallow-latest-tag -> resource splunkuba/ReplicationController/analyticsaggregator-rc failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource splunkuba/ReplicationController/analyticsaggregator-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource splunkuba/ReplicationController/analyticsaggregator-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource splunkuba/ReplicationController/analyticsaggregator-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource splunkuba/ReplicationController/analyticsaggregator-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource splunkuba/ReplicationController/analyticsaggregator-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource splunkuba/ReplicationController/analyticsaggregator-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: analytics-api.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analytics-api:
apiVersion: v1
kind: Service
metadata:
  name: analytics-api
  namespace: default
spec:
  ports:
  - name: "5000"
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app.kubernetes.io/name: analytics-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics-api_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analytics-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: analytics-api
  name: analytics-api
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      service: analytics-api
  template:
    metadata:
      labels:
        service: analytics-api
    spec:
      containers:
      - env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: db-env
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              key: DB_USERNAME
              name: db-env
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              key: database
              name: eks-db-secrets
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: eks-db-secrets
        image: 470769016866.dkr.ecr.us-east-1.amazonaws.com/uda-analytics:0.1.5
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5000
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: analytics-api
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5000
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analytics-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analytics-api
policy disallow-default-namespace -> resource default/Deployment/analytics-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analytics-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analytics-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analytics-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analytics-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/analytics-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analytics-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: analytics-api1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analytics-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: analytics
  name: analytics-api
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    app.kubernetes.io/name: analytics-api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics-api1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analytics-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: analytics-api
  name: analytics-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: analytics-api
  template:
    metadata:
      labels:
        service: analytics-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: app-config
        image: 575152933064.dkr.ecr.us-east-1.amazonaws.com/coworking-checkin:1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: analytics-api
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analytics-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analytics-api
policy disallow-default-namespace -> resource default/Deployment/analytics-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analytics-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analytics-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analytics-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analytics-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/analytics-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analytics-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: analytics-api2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analytics-api:
apiVersion: v1
kind: Service
metadata:
  name: analytics-api
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    app.kubernetes.io/name: analytics-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics-api2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analytics-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: analytics-api
  name: analytics-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: analytics-api
  template:
    metadata:
      labels:
        service: analytics-api
    spec:
      containers:
      - env:
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              key: DB_USERNAME
              name: db-env
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: db-env
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: db-secret
        image: 790581391875.dkr.ecr.us-east-1.amazonaws.com/analytics-app:1.0.23
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: analytics-api
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analytics-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analytics-api
policy disallow-default-namespace -> resource default/Deployment/analytics-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analytics-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analytics-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analytics-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analytics-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/analytics-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analytics-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: analytics-api-aws.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analytics-api:
apiVersion: v1
kind: Service
metadata:
  name: analytics-api
  namespace: default
spec:
  ports:
  - name: "5000"
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app.kubernetes.io/name: analytics-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analytics-api-aws_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analytics-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: analytics-api
  name: analytics-api
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      service: analytics-api
  template:
    metadata:
      labels:
        service: analytics-api
    spec:
      containers:
      - env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: db-env
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              key: DB_USERNAME
              name: db-env
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              key: database
              name: eks-db-secrets-aws
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: eks-db-secrets-aws
        image: 456619976774.dkr.ecr.us-east-1.amazonaws.com/uda-analytics:0.1.5
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5000
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: analytics-api
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5000
          initialDelaySeconds: 5
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /mnt/secrets-store
          name: secrets-store-inline
          readOnly: true
      restartPolicy: Always
      volumes:
      - csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: eks-db-secrets-aws
        name: secrets-store-inline

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analytics-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analytics-api
policy disallow-default-namespace -> resource default/Deployment/analytics-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analytics-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analytics-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analytics-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analytics-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/analytics-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analytics-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: analyticsviewsbuilder.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to splunkuba/ReplicationController/analyticsviewsbuilder-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  name: analyticsviewsbuilder-rc
  namespace: splunkuba
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: analyticsviewsbuilder
        uba-displayName: Analytics_View_Builder_Service
        uba-groupName: ubaanalytics
        uba-serviceName: analyticsviewsbuilder
    spec:
      containers:
      - command:
        - /opt/caspida/bin/UBAFunctionExecutor
        - com.caspida.streaming.docker.launchers.GenericFunctionLauncher
        - -n
        - splunkuba
        - -f
        - analyticsviewsbuilder
        - -c
        - com.caspida.streaming.docker.AnalyticsViewsBuilderFunction
        env:
        - name: UBA_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: UBA_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UBA_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: UBA_HOSTIP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: UBA_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: UBA_POD_MAXHEAP
          value: 32M
        - name: UBA_POD_GROUPNAME
          value: ubaanalytics
        - name: RUN_AS_USER
          value: null
        - name: RUN_AS_GROUP
          value: null
        image: sujits-uba53-rhel-k8s-01:5000/ubabase:latest
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command:
              - /opt/caspida/bin/ContainerLifecycleHook.sh
              - startup
          preStop:
            exec:
              command:
              - /opt/caspida/bin/ContainerLifecycleHook.sh
              - shutdown
        livenessProbe:
          exec:
            command:
            - /opt/caspida/bin/ContainerLivenessProbe.sh
          failureThreshold: 2
          initialDelaySeconds: 900
          periodSeconds: 900
          timeoutSeconds: 60
        name: analyticsviewsbuilder
        volumeMounts:
        - mountPath: /var/vcap/sys/log/caspida/containerization
          name: log-volume
          readOnly: false
      hostAliases:
      - hostnames:
        - sujits-uba53-rhel-k8s-01.sv.splunk.com
        - sujits-uba53-rhel-k8s-01
        ip: 10.141.39.46
      - hostnames:
        - sujits-uba53-rhel-k8s-02.sv.splunk.com
        - sujits-uba53-rhel-k8s-02
        ip: 10.141.39.205
      - hostnames:
        - sujits-uba53-rhel-k8s-03.sv.splunk.com
        - sujits-uba53-rhel-k8s-03
        ip: 10.141.39.184
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/vcap/sys/log/caspida/containerization
        name: log-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource splunkuba/ReplicationController/analyticsviewsbuilder-rc
policy disallow-latest-tag -> resource splunkuba/ReplicationController/analyticsviewsbuilder-rc failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource splunkuba/ReplicationController/analyticsviewsbuilder-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource splunkuba/ReplicationController/analyticsviewsbuilder-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource splunkuba/ReplicationController/analyticsviewsbuilder-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource splunkuba/ReplicationController/analyticsviewsbuilder-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource splunkuba/ReplicationController/analyticsviewsbuilder-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource splunkuba/ReplicationController/analyticsviewsbuilder-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: analyticswriter.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to splunkuba/ReplicationController/analyticswriter-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  name: analyticswriter-rc
  namespace: splunkuba
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: analyticswriter
        uba-displayName: Analytics_Writer_Service
        uba-groupName: ubaanalytics
        uba-serviceName: analyticswriter
    spec:
      containers:
      - command:
        - /opt/caspida/bin/UBAFunctionExecutor
        - com.caspida.streaming.docker.launchers.GenericFunctionLauncher
        - --topic-name
        - AnalyticsTopic
        - -n
        - splunkuba
        - -f
        - analyticswriter
        - -c
        - com.caspida.streaming.docker.AnalyticsFunction
        env:
        - name: UBA_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: UBA_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UBA_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: UBA_HOSTIP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: UBA_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: UBA_POD_MAXHEAP
          value: 6G
        - name: UBA_POD_GROUPNAME
          value: ubaanalytics
        - name: RUN_AS_USER
          value: null
        - name: RUN_AS_GROUP
          value: null
        image: sujits-uba53-rhel-k8s-01:5000/ubabase:latest
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command:
              - /opt/caspida/bin/ContainerLifecycleHook.sh
              - startup
          preStop:
            exec:
              command:
              - /opt/caspida/bin/ContainerLifecycleHook.sh
              - shutdown
        livenessProbe:
          exec:
            command:
            - /opt/caspida/bin/ContainerLivenessProbe.sh
          failureThreshold: 2
          initialDelaySeconds: 900
          periodSeconds: 900
          timeoutSeconds: 60
        name: analyticswriter
        volumeMounts:
        - mountPath: /var/vcap/sys/log/caspida/containerization
          name: log-volume
          readOnly: false
      hostAliases:
      - hostnames:
        - sujits-uba53-rhel-k8s-01.sv.splunk.com
        - sujits-uba53-rhel-k8s-01
        ip: 10.141.39.46
      - hostnames:
        - sujits-uba53-rhel-k8s-02.sv.splunk.com
        - sujits-uba53-rhel-k8s-02
        ip: 10.141.39.205
      - hostnames:
        - sujits-uba53-rhel-k8s-03.sv.splunk.com
        - sujits-uba53-rhel-k8s-03
        ip: 10.141.39.184
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/vcap/sys/log/caspida/containerization
        name: log-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource splunkuba/ReplicationController/analyticswriter-rc
policy disallow-latest-tag -> resource splunkuba/ReplicationController/analyticswriter-rc failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource splunkuba/ReplicationController/analyticswriter-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource splunkuba/ReplicationController/analyticswriter-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource splunkuba/ReplicationController/analyticswriter-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource splunkuba/ReplicationController/analyticswriter-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource splunkuba/ReplicationController/analyticswriter-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource splunkuba/ReplicationController/analyticswriter-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: analyzer-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analyzer:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analyzer
  template:
    metadata:
      labels:
        app: analyzer
    spec:
      containers:
      - env:
        - name: TONE_ANALYZER_API_KEY
          valueFrom:
            secretKeyRef:
              key: apikey
              name: binding-tone
        - name: TONE_ANALYZER_SERVICE_API
          valueFrom:
            secretKeyRef:
              key: url
              name: binding-tone
        image: us.icr.io/<my_namespace>/analyzer:v1
        imagePullPolicy: Always
        name: analyzer
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer
policy disallow-default-namespace -> resource default/Deployment/analyzer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analyzer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analyzer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/analyzer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/analyzer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analyzer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: analyzer-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analyzer:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analyzer
  template:
    metadata:
      labels:
        app: analyzer
    spec:
      containers:
      - env:
        - name: TONE_ANALYZER_API_KEY
          valueFrom:
            secretKeyRef:
              key: apikey
              name: binding-tone
        - name: TONE_ANALYZER_SERVICE_API
          valueFrom:
            secretKeyRef:
              key: url
              name: binding-tone
        image: us.icr.io/<my_namespace>/analyzer:v1
        imagePullPolicy: Always
        name: analyzer
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer
policy disallow-default-namespace -> resource default/Deployment/analyzer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analyzer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analyzer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/analyzer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/analyzer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analyzer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: analyzer-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analyzer:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analyzer
  template:
    metadata:
      labels:
        app: analyzer
    spec:
      containers:
      - env:
        - name: TONE_ANALYZER_API_KEY
          valueFrom:
            secretKeyRef:
              key: apikey
              name: binding-tone
        - name: TONE_ANALYZER_SERVICE_API
          valueFrom:
            secretKeyRef:
              key: url
              name: binding-tone
        image: us.icr.io/sn-labs-evgenyzorin8/analyzer:v1
        imagePullPolicy: Always
        name: analyzer
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer
policy disallow-default-namespace -> resource default/Deployment/analyzer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analyzer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analyzer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/analyzer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/analyzer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analyzer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: analyzer-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analyzer:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analyzer
  template:
    metadata:
      labels:
        app: analyzer
    spec:
      containers:
      - env:
        - name: TONE_ANALYZER_API_KEY
          valueFrom:
            secretKeyRef:
              key: apikey
              name: binding-tone
        - name: TONE_ANALYZER_SERVICE_API
          valueFrom:
            secretKeyRef:
              key: url
              name: binding-tone
        image: us.icr.io/<my_namespace>/analyzer:v1
        imagePullPolicy: Always
        name: analyzer
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer
policy disallow-default-namespace -> resource default/Deployment/analyzer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analyzer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analyzer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/analyzer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/analyzer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analyzer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: analyzer-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analyzer:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analyzer
  template:
    metadata:
      labels:
        app: analyzer
    spec:
      containers:
      - env:
        - name: TONE_ANALYZER_API_KEY
          valueFrom:
            secretKeyRef:
              key: apikey
              name: binding-tone
        - name: TONE_ANALYZER_SERVICE_API
          valueFrom:
            secretKeyRef:
              key: url
              name: binding-tone
        image: us.icr.io/<my_namespace>/analyzer:v1
        imagePullPolicy: Always
        name: analyzer
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer
policy disallow-default-namespace -> resource default/Deployment/analyzer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analyzer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analyzer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/analyzer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/analyzer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analyzer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: analyzer-deployment5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analyzer:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analyzer
  template:
    metadata:
      labels:
        app: analyzer
    spec:
      containers:
      - env:
        - name: TONE_ANALYZER_API_KEY
          valueFrom:
            secretKeyRef:
              key: apikey
              name: binding-tone
        - name: TONE_ANALYZER_SERVICE_API
          valueFrom:
            secretKeyRef:
              key: url
              name: binding-tone
        image: us.icr.io/<my_namespace>/analyzer:v1
        imagePullPolicy: Always
        name: analyzer
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer
policy disallow-default-namespace -> resource default/Deployment/analyzer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analyzer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analyzer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/analyzer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/analyzer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analyzer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: analyzer-deployment6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analyzer:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analyzer
  template:
    metadata:
      labels:
        app: analyzer
    spec:
      containers:
      - env:
        - name: TONE_ANALYZER_API_KEY
          valueFrom:
            secretKeyRef:
              key: apikey
              name: binding-tone
        - name: TONE_ANALYZER_SERVICE_API
          valueFrom:
            secretKeyRef:
              key: url
              name: binding-tone
        image: us.icr.io/<my_namespace>/analyzer:v1
        imagePullPolicy: Always
        name: analyzer
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer
policy disallow-default-namespace -> resource default/Deployment/analyzer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analyzer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analyzer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/analyzer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/analyzer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analyzer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: analyzer-deployment7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analyzer:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analyzer
  template:
    metadata:
      labels:
        app: analyzer
    spec:
      containers:
      - env:
        - name: TONE_ANALYZER_API_KEY
          valueFrom:
            secretKeyRef:
              key: apikey
              name: binding-tone
        - name: TONE_ANALYZER_SERVICE_API
          valueFrom:
            secretKeyRef:
              key: url
              name: binding-tone
        image: us.icr.io/<my_namespace>/analyzer:v1
        imagePullPolicy: Always
        name: analyzer
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer
policy disallow-default-namespace -> resource default/Deployment/analyzer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analyzer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analyzer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/analyzer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/analyzer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analyzer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: analyzer-deployment8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analyzer:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analyzer
  template:
    metadata:
      labels:
        app: analyzer
    spec:
      containers:
      - env:
        - name: TONE_ANALYZER_API_KEY
          valueFrom:
            secretKeyRef:
              key: apikey
              name: binding-tone
        - name: TONE_ANALYZER_SERVICE_API
          valueFrom:
            secretKeyRef:
              key: url
              name: binding-tone
        image: us.icr.io/<my_namespace>/analyzer:v1
        imagePullPolicy: Always
        name: analyzer
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer
policy disallow-default-namespace -> resource default/Deployment/analyzer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analyzer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analyzer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/analyzer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/analyzer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analyzer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: analyzer-deployment9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/analyzer:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analyzer
  template:
    metadata:
      labels:
        app: analyzer
    spec:
      containers:
      - env:
        - name: TONE_ANALYZER_API_KEY
          valueFrom:
            secretKeyRef:
              key: apikey
              name: binding-tone
        - name: TONE_ANALYZER_SERVICE_API
          valueFrom:
            secretKeyRef:
              key: url
              name: binding-tone
        image: us.icr.io/<my_namespace>/analyzer:v1
        imagePullPolicy: Always
        name: analyzer
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer

skipped mutate policy add-safe-to-evict -> resource default/Deployment/analyzer
policy disallow-default-namespace -> resource default/Deployment/analyzer failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/analyzer failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/analyzer failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/analyzer failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/analyzer failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/analyzer failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/analyzer failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: analyzer-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analyzer:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: analyzer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analyzer-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analyzer:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: analyzer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analyzer-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analyzer:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: analyzer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analyzer-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analyzer:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: analyzer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analyzer-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analyzer:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: analyzer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analyzer-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analyzer:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: analyzer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analyzer-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analyzer:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: analyzer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analyzer-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analyzer:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: analyzer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analyzer-service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analyzer:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: analyzer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: analyzer-service9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/analyzer:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: analyzer
  name: analyzer
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    app: analyzer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: andjeutcha-webtop-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/andjeutcha-webtop:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: andjeutcha-webtop
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: andjeutcha-webtop
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: andjeutcha-webtop
    spec:
      containers:
      - env:
        - name: DOCKER_HOST
          value: tcp://localhost:2375
        - name: DOCKER_TLS_CERTDIR
          value: ""
        envFrom:
        - secretRef:
            name: andjeutcha-webtop-secrets
        image: ghcr.io/ai-cfia/webtop-ubuntu-kde:main
        name: webtop
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /config
          name: config
      - args:
        - --host=tcp://0.0.0.0:2375
        - --tls=false
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        image: docker:dind
        name: docker-dind
        ports:
        - containerPort: 2375
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/docker
          name: docker-graph-storage
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: andjeutcha-webtop-config-pvc
      - emptyDir: {}
        name: docker-graph-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/andjeutcha-webtop
policy disallow-default-namespace -> resource default/Deployment/andjeutcha-webtop failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: andjeutcha-webtop-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/andjeutcha-webtop-service:
apiVersion: v1
kind: Service
metadata:
  name: andjeutcha-webtop-service
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: andjeutcha-webtop
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: andjeutcha-webtop-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/andjeutcha-webtop-config-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: andjeutcha-webtop-config-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: andjeutcha-webtop-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/andjeutcha-webtop:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: andjeutcha-webtop
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: andjeutcha-webtop
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: andjeutcha-webtop
    spec:
      containers:
      - env:
        - name: DOCKER_HOST
          value: tcp://localhost:2375
        - name: DOCKER_TLS_CERTDIR
          value: ""
        envFrom:
        - secretRef:
            name: andjeutcha-webtop-secrets
        image: ghcr.io/ai-cfia/webtop-ubuntu-kde:main
        name: webtop
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /config
          name: config
      - args:
        - --host=tcp://0.0.0.0:2375
        - --tls=false
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        image: docker:dind
        name: docker-dind
        ports:
        - containerPort: 2375
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/docker
          name: docker-graph-storage
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: andjeutcha-webtop-config-pvc
      - emptyDir: {}
        name: docker-graph-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/andjeutcha-webtop
policy disallow-default-namespace -> resource default/Deployment/andjeutcha-webtop failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/andjeutcha-webtop failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: andjeutcha-webtop-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/andjeutcha-webtop-service:
apiVersion: v1
kind: Service
metadata:
  name: andjeutcha-webtop-service
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: andjeutcha-webtop
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: andjeutcha-webtop-deployment1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/andjeutcha-webtop-config-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: andjeutcha-webtop-config-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: andjeutcha-webtop-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/andjeutcha-webtop-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: andjeutcha-webtop-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: andjeutcha-webtop.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: andjeutcha-webtop-service
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - andjeutcha-webtop.inspection.alpha.canada.ca
    secretName: andjeutcha-webtop-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: andjeutcha-webtop-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/andjeutcha-webtop-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: inspection.alpha.canada.ca
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/client_max_body_size: 200m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/whitelist-source-range: 205.194.32.0/24,10.244.0.0/16,192.197.71.0/24
  name: andjeutcha-webtop-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: andjeutcha-webtop.inspection.alpha.canada.ca
    http:
      paths:
      - backend:
          service:
            name: andjeutcha-webtop-service
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - andjeutcha-webtop.inspection.alpha.canada.ca
    secretName: andjeutcha-webtop-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: andjeutcha-webtop-secrets.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/andjeutcha-webtop-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/webtop/test
    avp.kubernetes.io/secret-version: "1"
  name: andjeutcha-webtop-secrets
  namespace: default
stringData:
  CUSTOM_USER: <CUSTOM_USER>
  PASSWORD: <PASSWORD>
  PGID: <PGID>
  PUID: <PUID>
  TITLE: <TITLE>
  TZ: <TZ>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: andjeutcha-webtop-secrets1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/andjeutcha-webtop-secrets:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/webtop/test
    avp.kubernetes.io/secret-version: "1"
  name: andjeutcha-webtop-secrets
  namespace: default
stringData:
  CUSTOM_USER: <CUSTOM_USER>
  PASSWORD: <PASSWORD>
  PGID: <PGID>
  PUID: <PUID>
  TITLE: <TITLE>
  TZ: <TZ>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: andy-monitor.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/andy-mon:
apiVersion: v1
kind: Pod
metadata:
  name: andy-mon
  namespace: default
spec:
  containers:
  - image: kovaleskilab/imagemagick:v2-andy
    imagePullPolicy: IfNotPresent
    name: andy-mon
    resources:
      limits:
        cpu: 6
        memory: 8G
      requests:
        cpu: 6
        memory: 6G
    stdin: true
    tty: true
    volumeMounts:
    - mountPath: /workspace
      name: andy-hpc
  restartPolicy: Never
  volumes:
  - name: andy-hpc
    persistentVolumeClaim:
      claimName: andy-hpc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/andy-mon

skipped mutate policy add-safe-to-evict -> resource default/Pod/andy-mon
policy disallow-default-namespace -> resource default/Pod/andy-mon failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/andy-mon failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/andy-mon failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/andy-mon failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-pod-probes -> resource default/Pod/andy-mon failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/andy-mon failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/andy-mon failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: andy-monitor1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/andy-mon:
apiVersion: v1
kind: Pod
metadata:
  name: andy-mon
  namespace: default
spec:
  containers:
  - image: docker.io/jalexhurt/imagemagick
    name: andy-mon
    resources:
      limits:
        cpu: 6
        memory: 8G
      requests:
        cpu: 6
        memory: 6G
    stdin: true
    tty: true
    volumeMounts:
    - mountPath: /workspace
      name: andy-hpc
  restartPolicy: Never
  volumes:
  - name: andy-hpc
    persistentVolumeClaim:
      claimName: andy-hpc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/andy-mon

skipped mutate policy add-safe-to-evict -> resource default/Pod/andy-mon
policy disallow-default-namespace -> resource default/Pod/andy-mon failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/andy-mon failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/andy-mon failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/andy-mon failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/andy-mon failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-pod-probes -> resource default/Pod/andy-mon failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/andy-mon failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/andy-mon failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: angular.-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/angular-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: angular-web
  name: angular-service
  namespace: default
spec:
  ports:
  - nodePort: 31000
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: angular-web
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/angular-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: angular.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/angular-service:
apiVersion: v1
kind: Service
metadata:
  name: angular-service
  namespace: default
spec:
  ports:
  - port: 4200
    protocol: TCP
    targetPort: 80
  selector:
    app: angular

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: angular_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/angular-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: angular
  name: angular-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: angular
  template:
    metadata:
      labels:
        app: angular
    spec:
      containers:
      - env:
        - name: API_URL
          valueFrom:
            configMapKeyRef:
              key: API_URL
              name: configmap
        image: gporras/chat-socket-front:latest
        name: angular
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/angular-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/angular-deployment
policy disallow-default-namespace -> resource default/Deployment/angular-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/angular-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/angular-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/angular-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/angular-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/angular-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/angular-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/angular-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/angular-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: angular-example-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to angular-demo-example/Deployment/angular-example-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: angular-example-deployment
  namespace: angular-demo-example
spec:
  replicas: 1
  selector:
    matchLabels:
      app: angular-example
  template:
    metadata:
      labels:
        app: angular-example
    spec:
      containers:
      - image: docker pull codedecode/dockerdemo:latest
        name: angular-example-container
        ports:
        - containerPort: 8090

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource angular-demo-example/Deployment/angular-example-deployment

skipped mutate policy add-safe-to-evict -> resource angular-demo-example/Deployment/angular-example-deployment
policy disallow-latest-tag -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: angular-example-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to angular-demo-example/Deployment/angular-example-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: angular-example-deployment
  namespace: angular-demo-example
spec:
  replicas: 1
  selector:
    matchLabels:
      app: angular-example
  template:
    metadata:
      labels:
        app: angular-example
    spec:
      containers:
      - image: docker pull codedecode/dockerdemo:latest
        name: angular-example-container
        ports:
        - containerPort: 8090

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource angular-demo-example/Deployment/angular-example-deployment

skipped mutate policy add-safe-to-evict -> resource angular-demo-example/Deployment/angular-example-deployment
policy disallow-latest-tag -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource angular-demo-example/Deployment/angular-example-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: angular-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to angular-example/Ingress/angular-example-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: angular-example-ingress
  namespace: angular-example
spec:
  rules:
  - host: my-angular.com
    http:
      paths:
      - backend:
          service:
            name: angular-example-service
            port:
              number: 8092
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: angular-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to angular-example/Ingress/angular-example-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: angular-example-ingress
  namespace: angular-example
spec:
  rules:
  - host: my-angular.com
    http:
      paths:
      - backend:
          service:
            name: angular-example-service
            port:
              number: 8092
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: angular-ingress2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/angular-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: angular-ingress
  namespace: default
spec:
  rules:
  - host: frontend.local
    http:
      paths:
      - backend:
          service:
            name: angular-service
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: angular-manifest.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/angularapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: angularapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: angularapp
  template:
    metadata:
      labels:
        app: angularapp
    spec:
      containers:
      - image: elfn/food-delivery-app:2
        imagePullPolicy: Always
        name: angular-app-container
        ports:
        - containerPort: 80
          hostPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/angularapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/angularapp
policy disallow-default-namespace -> resource default/Deployment/angularapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/angularapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/angularapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/angularapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/angularapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/angularapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/angularapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/angularapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: angular-manifest_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/angular-service:
apiVersion: v1
kind: Service
metadata:
  name: angular-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: angularapp

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: angular-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to angular-example/Service/angular-example-service:
apiVersion: v1
kind: Service
metadata:
  name: angular-example-service
  namespace: angular-example
spec:
  ports:
  - port: 8091
    protocol: TCP
    targetPort: 8090
  selector:
    app: angular-example

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: angular-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to angular-example/Service/angular-example-service:
apiVersion: v1
kind: Service
metadata:
  name: angular-example-service
  namespace: angular-example
spec:
  ports:
  - port: 8091
    protocol: TCP
    targetPort: 8090
  selector:
    app: angular-example

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotatedobject_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/annotatedobject-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: epha
    app.kubernetes.io/instance: annotatedobject-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: epha
  name: annotatedobject-editor-role
  namespace: default
rules:
- apiGroups:
  - epha.avyr.io
  resources:
  - annotatedobjects
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - epha.avyr.io
  resources:
  - annotatedobjects/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotatedobject_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/annotatedobject-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: epha
    app.kubernetes.io/instance: annotatedobject-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: epha
  name: annotatedobject-viewer-role
  namespace: default
rules:
- apiGroups:
  - epha.avyr.io
  resources:
  - annotatedobjects
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - epha.avyr.io
  resources:
  - annotatedobjects/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotation.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/anotation:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    description: aplikasi ini adalah aplikasi untuk menjalankan tralalala trilili
    developer-notes: dont touch this pod
  labels:
    team: sales
  name: anotation
  namespace: default
spec:
  containers:
  - image: nginx
    name: nginx-webserver
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/anotation

skipped mutate policy add-safe-to-evict -> resource default/Pod/anotation
policy disallow-default-namespace -> resource default/Pod/anotation failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/anotation failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/anotation failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/anotation failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/anotation failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/anotation failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/anotation failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/anotation failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/anotation failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: annotation1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/anotation:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    description: aplikasi ini adalah aplikasi untuk menjalankan tralalala trilili
    developer-notes: dont touch this pod
  labels:
    team: sales
  name: anotation
  namespace: default
spec:
  containers:
  - image: nginx
    name: nginx-webserver
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/anotation

skipped mutate policy add-safe-to-evict -> resource default/Pod/anotation
policy disallow-default-namespace -> resource default/Pod/anotation failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/anotation failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/anotation failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/anotation failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/anotation failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/anotation failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/anotation failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/anotation failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/anotation failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: annotation2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-annotation:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    buildDate: "20210502"
    builder: seongmi Lee (seongmi.lee@gmail.com)
    imageRegistry: https://hub.docker.com/
  name: pod-annotation
  namespace: default
spec:
  containers:
  - image: nginx:1.14
    name: nginx
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-annotation

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-annotation
policy disallow-default-namespace -> resource default/Pod/pod-annotation failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/pod-annotation failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-annotation failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-annotation failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/pod-annotation failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-annotation failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-annotation failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-annotation failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: annotation3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-annotation:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    buildDate: "20210502"
    builder: seongmi Lee (seongmi.lee@gmail.com)
    imageRegistry: https://hub.docker.com/
  name: pod-annotation
  namespace: default
spec:
  containers:
  - image: nginx:1.14
    name: nginx
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-annotation

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-annotation
policy disallow-default-namespace -> resource default/Pod/pod-annotation failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/pod-annotation failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-annotation failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-annotation failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/pod-annotation failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-annotation failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-annotation failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-annotation failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: annotation4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-annotation:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    buildDate: "20210502"
    builder: seongmi Lee (seongmi.lee@gmail.com)
    imageRegistry: https://hub.docker.com/
  name: pod-annotation
  namespace: default
spec:
  containers:
  - image: nginx:1.14
    name: nginx
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-annotation

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-annotation
policy disallow-default-namespace -> resource default/Pod/pod-annotation failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/pod-annotation failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-annotation failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-annotation failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/pod-annotation failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-annotation failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-annotation failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-annotation failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: Annotations_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-with-annotation:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    commit-message: testign for nginx
    owner: Nidhi
  name: pod-with-annotation
  namespace: default
spec:
  containers:
  - image: nginx
    name: first-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-with-annotation

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-with-annotation
policy disallow-default-namespace -> resource default/Pod/pod-with-annotation failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod-with-annotation failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod-with-annotation failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-with-annotation failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-with-annotation failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/pod-with-annotation failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-with-annotation failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-with-annotation failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-with-annotation failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: Annotations_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/<Pod name>:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    imageregistry: https://hub.docker.com/
  name: <Pod name>
  namespace: default
spec:
  containers:
  - image: <image name>
    name: <Container name>
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/<Pod name>

skipped mutate policy add-safe-to-evict -> resource default/Pod/<Pod name>
policy disallow-default-namespace -> resource default/Pod/<Pod name> failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/<Pod name> failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/<Pod name> failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/<Pod name> failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/<Pod name> failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/<Pod name> failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/<Pod name> failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/<Pod name> failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/<Pod name> failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: Annotations_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/quote:
apiVersion: v1
kind: Service
metadata:
  annotations:
    a8r.io/owner: “@sally”
    a8r.io/repository: https://github.com/ambassadorlabs/k8s-for-humans/
  name: quote
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: quote

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: Annotations_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/annotations-demo:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    imageregistry: https://hub.docker.com/
  name: annotations-demo
  namespace: default
spec:
  containers:
  - image: nginx:1.14.2
    name: nginx
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/annotations-demo

skipped mutate policy add-safe-to-evict -> resource default/Pod/annotations-demo
policy disallow-default-namespace -> resource default/Pod/annotations-demo failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/annotations-demo failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/annotations-demo failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/annotations-demo failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/annotations-demo failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/annotations-demo failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/annotations-demo failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/annotations-demo failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: Annotations_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/annotations-demo:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    why_use_this_demo: It's to learn about annotations
  name: annotations-demo
  namespace: default
spec:
  containers:
  - image: nginx:1.14.2
    name: nginx
    ports:
    - containerPort: 80
  selector:
    env: prod

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/annotations-demo

skipped mutate policy add-safe-to-evict -> resource default/Pod/annotations-demo
policy disallow-default-namespace -> resource default/Pod/annotations-demo failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/annotations-demo failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/annotations-demo failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/annotations-demo failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/annotations-demo failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/annotations-demo failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/annotations-demo failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/annotations-demo failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: annotations-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/grpc-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.org/grpc-services: grpc-svc
  name: grpc-ingress
  namespace: default
spec:
  rules:
  - host: grpc.example.com
    http:
      paths:
      - backend:
          service:
            name: grpc-svc
            port:
              number: 50051
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - grpc.example.com
    secretName: grpc-secret

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotations-ingress_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/grpc-secret:
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lKQUs5L2NDNWZocDJHTUEwR0NTcUdTSWIzRFFFQkJRVUFNQ0V4SHpBZEJnTlYKQkFNVEZrNUhTVTVZU1c1bmNtVnpjME52Ym5SeWIyeHNaWEl3SGhjTk1UY3dPRE14TVRBeE16UTRXaGNOTVRndwpPRE14TVRBeE16UTRXakFoTVI4d0hRWURWUVFERXhaT1IwbE9XRWx1WjNKbGMzTkRiMjUwY205c2JHVnlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0bXhhMDhadExIaWxleWhOUWN5OUl4ankKWTBYdy9CRmZvM3duMDRsSXRoaGRxbkZ3NTZIVG1RVjIvbnEyRUxMdTNoejNjc3Urc3M5WFEzL3BrbXVwTEE5TApuaVVRZFVNcER4VlE1VFFKRW5CanJ5aXc4RWFlcEp4NUNCYVB5V3ZSZkpPb0pFSW56ZmNaYnE4OEVmQklYOHdtClFCa0xlcnFTVmRYWjBXR3FINVVQVlVZMVBqZXBqSXAyZ0NvbDRMUjM1aHRlSk9OMmZVTEF6cmRGMDBDT092WGsKUzgwRGw5eHdoUkVwVWVySGNuNXZod3BJazNkY3FNS3BxWTY2elF3dStMcFJEM3ZVWjR0eC9VYnlUdStkMkdhVwpWaG1RLy85RmtzUzVBS1d2ZXkrK3pPUTFDZTAxNzhDU0hRYXRDaWFuU2lTT3lwakZtTUZ0N1Mra25pbm9Xd0lECkFRQUJvNEdETUlHQU1CMEdBMVVkRGdRV0JCUlFUODVHRzV6a0QxV3FNSzZvOW8xWWFqUVBXVEJSQmdOVkhTTUUKU2pCSWdCUlFUODVHRzV6a0QxV3FNSzZvOW8xWWFqUVBXYUVscENNd0lURWZNQjBHQTFVRUF4TVdUa2RKVGxoSgpibWR5WlhOelEyOXVkSEp2Ykd4bGNvSUpBSzkvY0M1ZmhwMkdNQXdHQTFVZEV3UUZNQU1CQWY4d0RRWUpLb1pJCmh2Y05BUUVGQlFBRGdnRUJBSTIxcXpDN0lIYTEzblNvRkMxVFdtSUZydjQ2L2hRSFRjSFhxazRXZW16Z3VwVW8Kdmp0R05DVFlaR1VtL3RZY1FobDZvOXVJZlV5N3NlVS9OeWVCWHpOdGFiQUczQUIzanREVUJySy9xeVJ5cDZjRApIL0MzNmd5VFh3OGJxYVdOSzg0VGhYOVg2MFVFNVE2NzFUQUJMbk9paEhKUVVxTHdRc1VkdEkxRHBQb1BOOFlWCm5YQVl1RXJKWTVRckhzdHZoOFNZM2xoV3BSOWJ0eTVySldweUhIM3NDL1lHN2lFam5TUXp2LzdhK3cxTW1RQ0EKTk1wQnFvdzJKZkdveklyV2JvcFBVR2lmZ2szSjBKT24rcnA4RDRVc1lvNEo4Y3RvVk5qUFdmeU9zczB6ZWZ2aQpyUmVEUDdJOXc5THF1eERIRUhzeUpMUXN0MzNlQWlna1FBQU9zMUU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdG14YTA4WnRMSGlsZXloTlFjeTlJeGp5WTBYdy9CRmZvM3duMDRsSXRoaGRxbkZ3CjU2SFRtUVYyL25xMkVMTHUzaHozY3N1K3NzOVhRMy9wa211cExBOUxuaVVRZFVNcER4VlE1VFFKRW5CanJ5aXcKOEVhZXBKeDVDQmFQeVd2UmZKT29KRUluemZjWmJxODhFZkJJWDh3bVFCa0xlcnFTVmRYWjBXR3FINVVQVlVZMQpQamVwaklwMmdDb2w0TFIzNWh0ZUpPTjJmVUxBenJkRjAwQ09PdlhrUzgwRGw5eHdoUkVwVWVySGNuNXZod3BJCmszZGNxTUtwcVk2NnpRd3UrTHBSRDN2VVo0dHgvVWJ5VHUrZDJHYVdWaG1RLy85RmtzUzVBS1d2ZXkrK3pPUTEKQ2UwMTc4Q1NIUWF0Q2lhblNpU095cGpGbU1GdDdTK2tuaW5vV3dJREFRQUJBb0lCQVFDQ002UkFNd2dKRGJOTwp5OTBZY2NFdEk4a2RBZmFXY3ZBSUI3MkZSaDhYbVJ5QllxWnJMUjJSd2t6RUpXRjlXYmtUM3lqZVRuMjFzamRlCmZoVi81RWZDb3NnZC8rWlhTN0FxaTlSSlEzS1dMcEYzbTF0dW8zam5sS2J1RnV4Wm54TE9EN1dhNjN6dGpNZ2kKTUFCMzdVQTYzOE1OVE5MY3JmMTBOa1paSTVRQkpYWWNPRk1ueDJ4MXVLRkU5RHQzWUEzbE9nOWNGdmFJTFpEQQo3WTVHVDlmUXdJQS92OGRWRU1DTkNiSzI1b1dnRG90WUdZaUhiYm1hUk9DTkRpNzVQZFpkM2daQ3IxUHFPWEZHCkJaVEh1L3Q4OXMwV1QyUkpNV2ljVW5XV0oyVHhmRWU1YUQ4R0JjRzEyN0pkamxLSitWZCtHWmxvODVYYVBvdnUKTVFxek1nbUJBb0dCQU9IS1pGbzVnSVkzL0J3aElCZ2RGUytnOG1GK21JTWpxSGVMN1NFSTNYL0UzWjhJd0syUgpmTTVFRUpTZnlETFpDVkNlSS8veWhBOUF6dG9Dam12TzdjMUxJT3kwR3k5dFlJVHlYY0xQNWNBWitBTkJCRExFCitYZkx5SE9KVXBDM2o4RFRZWDF0RENiUGJ5UFZTZENUNHNKT2JrNDVZVXQ3a3pEYTVHSFpsL3hqQW9HQkFNN1UKayt6TE5zbFQ2azJaakJaZW81YUdoMUNCSVV4bzNFNVpGYUZWR2lyMSs4NVlkVDdXVEpublJ6K0l6QXBMMmRqZApPZjVlQS9wa3JVNExMeGMzVVNEYjJwczJuT1hQd1p1OWdqRTM3aml0SUFRd3BHL3FiamQ3Y1ZaR2hlUkQyK3l4ClptTWU3c1BCZEVmcldmK1REYU9lT3B4L2RRcnFyTEc2UXo1ZHlQbXBBb0dBVmsyZ0VnU01wY0RjY253TzRtaXIKWW1zb2VpK0RhQXpISmZxc0JzWjJzNUd5REVteUxDWENDSzFua1FlSjVEV2xJOVZ1ZVRSZldkMHhzNDdxbFRhaApHcWt1eW9zRklSbXpuTjF2RFRtZDNkR1BSTjhqRmF6SWxndWtjTlQ2WkNwbG5oU3QzTjFEbWNvTDl5eGRiSVk2ClZIN2FGcmhFQWpBWDBNSzZMTlNaRFhVQ2dZQlRYc3JWeTBBbFBTY1g2b25XUm9Xb1drZlhBb1lhbDdZZCtyakcKVkZoODhyUnlnNk9YRmFqQTdNSUNjVERXQWFjcFRGdGhGaUtDWHV5Z3BjOXdpMEt2ZlErTU95SlpYRHBOZmNFcAo5OEtWbyt0ZzVQNlRnaXExUUpQNTArbUtqblBxMzhOR3R5UkZVZ2grS1BjWkZ2eUxkRzlwdjlLOCtNVnR5b2ZxCmJzRmhLUUtCZ0NvcEg5Wm95MjJBNStLcnJYZmQ0VXRBcndjN0dVanFUT1hhTzgyd3FpU0hZMndPTGdkWWw0L3kKSDJEYy9EMWxmWS9GL09sckNMZDNpL0lLc0wxNG13R2dxODZRdDhxeTIwcWw4RFNyWG91TmhsQTJmL1ZUTk1SMAp2OXAwU1JrQjI2UVYyUitndnNVYk9xb1lhMlVQVkNuQW9QeTYwTXlBaVJUR3cyeTExbm9lCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: grpc-secret
  namespace: default
type: kubernetes.io/tls

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotations-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/annotations-ingress-master:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.org/mergeable-ingress-type: master
  name: annotations-ingress-master
  namespace: default
spec:
  rules:
  - host: annotations.example.com

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/annotations-ingress-master failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: annotations-ingress1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/annotations-ingress-backend1-minion:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.org/mergeable-ingress-type: minion
  name: annotations-ingress-backend1-minion
  namespace: default
spec:
  rules:
  - host: annotations.example.com
    http:
      paths:
      - backend:
          service:
            name: backend1-svc
            port:
              number: 80
        path: /backend1
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotations-ingress1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/annotations-ingress-backend2-minion:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.org/mergeable-ingress-type: minion
  name: annotations-ingress-backend2-minion
  namespace: default
spec:
  rules:
  - host: annotations.example.com
    http:
      paths:
      - backend:
          service:
            name: backend2-svc
            port:
              number: 80
        path: /backend2
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotations-ingress2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/annotations-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: annotations-ingress
  namespace: default
spec:
  rules:
  - host: annotations.example.com
    http:
      paths:
      - backend:
          service:
            name: backend2-svc
            port:
              number: 80
        path: /backend2
        pathType: Prefix
      - backend:
          service:
            name: backend1-svc
            port:
              number: 80
        path: /backend1
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotations-ingress3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/custom-annotations-ingress-master:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    custom.nginx.org/feature-a: "on"
    custom.nginx.org/feature-b: "512"
    custom.nginx.org/test-split-feature: '  master.ip,master'
    kubernetes.io/ingress.class: nginx
    nginx.org/mergeable-ingress-type: master
  name: custom-annotations-ingress-master
  namespace: default
spec:
  rules:
  - host: custom-annotations.example.com

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/custom-annotations-ingress-master failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: annotations-ingress3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/custom-annotations-ingress-backend1-minion:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    custom.nginx.org/test-split-feature: '  minion1'
    kubernetes.io/ingress.class: nginx
    nginx.org/mergeable-ingress-type: minion
  name: custom-annotations-ingress-backend1-minion
  namespace: default
spec:
  rules:
  - host: custom-annotations.example.com
    http:
      paths:
      - backend:
          service:
            name: backend1-svc
            port:
              number: 80
        path: /backend1
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotations-ingress3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/custom-annotations-ingress-backend2-minion:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    custom.nginx.org/test-split-feature: 'minion2  '
    kubernetes.io/ingress.class: nginx
    nginx.org/mergeable-ingress-type: minion
  name: custom-annotations-ingress-backend2-minion
  namespace: default
spec:
  rules:
  - host: custom-annotations.example.com
    http:
      paths:
      - backend:
          service:
            name: backend2-svc
            port:
              number: 80
        path: /backend2
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotations-ingress4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/custom-annotations-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    custom.nginx.org/feature-a: "on"
    custom.nginx.org/feature-b: "512"
    custom.nginx.org/test-split-feature: '  192.168.1.1   ,some-ip'
    kubernetes.io/ingress.class: nginx
  name: custom-annotations-ingress
  namespace: default
spec:
  rules:
  - host: custom-annotations.example.com
    http:
      paths:
      - backend:
          service:
            name: backend2-svc
            port:
              number: 80
        path: /backend2
        pathType: Prefix
      - backend:
          service:
            name: backend1-svc
            port:
              number: 80
        path: /backend1
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotations-ingress-snippets.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/annotations-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.org/server-snippets: tcp_nodelay on;
  name: annotations-ingress
  namespace: default
spec:
  rules:
  - host: annotations.example.com
    http:
      paths:
      - backend:
          service:
            name: backend2-svc
            port:
              number: 80
        path: /backend2
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotations-rl-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/annotations-rl-ingress-master:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.org/mergeable-ingress-type: master
  name: annotations-rl-ingress-master
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: ingress-rl.example.com

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/annotations-rl-ingress-master failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: annotations-rl-ingress_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/annotations-rl-ingress-minion:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.org/limit-req-key: ${binary_remote_addr}
    nginx.org/limit-req-rate: 1r/s
    nginx.org/limit-req-zone-size: 10M
    nginx.org/mergeable-ingress-type: minion
  name: annotations-rl-ingress-minion
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: ingress-rl.example.com
    http:
      paths:
      - backend:
          service:
            name: backend1-svc
            port:
              number: 80
        path: /backend1
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: annotations-rl-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/annotations-rl-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.org/limit-req-key: ${binary_remote_addr}
    nginx.org/limit-req-rate: 1r/s
    nginx.org/limit-req-zone-size: 10M
  name: annotations-rl-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: ingress-rl.example.com
    http:
      paths:
      - backend:
          service:
            name: backend2-svc
            port:
              number: 80
        path: /backend2
        pathType: Prefix
      - backend:
          service:
            name: backend1-svc
            port:
              number: 80
        path: /backend1
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: announce-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/announce-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: announce-app
  name: announce-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: announce-app
  template:
    metadata:
      labels:
        app: announce-app
    spec:
      containers:
      - env:
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              key: url
              name: announce-configmap
        - name: MYSQL_USER
          value: root
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: root_password
              name: mysql-secret
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database
              name: mysql-secret
        image: rahul7502/announcement-node-app:latest
        name: announce-app
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/announce-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/announce-app
policy disallow-default-namespace -> resource default/Deployment/announce-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/announce-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/announce-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/announce-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/announce-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/announce-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/announce-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/announce-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/announce-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: announce-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/announce-service:
apiVersion: v1
kind: Service
metadata:
  name: announce-service
  namespace: default
spec:
  ports:
  - nodePort: 30001
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: announce-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: announce-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/announce-configmap:
apiVersion: v1
data:
  url: mysql-service
kind: ConfigMap
metadata:
  name: announce-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: announcement_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/announcement-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: router-operator
    app.kubernetes.io/instance: announcement-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: router-operator
  name: announcement-editor-role
  namespace: default
rules:
- apiGroups:
  - routing.lf-net.org
  resources:
  - announcements
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - routing.lf-net.org
  resources:
  - announcements/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: announcement_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/announcement-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: router-operator
    app.kubernetes.io/instance: announcement-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: router-operator
  name: announcement-viewer-role
  namespace: default
rules:
- apiGroups:
  - routing.lf-net.org
  resources:
  - announcements
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - routing.lf-net.org
  resources:
  - announcements/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: anomalyaggregationmodel.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to splunkuba/ReplicationController/anomalyaggregationmodel-rc:
apiVersion: v1
kind: ReplicationController
metadata:
  name: anomalyaggregationmodel-rc
  namespace: splunkuba
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: anomalyaggregationmodel
        uba-displayName: Anomaly_Aggregation_Task
        uba-groupName: ubastreamingmodels
        uba-serviceName: realtimemodels
    spec:
      containers:
      - command:
        - /opt/caspida/bin/UBAFunctionExecutor
        - com.caspida.streaming.docker.KafkaModelFunctionExecutor
        - -n
        - splunkuba
        - -G
        - AnomalyAggregationModel
        - -f
        - AnomalyAggregationModel
        env:
        - name: UBA_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: UBA_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UBA_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: UBA_HOSTIP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: UBA_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: UBA_POD_MAXHEAP
          value: 128M
        - name: UBA_POD_GROUPNAME
          value: ubastreamingmodels
        - name: RUN_AS_USER
          value: null
        - name: RUN_AS_GROUP
          value: null
        image: sujits-uba53-rhel-k8s-01:5000/ubabase:latest
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command:
              - /opt/caspida/bin/ContainerLifecycleHook.sh
              - startup
          preStop:
            exec:
              command:
              - /opt/caspida/bin/ContainerLifecycleHook.sh
              - shutdown
        livenessProbe:
          exec:
            command:
            - /opt/caspida/bin/ContainerLivenessProbe.sh
          failureThreshold: 2
          initialDelaySeconds: 900
          periodSeconds: 900
          timeoutSeconds: 60
        name: anomalyaggregationmodel
        volumeMounts:
        - mountPath: /var/vcap/sys/log/caspida/containerization
          name: log-volume
          readOnly: false
      hostAliases:
      - hostnames:
        - sujits-uba53-rhel-k8s-01.sv.splunk.com
        - sujits-uba53-rhel-k8s-01
        ip: 10.141.39.46
      - hostnames:
        - sujits-uba53-rhel-k8s-02.sv.splunk.com
        - sujits-uba53-rhel-k8s-02
        ip: 10.141.39.205
      - hostnames:
        - sujits-uba53-rhel-k8s-03.sv.splunk.com
        - sujits-uba53-rhel-k8s-03
        ip: 10.141.39.184
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/vcap/sys/log/caspida/containerization
        name: log-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource splunkuba/ReplicationController/anomalyaggregationmodel-rc
policy disallow-latest-tag -> resource splunkuba/ReplicationController/anomalyaggregationmodel-rc failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource splunkuba/ReplicationController/anomalyaggregationmodel-rc failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource splunkuba/ReplicationController/anomalyaggregationmodel-rc failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource splunkuba/ReplicationController/anomalyaggregationmodel-rc failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource splunkuba/ReplicationController/anomalyaggregationmodel-rc failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource splunkuba/ReplicationController/anomalyaggregationmodel-rc failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource splunkuba/ReplicationController/anomalyaggregationmodel-rc failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: another_basic_pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cool-namespace/Pod/cool-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    tier: frontend
  name: cool-pod
  namespace: cool-namespace
spec:
  containers:
  - image: nginx
    name: nginx-test
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cool-namespace/Pod/cool-pod

skipped mutate policy add-safe-to-evict -> resource cool-namespace/Pod/cool-pod
policy disallow-latest-tag -> resource cool-namespace/Pod/cool-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource cool-namespace/Pod/cool-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cool-namespace/Pod/cool-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cool-namespace/Pod/cool-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource cool-namespace/Pod/cool-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource cool-namespace/Pod/cool-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource cool-namespace/Pod/cool-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource cool-namespace/Pod/cool-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: another-pvc-test.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/another-nfs-pvc-test:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: another-nfs-pvc-test
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 50Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: antiaffinity.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to maloth/Deployment/anti-affinity:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    purpose: learning
  name: anti-affinity
  namespace: maloth
spec:
  replicas: 4
  selector:
    matchLabels:
      type: create
  template:
    metadata:
      labels:
        company: talent
        devops: "18"
        type: create
      name: httpd-test
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: batch
                operator: NotIn
                values:
                - "18"
      containers:
      - image: httpd:latest
        name: httpd
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource maloth/Deployment/anti-affinity

skipped mutate policy add-safe-to-evict -> resource maloth/Deployment/anti-affinity
policy disallow-latest-tag -> resource maloth/Deployment/anti-affinity failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource maloth/Deployment/anti-affinity failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource maloth/Deployment/anti-affinity failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource maloth/Deployment/anti-affinity failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource maloth/Deployment/anti-affinity failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource maloth/Deployment/anti-affinity failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource maloth/Deployment/anti-affinity failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource maloth/Deployment/anti-affinity failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: anti-affinity.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/echo:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: echo
  name: echo
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: echo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: echo
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - echo
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: NGINX_PORT
          value: "80"
        - name: SERVER_NAME
          value: localhost
        - name: BACKEND_HOST
          value: localhost:8080
        - name: BACKEND_MAX_FAILS
          value: "3"
        - name: BACKEND_FAIL_TIMEOUT
          value: 10s
        image: ghcr.io/gihyodocker/simple-nginx-proxy:v0.1.0
        name: nginx
        ports:
        - containerPort: 80
      - image: ghcr.io/gihyodocker/echo:v0.1.0
        name: echo
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/echo

skipped mutate policy add-safe-to-evict -> resource default/Deployment/echo
policy disallow-default-namespace -> resource default/Deployment/echo failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/echo failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/echo failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/echo failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/echo failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/echo failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/echo failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: antiaffinity1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/antiaffinity-p:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: antiaffinity-p
  name: antiaffinity-p
  namespace: default
spec:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            name: podb
        topologyKey: kubernetes.io/hostname
  containers:
  - image: nginx
    name: antiaffinity-c
    ports:
    - containerPort: 80
    resources:
      limits:
        cpu: 500m
        memory: 500Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/antiaffinity-p

skipped mutate policy add-safe-to-evict -> resource default/Pod/antiaffinity-p
policy disallow-default-namespace -> resource default/Pod/antiaffinity-p failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/antiaffinity-p failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/antiaffinity-p failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/antiaffinity-p failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/antiaffinity-p failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/antiaffinity-p failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/antiaffinity-p failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/antiaffinity-p failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/antiaffinity-p failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: antiaffinity2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: nginx
            topologyKey: region
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx
policy disallow-default-namespace -> resource default/Deployment/nginx failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: anvesh-csr.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CertificateSigningRequest/user-request-anvesh:
apiVersion: certificates.k8s.io/v1
kind: CertificateSigningRequest
metadata:
  name: user-request-anvesh
  namespace: default
spec:
  expirationSeconds: 315569260
  groups:
  - system:authenticated
  request: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ1ZqQ0NBVDRDQVFBd0VURVBNQTBHQTFVRUF3d0dZVzUyWlhOb01JSUJJakFOQmdrcWhraUc5dzBCQVFFRgpBQU9DQVE4QU1JSUJDZ0tDQVFFQTBqOWo2QVFMRldHWHR4Q1BoV1o0YUZTVXRUNitjVkduK3F0QWUxcXNOamsxCmhWSjdHcGREKzk4RjJrTjdseFkybUpnaGUyNHRqQ3B3cm5SY1hRRDI3MUdhWnNFYXVwVVVTVmZLeE5Idld4aEoKN2twRy92RGdZUEdoZjN5NVkvOVJHbGc0di9mMEJJSm9DdklPZG5BTitGblVMRklURlY1akhNL09JcEZ1ODZMaAo5S0h3N3Y3WVE3QlBPWWdOTGRMT3hjdXA1QTJQVGNoMnBBakNlRFJsU1gydzFxcXRSMkd4dzhWQktnZTdxbnVCClMyYnJwTjBKYmIycmxvUTR0aHA4MjJXRTdZd1NnRHZkN1A0T1ZnTGNUanNjNHdvSHUvdWdKN1JKOUYvZ2lzWEYKelpKTEhCZXQ1aVhpSUVwdnd6Zjl6TUJRV2UzeklHZGFSWWROTmE3d2t3SURBUUFCb0FBd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBQ3VlRTdtZ0YzOWJHS3EwNTVHUUhoZXd1SmxWVUZBaTZxeU5qMU9MWTJZMUhmN21qb3ozCnJhRlU2RExVNVBza0VhSUlPNzlLMDlubFRqYUJPSjlSMWM3QnVkc1RqR1pmNEF6Sm4za2xKaHY5cWNQd1F1dnEKblZOVmQvMEtkc3M5MlRWY3Q5RGxuY2cvOVJia3JUbTQ5a095WkVvUkMrdUFHN01SRFRySGFqVmx6UENMQklPeQpaSms3SFVVOWVZSWZVS2R4bVFSWUpiMlJvOEN5ZjlJTkZCWDlHQXloem5qNXl2QW91ejlrZldIRTRkK1JkLzVRCkxzWllyalVZT2VqUnJaeUZWUjQ1NE5qclZUUVBQYngxb25hUnpBeFRia0h1VWJhNHlMLysvSTB1RzlaanhESisKNUE1c0Q4UEJMTk9BTDB6SW5CSjQ3Znc5dnlOQjRMRzJUZ3M9Ci0tLS0tRU5EIENFUlRJRklDQVRFIFJFUVVFU1QtLS0tLQo=
  signerName: kubernetes.io/kube-apiserver-client
  usages:
  - digital signature
  - key encipherment
  - client auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apatest:
apiVersion: v1
kind: Pod
metadata:
  name: apatest
  namespace: default
spec:
  containers:
  - image: atcomp/apachetest
    name: apacont
    ports:
    - containerPort: 80
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apatest

skipped mutate policy add-safe-to-evict -> resource default/Pod/apatest
policy disallow-default-namespace -> resource default/Pod/apatest failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apatest failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apatest failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apatest failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apatest failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apatest failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apatest failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apatest failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apatest failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apa000dep.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apa000dep:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apa000dep
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: apa000kube
  template:
    metadata:
      labels:
        app: apa000kube
    spec:
      containers:
      - image: httpd
        name: apa000ex91
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apa000dep

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apa000dep
policy disallow-default-namespace -> resource default/Deployment/apa000dep failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/apa000dep failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/apa000dep failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apa000dep failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apa000dep failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apa000dep failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apa000dep failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apa000dep failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apa000dep failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apa000pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apa000pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: apa000kube
  name: apa000pod
  namespace: default
spec:
  containers:
  - image: httpd
    name: apa000ex91
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apa000pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/apa000pod
policy disallow-default-namespace -> resource default/Pod/apa000pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apa000pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apa000pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apa000pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apa000pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apa000pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apa000pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apa000pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apa000pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apa000ser.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apa000ser:
apiVersion: v1
kind: Service
metadata:
  name: apa000ser
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 8099
    protocol: TCP
    targetPort: 80
  selector:
    app: apa000kube
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/apa000ser failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: apa1-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/htmltext1:
apiVersion: v1
data:
  index.html: |
    <h1>Greetings from apa1</h1>
kind: ConfigMap
metadata:
  name: htmltext1
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apa1-deploy_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webserver1:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apa1
  name: webserver1
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: apa1
  template:
    metadata:
      labels:
        app: apa1
    spec:
      containers:
      - image: atcomp/apachetest
        name: apa1
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          name: webpage
          readOnly: true
      volumes:
      - configMap:
          name: htmltext1
        name: webpage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webserver1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webserver1
policy disallow-default-namespace -> resource default/Deployment/webserver1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/webserver1 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/webserver1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webserver1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webserver1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webserver1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webserver1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webserver1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webserver1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apa1-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/webservice1:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: apa1
  name: webservice1
  namespace: default
spec:
  ports:
  - name: http
    port: 80
  selector:
    app: apa1

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apa2-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/htmltext2:
apiVersion: v1
data:
  index.html: |
    <h1>Greetings from apa2</h1>
kind: ConfigMap
metadata:
  name: htmltext2
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apa2-deploy_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webserver2:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apa2
  name: webserver2
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: apa2
  template:
    metadata:
      labels:
        app: apa2
    spec:
      containers:
      - image: atcomp/apachetest
        name: apa2
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          name: webpage
          readOnly: true
      volumes:
      - configMap:
          name: htmltext2
        name: webpage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webserver2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webserver2
policy disallow-default-namespace -> resource default/Deployment/webserver2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/webserver2 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/webserver2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webserver2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webserver2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webserver2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webserver2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webserver2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webserver2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apa2-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/webservice2:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: apa2
  name: webservice2
  namespace: default
spec:
  ports:
  - name: http
    port: 80
  selector:
    app: apa2

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apache
  name: apache
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - image: httpd
        name: apache
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache
policy disallow-default-namespace -> resource default/Deployment/apache failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/apache failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/apache failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache-service:
apiVersion: v1
kind: Service
metadata:
  name: apache-service
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: apache
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to apache/Deployment/apache:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: apache
  namespace: apache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - image: httpd:latest
        name: apache-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource apache/Deployment/apache

skipped mutate policy add-safe-to-evict -> resource apache/Deployment/apache
policy disallow-latest-tag -> resource apache/Deployment/apache failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource apache/Deployment/apache failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource apache/Deployment/apache failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource apache/Deployment/apache failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource apache/Deployment/apache failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource apache/Deployment/apache failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource apache/Deployment/apache failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource apache/Deployment/apache failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apache_ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to apache/Ingress/apache-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/group.name: dhruv-alb-grp
    alb.ingress.kubernetes.io/healthcheck-path: /apache
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    alb.ingress.kubernetes.io/load-balancer-name: dhruv-ALB
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
  name: apache-ingress
  namespace: apache
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - backend:
          service:
            name: apache-svc
            port:
              number: 80
        path: /apache
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource apache/Ingress/apache-ingress failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: apache_service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to apache/Service/apache-svc:
apiVersion: v1
kind: Service
metadata:
  name: apache-svc
  namespace: apache
spec:
  ports:
  - nodePort: 30001
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: apache
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource apache/Service/apache-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: Apache_Tomcat-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/tomcat-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      containers:
      - image: tomcat:latest
        name: tomcat
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/tomcat-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/tomcat-deployment
policy disallow-default-namespace -> resource default/Deployment/tomcat-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: Apache_Tomcat-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/tomcat-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      containers:
      - image: tomcat:latest
        name: tomcat
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/tomcat-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/tomcat-deployment
policy disallow-default-namespace -> resource default/Deployment/tomcat-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/tomcat-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: Apache_Tomcat-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/tomcat-service:
apiVersion: v1
kind: Service
metadata:
  name: tomcat-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: tomcat
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/tomcat-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: Apache_Tomcat-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/tomcat-service:
apiVersion: v1
kind: Service
metadata:
  name: tomcat-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: tomcat
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/tomcat-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: apache1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/nginx:
apiVersion: v1
kind: Pod
metadata:
  labels:
    version: v1
    zone: prod
  name: nginx
  namespace: default
spec:
  containers:
  - image: nginx
    name: nginx

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx

skipped mutate policy add-safe-to-evict -> resource default/Pod/nginx
policy disallow-default-namespace -> resource default/Pod/nginx failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/nginx failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/nginx failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/nginx failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/nginx failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/nginx failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/nginx failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/nginx failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/nginx failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apache
  name: apache
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - image: httpd:latest
        name: apache-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache
policy disallow-default-namespace -> resource default/Deployment/apache failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/apache failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/apache failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache-service:
apiVersion: v1
kind: Service
metadata:
  name: apache-service
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: apache
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/apache-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: apache2_configmap_basico.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - image: httpd:latest
        name: apache-container
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/local/apache2/htdocs
          name: html-volume
      volumes:
      - configMap:
          items:
          - key: index.html
            path: index.html
          name: apache-config
        name: html-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deployment
policy disallow-default-namespace -> resource default/Deployment/apache-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache2_configmap_comple1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to microservicios/Deployment/apache2-iscsi:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache2-iscsi
  namespace: microservicios
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apache2-iscsi
  template:
    metadata:
      labels:
        app: apache2-iscsi
    spec:
      containers:
      - image: httpd
        name: apache2
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/local/apache2/htdocs
          name: apache2-pv
        - mountPath: /tmp/apache-index-html
          name: apache-index-html
      restartPolicy: Always
      volumes:
      - name: apache2-pv
        persistentVolumeClaim:
          claimName: pvc-apache2
      - configMap:
          name: apache-index-html
        name: apache-index-html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource microservicios/Deployment/apache2-iscsi

skipped mutate policy add-safe-to-evict -> resource microservicios/Deployment/apache2-iscsi
policy disallow-latest-tag -> resource microservicios/Deployment/apache2-iscsi failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource microservicios/Deployment/apache2-iscsi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource microservicios/Deployment/apache2-iscsi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource microservicios/Deployment/apache2-iscsi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource microservicios/Deployment/apache2-iscsi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource microservicios/Deployment/apache2-iscsi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource microservicios/Deployment/apache2-iscsi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource microservicios/Deployment/apache2-iscsi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apache2-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/praktikan1-apache2:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: praktikan1-apache2
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - image: mwlanaz/apache
        name: apache
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/praktikan1-apache2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/praktikan1-apache2
policy disallow-default-namespace -> resource default/Deployment/praktikan1-apache2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/praktikan1-apache2 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/praktikan1-apache2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/praktikan1-apache2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/praktikan1-apache2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/praktikan1-apache2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/praktikan1-apache2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/praktikan1-apache2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/praktikan1-apache2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache2-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/praktikan1-apache2:
apiVersion: v1
kind: Service
metadata:
  name: praktikan1-apache2
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: apache

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apache-deployment
  name: apache-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: apache-deployment
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: apache-deployment
    spec:
      containers:
      - image: httpd:2.4
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          tcpSocket:
            port: 80
        name: apache
        ports:
        - containerPort: 80
        readinessProbe:
          exec:
            command:
            - curl
            - -f
            - http://localhost:80/
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 15
          successThreshold: 3
        resources:
          limits:
            cpu: "1"
            memory: 256Mi
          requests:
            cpu: "0.5"
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deployment
policy disallow-default-namespace -> resource default/Deployment/apache-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: apache5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/public-html:
apiVersion: v1
data:
  secret.html: |
    <!DOCTYPE html>
    <html lang="en">
    <body>
    secret_data_leaked
    </body>
    </html>
kind: ConfigMap
metadata:
  name: public-html
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/apache:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: apache
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache5_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: apache
  name: apache
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 80
  selector:
    app: apache

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache5_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - image: httpd:2.4.46
        imagePullPolicy: IfNotPresent
        name: apache
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/local/apache2/htdocs/private/
          name: public-html
      serviceAccountName: apache
      volumes:
      - configMap:
          name: public-html
        name: public-html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache
policy disallow-default-namespace -> resource default/Deployment/apache failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/apache failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apache-alpine.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-deploy
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 4
  selector:
    matchLabels:
      app: apache
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - image: httpd
        name: apache
        ports:
        - containerPort: 80
          name: apache-port
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
      - args:
        - sleep
        - 1d
        image: alpine
        name: alpine-sleep

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deploy
policy disallow-default-namespace -> resource default/Deployment/apache-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/apache-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/apache-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache-alpine_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache-svc:
apiVersion: v1
kind: Service
metadata:
  name: apache-svc
  namespace: default
spec:
  ports:
  - name: apache-port
    nodePort: 31000
    port: 80
    targetPort: 80
  - name: alpine-port
    nodePort: 31001
    port: 8080
    targetPort: 8080
  selector:
    app: apache
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/apache-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: apache-app-definition.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: apache-deployment
  name: apache-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apache-deployment
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: apache-deployment
    spec:
      containers:
      - image: bitnami/apache
        name: apache
        ports:
        - containerPort: 80
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deployment
policy disallow-default-namespace -> resource default/Deployment/apache-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache-app-definition_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache-service:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: apache-service
  name: apache-service
  namespace: default
spec:
  ports:
  - name: 8080-80
    port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app: apache-deployment
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/apache-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: apache-app-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-app
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apache-app
  template:
    metadata:
      labels:
        app: apache-app
    spec:
      containers:
      - image: httpd:latest
        name: apache-app
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-app
policy disallow-default-namespace -> resource default/Deployment/apache-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/apache-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/apache-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache-app-svc_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache-svc:
apiVersion: v1
kind: Service
metadata:
  labels: null
  name: apache-svc
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: apache-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache-daemonset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/apache-daemonset:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: apache
  name: apache-daemonset
  namespace: default
spec:
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: apache
    spec:
      containers:
      - image: httpd:latest
        name: apache-container
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
        volumeMounts:
        - mountPath: /usr/local/apache2/htdocs
          name: apache-storage
      nodeSelector:
        ssd: "true"
      volumes:
      - hostPath:
          path: /tmp/apache
        name: apache-storage

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/apache-daemonset
policy disallow-default-namespace -> resource default/DaemonSet/apache-daemonset failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/DaemonSet/apache-daemonset failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/DaemonSet/apache-daemonset failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/DaemonSet/apache-daemonset failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/DaemonSet/apache-daemonset failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/DaemonSet/apache-daemonset failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/DaemonSet/apache-daemonset failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/DaemonSet/apache-daemonset failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/DaemonSet/apache-daemonset failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: apachedeploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apache-deploy
  name: apache-deploy
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: apache-webserver
  template:
    metadata:
      labels:
        app: apache-webserver
    spec:
      containers:
      - image: bitnami/apache:latest
        name: apache
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deploy
policy disallow-default-namespace -> resource default/Deployment/apache-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/apache-deploy failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/apache-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-d:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
    env: dev
  name: nginx-d
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:1.7.9
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-d

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-d
policy disallow-default-namespace -> resource default/Deployment/nginx-d failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-d failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-d failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-d failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-d failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-d failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-d failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-d failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apache-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: apache
      name: apache-pod
    spec:
      containers:
      - image: ahm282/milestone2:apache
        imagePullPolicy: Always
        name: apache-container
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          name: html-volume
      volumes:
      - hostPath:
          path: /vagrant/deployments/apache/www
          type: Directory
        name: html-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deployment
policy disallow-default-namespace -> resource default/Deployment/apache-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: apache-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: apache
      name: apache-pod
    spec:
      containers:
      - image: ahm282/milestone2:apache
        imagePullPolicy: Always
        name: apache-container
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          name: html-volume
      volumes:
      - hostPath:
          path: /vagrant/deployments/apache/www
          type: Directory
        name: html-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deployment
policy disallow-default-namespace -> resource default/Deployment/apache-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: apache-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webserver
  name: apache-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webserver
  template:
    metadata:
      labels:
        app: webserver
    spec:
      containers:
      - image: bitnami/apache:latest
        name: apache
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deployment
policy disallow-default-namespace -> resource default/Deployment/apache-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - image: httpd:2.4
        name: apache
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache-deployment
policy disallow-default-namespace -> resource default/Deployment/apache-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apache-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - image: bitnami/apache:latest
        name: apache
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /app
          name: shared-volume
        - mountPath: /opt/bitnami/apache/conf/vhosts/vhosts.conf
          name: vhosts-volume
          subPath: vhosts.conf
      volumes:
      - name: shared-volume
        persistentVolumeClaim:
          claimName: shared-pvc
      - configMap:
          items:
          - key: vhosts.conf
            path: vhosts.conf
          name: configmap
        name: vhosts-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache
policy disallow-default-namespace -> resource default/Deployment/apache failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/apache failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/apache failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache-deployment-nfs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/apache:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apache
  name: apache
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - image: ubuntu/apache2
        name: apache
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          name: synologynas-volume
      volumes:
      - name: synologynas-volume
        nfs:
          path: /volume1/k8s-apache
          readOnly: false
          server: 192.168.1.155

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache

skipped mutate policy add-safe-to-evict -> resource default/Deployment/apache
policy disallow-default-namespace -> resource default/Deployment/apache failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/apache failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/apache failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/apache failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/apache failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/apache failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/apache failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/apache failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/apache failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apacheds.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/activedirectory:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: activedirectory
  namespace: default
spec:
  finalizers:
  - kubernetes

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/activedirectory:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: activedirectory
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/activedirectory:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: activedirectory
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/activedirectory:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: activedirectory
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/activedirectory:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: activedirectory
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apacheds_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to activedirectory/Secret/apacheds-ks:
apiVersion: v1
data:
  apacheds.jks: /u3+7QAAAAIAAAABAAAAAQAMYXBhY2hlZHMtdGxzAAABenQn5fwAAAUDMIIE/zAOBgorBgEEASoCEQEBBQAEggTrjbt+AVwmm7cCWlIsC3wx7O37kJmQYYS3J6n/hFidC/xDiV5H5lS/1Rtt/7Ht5Vp//nGuUFhr0BpaqU9mKMzatLgLjbZin5g/urtysqLzcSujVDx7RT4zKctOSNm2zHJDvNqcWmKbu/5hH+5gkzPTvX/UGc0EiuBFyoSGecC4srj5M6vwXfRvVksXzFMq9MrKVhBxQ2y5lUJWZzWjOc5TECskhFajI5NYmlghUlDLFOncnT/5AsRexsFCxPbYks9Dko00KfwNAe9wFhuXJgl+WdM80r5lCbfg/qTHGx3DzZjXiF1mHJcOgHwjLMz0n2mTcFGb4fXZLn0aTxtk1S0/x8zVlxLtE9TGETTwemtFBwTdwaZw7ixCj/wVJ4+wKy2SpmeQyBxkZO1QfcsIQiXaRwdqRcYXBnlORKUQzTPuDReAVVwAq1WoZwbcNAlomUAPMy8A1OjcInE+wtF1fFjjWNwavNC7251J0eTJ/jWIxhDDkQI507FS3KYjj9B0sra3u6UUFxM/0q1B4djEdABwz9SR0v/tIik1omK6+R5m7uXOPrHRzd4lxdItPgPnkA4oFh0nkJbGPYGpJkYRyr2xQiAS9ncRxse96e4nHeY2MVb5PzA57IXxu8CY2FIeUmuDQt/8NgKjhzU7FUQxoduIDocpokPS8YUOxXgh8AUtU+uZlt7c2bfQ+kiO3yXVq6F9Lg5A+ZlMbgrZhSJ11Vz01Ldf3+TJ2HeeFbmHU5P2p/ie2Cl+OEedtc3osqL4nCZCKiB8vqiuS93qLd5whlHIa1yNCWlqvprRE8Yqx6DQdoIn2Zn83wNOlRVOyq2QYJNIh6bKeHDZMqT3tMPrZSq4AKPfXBzCkNHCj1BxBJuUY7Ng339MA1GAm/OXKVuUWWVcDC8ubiKXCS2jWh/WoImXhPJ4rvAiclqfYtV/Vbja1UWqBZDv1L+MLZfgP1vm/8BSwsTYZqRvRljO8fNd1YUjnBQlINvMBN90TG5FvBLDk/GF7zXXtJ019Kf5+AvdHhSNIsSZ6jtMi2onlqHLYJuuWKFWCpL9Tpy5RT8UrRR1eWki3KT7EiYzVY2LQS+qKEYUEItSSV73LV2NQug6VwuEKpmh9AWqFBTSTPup1GhFY1WSLzbSRDbJnlF6o8/5/QB2lbuTFD/0sm/Uud91+OTHrZtOnwW6whvysthR7RU1+nUaZJoC46Si8ayWZDycrHKyKjv/lxNePdlp83XUa2nOB+QaBojRg5mpEOQxuNYh1Q+GMu6ESxhNGQRDaZIJVswyc7JqJkDvENjd7HPHVVvl1+vfsQSNIw+3cG6DgUYD5eEp5GUADphbwCCYqgRvAomeglWVTVxXw1BTIdGj7stapIbZYIcqw7UZ/UkTLZfg91uYeXtRZFxzGhnwKw6SR8EzD1mAV3pPixn1VuZxxvbepUZvnPmU4DQgjIw/wMSyuH7H3N5lcYV84h4ZZMHv2rIP+OSpGAQYS6UbFZ4tyyn140BgY5+d6JRZ/gV0sGinehi6yTs7GnnO+wuH7A/axiszQplHxLEmy/SxX5+zjJAe3Av7C6dFAamLTxVlwBQFu8WVaZUGBBXUcL/NYs/Za1ntbQiO6maM5YBD0PWpqZp2jVwwqR9qySXLjVDXOK1ePXttWDqPgAgvQNDVtQiSJFVPQz3hVz4qnTMOMOMAAAABAAVYLjUwOQAAA38wggN7MIICY6ADAgECAgQaPRAXMA0GCSqGSIb3DQEBCwUAMG0xDDAKBgNVBAYTA2RldjEMMAoGA1UECBMDZGV2MQwwCgYDVQQHEwNkZXYxDDAKBgNVBAoTA2RldjEMMAoGA1UECxMDZGV2MSUwIwYDVQQDExxhcGFjaGVkcy5hY3RpdmVkaXJlY3Rvcnkuc3ZjMCAXDTIxMDcwNTAwNTMyOFoYDzIxMjEwNjExMDA1MzI4WjBtMQwwCgYDVQQGEwNkZXYxDDAKBgNVBAgTA2RldjEMMAoGA1UEBxMDZGV2MQwwCgYDVQQKEwNkZXYxDDAKBgNVBAsTA2RldjElMCMGA1UEAxMcYXBhY2hlZHMuYWN0aXZlZGlyZWN0b3J5LnN2YzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALpJQAFAgV1u2l1vBcA41mdFQFADQSv6FVuLU+xUmxmIgV/wgP/V6k7sLwFRtSy5LBVkb10EdbPgM+lgT76++WQsrmkZs2s+XsTCfmtEoM07JPJ4IClLchKUSZuJI9HSdrDKsmHrw8IHmYNHnd+G6Vc4IZLC8zt2nd06zIQF15UvuLWCcExv+ns1e7fJmJWH2IrOOEKR/CP8SXnpk+puT/yQ/ssC7Wh1tU0UUgvKs/Mc8RKvvsmTHD/7442Gac/o89tKqYWb6oQNqE+OkR+WoZlymXwW1Smwucj6nGdH3J714KJPmeHx4seGcQTvWJMySiWQfComepZPB9C+hf0LocMCAwEAAaMhMB8wHQYDVR0OBBYEFNzyIJI3LrFHdz30xlsVPzzcMrlYMA0GCSqGSIb3DQEBCwUAA4IBAQA3QjR+sIrtfh0YWMX/WKjDdAv+bvTN4fOI9RARAY3mkTevZVj8UZeAxYoQjMaSEt6cFC2oM06ef/9Fz4XqOzkUI1TFk57HMi+EhpwLxoewSMROCtH31yNBaXDVohC1od0l6NrBeo21owTX7EVEADcFgC46mjKikIKHXAiLX8E7w1NVpmPDUA7XBVOLbAgoEgm6AK84Zd0rBzSf8HyjhAElGshB0GCjZTrUCcLWJzygbAarMK5YYLO9yOirloyr1soXbik+HjCp8t+8W5yVtodE9smOo7K1bHezwxYigQKy9crEdtugm7iw/T/gDR3z6c32vnU7WNBlfC2jGnOpJZ96N4D4sxDzaio9wbFLmJgjGNJKBn0=
kind: Secret
metadata:
  name: apacheds-ks
  namespace: activedirectory
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apacheds_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to activedirectory/ConfigMap/test-users:
apiVersion: v1
data:
  data.ldif: |-
    dn: DC=domain,DC=com
    objectClass: domain
    dc: domain

    dn: ou=Users,DC=domain,DC=com
    objectClass: organizationalUnit
    ou: users


    dn: ou=Groups,DC=domain,DC=com
    objectClass: organizationalUnit
    ou: Groups


    dn: cn=ou_svc_account,ou=Users,DC=domain,DC=com
    objectClass: user
    cn: ou_svc_account
    givenName: ou
    sn: svc
    samAccountName: ou_svc_account
    userPassword: start123

    dn: cn=pipeline_svc_account,ou=Users,DC=domain,DC=com
    objectClass: user
    cn: pipeline_svc_account
    givenName: pipeline
    sn: svc
    samAccountName: pipeline_svc_account
    userPassword: start123

    dn: cn=mmosley,ou=Users,DC=domain,DC=com
    objectClass: user
    cn: mmosley
    givenName: Matt
    sn: Mosley
    samAccountName: mmosley
    mail: mmosley@tremolo.dev
    title: Tester
    telephoneNumber: 123-456-7890
    userPassword: start123

    dn: cn=jjackson,ou=Users,DC=domain,DC=com
    objectClass: user
    cn: jjackson
    givenName: Jennifer
    sn: Jackson
    samAccountName: jjackson
    mail: jjackson@tremolo.dev
    title: Tester
    telephoneNumber: 123-456-7890
    userPassword: start123

    dn: cn=app-dev,ou=Users,DC=domain,DC=com
    objectClass: user
    cn: app-dev
    givenName: App
    sn: Dev
    samAccountName: app-dev
    mail: app-dev@tremolo.dev
    title: Application Developer
    telephoneNumber: 123-456-7890
    userPassword: start123



    dn: cn=k8s-cluster-admins,ou=Groups,DC=domain,DC=com
    objectClass: group
    cn: k8s-cluster-admins
    member: cn=mmosley,ou=Users,DC=domain,DC=com
    member: cn=pipeline_svc_account,ou=Users,DC=domain,DC=com

    dn: cn=group2,ou=Groups,DC=domain,DC=com
    objectClass: group
    cn: group2
    member: cn=mmosley,ou=Users,DC=domain,DC=com

    dn: cn=k8s-create-ns,ou=groups,dc=domain,dc=com
    objectClass: group
    cn: k8s-create-ns
    member: cn=jjackson,ou=Users,DC=domain,DC=com
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: apacheds
  name: test-users
  namespace: activedirectory

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apacheds_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to activedirectory/Deployment/apacheds:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apacheds
    app.kubernetes.io/instance: apacheds
  name: apacheds
  namespace: activedirectory
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: apacheds
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: null
      labels:
        app: apacheds
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
            -Xms2048m -Xmx2048m
        - name: fortriggerupdates
          value: changeme
        - name: APACHEDS_ROOT_PASSWORD
          value: start123
        - name: APACHEDS_TLS_KS_PWD
          value: start123
        - name: DN
          value: DC=domain,DC=com
        - name: OBJECT_CLASS
          value: domain
        - name: LDIF_FILE
          value: /etc/apacheds-data/data.ldif
        image: docker.io/tremolosecurity/apacheds:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 10
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 10389
          timeoutSeconds: 10
        name: apacheds
        ports:
        - containerPort: 10389
          name: ldap
          protocol: TCP
        - containerPort: 10636
          name: ldaps
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 10389
          timeoutSeconds: 10
        resources:
          limits:
            memory: 1G
          requests:
            memory: 1G
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/apacheds
          name: secret-volume
          readOnly: true
        - mountPath: /etc/apacheds-data
          name: data-volume
          readOnly: true
        - mountPath: /var/apacheds
          name: local-data
        - mountPath: /tmp
          name: tmp
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: secret-volume
        secret:
          defaultMode: 420
          secretName: apacheds-ks
      - configMap:
          defaultMode: 420
          name: test-users
        name: data-volume
      - emptyDir: {}
        name: local-data
      - emptyDir: {}
        name: tmp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource activedirectory/Deployment/apacheds
policy disallow-latest-tag -> resource activedirectory/Deployment/apacheds failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource activedirectory/Deployment/apacheds failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource activedirectory/Deployment/apacheds failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource activedirectory/Deployment/apacheds failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource activedirectory/Deployment/apacheds failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/cpu/

policy require-ro-rootfs -> resource activedirectory/Deployment/apacheds failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource activedirectory/Deployment/apacheds failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: apacheds_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to activedirectory/Service/apacheds:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: apacheds
    app.kubernetes.io/instance: apacheds
  name: apacheds
  namespace: activedirectory
spec:
  ports:
  - port: 10636
    protocol: TCP
    targetPort: 10636
  selector:
    app: apacheds
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/apache-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/ingress-class: nginx
  name: apache-ingress
  namespace: default
spec:
  rules:
  - host: apache.pretzel218.messwithdns.com
    http:
      paths:
      - backend:
          service:
            name: apache-service
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/apache-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/ingress-class: nginx
  name: apache-ingress
  namespace: default
spec:
  rules:
  - host: apache.pretzel218.messwithdns.com
    http:
      paths:
      - backend:
          service:
            name: apache-service
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache-nginx-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/apache-nginx:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  creationTimestamp: null
  name: apache-nginx
  namespace: default
spec:
  rules:
  - host: '*'
    http:
      paths:
      - backend:
          service:
            name: apache-service
            port:
              number: 8080
        path: /apache
        pathType: Exact
      - backend:
          service:
            name: nginx-service
            port:
              number: 80
        path: /nginx
        pathType: Exact
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache-ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/apache-ns:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: apache
    env: dev
    team: infra
  name: apache-ns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/apache-ns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: apache-ns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/apache-ns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: apache-ns
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/apache-ns:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: apache-ns
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/apache-ns:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: apache-ns
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache-ns1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/apache-ns:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: apache
    env: dev
    team: infra
  name: apache-ns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/apache-ns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: apache-ns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/apache-ns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: apache-ns
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/apache-ns:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: apache-ns
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/apache-ns:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: apache-ns
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apachepod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myhttpdpod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: my-web-app
  name: myhttpdpod
  namespace: default
spec:
  containers:
  - image: httpd
    name: httpdcontainer

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myhttpdpod

skipped mutate policy add-safe-to-evict -> resource default/Pod/myhttpdpod
policy disallow-default-namespace -> resource default/Pod/myhttpdpod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/myhttpdpod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/myhttpdpod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myhttpdpod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myhttpdpod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/myhttpdpod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/myhttpdpod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myhttpdpod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myhttpdpod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to apache-ns/Pod/app1:
apiVersion: v1
kind: Pod
metadata:
  labels:
    application: app1
    environment: dev
  name: app1
  namespace: apache-ns
spec:
  containers:
  - image: httpd:latest
    name: apache

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource apache-ns/Pod/app1

skipped mutate policy add-safe-to-evict -> resource apache-ns/Pod/app1
policy disallow-latest-tag -> resource apache-ns/Pod/app1 failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource apache-ns/Pod/app1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource apache-ns/Pod/app1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource apache-ns/Pod/app1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource apache-ns/Pod/app1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource apache-ns/Pod/app1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource apache-ns/Pod/app1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource apache-ns/Pod/app1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apache-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to apache-ns/Pod/app1:
apiVersion: v1
kind: Pod
metadata:
  labels:
    application: app1
    environment: dev
  name: app1
  namespace: apache-ns
spec:
  containers:
  - image: httpd:latest
    name: apache

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource apache-ns/Pod/app1

skipped mutate policy add-safe-to-evict -> resource apache-ns/Pod/app1
policy disallow-latest-tag -> resource apache-ns/Pod/app1 failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource apache-ns/Pod/app1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource apache-ns/Pod/app1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource apache-ns/Pod/app1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource apache-ns/Pod/app1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource apache-ns/Pod/app1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource apache-ns/Pod/app1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource apache-ns/Pod/app1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apache-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apache-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    service: apache
  name: apache-pod
  namespace: default
spec:
  containers:
  - image: httpd:latest
    name: apache-container
    ports:
    - containerPort: 80
    resources:
      limits:
        cpu: 250m
        memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apache-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/apache-pod
policy disallow-default-namespace -> resource default/Pod/apache-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apache-pod failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apache-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apache-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apache-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apache-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/apache-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apache-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apache-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache-pod3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apache-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: apache-web
  name: apache-pod
  namespace: default
spec:
  containers:
  - image: httpd:alpine
    name: apache-container
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apache-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/apache-pod
policy disallow-default-namespace -> resource default/Pod/apache-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/apache-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apache-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apache-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apache-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apache-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apache-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apache-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apacheservice.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache-service:
apiVersion: v1
kind: Service
metadata:
  name: apache-service
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: apache-webserver
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache-service:
apiVersion: v1
kind: Service
metadata:
  name: apache-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: apache
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache-service:
apiVersion: v1
kind: Service
metadata:
  name: apache-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: apache
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache-service:
apiVersion: v1
kind: Service
metadata:
  name: apache-service
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30036
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: apache
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/apache-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: apache-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/stateful-app-service:
apiVersion: v1
kind: Service
metadata:
  name: stateful-app-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: apache
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/lamp-service:
apiVersion: v1
kind: Service
metadata:
  name: lamp-service
  namespace: default
spec:
  ports:
  - nodePort: 30008
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: lamp-wp
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/lamp-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: apache-service-nfs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache-service:
apiVersion: v1
kind: Service
metadata:
  name: apache-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: apache
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apache-static.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/httpd-static:
apiVersion: v1
kind: Pod
metadata:
  labels:
    static: pod
  name: httpd-static
  namespace: default
spec:
  containers:
  - image: httpd
    imagePullPolicy: IfNotPresent
    name: httpd
    ports:
    - containerPort: 80
      name: web
      protocol: TCP

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/httpd-static

skipped mutate policy add-safe-to-evict -> resource default/Pod/httpd-static
policy disallow-default-namespace -> resource default/Pod/httpd-static failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/httpd-static failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/httpd-static failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/httpd-static failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/httpd-static failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/httpd-static failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/httpd-static failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/httpd-static failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/httpd-static failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apache-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: apache
  name: apache-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: apache
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apachesvcnodeport.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/httpd-rs:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  labels:
    purpose: understanding
  name: httpd-rs
  namespace: default
spec:
  minReadySeconds: 5
  replicas: 3
  selector:
    matchLabels:
      app: httpd
  template:
    metadata:
      labels:
        app: httpd
        env: dev
        version: v1.0
    spec:
      containers:
      - image: httpd
        name: apache
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/httpd-rs

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/httpd-rs
policy disallow-latest-tag -> resource default/ReplicaSet/httpd-rs failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/httpd-rs failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/httpd-rs failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/httpd-rs failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/httpd-rs failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/httpd-rs failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/httpd-rs failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: apachesvcnodeport_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apache-svc:
apiVersion: v1
kind: Service
metadata:
  name: apache-svc
  namespace: default
spec:
  ports:
  - name: apache
    nodePort: 30000
    port: 80
    targetPort: 80
  selector:
    app: httpd
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/apache-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: ap-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ap:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
    traefik.enable: "true"
    traefik.http.routers.ap.entrypoints: websecure
    traefik.http.routers.ap.middlewares: ratelimit@file, security-headers@file, error-pages-middleware,
      geoblock@file
    traefik.http.routers.ap.rule: Host(`ap.`)
    traefik.http.routers.ap.tls.certresolver: leresolver
  creationTimestamp: null
  labels:
    io.kompose.service: ap
  name: ap
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ap
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
        traefik.enable: "true"
        traefik.http.routers.ap.entrypoints: websecure
        traefik.http.routers.ap.middlewares: ratelimit@file, security-headers@file,
          error-pages-middleware, geoblock@file
        traefik.http.routers.ap.rule: Host(`ap.`)
        traefik.http.routers.ap.tls.certresolver: leresolver
      creationTimestamp: null
      labels:
        io.kompose.network/net: "true"
        io.kompose.service: ap
    spec:
      containers:
      - env:
        - name: AP_ENGINE_EXECUTABLE_PATH
          value: dist/packages/engine/main.js
        - name: AP_ENVIRONMENT
          value: prod
        - name: AP_EXECUTION_MODE
          value: UNSANDBOXED
        - name: AP_POSTGRES_DATABASE
          value: activepieces
        - name: AP_POSTGRES_HOST
          value: ap-postgres
        - name: AP_POSTGRES_PASSWORD
          value: activepieces
        - name: AP_POSTGRES_PORT
          value: "5432"
        - name: AP_POSTGRES_USERNAME
          value: activepieces
        - name: AP_REDIS_HOST
          value: ap-redis
        - name: AP_REDIS_PORT
          value: "6379"
        - name: AP_SANDBOX_RUN_TIME_SECONDS
          value: "600"
        - name: AP_TELEMETRY_ENABLED
          value: "true"
        - name: AP_TEMPLATES_SOURCE_URL
          value: '"https://cloud.activepieces.com/api/v1/flow-templates"'
        - name: AP_TRIGGER_DEFAULT_POLL_INTERVAL
          value: "5"
        - name: AP_WEBHOOK_TIMEOUT_SECONDS
          value: "30"
        image: activepieces/activepieces:0.14.3
        name: ap
        resources: {}
      initContainers:
      - command:
        - sh
        - -c
        - while ! nc -z ap-postgres 5432; do echo "Waiting for PostgreSQL"; sleep
          1; done
        image: busybox
        name: wait-for-postgres
      restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ap

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ap
policy disallow-default-namespace -> resource default/Deployment/ap failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/ap failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/ap failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ap failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ap failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ap failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/ap failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ap failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ap failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apdos-rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/nginx-ingress-app-protect-dos:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginx-ingress-app-protect-dos
  namespace: default
rules:
- apiGroups:
  - appprotectdos.f5.com
  resources:
  - apdospolicies
  - apdoslogconfs
  - dosprotectedresources
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apdos-rbac_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/nginx-ingress-app-protect-dos:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-app-protect-dos
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-app-protect-dos
subjects:
- kind: ServiceAccount
  name: nginx-ingress
  namespace: nginx-ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apdos-rbac1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/nginx-ingress-app-protect-dos:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginx-ingress-app-protect-dos
  namespace: default
rules:
- apiGroups:
  - appprotectdos.f5.com
  resources:
  - apdospolicies
  - apdoslogconfs
  - dosprotectedresources
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apdos-rbac1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/nginx-ingress-app-protect-dos:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-app-protect-dos
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-app-protect-dos
subjects:
- kind: ServiceAccount
  name: nginx-ingress
  namespace: nginx-ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-2-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-2-service:
apiVersion: v1
kind: Service
metadata:
  name: api-2-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: api-2

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-2-service_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-2-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-2
  name: api-2-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: api-2
  template:
    metadata:
      labels:
        app: api-2
    spec:
      containers:
      - env:
        - name: API_URL
          valueFrom:
            configMapKeyRef:
              key: api_url
              name: service-discovery-config
        image: domhall/kubernetes-api-2:latest
        name: kubernetes-api-2
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: 100m
          requests:
            cpu: 100m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-2-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-2-deployment
policy disallow-default-namespace -> resource default/Deployment/api-2-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-2-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-2-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-2-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-2-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-2-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/api-2-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-2-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-2-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-2-service_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/kubernetes-api-2-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: kubernetes-api-2-hpa
  namespace: default
spec:
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 50
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageValue: 500Mi
        type: AverageValue
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-2-deployment

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: api-autenticacao.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backend/Deployment/api-autenticacao:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-autenticacao
  namespace: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-autenticacao
  template:
    metadata:
      labels:
        app: api-autenticacao
    spec:
      containers:
      - image: lgv1505/fiapautenticacaowebapi:latest
        name: api-autenticacao-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backend/Deployment/api-autenticacao

skipped mutate policy add-safe-to-evict -> resource backend/Deployment/api-autenticacao
policy disallow-latest-tag -> resource backend/Deployment/api-autenticacao failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource backend/Deployment/api-autenticacao failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backend/Deployment/api-autenticacao failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backend/Deployment/api-autenticacao failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backend/Deployment/api-autenticacao failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource backend/Deployment/api-autenticacao failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource backend/Deployment/api-autenticacao failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backend/Deployment/api-autenticacao failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-autenticacao_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backend/Service/api-autenticacao-service:
apiVersion: v1
kind: Service
metadata:
  name: api-autenticacao-service
  namespace: backend
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: api-autenticacao

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-autenticacao_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backend/Ingress/api-autenticacao-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-autenticacao-ingress
  namespace: backend
spec:
  rules:
  - host: api-autenticacao-kubernets.com
    http:
      paths:
      - backend:
          service:
            name: api-autenticacao-service
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: api-catalog
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: api-catalog
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.4 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: api-catalog
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.4 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: dev-store
    environment: test
    run: api-catalog
    tier: backend
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.4 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: dev-store
    environment: test
    run: api-catalog
    tier: backend
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.4 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: dev-store
    environment: test
    run: api-catalog
    tier: backend
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.2;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    lifecycle:
      preStop:
        exec:
          command:
          - /bin/sh
          - -c
          - sleep 20
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.2 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: dev-store
    environment: test
    run: api-catalog
    tier: backend
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    lifecycle:
      preStop:
        exec:
          command:
          - /bin/sh
          - -c
          - sleep 20
    livenessProbe:
      httpGet:
        path: /healthz
        port: 80
      initialDelaySeconds: 1
      periodSeconds: 10
    name: api-catalog
    readinessProbe:
      httpGet:
        path: /healthz-infra
        port: 80
      initialDelaySeconds: 1
      periodSeconds: 10
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.4 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-catalog:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-catalog
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: api-catalog
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dev-store
        environment: test
        run: api-catalog
        tier: backend
      name: api-catalog
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Docker
        - name: CUSTOMCONNSTR_DefaultConnection
          value: Server=sqlserver.infra;Database=DSCatalog;MultipleActiveResultSets=true;User
            Id=sa;Password=Teste@123
        - name: AppSettings__DatabaseType
          value: SqlServer
        - name: USE_HTTPS_REDIRECTION
          value: "false"
        - name: MessageQueueConnection__MessageBus
          value: host=rabbitmq.infra:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
        image: desenvolvedorio/devstore-api-catalog:latest
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 20
        name: api-catalog
        resources: {}
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until nc -z -v -w5 sqlserver.infra 1433; do echo aguardando banco de dados;
          sleep 1; done
        image: busybox:1.28
        name: database-check
      - command:
        - sh
        - -c
        - until nc -z -v -w5 rabbitmq.infra 5672; do echo aguardando rabbitmq; sleep
          1; done
        image: busybox:1.28
        name: rabbit-check
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog
policy disallow-latest-tag -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-catalog:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-catalog
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: api-catalog
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dev-store
        environment: test
        run: api-catalog
        tier: backend
      name: api-catalog
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Docker
        - name: CUSTOMCONNSTR_DefaultConnection
          value: Server=sqlserver.infra;Database=DSCatalog;MultipleActiveResultSets=true;User
            Id=sa;Password=Teste@123
        - name: AppSettings__DatabaseType
          value: SqlServer
        - name: USE_HTTPS_REDIRECTION
          value: "false"
        - name: MessageQueueConnection__MessageBus
          value: host=rabbitmq.infra:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
        image: desenvolvedorio/devstore-api-catalog:latest
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 20
        name: api-catalog
        resources: {}
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until nc -z -v -w5 sqlserver.infra 1433; do echo aguardando banco de dados;
          sleep 1; done
        image: busybox:1.28
        name: database-check
      - command:
        - sh
        - -c
        - until nc -z -v -w5 rabbitmq.infra 5672; do echo aguardando rabbitmq; sleep
          1; done
        image: busybox:1.28
        name: rabbit-check
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog
policy disallow-latest-tag -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backend/Deployment/api-catalog:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-catalog
  namespace: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      run: api-catalog
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dev-store
        environment: test
        run: api-catalog
        tier: backend
      name: api-catalog
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Docker
        - name: AppSettings__DatabaseType
          value: SqlServer
        - name: USE_HTTPS_REDIRECTION
          value: "false"
        envFrom:
        - secretRef:
            name: rabbit-connection
        - secretRef:
            name: database-connection
        image: desenvolvedorio/devstore-api-catalog:latest
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 20
        name: api-catalog
        resources: {}
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until nc -z -v -w5 sqlserver.infra 1433; do echo aguardando banco de dados;
          sleep 1; done
        image: busybox:1.28
        name: database-check
      - command:
        - sh
        - -c
        - until nc -z -v -w5 rabbitmq.infra 5672; do echo aguardando rabbitmq; sleep
          1; done
        image: busybox:1.28
        name: rabbit-check
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backend/Deployment/api-catalog

skipped mutate policy add-safe-to-evict -> resource backend/Deployment/api-catalog
policy disallow-latest-tag -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource backend/Deployment/api-catalog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backend/Deployment/api-catalog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backend/Deployment/api-catalog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: api-catalog
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: api-catalog
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.4 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: dev-store
    environment: test
    run: api-catalog
    tier: backend
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.4 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: dev-store
    environment: test
    run: api-catalog
    tier: backend
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.4 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: dev-store
    environment: test
    run: api-catalog
    tier: backend
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.4 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: dev-store
    environment: test
    run: api-catalog
    tier: backend
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.2;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    lifecycle:
      preStop:
        exec:
          command:
          - /bin/sh
          - -c
          - sleep 20
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.2 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: dev-store
    environment: test
    run: api-catalog
    tier: backend
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    lifecycle:
      preStop:
        exec:
          command:
          - /bin/sh
          - -c
          - sleep 20
    livenessProbe:
      httpGet:
        path: /healthz
        port: 80
      initialDelaySeconds: 1
      periodSeconds: 10
    name: api-catalog
    readinessProbe:
      httpGet:
        path: /healthz-infra
        port: 80
      initialDelaySeconds: 1
      periodSeconds: 10
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.4 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-catalog:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-catalog
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: api-catalog
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dev-store
        environment: test
        run: api-catalog
        tier: backend
      name: api-catalog
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Docker
        - name: CUSTOMCONNSTR_DefaultConnection
          value: Server=sqlserver.infra;Database=DSCatalog;MultipleActiveResultSets=true;User
            Id=sa;Password=Teste@123
        - name: AppSettings__DatabaseType
          value: SqlServer
        - name: USE_HTTPS_REDIRECTION
          value: "false"
        - name: MessageQueueConnection__MessageBus
          value: host=rabbitmq.infra:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
        image: desenvolvedorio/devstore-api-catalog:latest
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 20
        name: api-catalog
        resources: {}
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until nc -z -v -w5 sqlserver.infra 1433; do echo aguardando banco de dados;
          sleep 1; done
        image: busybox:1.28
        name: database-check
      - command:
        - sh
        - -c
        - until nc -z -v -w5 rabbitmq.infra 5672; do echo aguardando rabbitmq; sleep
          1; done
        image: busybox:1.28
        name: rabbit-check
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog
policy disallow-latest-tag -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-catalog:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-catalog
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: api-catalog
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dev-store
        environment: test
        run: api-catalog
        tier: backend
      name: api-catalog
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Docker
        - name: CUSTOMCONNSTR_DefaultConnection
          value: Server=sqlserver.infra;Database=DSCatalog;MultipleActiveResultSets=true;User
            Id=sa;Password=Teste@123
        - name: AppSettings__DatabaseType
          value: SqlServer
        - name: USE_HTTPS_REDIRECTION
          value: "false"
        - name: MessageQueueConnection__MessageBus
          value: host=rabbitmq.infra:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
        image: desenvolvedorio/devstore-api-catalog:latest
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 20
        name: api-catalog
        resources: {}
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until nc -z -v -w5 sqlserver.infra 1433; do echo aguardando banco de dados;
          sleep 1; done
        image: busybox:1.28
        name: database-check
      - command:
        - sh
        - -c
        - until nc -z -v -w5 rabbitmq.infra 5672; do echo aguardando rabbitmq; sleep
          1; done
        image: busybox:1.28
        name: rabbit-check
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog
policy disallow-latest-tag -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-catalog:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-catalog
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: api-catalog
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dev-store
        environment: test
        run: api-catalog
        tier: backend
      name: api-catalog
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Docker
        - name: CUSTOMCONNSTR_DefaultConnection
          value: Server=sqlserver;Database=DSCatalog;MultipleActiveResultSets=true;User
            Id=sa;Password=Teste@123
        - name: AppSettings__DatabaseType
          value: SqlServer
        - name: USE_HTTPS_REDIRECTION
          value: "false"
        - name: MessageQueueConnection__MessageBus
          value: host=rabbitmq:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
        image: desenvolvedorio/devstore-api-catalog:latest
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 20
        name: api-catalog
        resources: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog
policy disallow-latest-tag -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backend/Deployment/api-catalog:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-catalog
  namespace: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      run: api-catalog
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dev-store
        environment: test
        run: api-catalog
        tier: backend
      name: api-catalog
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Docker
        - name: AppSettings__DatabaseType
          value: SqlServer
        - name: USE_HTTPS_REDIRECTION
          value: "false"
        envFrom:
        - secretRef:
            name: rabbit-connection
        - secretRef:
            name: database-connection
        image: desenvolvedorio/devstore-api-catalog:latest
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 20
        name: api-catalog
        resources: {}
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until nc -z -v -w5 sqlserver.infra 1433; do echo aguardando banco de dados;
          sleep 1; done
        image: busybox:1.28
        name: database-check
      - command:
        - sh
        - -c
        - until nc -z -v -w5 rabbitmq.infra 5672; do echo aguardando rabbitmq; sleep
          1; done
        image: busybox:1.28
        name: rabbit-check
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backend/Deployment/api-catalog

skipped mutate policy add-safe-to-evict -> resource backend/Deployment/api-catalog
policy disallow-latest-tag -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource backend/Deployment/api-catalog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backend/Deployment/api-catalog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backend/Deployment/api-catalog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: dev-store
    environment: test
    run: api-catalog
    tier: backend
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.4 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: dev-store
    environment: test
    run: api-catalog
    tier: backend
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.2;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    lifecycle:
      preStop:
        exec:
          command:
          - /bin/sh
          - -c
          - sleep 20
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.2 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: dev-store
    environment: test
    run: api-catalog
    tier: backend
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    lifecycle:
      preStop:
        exec:
          command:
          - /bin/sh
          - -c
          - sleep 20
    livenessProbe:
      httpGet:
        path: /healthz
        port: 80
      initialDelaySeconds: 1
      periodSeconds: 10
    name: api-catalog
    readinessProbe:
      httpGet:
        path: /healthz-infra
        port: 80
      initialDelaySeconds: 1
      periodSeconds: 10
    resources: {}
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.4 1433; do echo aguardando banco de dados; sleep
      1; done
    image: busybox:1.28
    name: database-check
  - command:
    - sh
    - -c
    - until nc -z -v -w5 172.17.0.3 5672; do echo aguardando rabbitmq; sleep 1; done
    image: busybox:1.28
    name: rabbit-check
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-catalog:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-catalog
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: api-catalog
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dev-store
        environment: test
        run: api-catalog
        tier: backend
      name: api-catalog
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Docker
        - name: CUSTOMCONNSTR_DefaultConnection
          value: Server=sqlserver.infra;Database=DSCatalog;MultipleActiveResultSets=true;User
            Id=sa;Password=Teste@123
        - name: AppSettings__DatabaseType
          value: SqlServer
        - name: USE_HTTPS_REDIRECTION
          value: "false"
        - name: MessageQueueConnection__MessageBus
          value: host=rabbitmq.infra:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
        image: desenvolvedorio/devstore-api-catalog:latest
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 20
        name: api-catalog
        resources: {}
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until nc -z -v -w5 sqlserver.infra 1433; do echo aguardando banco de dados;
          sleep 1; done
        image: busybox:1.28
        name: database-check
      - command:
        - sh
        - -c
        - until nc -z -v -w5 rabbitmq.infra 5672; do echo aguardando rabbitmq; sleep
          1; done
        image: busybox:1.28
        name: rabbit-check
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog
policy disallow-latest-tag -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-catalog:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-catalog
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: api-catalog
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dev-store
        environment: test
        run: api-catalog
        tier: backend
      name: api-catalog
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Docker
        - name: CUSTOMCONNSTR_DefaultConnection
          value: Server=sqlserver.infra;Database=DSCatalog;MultipleActiveResultSets=true;User
            Id=sa;Password=Teste@123
        - name: AppSettings__DatabaseType
          value: SqlServer
        - name: USE_HTTPS_REDIRECTION
          value: "false"
        - name: MessageQueueConnection__MessageBus
          value: host=rabbitmq.infra:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
        image: desenvolvedorio/devstore-api-catalog:latest
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 20
        name: api-catalog
        resources: {}
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until nc -z -v -w5 sqlserver.infra 1433; do echo aguardando banco de dados;
          sleep 1; done
        image: busybox:1.28
        name: database-check
      - command:
        - sh
        - -c
        - until nc -z -v -w5 rabbitmq.infra 5672; do echo aguardando rabbitmq; sleep
          1; done
        image: busybox:1.28
        name: rabbit-check
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-catalog
policy disallow-latest-tag -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-catalog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backend/Deployment/api-catalog:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-catalog
  namespace: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      run: api-catalog
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dev-store
        environment: test
        run: api-catalog
        tier: backend
      name: api-catalog
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Docker
        - name: AppSettings__DatabaseType
          value: SqlServer
        - name: USE_HTTPS_REDIRECTION
          value: "false"
        envFrom:
        - secretRef:
            name: rabbit-connection
        - secretRef:
            name: database-connection
        image: desenvolvedorio/devstore-api-catalog:latest
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 20
        name: api-catalog
        resources: {}
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until nc -z -v -w5 sqlserver.infra 1433; do echo aguardando banco de dados;
          sleep 1; done
        image: busybox:1.28
        name: database-check
      - command:
        - sh
        - -c
        - until nc -z -v -w5 rabbitmq.infra 5672; do echo aguardando rabbitmq; sleep
          1; done
        image: busybox:1.28
        name: rabbit-check
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backend/Deployment/api-catalog

skipped mutate policy add-safe-to-evict -> resource backend/Deployment/api-catalog
policy disallow-latest-tag -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource backend/Deployment/api-catalog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backend/Deployment/api-catalog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backend/Deployment/api-catalog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backend/Deployment/api-catalog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-catalog:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: api-catalog
  name: api-catalog
  namespace: default
spec:
  containers:
  - env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Docker
    - name: CUSTOMCONNSTR_DefaultConnection
      value: Server=172.17.0.4;Database=DSCatalog;MultipleActiveResultSets=true;User
        Id=sa;Password=Teste@123
    - name: AppSettings__DatabaseType
      value: SqlServer
    - name: USE_HTTPS_REDIRECTION
      value: "false"
    - name: MessageQueueConnection__MessageBus
      value: host=172.17.0.3:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore
    image: desenvolvedorio/devstore-api-catalog:latest
    name: api-catalog
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-catalog
policy disallow-default-namespace -> resource default/Pod/api-catalog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-catalog failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-catalog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-catalog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api-catalog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api-catalog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/api-catalog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-catalog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-catalog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-catalog-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/api-catalog-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-catalog-ingress
  namespace: default
spec:
  rules:
  - host: catalog.devstore.info
    http:
      paths:
      - backend:
          service:
            name: api-catalog
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/api-catalog-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/app-root: /swagger
  name: api-catalog-ingress
  namespace: default
spec:
  rules:
  - host: catalog.devstore.info
    http:
      paths:
      - backend:
          service:
            name: api-catalog
            port:
              number: 8080
        path: /
        pathType: Prefix
      - backend:
          service:
            name: api-multipleports
            port:
              number: 80
        path: /whoami
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-ingress1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/whoami-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: whoami-ingress
  namespace: default
spec:
  rules:
  - host: whoami.devstore.info
    http:
      paths:
      - backend:
          service:
            name: api-multipleports
            port:
              number: 80
        path: /
        pathType: Prefix
      - backend:
          service:
            name: api-multipleports
            port:
              number: 80
        path: /whoami(/|$)(.*)
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-ingress2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/api-catalog-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-catalog-ingress
  namespace: default
spec:
  rules:
  - host: catalog.devstore.info
    http:
      paths:
      - backend:
          service:
            name: api-catalog
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-ingress3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/api-catalog-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/app-root: /swagger
  name: api-catalog-ingress
  namespace: default
spec:
  rules:
  - host: catalog.devstore.info
    http:
      paths:
      - backend:
          service:
            name: api-catalog
            port:
              number: 8080
        path: /
        pathType: Prefix
      - backend:
          service:
            name: api-multipleports
            port:
              number: 80
        path: /whoami
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-ingress3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/whoami-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: whoami-ingress
  namespace: default
spec:
  rules:
  - host: whoami.devstore.info
    http:
      paths:
      - backend:
          service:
            name: api-multipleports
            port:
              number: 80
        path: /
        pathType: Prefix
      - backend:
          service:
            name: api-multipleports
            port:
              number: 80
        path: /whoami(/|$)(.*)
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-ingress4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/api-catalog-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-catalog-ingress
  namespace: default
spec:
  rules:
  - host: catalog.devstore.info
    http:
      paths:
      - backend:
          service:
            name: api-catalog
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-ingress5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/api-catalog-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/app-root: /swagger
  name: api-catalog-ingress
  namespace: default
spec:
  rules:
  - host: catalog.devstore.info
    http:
      paths:
      - backend:
          service:
            name: api-catalog
            port:
              number: 8080
        path: /
        pathType: Prefix
      - backend:
          service:
            name: api-multipleports
            port:
              number: 80
        path: /whoami
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-ingress5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/whoami-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: whoami-ingress
  namespace: default
spec:
  rules:
  - host: whoami.devstore.info
    http:
      paths:
      - backend:
          service:
            name: api-multipleports
            port:
              number: 80
        path: /
        pathType: Prefix
      - backend:
          service:
            name: api-multipleports
            port:
              number: 80
        path: /whoami(/|$)(.*)
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-linha-comando.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backend/Service/api-catalog:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: api-catalog
  namespace: backend
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: api-catalog
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource backend/Service/api-catalog failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-linha-comando1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backend/Service/api-catalog:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: api-catalog
  namespace: backend
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: api-catalog
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource backend/Service/api-catalog failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-linha-comando2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backend/Service/api-catalog:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: api-catalog
  namespace: backend
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: api-catalog
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource backend/Service/api-catalog failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-catalog:
apiVersion: v1
kind: Service
metadata:
  name: api-catalog
  namespace: default
spec:
  ports:
  - nodePort: 30555
    port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    run: api-catalog
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api-catalog failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-catalog:
apiVersion: v1
kind: Service
metadata:
  name: api-catalog
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    run: api-catalog
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-catalog:
apiVersion: v1
kind: Service
metadata:
  name: api-catalog
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    run: api-catalog
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-catalog:
apiVersion: v1
kind: Service
metadata:
  name: api-catalog
  namespace: default
spec:
  ports:
  - nodePort: 30555
    port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    run: api-catalog
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api-catalog failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-catalog:
apiVersion: v1
kind: Service
metadata:
  name: api-catalog
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    run: api-catalog
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-catalog:
apiVersion: v1
kind: Service
metadata:
  name: api-catalog
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    run: api-catalog
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-catalog:
apiVersion: v1
kind: Service
metadata:
  name: api-catalog
  namespace: default
spec:
  ports:
  - nodePort: 30555
    port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    run: api-catalog
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api-catalog failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-catalog:
apiVersion: v1
kind: Service
metadata:
  name: api-catalog
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    run: api-catalog
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-catalog-service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-catalog:
apiVersion: v1
kind: Service
metadata:
  name: api-catalog
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    run: api-catalog
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-claim0-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/api-claim0:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: api-claim0
  name: api-claim0
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-claim1-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/api-claim1:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: api-claim1
  name: api-claim1
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-claim2-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/api-claim2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: api-claim2
  name: api-claim2
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-config3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-config:
apiVersion: v1
data:
  APP_DEBUG: "true"
  APP_ENV: local
  APP_KEY: base64:eQrCXchv9wpGiOqRFaeIGPnqklzvU+A6CZYSMosh1to=
  APP_NAME: Laravel
  APP_URL: http://localhost
  AWS_ACCESS_KEY_ID: ""
  AWS_BUCKET: ""
  AWS_DEFAULT_REGION: us-east-1
  AWS_SECRET_ACCESS_KEY: ""
  AWS_USE_PATH_STYLE_ENDPOINT: "FALSE"
  BROADCAST_DRIVER: log
  CACHE_DRIVER: file
  DB_CONNECTION: mysql
  DB_DATABASE: kube_demo_laravel
  DB_HOST: mysql
  DB_PORT: "3306"
  FILESYSTEM_DISK: local
  LOG_CHANNEL: stack
  LOG_DEPRECATIONS_CHANNEL: "null"
  LOG_LEVEL: debug
  MAIL_ENCRYPTION: "null"
  MAIL_FROM_ADDRESS: hello@example.com
  MAIL_FROM_NAME: ${APP_NAME}
  MAIL_HOST: mailpit
  MAIL_MAILER: smtp
  MAIL_PASSWORD: "null"
  MAIL_PORT: "1025"
  MAIL_USERNAME: "null"
  MEMCACHED_HOST: 127.0.0.1
  PUSHER_APP_CLUSTER: mt1
  PUSHER_APP_ID: ""
  PUSHER_APP_KEY: ""
  PUSHER_APP_SECRET: ""
  PUSHER_HOST: ""
  PUSHER_PORT: "443"
  PUSHER_SCHEME: https
  QUEUE_CONNECTION: sync
  REDIS_HOST: 127.0.0.1
  REDIS_PASSWORD: "null"
  REDIS_PORT: "6379"
  SESSION_DRIVER: file
  SESSION_LIFETIME: "120"
  VITE_APP_NAME: ${APP_NAME}
  VITE_PUSHER_APP_CLUSTER: ${PUSHER_APP_CLUSTER}
  VITE_PUSHER_APP_KEY: ${PUSHER_APP_KEY}
  VITE_PUSHER_HOST: ${PUSHER_HOST}
  VITE_PUSHER_PORT: ${PUSHER_PORT}
  VITE_PUSHER_SCHEME: ${PUSHER_SCHEME}
  db-host: mysql
  db-name: mydb
kind: ConfigMap
metadata:
  name: api-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-config4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-config:
apiVersion: v1
data:
  db_name: citizens
kind: ConfigMap
metadata:
  name: api-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-config5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-config:
apiVersion: v1
data:
  DB_HOST: mysql-service
  DB_NAME: simple_todo
  DB_PORT: "3306"
kind: ConfigMap
metadata:
  name: api-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-config6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-config:
apiVersion: v1
data:
  DATABASE_URL: jdbc:postgresql://postgres:5432/employeedb
  DB_HOST: postgres
  DB_NAME: employeedb
  DB_PORT: "5432"
kind: ConfigMap
metadata:
  name: api-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /var/lib/synergychat/api/db.json
  API_PORT: "8080"
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_PORT: "8080"
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /var/lib/synergychat/api/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_PORT: "8080"
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-configmap:
apiVersion: v1
data:
  ELASTIC_SEARCH_ADDRESS: http://elasticsearch:9200
  RAPID_API_Search_Endpoint: https://imdb146.p.rapidapi.com/v1/find/?query
  REDIS_ADDRESS: redis:6379
  REDIS_DB: "0"
  REDIS_DIAL_TIMEOUT: 100ms
  REDIS_READ_TIMEOUT: 100ms
  SERVER_ADDRESS: 0.0.0.0:8080
  X_RAPID_API_HOST: imdb146.p.rapidapi.com
  X_RAPID_API_KEY: 24e09e687amsh01656e6e67c47d0p1844bdjsn2c88aeebf80b
kind: ConfigMap
metadata:
  name: api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /perist/db.json
  API_PORT: "8080"
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-configmap:
apiVersion: v1
data:
  auth_service_url: http://auth-microservice-svc:8003
  comment_service_url: http://comment-microservice-svc:8002
  gateway_url: http://gateway-svc:8000
  post_service_url: http://post-microservice-svc:8001
kind: ConfigMap
metadata:
  labels:
    app: fullstack-microservices
  name: api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /var/lib/synergychat/api/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: crawler

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_PORT: "8080"
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-payment-settings:
apiVersion: v1
data:
  settings.json: |
    {
      "api": {
        "port": "4000",
        "prefix": "api",
        "cache": {
          "max": 1000,
          "ttl": 60
        },
        "throttler": {
          "limit": 1000,
          "ttl": 60
        },
        "rabbitmq":{
          "name": "PAYMENT_SERVICE",
          "options": {
            "urls": ["amqp://guest:guest@svc-rmq-queue:5672"],
            "queue": "payment-service-queue",
            "queueOptions": {
              "durable": true
            }
          }
        }
      }
    }
kind: ConfigMap
metadata:
  name: api-payment-settings
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-production-settings:
apiVersion: v1
data:
  settings.json: |
    {
      "api": {
        "port": "6000",
        "prefix": "api",
        "cache": {
          "max": 1000,
          "ttl": 60
        },
        "throttler": {
          "limit": 1000,
          "ttl": 60
        },
        "rabbitmq":{
          "name": "PRODUCTION_SERVICE",
          "options": {
            "urls": ["amqp://guest:guest@svc-rmq-queue:5672"],
            "queue": "production-service-queue",
            "queueOptions": {
              "durable": true
            }
          }
        }
      }
    }
kind: ConfigMap
metadata:
  name: api-production-settings
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-config:
apiVersion: v1
data:
  database-host: mysql.default.svc.cluster.local
  database-name: todo
kind: ConfigMap
metadata:
  name: api-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-config:
apiVersion: v1
data:
  MYSQL_DATABASE: mysql
  MYSQL_EMP_DATABASE: employee
  MYSQL_USER: root
kind: ConfigMap
metadata:
  name: api-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /var/lib/synergychat/api/db.json
  API_PORT: "8080"
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /perist/db.json
  API_PORT: "8080"
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-configmap8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/synergychat-api-configmap:
apiVersion: v1
data:
  API_DB_FILEPATH: /persist/db.json
  API_PORT: "8080"
  CRAWLER_BASE_URL: http://crawler-service.crawler.svc.cluster.local
kind: ConfigMap
metadata:
  name: synergychat-api-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-config-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-config:
apiVersion: v1
data:
  DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/sagardb
kind: ConfigMap
metadata:
  name: api-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-config-secret_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/api-secret:
apiVersion: v1
data:
  API_KEY: c2VjcmV0YXBpa2V5
kind: Secret
metadata:
  name: api-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-daemonset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/numbers-api:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    kiamol: ch06-lab
  name: numbers-api
  namespace: default
spec:
  selector:
    matchLabels:
      app: numbers-api
  template:
    metadata:
      labels:
        app: numbers-api
    spec:
      containers:
      - image: kiamol/ch03-numbers-api
        name: api
      nodeSelector:
        rng: hw

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/numbers-api

skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/numbers-api
policy disallow-default-namespace -> resource default/DaemonSet/numbers-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/DaemonSet/numbers-api failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/DaemonSet/numbers-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/DaemonSet/numbers-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/DaemonSet/numbers-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-daemonset1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/numbers-api:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    kiamol: ch06-lab
  name: numbers-api
  namespace: default
spec:
  selector:
    matchLabels:
      app: numbers-api
  template:
    metadata:
      labels:
        app: numbers-api
    spec:
      containers:
      - image: kiamol/ch03-numbers-api
        name: api
      nodeSelector:
        rng: hw

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/numbers-api

skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/numbers-api
policy disallow-default-namespace -> resource default/DaemonSet/numbers-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/DaemonSet/numbers-api failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/DaemonSet/numbers-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/DaemonSet/numbers-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/DaemonSet/numbers-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-daemonset2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/numbers-api:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    kiamol: ch06-lab
  name: numbers-api
  namespace: default
spec:
  selector:
    matchLabels:
      app: numbers-api
  template:
    metadata:
      labels:
        app: numbers-api
    spec:
      containers:
      - image: kiamol/ch03-numbers-api
        name: api
      nodeSelector:
        rng: hw

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/numbers-api

skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/numbers-api
policy disallow-default-namespace -> resource default/DaemonSet/numbers-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/DaemonSet/numbers-api failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/DaemonSet/numbers-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/DaemonSet/numbers-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/DaemonSet/numbers-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-daemonset3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/numbers-api:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    kiamol: ch06-lab
  name: numbers-api
  namespace: default
spec:
  selector:
    matchLabels:
      app: numbers-api
  template:
    metadata:
      labels:
        app: numbers-api
    spec:
      containers:
      - image: kiamol/ch03-numbers-api
        name: api
      nodeSelector:
        rng: hw

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/numbers-api

skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/numbers-api
policy disallow-default-namespace -> resource default/DaemonSet/numbers-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/DaemonSet/numbers-api failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/DaemonSet/numbers-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/DaemonSet/numbers-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/DaemonSet/numbers-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/DaemonSet/numbers-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deny-egress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/api-deny-egress:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-deny-egress
  namespace: default
spec:
  egress: []
  podSelector:
    matchLabels:
      app: api
  policyTypes:
  - Egress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-deny-egress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/api-deny-egress:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-deny-egress
  namespace: default
spec:
  egress: []
  podSelector:
    matchLabels:
      app: api
  policyTypes:
  - Egress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-dep.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to load-balancer/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: load-balancer
spec:
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: redis-service
        image: firas124578/api
        name: api
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource load-balancer/Deployment/api

skipped mutate policy add-safe-to-evict -> resource load-balancer/Deployment/api
policy disallow-latest-tag -> resource load-balancer/Deployment/api failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource load-balancer/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource load-balancer/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource load-balancer/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource load-balancer/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource load-balancer/Deployment/api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource load-balancer/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource load-balancer/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-dep_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to load-balancer/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: load-balancer
spec:
  ports:
  - nodePort: 31001
    port: 5000
    targetPort: 5000
  selector:
    app: api
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource load-balancer/Service/api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-depl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      component: api
  template:
    metadata:
      labels:
        component: api
    spec:
      containers:
      - image: nginx
        name: api

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/netpolicy-api-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: netpolicy-api-deploy
  name: netpolicy-api-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: netpolicy-api-deploy
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: netpolicy-api-deploy
    spec:
      containers:
      - command:
        - sleep
        - infinity
        image: docker-registry:5000/fedora:39
        name: netpolicy-api-deploy

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/netpolicy-api-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/netpolicy-api-deploy
policy disallow-default-namespace -> resource default/Deployment/netpolicy-api-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to production/Deployment/my-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-app
    tier: production
  name: my-app
  namespace: production
spec:
  minReadySeconds: 5
  replicas: 3
  selector:
    matchLabels:
      app: my-app
      tier: production
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: my-app
        tier: production
    spec:
      containers:
      - env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              key: MONGODB_URI
              name: mongodb-secret
        - name: REDIS_URI
          valueFrom:
            secretKeyRef:
              key: REDIS_URI
              name: redis-secret
        image: erkanerbayram/blogapi:latest
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        name: my-app-container
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: 250m
            memory: 1Gi
      nodeSelector:
        tier: production
      tolerations:
      - effect: NoSchedule
        key: tier
        operator: Equal
        value: production

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource production/Deployment/my-app

skipped mutate policy add-safe-to-evict -> resource production/Deployment/my-app
policy disallow-latest-tag -> resource production/Deployment/my-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource production/Deployment/my-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource production/Deployment/my-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource production/Deployment/my-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource production/Deployment/my-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-ro-rootfs -> resource production/Deployment/my-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource production/Deployment/my-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deploy2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/netpolicy-api-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: netpolicy-api-deploy
  name: netpolicy-api-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: netpolicy-api-deploy
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: netpolicy-api-deploy
    spec:
      containers:
      - command:
        - sleep
        - infinity
        image: docker-registry:5000/fedora:39
        name: netpolicy-api-deploy

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/netpolicy-api-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/netpolicy-api-deploy
policy disallow-default-namespace -> resource default/Deployment/netpolicy-api-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/netpolicy-api-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deploy3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to production/Deployment/my-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-app
    tier: production
  name: my-app
  namespace: production
spec:
  minReadySeconds: 5
  replicas: 3
  selector:
    matchLabels:
      app: my-app
      tier: production
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: my-app
        tier: production
    spec:
      containers:
      - env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              key: MONGODB_URI
              name: mongodb-secret
        - name: REDIS_URI
          valueFrom:
            secretKeyRef:
              key: REDIS_URI
              name: redis-secret
        image: erkanerbayram/blogapi:latest
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        name: my-app-container
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: 250m
            memory: 1Gi
      nodeSelector:
        tier: production
      tolerations:
      - effect: NoSchedule
        key: tier
        operator: Equal
        value: production

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource production/Deployment/my-app

skipped mutate policy add-safe-to-evict -> resource production/Deployment/my-app
policy disallow-latest-tag -> resource production/Deployment/my-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource production/Deployment/my-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource production/Deployment/my-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource production/Deployment/my-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource production/Deployment/my-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-ro-rootfs -> resource production/Deployment/my-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource production/Deployment/my-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deploy5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/content-api-deployment-blue:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: content-api
    env: blue
  name: content-api-deployment-blue
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: content-api
  template:
    metadata:
      labels:
        app: content-api
        env: blue
    spec:
      containers:
      - image: team2dnbacr.azurecr.io/fabmedicalapi:0.0.1
        name: content-api
        ports:
        - containerPort: 3001
        resources:
          limits:
            cpu: 1000m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/content-api-deployment-blue

skipped mutate policy add-safe-to-evict -> resource default/Deployment/content-api-deployment-blue
policy disallow-default-namespace -> resource default/Deployment/content-api-deployment-blue failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/content-api-deployment-blue failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/content-api-deployment-blue failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/content-api-deployment-blue failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/content-api-deployment-blue failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/content-api-deployment-blue failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/content-api-deployment-blue failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deploy6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/content-api-deployment-green:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: content-api
    env: green
  name: content-api-deployment-green
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: content-api
  template:
    metadata:
      labels:
        app: content-api
        env: green
    spec:
      containers:
      - env:
        - name: MONGODB_CONNECTION
          value: mongodb://mongo-svc-green:27017/contentdb
        image: team2dnbacr.azurecr.io/hussam-content-api-v2:latest
        name: content-api
        ports:
        - containerPort: 3001
        resources:
          limits:
            cpu: 1000m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/content-api-deployment-green

skipped mutate policy add-safe-to-evict -> resource default/Deployment/content-api-deployment-green
policy disallow-default-namespace -> resource default/Deployment/content-api-deployment-green failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/content-api-deployment-green failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/content-api-deployment-green failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/content-api-deployment-green failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/content-api-deployment-green failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/content-api-deployment-green failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/content-api-deployment-green failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/content-api-deployment-green failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-api-configmap
        image: lanecwagner/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/data-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-api
  template:
    metadata:
      labels:
        app: data-api
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: mysql
        - name: DB_USER
          value: root
        - name: DB_PASSWORD
          value: password
        - name: DB_NAME
          value: mydatabase
        image: data-api-server
        imagePullPolicy: IfNotPresent
        name: data-api
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/data-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/data-api
policy disallow-default-namespace -> resource default/Deployment/data-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/data-api failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/data-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/data-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/data-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/data-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/data-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/data-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/data-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/data-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-api
  template:
    metadata:
      labels:
        app: data-api
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: mysql
        - name: DB_USER
          value: root
        - name: DB_PASSWORD
          value: password
        - name: DB_NAME
          value: mydatabase
        image: data-api-server
        imagePullPolicy: IfNotPresent
        name: data-api
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/data-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/data-api
policy disallow-default-namespace -> resource default/Deployment/data-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/data-api failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/data-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/data-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/data-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/data-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/data-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/data-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/data-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/data-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-api
  template:
    metadata:
      labels:
        app: data-api
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: mysql
        - name: DB_USER
          value: root
        - name: DB_PASSWORD
          value: password
        - name: DB_NAME
          value: mydatabase
        image: data-api-server
        imagePullPolicy: IfNotPresent
        name: data-api
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/data-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/data-api
policy disallow-default-namespace -> resource default/Deployment/data-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/data-api failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/data-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/data-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/data-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/data-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/data-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/data-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/data-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-api-configmap
        image: lanecwagner/synergychat-api:latest
        name: synergychat-api

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-api-configmap
        image: lanecwagner/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-pvc
      volumes:
      - name: synergychat-api-pvc
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: api
    spec:
      containers:
      - image: ahm282/milestone2:fastapi
        imagePullPolicy: Always
        name: api-container
        ports:
        - containerPort: 8000
        volumeMounts:
        - mountPath: /code
          name: main-script
      volumes:
      - hostPath:
          path: /vagrant/deployments/api/app
          type: Directory
        name: main-script

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: api-deployment16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        - name: API_DB_FILEPATH
          valueFrom:
            configMapKeyRef:
              key: API_DB_FILEPATH
              name: synergychat-api-configmap
        - name: CRAWLER_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_BASE_URL
              name: synergychat-api-configmap
        image: lanecwagner/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: node_env
              name: app-config
        - name: DB_URL
          valueFrom:
            configMapKeyRef:
              key: db_url
              name: app-config
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              key: jwt_secret
              name: app-config
        image: gustavogcosta/api
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        name: api
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /
            port: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource development/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource development/Deployment/api-deployment
policy disallow-latest-tag -> resource development/Deployment/api-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource development/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource development/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource development/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource development/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource development/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource development/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cloudchamp/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: demo
    role: api
  name: api
  namespace: cloudchamp
spec:
  replicas: 2
  selector:
    matchLabels:
      role: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        role: api
    spec:
      containers:
      - env:
        - name: MONGO_CONN_STR
          value: mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/langdb?replicaSet=rs0
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongodb-secret
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongodb-secret
        image: cloudacademydevops/api:v3
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        name: api
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api

skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api
policy drop-all-capabilities -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cloudchamp/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cloudchamp/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: demo
    role: api
  name: api
  namespace: cloudchamp
spec:
  replicas: 2
  selector:
    matchLabels:
      role: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        role: api
    spec:
      containers:
      - env:
        - name: MONGO_CONN_STR
          value: mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/langdb?replicaSet=rs0
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongodb-secret
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongodb-secret
        image: cloudacademydevops/api:v3
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        name: api
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api

skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api
policy drop-all-capabilities -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cloudchamp/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/data-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-api
  template:
    metadata:
      labels:
        app: data-api
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: mysql
        - name: DB_USER
          value: root
        - name: DB_PASSWORD
          value: password
        - name: DB_NAME
          value: mydatabase
        image: data-api-server
        imagePullPolicy: IfNotPresent
        name: data-api
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/data-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/data-api
policy disallow-default-namespace -> resource default/Deployment/data-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/data-api failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/data-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/data-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/data-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/data-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/data-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/data-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/data-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment-2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-pod
  template:
    metadata:
      labels:
        app: api-pod
    spec:
      containers:
      - env:
        - name: BE_PORT
          value: "8080"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: api-config
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              key: DB_PORT
              name: api-config
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: api-config
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: db-user
              name: api-secret
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db-password
              name: api-secret
        image: hgupta007/simple-todo:17
        name: api
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            cpu: 512m
            memory: 512Mi
          requests:
            cpu: 512m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to raihanorium/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api-deployment
  namespace: raihanorium
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - image: raihanorium/kubernetes-api:latest
        imagePullPolicy: IfNotPresent
        name: api
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource raihanorium/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource raihanorium/Deployment/api-deployment
policy disallow-latest-tag -> resource raihanorium/Deployment/api-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource raihanorium/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource raihanorium/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource raihanorium/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource raihanorium/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource raihanorium/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource raihanorium/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource raihanorium/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        - name: API_DB_FILEPATH
          valueFrom:
            configMapKeyRef:
              key: API_DB_FILEPATH
              name: synergychat-api-configmap
        - name: CRAWLER_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_BASE_URL
              name: synergychat-api-configmap
        image: lanecwagner/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cloudchamp/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: demo
    role: api
  name: api
  namespace: cloudchamp
spec:
  replicas: 2
  selector:
    matchLabels:
      role: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        role: api
    spec:
      containers:
      - env:
        - name: MONGO_CONN_STR
          value: mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/langdb?replicaSet=rs0
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongodb-secret
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongodb-secret
        image: cloudacademydevops/api:v3
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        name: api
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api

skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api
policy drop-all-capabilities -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cloudchamp/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: api
    app.kubernetes.io/part-of: auth-app
  name: api-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: api
      app.kubernetes.io/part-of: auth-app
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/name: api
        app.kubernetes.io/part-of: auth-app
    spec:
      containers:
      - env:
        - name: JWT_PUBLIC_KEY
          valueFrom:
            secretKeyRef:
              key: public_key.pem
              name: jwt-secret
        - name: JWT_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: private_key.pem
              name: jwt-secret
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongodb-root-password
              name: mongodb
        - name: MONGODB_HOST
          value: mongodb-headless:27017
        - name: MONGODB_USER
          value: root
        image: thierno19/projet5-gke-node-api
        livenessProbe:
          httpGet:
            path: /api/user/current
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 15
        name: api
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /api/user/current
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
      imagePullSecrets:
      - name: docker-hub-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cloudchamp/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: demo
    role: api
  name: api
  namespace: cloudchamp
spec:
  replicas: 2
  selector:
    matchLabels:
      role: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        role: api
    spec:
      containers:
      - env:
        - name: MONGO_CONN_STR
          value: mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/langdb?replicaSet=rs0
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongodb-secret
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongodb-secret
        image: cloudacademydevops/api:v3
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        name: api
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api

skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api
policy drop-all-capabilities -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cloudchamp/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        - name: API_DB_FILEPATH
          valueFrom:
            configMapKeyRef:
              key: API_DB_FILEPATH
              name: synergychat-api-configmap
        - name: CRAWLER_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_BASE_URL
              name: synergychat-api-configmap
        image: lanecwagner/synergychat-api:latest
        name: synergychat-api
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cloudchamp/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: demo
    role: api
  name: api
  namespace: cloudchamp
spec:
  replicas: 2
  selector:
    matchLabels:
      role: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        role: api
    spec:
      containers:
      - env:
        - name: MONGO_CONN_STR
          value: mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/langdb?replicaSet=rs0
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongodb-secret
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongodb-secret
        image: cloudacademydevops/api:v3
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        name: api
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api

skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api
policy drop-all-capabilities -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cloudchamp/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      component: api
  template:
    metadata:
      labels:
        component: api
    spec:
      containers:
      - env:
        - name: DB_CONNECTION
          value: pg
        - name: DB_HOST
          value: postgres-cluster-ip-service
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: postgres
        - name: DB_DATABASE
          value: notesdb
        - name: DB_PASSWORD
          value: 63eaQB9wtLqmNBpg
        image: fhsinchy/notes-api
        name: api
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-api-configmap
        image: lanecwagner/synergychat-api:latest
        name: synergychat-api

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment-3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-pod
  template:
    metadata:
      labels:
        app: api-pod
    spec:
      containers:
      - env:
        - name: BE_PORT
          value: "8080"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: api-config
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              key: DB_PORT
              name: api-config
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: api-config
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: db-user
              name: api-secret
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db-password
              name: api-secret
        image: hgupta007/simple-todo:abc
        name: api
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            cpu: 512m
            memory: 512Mi
          requests:
            cpu: 512m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        image: evandolatowski/synergychat-api:latest
        name: synergychat-api

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to api/Service/api-svc:
apiVersion: v1
kind: Service
metadata:
  name: api-svc
  namespace: api
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app: flask-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-deployment31_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to api/Ingress/api-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  namespace: api
spec:
  ingressClassName: nginx-external
  rules:
  - host: hyukjuntest.site
    http:
      paths:
      - backend:
          service:
            name: api-svc
            port:
              number: 8000
        path: /api/player
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-deployment31_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to api/Deployment/flask-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask-api
  name: flask-api
  namespace: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-api
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-api
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: api-mysql-context
        image: devaksacr001.azurecr.io/flask-rest-api-amd64:1.0
        name: flask-rest-api
        resources:
          limits:
            cpu: 100m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 500Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource api/Deployment/flask-api

skipped mutate policy add-safe-to-evict -> resource api/Deployment/flask-api
policy drop-all-capabilities -> resource api/Deployment/flask-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource api/Deployment/flask-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource api/Deployment/flask-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource api/Deployment/flask-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource api/Deployment/flask-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource api/Deployment/flask-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          value: "8080"
        - name: API_DB_FILEPATH
          valueFrom:
            configMapKeyRef:
              key: API_DB_FILEPATH
              name: synergychat-api-configmap
        - name: CRAWLER_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_BASE_URL
              name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment36.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to vote-app/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: demo
    role: api
  name: api
  namespace: vote-app
spec:
  replicas: 2
  selector:
    matchLabels:
      role: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        role: api
    spec:
      containers:
      - env:
        - name: MONGO_CONNECTION_STRING
          value: mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/sample_mflix?replicaSet=rs0
        - name: DATABASE
          value: sample_mflix
        image: bibhash1996/vote-app-server:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        name: api
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource vote-app/Deployment/api

skipped mutate policy add-safe-to-evict -> resource vote-app/Deployment/api
policy disallow-latest-tag -> resource vote-app/Deployment/api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource vote-app/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource vote-app/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource vote-app/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource vote-app/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource vote-app/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource vote-app/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - image: ghofranechenenaoui/etl_flask:latest
        name: api
        ports:
        - containerPort: 5000
        volumeMounts:
        - mountPath: /app/data/data-output
          name: data-output
        - mountPath: /app/logs
          name: logs
      volumes:
      - name: data-output
        persistentVolumeClaim:
          claimName: data-output-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: logs-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to my-k8s-world/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: demo
    role: api
  name: api
  namespace: my-k8s-world
spec:
  replicas: 2
  selector:
    matchLabels:
      role: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        role: api
    spec:
      containers:
      - env:
        - name: MONGO_CONN_STR
          value: mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/langdb?replicaSet=rs0
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongodb-secret
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongodb-secret
        image: cloudacademydevops/api:v3
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        name: api
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource my-k8s-world/Deployment/api

skipped mutate policy add-safe-to-evict -> resource my-k8s-world/Deployment/api
policy drop-all-capabilities -> resource my-k8s-world/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource my-k8s-world/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource my-k8s-world/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource my-k8s-world/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource my-k8s-world/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource my-k8s-world/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-api-configmap
        image: lanecwagner/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-pvc
      volumes:
      - name: synergychat-api-pvc
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/g37-lanches-api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: g37-lanches-api-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: g37-lanches-api
  template:
    metadata:
      labels:
        app: g37-lanches-api
    spec:
      containers:
      - env:
        - name: ENVIRONMENT
          value: dev
        - name: POSTGRES_HOST
          value: postgres
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: postgres-secret
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: postgres-secret
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: postgres-secret
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_SSLMODE
          value: disable
        image: igorramos/g37-lanches-api:v1.0.3
        name: g37-lanches-api
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: "0.5"
            memory: 512Mi
          requests:
            cpu: "0.25"
            memory: 256Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/g37-lanches-api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/g37-lanches-api-deployment
policy disallow-default-namespace -> resource default/Deployment/g37-lanches-api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/g37-lanches-api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/g37-lanches-api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/g37-lanches-api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/g37-lanches-api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/g37-lanches-api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/g37-lanches-api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        - name: API_DB_FILEPATH
          valueFrom:
            configMapKeyRef:
              key: API_DB_FILEPATH
              name: synergychat-api-configmap
        - name: CRAWLER_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_BASE_URL
              name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/stickersng-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: stickersng-api
  name: stickersng-api
  namespace: default
spec:
  ports:
  - port: 8000
  selector:
    app: stickersng-api
    tier: backend-api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-deployment42_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/wp-pv-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: stickersng-api
  name: wp-pv-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-deployment42_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/stickersng-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: stickersng-api
  name: stickersng-api
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: stickersng-api
      tier: backend-api
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: stickersng-api
        tier: backend-api
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: stng-secrets
        image: eenwemasor/stickersng:v1.1.1
        name: stickersng-api
        ports:
        - containerPort: 8000
          name: stickersng-api
        volumeMounts:
        - mountPath: /var/www/html/storage
          name: stickersng-api-persistent-storage
      initContainers:
      - command:
        - sh
        - -c
        - mkdir -p /var/www/html/storage/framework/views/ && mkdir -p /var/www/html/storage/framework/cache/
          && mkdir -p /var/www/html/storage/framework/sessions/ && chown -R www-data:www-data
          /var/www/html/storage/framework/sessions/
        image: busybox
        name: setup-storage
        volumeMounts:
        - mountPath: /var/www/html/storage
          name: stickersng-api-persistent-storage
      volumes:
      - name: stickersng-api-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/stickersng-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/stickersng-api
policy disallow-default-namespace -> resource default/Deployment/stickersng-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/stickersng-api failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/stickersng-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/stickersng-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/stickersng-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/stickersng-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/stickersng-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/stickersng-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/stickersng-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - image: bootdotdev/synergychat-api:latest
        name: synergychat-api

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to k8s-project/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: demo
    role: api
  name: api
  namespace: k8s-project
spec:
  replicas: 2
  selector:
    matchLabels:
      role: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        role: api
    spec:
      containers:
      - env:
        - name: MONGO_CONN_STR
          value: mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/langdb?replicaSet=rs0
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongodb-secret
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongodb-secret
        image: cloudacademydevops/api:v3
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        name: api
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      securityContext:
        fsGroup: 2000
        runAsGroup: 3000
        runAsUser: 1000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource k8s-project/Deployment/api

skipped mutate policy add-safe-to-evict -> resource k8s-project/Deployment/api
policy drop-all-capabilities -> resource k8s-project/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource k8s-project/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource k8s-project/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource k8s-project/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource k8s-project/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/alertmappingapi:
apiVersion: v1
kind: Service
metadata:
  name: alertmappingapi
  namespace: default
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: alertmappingapi
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/alertmappingapi failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-deployment46_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to keep/Deployment/alertmappingapi:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmappingapi
  namespace: keep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmappingapi
  template:
    metadata:
      labels:
        app: alertmappingapi
    spec:
      containers:
      - image: docker.io/kavindukalinga/servicedepend:1.0.0
        imagePullPolicy: IfNotPresent
        name: alertmappingapi
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: 250m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource keep/Deployment/alertmappingapi

skipped mutate policy add-safe-to-evict -> resource keep/Deployment/alertmappingapi
policy drop-all-capabilities -> resource keep/Deployment/alertmappingapi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource keep/Deployment/alertmappingapi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource keep/Deployment/alertmappingapi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource keep/Deployment/alertmappingapi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource keep/Deployment/alertmappingapi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource keep/Deployment/alertmappingapi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource keep/Deployment/alertmappingapi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to temp-calculator/ServiceAccount/aws-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::383567628073:role/test-oidc
  name: aws-sa
  namespace: temp-calculator

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-deployment47_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to temp-calculator/Deployment/temperature-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temperature-api
  namespace: temp-calculator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temperature-api
  template:
    metadata:
      labels:
        app: temperature-api
    spec:
      containers:
      - image: amrelhewy/temperature-api:2.0
        name: temperature-api
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 250m
            memory: 90Mi
      serviceAccountName: aws-sa

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource temp-calculator/Deployment/temperature-api

skipped mutate policy add-safe-to-evict -> resource temp-calculator/Deployment/temperature-api
policy drop-all-capabilities -> resource temp-calculator/Deployment/temperature-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource temp-calculator/Deployment/temperature-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource temp-calculator/Deployment/temperature-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource temp-calculator/Deployment/temperature-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource temp-calculator/Deployment/temperature-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource temp-calculator/Deployment/temperature-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource temp-calculator/Deployment/temperature-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment47_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to temp-calculator/Service/temperature-api:
apiVersion: v1
kind: Service
metadata:
  name: temperature-api
  namespace: temp-calculator
spec:
  ports:
  - name: http
    port: 3000
  selector:
    app: temperature-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-deployment48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webapp
  name: webapp-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: DB_USER_NAME
          valueFrom:
            secretKeyRef:
              key: mongo-user
              name: mongo-secret
        - name: DB_USER_PWD
          valueFrom:
            secretKeyRef:
              key: mongo-password
              name: mongo-secret
        - name: DB_URL
          valueFrom:
            configMapKeyRef:
              key: mongo-url
              name: mongo-config
        image: webapp:latest
        name: webapp
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp-deployment
policy disallow-default-namespace -> resource default/Deployment/webapp-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/webapp-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/webapp-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/webapp-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/webapp-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        - name: API_DB_FILEPATH
          valueFrom:
            configMapKeyRef:
              key: API_DB_FILEPATH
              name: synergychat-api-configmap
        - name: CRAWLER_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_BASE_URL
              name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-app
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: api
    spec:
      containers:
      - image: ahm282/milestone2:fastapi
        imagePullPolicy: Always
        name: api-container
        ports:
        - containerPort: 8000
        volumeMounts:
        - mountPath: /code
          name: main-script
      volumes:
      - hostPath:
          path: /vagrant/deployments/api/app
          type: Directory
        name: main-script

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: api-deployment50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - image: felipefelixdocker/ex-kube:latest
        name: api
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cloudchamp/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: demo
    role: api
  name: api
  namespace: cloudchamp
spec:
  replicas: 2
  selector:
    matchLabels:
      role: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        role: api
    spec:
      containers:
      - env:
        - name: MONGO_CONN_STR
          value: mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/langdb?replicaSet=rs0
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongodb-secret
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongodb-secret
        image: cloudacademydevops/api:v3
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        name: api
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api

skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api
policy drop-all-capabilities -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cloudchamp/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - image: ww1ll/fatec-ex-kubernetes:latest
        name: api
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: db-configmap
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              key: POSTGRES_USER
              name: db-secret
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: db-secret
        image: csarnar/students-api
        name: api-c
        ports:
        - containerPort: 9001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment53_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app: api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-deployment54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - image: kndhvh/api_img:latest
        imagePullPolicy: Always
        name: api
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment55.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: api-configmap
        image: thefeij/movie-search:1.0.1
        name: api
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api
policy disallow-default-namespace -> resource default/Deployment/api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        - name: API_DB_FILEPATH
          valueFrom:
            configMapKeyRef:
              key: API_DB_FILEPATH
              name: synergychat-api-configmap
        - name: CRAWLER_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_BASE_URL
              name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment57.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment58.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        - name: API_DB_FILEPATH
          valueFrom:
            configMapKeyRef:
              key: API_DB_FILEPATH
              name: synergychat-api-configmap
        - name: CRAWLER_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_BASE_URL
              name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment59.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to snack-bar/Deployment/snack-bar-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snack-bar-api
  namespace: snack-bar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: snack-bar-api
  template:
    metadata:
      labels:
        app: snack-bar-api
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          value: postgresql://root:root@snack-bar-db:5432/snack-api-db
        image: deborasilveira/snack-bar-api:latest
        name: snack-bar-api
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 100m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource snack-bar/Deployment/snack-bar-api

skipped mutate policy add-safe-to-evict -> resource snack-bar/Deployment/snack-bar-api
policy disallow-latest-tag -> resource snack-bar/Deployment/snack-bar-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource snack-bar/Deployment/snack-bar-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource snack-bar/Deployment/snack-bar-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource snack-bar/Deployment/snack-bar-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource snack-bar/Deployment/snack-bar-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource snack-bar/Deployment/snack-bar-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource snack-bar/Deployment/snack-bar-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource snack-bar/Deployment/snack-bar-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment59_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to snack-bar/Deployment/payment-webhook-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-webhook-api
  namespace: snack-bar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-webhook-api
  template:
    metadata:
      labels:
        app: payment-webhook-api
    spec:
      containers:
      - env:
        - name: MERCADO_PAGO_ACCESS_TOKEN
          value: TEST-7418278903320835-072411-cef84b2f32a8952e205f8f50e3e20d15-391569826
        - name: MERCADO_PAGO_API_URL
          value: https://api.mercadopago.com/v1
        image: deborasilveira/payment-webhook-api:latest
        name: payment-webhook-api
        ports:
        - containerPort: 3001
        resources:
          requests:
            cpu: 100m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource snack-bar/Deployment/payment-webhook-api

skipped mutate policy add-safe-to-evict -> resource snack-bar/Deployment/payment-webhook-api
policy disallow-latest-tag -> resource snack-bar/Deployment/payment-webhook-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource snack-bar/Deployment/payment-webhook-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource snack-bar/Deployment/payment-webhook-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource snack-bar/Deployment/payment-webhook-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource snack-bar/Deployment/payment-webhook-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource snack-bar/Deployment/payment-webhook-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource snack-bar/Deployment/payment-webhook-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource snack-bar/Deployment/payment-webhook-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment60.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/java-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-api
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: java-api
  template:
    metadata:
      labels:
        app: java-api
    spec:
      containers:
      - image: lucasgoleiro/techchallenge2
        name: java-api
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/java-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/java-api
policy disallow-default-namespace -> resource default/Deployment/java-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/java-api failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/java-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/java-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/java-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/java-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/java-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/java-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/java-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment62.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: api
    app.kubernetes.io/part-of: auth-app
  name: api-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: api
      app.kubernetes.io/part-of: auth-app
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/name: api
        app.kubernetes.io/part-of: auth-app
    spec:
      containers:
      - env:
        - name: JWT_PUBLIC_KEY
          valueFrom:
            secretKeyRef:
              key: public_key.pem
              name: jwt-secret
        - name: JWT_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: private_key.pem
              name: jwt-secret
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongodb-root-password
              name: mongodb
        - name: MONGODB_USER
          value: root
        - name: MONGODB_HOST
          value: mongodb-headless:27017
        image: laurentt/projet5-gke-node-api:latest
        livenessProbe:
          httpGet:
            path: /api/user/current
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 15
        name: api
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /api/user/current
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 15
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
      imagePullSecrets:
      - name: docker-hub-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment63.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: api
    app.kubernetes.io/part-of: auth-app
  name: api-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: api
      app.kubernetes.io/part-of: auth-app
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/name: api
        app.kubernetes.io/part-of: auth-app
    spec:
      containers:
      - env:
        - name: JWT_PUBLIC_KEY
          valueFrom:
            secretKeyRef:
              key: public_key.pem
              name: jwt-secret
        - name: JWT_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: private_key.pem
              name: jwt-secret
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongodb-root-password
              name: mongodb
        - name: MONGODB_USER
          value: root
        - name: MONGODB_HOST
          value: mongodb-headless:27017
        image: laurentt/chap19-api-node:4cb5ac6
        livenessProbe:
          httpGet:
            path: /api/user/current
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 15
        name: api
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /api/user/current
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 15
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
      imagePullSecrets:
      - name: docker-hub-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment64.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/lintang-transcoder-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lintang-transcoder-api
  namespace: default
spec:
  selector:
    matchLabels:
      app: lintang-transcoder-api
  template:
    metadata:
      labels:
        app: lintang-transcoder-api
    spec:
      containers:
      - env:
        - name: MONGO_URL
          value: mongodb://admin:lintang@example-mongodb-0.example-mongodb-svc.mongodb.svc.cluster.local:27017,example-mongodb-1.example-mongodb-svc.mongodb.svc.cluster.local:27017,example-mongodb-2.example-mongodb-svc.mongodb.svc.cluster.local:27017/admin?replicaSet=example-mongodb&ssl=false
        - name: RABBIT_URL
          value: amqp://default_user_qBofhrkSzzUoEDWve1t:ZciKwWU3f4ev5dFjmBnIMNDnvr4MjKfr@10.108.25.30:5672/
        - name: BASE_URL_MINIO
          value: minio.minio-dev.svc.cluster.local:9000
        - name: DKRON_URL
          value: http://dkron-svc:8080/v1/jobs
        - name: TRANSCODER_WORKER_URL
          value: lintang-transcoder-worker-service.default.svc.cluster.local:9995
        - name: ACC_KEY_MINIO
          value: oO3LIXBYLXmIXxG5t6FD
        - name: SECRET_KEY_MINIO
          value: kuxo6ec5rgyIwMh8jVdNFk5nCyWutOnHC1gyutKp
        - name: APP_ENV
          value: k8s
        - name: Minikube_IP
          value: 192.168.49.2
        image: docker.io/lintangbirdas/transcoder-api:v2
        imagePullPolicy: Always
        name: lintang-transcoder-api
        ports:
        - containerPort: 9996
        resources:
          limits:
            cpu: 400m
            memory: 500Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/lintang-transcoder-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/lintang-transcoder-api
policy disallow-default-namespace -> resource default/Deployment/lintang-transcoder-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/lintang-transcoder-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/lintang-transcoder-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/lintang-transcoder-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/lintang-transcoder-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/lintang-transcoder-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/lintang-transcoder-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/lintang-transcoder-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment64_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/lintang-transcoder-api-service:
apiVersion: v1
kind: Service
metadata:
  name: lintang-transcoder-api-service
  namespace: default
spec:
  ports:
  - nodePort: 31203
    port: 9996
    targetPort: 9996
  selector:
    app: lintang-transcoder-api
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/lintang-transcoder-api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-deployment65.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: synergychat-api
  namespace: crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource crawler/Deployment/synergychat-api
policy disallow-latest-tag -> resource crawler/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource crawler/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource crawler/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource crawler/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource crawler/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource crawler/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource crawler/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment66.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment67.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        - name: API_DB_FILEPATH
          valueFrom:
            configMapKeyRef:
              key: API_DB_FILEPATH
              name: synergychat-api-configmap
        - name: CRAWLER_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_BASE_URL
              name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment68.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ms-ordermanager-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ms-ordermanager-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ms-ordermanager-deployment
  template:
    metadata:
      labels:
        app: ms-ordermanager-deployment
      name: ms-ordermanager-deployment
    spec:
      containers:
      - image: lucascandido/ts-ms-ordermanager:latest
        name: ms-ordermanager-deployment
        ports:
        - containerPort: 5000
        resources:
          limits:
            memory: 2Gi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ms-ordermanager-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ms-ordermanager-deployment
policy disallow-default-namespace -> resource default/Deployment/ms-ordermanager-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/ms-ordermanager-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/ms-ordermanager-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ms-ordermanager-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ms-ordermanager-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ms-ordermanager-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/ms-ordermanager-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ms-ordermanager-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ms-ordermanager-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment69.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ts-ms-paymentmanager-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-ms-paymentmanager-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ts-ms-paymentmanager-deployment
  template:
    metadata:
      labels:
        app: ts-ms-paymentmanager-deployment
      name: ts-ms-paymentmanager-deployment
    spec:
      containers:
      - env:
        - name: MY_SETTINGS
          valueFrom:
            configMapKeyRef:
              key: settings.json
              name: api-payment-settings
        image: lucascandido/ts-ms-paymentmanager:v4
        name: ts-ms-paymentmanager-deployment
        ports:
        - containerPort: 4000
        resources:
          limits:
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ts-ms-paymentmanager-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ts-ms-paymentmanager-deployment
policy disallow-default-namespace -> resource default/Deployment/ts-ms-paymentmanager-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ts-ms-paymentmanager-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ts-ms-paymentmanager-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ts-ms-paymentmanager-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ts-ms-paymentmanager-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/ts-ms-paymentmanager-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ts-ms-paymentmanager-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ts-ms-paymentmanager-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        - name: API_DB_FILEPATH
          valueFrom:
            configMapKeyRef:
              key: API_DB_FILEPATH
              name: synergychat-api-configmap
        - name: CRAWLER_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_BASE_URL
              name: synergychat-api-configmap
        image: lanecwagner/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment70.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ts-ms-productionmanager-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-ms-productionmanager-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ts-ms-productionmanager-deployment
  template:
    metadata:
      labels:
        app: ts-ms-productionmanager-deployment
      name: ts-ms-productionmanager-deployment
    spec:
      containers:
      - env:
        - name: MY_SETTINGS
          valueFrom:
            configMapKeyRef:
              key: settings.json
              name: api-production-settings
        image: lucascandido/ts-ms-productionmanager:v3
        name: ts-ms-productionmanager-deployment
        ports:
        - containerPort: 6000
        resources:
          limits:
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ts-ms-productionmanager-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ts-ms-productionmanager-deployment
policy disallow-default-namespace -> resource default/Deployment/ts-ms-productionmanager-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ts-ms-productionmanager-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ts-ms-productionmanager-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ts-ms-productionmanager-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ts-ms-productionmanager-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/ts-ms-productionmanager-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ts-ms-productionmanager-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ts-ms-productionmanager-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment71.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        - name: API_DB_FILEPATH
          valueFrom:
            configMapKeyRef:
              key: API_DB_FILEPATH
              name: synergychat-api-configmap
        - name: CRAWLER_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_BASE_URL
              name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        resources:
          limits:
            cpu: "0.5"
            memory: 512Mi
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment73.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to shivani/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: demo
    role: api
  name: api
  namespace: shivani
spec:
  replicas: 2
  selector:
    matchLabels:
      role: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        role: api
    spec:
      containers:
      - env:
        - name: MONGO_CONN_STR
          value: mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/langdb?replicaSet=rs0
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongodb-secret
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongodb-secret
        image: cloudacademydevops/api:v3
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        name: api
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource shivani/Deployment/api

skipped mutate policy add-safe-to-evict -> resource shivani/Deployment/api
policy drop-all-capabilities -> resource shivani/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource shivani/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource shivani/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource shivani/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource shivani/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource shivani/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment74.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - env:
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              key: MYSQL_USER
              name: mysql-config
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MYSQL_PASSWORD
              name: mysql-secret
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              key: MYSQL_DATABASE
              name: mysql-config
        image: aditya6656/nagp-kubernetes-jsassignment
        name: api
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api
policy disallow-default-namespace -> resource default/Deployment/api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment75.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment76.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - env:
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-root-username
              name: mongo-secret
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-root-password
              name: mongo-secret
        - name: MONGO_HOST
          valueFrom:
            secretKeyRef:
              key: mongo-host
              name: mongo-secret
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: db_name
              name: api-config
        image: shobhittestregistry.azurecr.io/task:latest
        name: api
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 1
          requests:
            cpu: 200m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment77.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cloudchamp/Deployment/api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: demo
    role: api
  name: api
  namespace: cloudchamp
spec:
  replicas: 2
  selector:
    matchLabels:
      role: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        role: api
    spec:
      containers:
      - env:
        - name: MONGO_CONN_STR
          value: mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/langdb?replicaSet=rs0
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongodb-secret
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongodb-secret
        image: cloudacademydevops/api:v3
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        name: api
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /ok
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api

skipped mutate policy add-safe-to-evict -> resource cloudchamp/Deployment/api
policy drop-all-capabilities -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cloudchamp/Deployment/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cloudchamp/Deployment/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource cloudchamp/Deployment/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment78.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: api-config
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              key: API_KEY
              name: api-secret
        image: isagaraggarwal/nodejs-api:latest
        name: api
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment79.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/book-api-service:
apiVersion: v1
kind: Service
metadata:
  name: book-api-service
  namespace: default
spec:
  ports:
  - nodePort: 30163
    port: 8081
    protocol: TCP
    targetPort: 8080
  selector:
    app: backend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/book-api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-deployment79_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/backend-book-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-book-api
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
      environment: dev
  template:
    metadata:
      labels:
        app: backend
        environment: dev
    spec:
      containers:
      - env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: host
              name: postgres-conf
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              key: port
              name: postgres-conf
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: name
              name: postgres-conf
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: postgres_user
              name: postgres-credentials
        - name: DB_PWD
          valueFrom:
            secretKeyRef:
              key: postgres_password
              name: postgres-credentials
        image: spring-data-r2dbc-postgres-k8s:latest
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 2
        name: book-api
        ports:
        - containerPort: 8080
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/backend-book-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/backend-book-api
policy disallow-default-namespace -> resource default/Deployment/backend-book-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/backend-book-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/backend-book-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/backend-book-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/backend-book-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/backend-book-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/backend-book-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/backend-book-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: node_env
              name: app-config
        - name: DB_URL
          valueFrom:
            configMapKeyRef:
              key: db_url
              name: app-config
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              key: jwt_secret
              name: app-config
        image: gustavogcosta/api
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        name: api
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /
            port: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource development/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource development/Deployment/api-deployment
policy disallow-latest-tag -> resource development/Deployment/api-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource development/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource development/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource development/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource development/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource development/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource development/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment80.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-pod
  template:
    metadata:
      labels:
        app: api-pod
    spec:
      containers:
      - env:
        - name: BE_PORT
          value: "8080"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: api-config
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              key: DB_PORT
              name: api-config
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: api-config
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: db-user
              name: api-secret
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db-password
              name: api-secret
        image: hgupta007/simple-todo:16
        name: api
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            cpu: 512m
            memory: 512Mi
          requests:
            cpu: 512m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment81.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-express-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-express-deployment
  name: api-express-deployment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: api-express-deployment
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api-express-deployment
    spec:
      containers:
      - image: matheusgomesa/api_express:5.0
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        name: api-express
        readinessProbe:
          exec:
            command:
            - curl
            - -f
            - http://localhost:3000/
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1
            memory: 128Mi
          requests:
            cpu: 0.5
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-express-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-express-deployment
policy disallow-default-namespace -> resource default/Deployment/api-express-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-express-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-express-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-express-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/api-express-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-express-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment82.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/php-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-api
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: php-api
  template:
    metadata:
      labels:
        app: php-api
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              key: MYSQL_DATABASE
              name: api-config
        - name: MYSQL_EMP_DATABASE
          valueFrom:
            configMapKeyRef:
              key: MYSQL_EMP_DATABASE
              name: api-config
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              key: MYSQL_USER
              name: api-config
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql-password
              name: api-secret
        image: asia-south2-docker.pkg.dev/kubernetes-nagp-ankit/php-api/php-api:latest
        name: php-api
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/php-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/php-api
policy disallow-default-namespace -> resource default/Deployment/php-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/php-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/php-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/php-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/php-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/php-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/php-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/php-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/php-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment83.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - env:
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: synergychat-api-configmap
        - name: API_DB_FILEPATH
          valueFrom:
            configMapKeyRef:
              key: API_DB_FILEPATH
              name: synergychat-api-configmap
        - name: CRAWLER_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: CRAWLER_BASE_URL
              name: synergychat-api-configmap
        image: bootdotdev/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment84.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8082
  selector:
    app: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-deployment84_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api-service
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - env:
        - name: dbService
          valueFrom:
            configMapKeyRef:
              key: dbService
              name: mysql-config
        - name: dbName
          valueFrom:
            configMapKeyRef:
              key: dbName
              name: mysql-config
        - name: username
          valueFrom:
            secretKeyRef:
              key: username
              name: mysql-secret
        - name: password
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-secret
        image: anuragaggarwalnagarro01/api-service:2.0.0
        name: api-service
        ports:
        - containerPort: 8082
        resources:
          requests:
            cpu: 50m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-service
policy disallow-default-namespace -> resource default/Deployment/api-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/api-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/synergychat-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: synergychat-api
  name: synergychat-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-api-configmap
        image: lanecwagner/synergychat-api:latest
        name: synergychat-api
        volumeMounts:
        - mountPath: /persist
          name: synergychat-api-volume
      volumes:
      - name: synergychat-api-volume
        persistentVolumeClaim:
          claimName: synergychat-api-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/synergychat-api
policy disallow-default-namespace -> resource default/Deployment/synergychat-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/synergychat-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/synergychat-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/synergychat-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment-patch.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gen-algo-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gen-algo-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gen-algo-api
  template:
    spec:
      containers:
      - image: demarauder/gen-algo-api:latest-main
        name: backend
        resources:
          limits:
            cpu: 500m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gen-algo-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gen-algo-api
policy disallow-default-namespace -> resource default/Deployment/gen-algo-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gen-algo-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gen-algo-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gen-algo-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/gen-algo-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/gen-algo-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gen-algo-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gen-algo-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-deployment-patch1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gen-algo-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gen-algo-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gen-algo-api
  template:
    spec:
      containers:
      - image: demarauder/gen-algo-api:latest-main
        name: backend
        resources:
          limits:
            cpu: 250m
            memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gen-algo-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gen-algo-api
policy disallow-default-namespace -> resource default/Deployment/gen-algo-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gen-algo-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gen-algo-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gen-algo-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Deployment/gen-algo-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/gen-algo-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gen-algo-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gen-algo-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/api-gateway:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway
  namespace: default
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: candidate-service
            port:
              number: 8080
        path: /candidates
        pathType: Prefix
      - backend:
          service:
            name: job-service
            port:
              number: 8080
        path: /jobs
        pathType: Prefix
      - backend:
          service:
            name: frontend-service
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/api-gateway failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - backend:
          service:
            name: candidate-service
            port:
              number: 8080
        path: /api/candidates/
        pathType: Prefix
      - backend:
          service:
            name: job-service
            port:
              number: 8080
        path: /api/jobs/
        pathType: Prefix
      - backend:
          service:
            name: frontend-service
            port:
              number: 9090
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/ingress failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway-service:
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: default
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 8000
  selector:
    app: api-gateway
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: prod
        - name: token.secret
          valueFrom:
            secretKeyRef:
              key: token_secret
              name: secret
        image: tkdlqh2/residents-meeting-api-gateway:2
        name: api-gateway

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway-deployment
policy disallow-default-namespace -> resource default/Deployment/api-gateway-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-gateway-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-gateway-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-gateway-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-gateway-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-claim0-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/api-gateway-claim0:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: api-gateway-claim0
  name: api-gateway-claim0
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              key: SPRING_PROFILES_ACTIVE
              name: configs
        - name: ORDER_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              key: ORDER_SERVICE_HOST
              name: configs
        - name: ORDER_SERVICE_PORT
          value: "8081"
        - name: INVENTORY_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              key: INVENTORY_SERVICE_HOST
              name: configs
        - name: INVENTORY_SERVICE_PORT
          value: "8084"
        - name: NOTIFICATION_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              key: NOTIFICATION_SERVICE_HOST
              name: configs
        - name: NOTIFICATION_SERVICE_PORT
          value: "8083"
        image: shaikrasheed99/api-gateway
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
        name: api-gateway-container
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway-deploy
policy disallow-default-namespace -> resource default/Deployment/api-gateway-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              key: SPRING_PROFILES_ACTIVE
              name: configs
        - name: ORDER_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              key: ORDER_SERVICE_HOST
              name: configs
        - name: ORDER_SERVICE_PORT
          value: "8081"
        - name: INVENTORY_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              key: INVENTORY_SERVICE_HOST
              name: configs
        - name: INVENTORY_SERVICE_PORT
          value: "8084"
        - name: NOTIFICATION_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              key: NOTIFICATION_SERVICE_HOST
              name: configs
        - name: NOTIFICATION_SERVICE_PORT
          value: "8083"
        image: shaikrasheed99/api-gateway
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
        name: api-gateway-container
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway-deploy
policy disallow-default-namespace -> resource default/Deployment/api-gateway-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: MENU_API
          value: http://menu-service.default.svc.cluster.local:4000
        - name: DELIVERY_API
          value: http://delivery-service.default.svc.cluster.local:5002/api/forkfiesta
        - name: RESERVATION_API
          value: http://reservation-service.default.svc.cluster.local:5001/api/reservation
        - name: USER_API
          value: http://user-management-service.default.svc.cluster.local:3002
        - name: PORT
          value: "3001"
        image: josegabjimenez/forkfiesta-api-gateway
        name: api-gateway
        ports:
        - containerPort: 3001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway
policy disallow-default-namespace -> resource default/Deployment/api-gateway failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-gateway failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to spring-petclinic/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-gateway
  name: api-gateway
  namespace: spring-petclinic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  strategy: {}
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes
        image: springcommunity/spring-petclinic-cloud-api-gateway
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 10
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 5
        name: api-gateway
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 15
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 2000m
            memory: 1Gi
      restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource spring-petclinic/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource spring-petclinic/Deployment/api-gateway
policy disallow-latest-tag -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: default
spec:
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: SERVER_UNDERTOW_ALWAYS_SET_KEEP_ALIVE
          value: "false"
        image: mafeidev/spring-cloud-api-gateway-k8s-dns-demo-api-gateway:1.0.5
        name: api-gateway
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway
policy disallow-default-namespace -> resource default/Deployment/api-gateway failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway:
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: api-gateway
  sessionAffinity: None
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api-gateway failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-deployment11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        image: cloudbordcontainer.azurecr.io/api-gateway
        name: api-gateway
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8081
          protocol: TCP
      hostname: api-gateway
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway
policy disallow-default-namespace -> resource default/Deployment/api-gateway failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-gateway failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway-dep:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-gateway
  name: api-gateway-dep
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
        image: richardchesterwood/k8s-fleetman-api-gateway:release1
        name: api-gateway

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway-dep

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway-dep
policy disallow-default-namespace -> resource default/Deployment/api-gateway-dep failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-gateway-dep failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway-dep failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway-dep failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-gateway-dep failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-gateway-dep failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-gateway-dep failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway-dep failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-gateway
  name: api-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - image: datuits/devops-api-gateway:latest
        name: api-gateway
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: "0.5"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 250Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway
policy disallow-default-namespace -> resource default/Deployment/api-gateway failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway:
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: default
spec:
  ports:
  - nodePort: 32357
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: api-gateway
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api-gateway failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-deployment14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway:
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: api-gateway
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api-gateway failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-deployment14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-gateway
  name: api-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: MICROSERVICE_AUTH_SERVER
          value: auth-server
        image: api-gateway:latest
        imagePullPolicy: IfNotPresent
        name: api-gateway
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway
policy disallow-default-namespace -> resource default/Deployment/api-gateway failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: MENU_API
          value: http://menu-service.default.svc.cluster.local:4000
        - name: DELIVERY_API
          value: http://delivery-service.default.svc.cluster.local:5002/api/forkfiesta
        - name: RESERVATION_API
          value: http://reservation-service.default.svc.cluster.local:5001/api/reservation
        - name: USER_API
          value: http://user-management-service.default.svc.cluster.local:3002
        - name: PORT
          value: "3001"
        image: josegabjimenez/forkfiesta-api-gateway
        name: api-gateway
        ports:
        - containerPort: 3001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway
policy disallow-default-namespace -> resource default/Deployment/api-gateway failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-gateway failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to spring-petclinic/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-gateway
  name: api-gateway
  namespace: spring-petclinic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  strategy: {}
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes
        image: springcommunity/spring-petclinic-cloud-api-gateway
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 10
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 5
        name: api-gateway
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 15
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 2000m
            memory: 1Gi
      restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource spring-petclinic/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource spring-petclinic/Deployment/api-gateway
policy disallow-latest-tag -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to spring-petclinic/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-gateway
  name: api-gateway
  namespace: spring-petclinic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  strategy: {}
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes
        image: ${REPOSITORY_PREFIX}/api-gateway:latest
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 10
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 5
        name: api-gateway
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 15
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 0.5m
            memory: 1Gi
      restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource spring-petclinic/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource spring-petclinic/Deployment/api-gateway
policy disallow-latest-tag -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource spring-petclinic/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert -f docker-compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: api-gateway
  name: api-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api-gateway
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert -f docker-compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/microservices-parent-updated-default: "true"
        io.kompose.service: api-gateway
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY
          value: ' TRACE'
        - name: SPRING_PROFILES_ACTIVE
          value: docker
        image: beko2001/api-gateway:latest
        name: api-gateway
        ports:
        - containerPort: 8080
          hostPort: 8181
          protocol: TCP
        - containerPort: 8181
          protocol: TCP
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway
policy disallow-default-namespace -> resource default/Deployment/api-gateway failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-kubernetes.yml
    kompose.service.type: LoadBalancer
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: api-gateway
  name: api-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api-gateway
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-kubernetes.yml
        kompose.service.type: LoadBalancer
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/learningdocker-micro-net: "true"
        io.kompose.service: api-gateway
    spec:
      containers:
      - image: girikgarg/learningdocker-api_gateway
        name: api-gateway
        ports:
        - containerPort: 3000
          hostPort: 3000
          protocol: TCP
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway
policy disallow-default-namespace -> resource default/Deployment/api-gateway failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-gateway failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to microservices/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        - name: ASPNETCORE_HTTP_PORTS
          value: "8080"
        image: api.gateway:latest
        imagePullPolicy: Never
        name: api-gateway
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /app/appsettings.Production.json
          name: appsettings-production-gateway-volume
          subPath: appsettings.Production.json
      restartPolicy: Always
      volumes:
      - configMap:
          name: gateway-config
        name: appsettings-production-gateway-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource microservices/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource microservices/Deployment/api-gateway
policy disallow-latest-tag -> resource microservices/Deployment/api-gateway failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource microservices/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource microservices/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource microservices/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource microservices/Deployment/api-gateway failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource microservices/Deployment/api-gateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource microservices/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource microservices/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-gateway-vmagent-cm:
apiVersion: v1
data:
  promscrape.yaml: |
    scrape_configs:
      - job_name: selmag_api_gateway
        static_configs:
          - targets: ["http://localhost:8080"]
            labels:
              application: selmag-api-gateway
        metrics_path: /actuator/prometheus
        oauth2:
          client_id: victoria-metrics
          client_secret: vTpeB59Sb2Qzh0HI4cXBlewm2ivY0dzD
          token_url: http://keycloak.selm.ag.192.168.49.2.nip.io/realms/selmag/protocol/openid-connect/token
          scopes:
            - metrics
          endpoint_params:
            grant_type: client_credentials
kind: ConfigMap
metadata:
  name: api-gateway-vmagent-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-deployment8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/selmag-api-gateway-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: selmag-api-gateway
  name: selmag-api-gateway-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: selmag-api-gateway
  template:
    metadata:
      labels:
        app: selmag-api-gateway
    spec:
      containers:
      - env:
        - name: SERVER_PORT
          value: "8080"
        - name: SPRING_PROFILES_ACTIVE
          value: cloudconfig, k8s
        - name: SPRING_CLOUD_CONFIG_URI
          value: http://config:config-password@selmag-config-server-svc.selmag.svc.cluster.local:8888
        - name: LOKI
          value: http://loki-svc.selmag.svc.cluster.local:3100
        image: 192.168.49.1:5000/selmag/api-gateway:0.0.1
        name: selmag-api-gateway
        ports:
        - containerPort: 8080
      - args:
        - -promscrape.config=/etc/opt/vmagent/promscrape.yaml
        - -remoteWrite.url=http://vm-svc.selmag.svc.cluster.local:8428/api/v1/write
        - -remoteWrite.label=instance=$(NODE_NAME)
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: victoriametrics/vmagent:v1.93.12
        name: vmagent
        volumeMounts:
        - mountPath: /etc/opt/vmagent
          name: vmconfig
      volumes:
      - configMap:
          name: api-gateway-vmagent-cm
        name: vmconfig

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/selmag-api-gateway-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/selmag-api-gateway-deployment
policy disallow-default-namespace -> resource default/Deployment/selmag-api-gateway-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/selmag-api-gateway-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/selmag-api-gateway-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/selmag-api-gateway-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/selmag-api-gateway-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/selmag-api-gateway-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/selmag-api-gateway-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/selmag-api-gateway-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-deployment8_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/selmag-api-gateway-svc:
apiVersion: v1
kind: Service
metadata:
  name: selmag-api-gateway-svc
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
  selector:
    app: selmag-api-gateway
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/selmag-api-gateway-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-deployment8_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/selmag-api-gateway-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: selmag-api-gateway-ingress
  namespace: default
spec:
  rules:
  - host: manager.selm.ag.192.168.49.2.nip.io
    http:
      paths:
      - backend:
          service:
            name: selmag-api-gateway-svc
            port:
              name: http
        path: /
        pathType: Prefix
  - host: customer.selm.ag.192.168.49.2.nip.io
    http:
      paths:
      - backend:
          service:
            name: selmag-api-gateway-svc
            port:
              name: http
        path: /
        pathType: Prefix
  - host: catalogue.api.selm.ag.192.168.49.2.nip.io
    http:
      paths:
      - backend:
          service:
            name: selmag-api-gateway-svc
            port:
              name: http
        path: /
        pathType: Prefix
  - host: feedback.api.selm.ag.192.168.49.2.nip.io
    http:
      paths:
      - backend:
          service:
            name: selmag-api-gateway-svc
            port:
              name: http
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-deployment9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gateway:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\nadun\AppData\Local\Microsoft\WinGet\Links\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  labels:
    io.kompose.service: api-gateway
  name: api-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api-gateway
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\nadun\AppData\Local\Microsoft\WinGet\Links\kompose.exe
          convert
        kompose.version: 1.31.2 (a92241f79)
      labels:
        io.kompose.network/lms-microservice-default: "true"
        io.kompose.service: api-gateway
    spec:
      containers:
      - env:
        - name: SERVICE_NAME_AUTH
          value: http://authentication-service:2222
        - name: SERVICE_NAME_COURSE
          value: http://coursemanagement-service:3002
        - name: SERVICE_NAME_LEC
          value: http://lecturer-service:1113
        - name: SERVICE_NAME_NOTIFICATION
          value: http://notification-service:1114
        - name: SERVICE_NAME_PAY
          value: http://payment-service:3001
        - name: SERVICE_NAME_PROFILE
          value: http://profile-management-SERVICE:1117
        - name: SERVICE_NAME_STORAGE
          value: http://storage-service:2345
        image: api-gateway
        name: gateway
        ports:
        - containerPort: 5000
          hostPort: 5000
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /app
          name: api-gateway-claim0
      restartPolicy: Always
      volumes:
      - name: api-gateway-claim0
        persistentVolumeClaim:
          claimName: api-gateway-claim0
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gateway
policy disallow-default-namespace -> resource default/Deployment/api-gateway failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-gateway failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gateway failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gateway failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gateway failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-gateway-hpa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/api-gateway-hpa:
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: default
spec:
  maxReplicas: 2
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  targetCPUUtilizationPercentage: 50

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: api-gateway-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to api-gateway/Ingress/api-gateway-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  namespace: api-gateway
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: api-gateway
            port:
              number: 64212
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource api-gateway/Ingress/api-gateway-ingress failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway-service:
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3001
  selector:
    app: api-gateway
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api-gateway
  name: api-gateway
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30036
    port: 8080
    protocol: TCP
  selector:
    app: api-gateway
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api-gateway failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway-service:
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3001
  selector:
    app: api-gateway
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api-gateway
  name: api-gateway
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30036
    port: 8080
    protocol: TCP
  selector:
    app: api-gateway
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api-gateway failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert -f docker-compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: api-gateway
  name: api-gateway
  namespace: default
spec:
  ports:
  - name: "8181"
    port: 8181
    targetPort: 8080
  selector:
    io.kompose.service: api-gateway
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api-gateway failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to microservices/Service/api-gateway:
apiVersion: v1
kind: Service
metadata:
  labels:
    HealthChecks: enabled
  name: api-gateway
  namespace: microservices
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: api-gateway
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\nadun\AppData\Local\Microsoft\WinGet\Links\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  labels:
    io.kompose.service: api-gateway
  name: api-gateway
  namespace: default
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    io.kompose.service: api-gateway
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway:
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: default
spec:
  ports:
  - name: "7200"
    port: 7200
    targetPort: 8080
  - name: "7201"
    port: 7201
    targetPort: 8081
  selector:
    app: api-gateway

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/fleetman-api-gateway:
apiVersion: v1
kind: Service
metadata:
  name: fleetman-api-gateway
  namespace: default
spec:
  ports:
  - name: api-port
    nodePort: 30025
    port: 8080
    targetPort: 8080
  selector:
    app: api-gateway
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/fleetman-api-gateway failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway-svc:
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-svc
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: api-gateway
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api-gateway-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-svc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway-svc:
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-svc
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: api-gateway
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api-gateway-svc failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-gateway-tcp-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gateway-tcp:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-kubernetes.yml
    kompose.service.type: LoadBalancer
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: api-gateway-tcp
  name: api-gateway-tcp
  namespace: default
spec:
  ports:
  - name: "3000"
    port: 3000
    targetPort: 3000
  selector:
    io.kompose.service: api-gateway
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-gw-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-gw:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: api-gw
  name: api-gw
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api-gw
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.33.0 (HEAD)
      labels:
        io.kompose.service: api-gw
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: db
        - name: SECRET_KEY
          value: secret
        - name: PORT
          value: "8000"
        - name: TIMEOUT
          value: "10000"
        - name: API_AUTH_ENDPOINT
          value: auth-ms:8000
        - name: API_USER_ENDPOINT
          value: user-ms:8001
        - name: API_ORDER_ENDPOINT
          value: node-service:8002
        image: drew138/architecture-api-gateway-app:v3
        name: api-gw
        ports:
        - containerPort: 8000
          name: http-server
        resources:
          limits:
            cpu: 450m
            memory: 500Mi
          requests:
            cpu: 200m
            memory: 300Mi
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gw

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-gw
policy disallow-default-namespace -> resource default/Deployment/api-gw failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-gw failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-gw failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-gw failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/api-gw failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-gw failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-gw failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-gw-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-gw:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: api-gw
  name: api-gw
  namespace: default
spec:
  ports:
  - port: 8003
    targetPort: http-server
  selector:
    io.kompose.service: api-gw
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-hpa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/ms-ordermanager-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ms-ordermanager-hpa
  namespace: default
spec:
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 30
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ms-ordermanager-deployment

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: api-hpa1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/ts-ms-paymentmanager-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ts-ms-paymentmanager-hpa
  namespace: default
spec:
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 30
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ts-ms-paymentmanager-deployment

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: api-hpa2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/ts-ms-productionmanager-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ts-ms-productionmanager-hpa
  namespace: default
spec:
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 30
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ts-ms-productionmanager-deployment

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: api-hpa3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/api-service-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-service-hpa
  namespace: default
spec:
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 1
        type: Utilization
    type: Resource
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: ReplicaSet
    name: api-service

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: api-hpa4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/api-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: default
spec:
  maxReplicas: 4
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 20
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-deployment

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: api-hpa5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/api-deployment-autoscaler:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-deployment-autoscaler
  namespace: default
spec:
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 5
  maxReplicas: 4
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 20
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-deployment

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: api-hpa6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/php-api-hpa:
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: php-api-hpa
  namespace: default
spec:
  maxReplicas: 10
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: php-api
  targetCPUUtilizationPercentage: 50

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: api-hpa7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/api-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: default
spec:
  maxReplicas: 6
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 30
        type: Utilization
    type: Resource
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-service

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: api-hpa8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/api-hpa:
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: default
spec:
  maxReplicas: 10
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: ReplicaSet
    name: api
  targetCPUUtilizationPercentage: 50

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: api-identity.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-identity:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: api-identity
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-template
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: api-template-0.1.0
  name: api-identity
  namespace: default
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/instance: api-identity
    app.kubernetes.io/name: api-template
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-identity_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-identity:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: api-identity
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-template
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: api-template-0.1.0
  name: api-identity
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: api-identity
      app.kubernetes.io/name: api-template
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: api-identity
        app.kubernetes.io/name: api-template
    spec:
      containers:
      - env:
        - name: ASPNETCORE_Kestrel__Certificates__Default__Password
          valueFrom:
            configMapKeyRef:
              key: password
              name: devstore-ssl
            secretKeyRef:
              key: password
              name: devstore-ssl
        - name: ASPNETCORE_Kestrel__Certificates__Default__Path
          value: /https/devstore.academy-localhost.pfx
        image: desenvolvedorio/devstore-api-identity:1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healtz-infra
            port: 443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
        name: api-template
        ports:
        - containerPort: 443
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healtz-infra
            port: 443
            scheme: HTTPS
          initialDelaySeconds: 13
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext: {}
        volumeMounts:
        - mountPath: /https
          name: certificado-devstore
          readOnly: true
      securityContext: {}
      serviceAccountName: default
      volumes:
      - name: certificado-devstore
        secret:
          secretName: devstore-ssl

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-identity

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-identity
policy disallow-default-namespace -> resource default/Deployment/api-identity failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-identity failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-identity failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-ro-rootfs -> resource default/Deployment/api-identity failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/api-identity failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: api-identity_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/api-identity:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/instance: api-identity
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-template
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: api-template-0.1.0
  name: api-identity
  namespace: default
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-identity

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: api-identity_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/api-identity:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/instance: api-identity
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-template
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: api-template-0.1.0
  name: api-identity
  namespace: default
spec:
  rules:
  - host: identity.devstore.info
    http:
      paths:
      - backend:
          service:
            name: api-identity
            port:
              number: 443
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-identity_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api-identity-test-connection:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
  labels:
    app.kubernetes.io/instance: api-identity
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-template
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: api-template-0.1.0
  name: api-identity-test-connection
  namespace: default
spec:
  containers:
  - args:
    - api-identity:443
    command:
    - wget
    image: busybox
    name: wget
  restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api-identity-test-connection

skipped mutate policy add-safe-to-evict -> resource default/Pod/api-identity-test-connection
policy disallow-default-namespace -> resource default/Pod/api-identity-test-connection failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/api-identity-test-connection failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/api-identity-test-connection failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api-identity-test-connection failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Pod/api-identity-test-connection failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/api-identity-test-connection failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api-identity-test-connection failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api-identity-test-connection failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/api-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: nginx
  name: api-ingress
  namespace: default
spec:
  rules:
  - host: api.pretzel218.messwithdns.com
    http:
      paths:
      - backend:
          service:
            name: api-service
            port:
              number: 8000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to exam/Ingress/app-api-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: app-api-ingress
  namespace: exam
spec:
  rules:
  - host: myapp-api.com
    http:
      paths:
      - backend:
          service:
            name: backend-app-service
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-ingress10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/api-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  namespace: default
spec:
  rules:
  - host: myapi.com
    http:
      paths:
      - backend:
          service:
            name: api-service
            port:
              number: 9001
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-ingress3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/api-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: nginx
  name: api-ingress
  namespace: default
spec:
  rules:
  - host: api.pretzel218.messwithdns.com
    http:
      paths:
      - backend:
          service:
            name: api-service
            port:
              number: 8000
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-ingress4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to exam/Ingress/app-api-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: app-api-ingress
  namespace: exam
spec:
  rules:
  - host: myapp-api.com
    http:
      paths:
      - backend:
          service:
            name: backend-app-service
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-ingress9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to k8s-project/Ingress/api:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    env: demo
    role: api
  name: api
  namespace: k8s-project
spec:
  rules:
  - host: a509b43f345fb427091c3af38e0bce76-1496792853.us-east-2.elb.amazonaws.com
    http:
      paths:
      - backend:
          service:
            name: api
            port:
              number: 8080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-ingress-network-policy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/app-api-allow:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: app-api-allow
  namespace: default
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: presentation
    - podSelector:
        matchLabels:
          app: db-tier
    ports:
    - port: 8081
      protocol: TCP
  podSelector:
    matchLabels:
      app: app-api

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-keys.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to open-feature-demo/Secret/vendor-keys:
apiVersion: v1
data:
  cloudbees-key: ""
  cloudbees-key-web: ""
  flagsmith-key: ""
  flagsmith-key-web: ""
  harness-key: ""
  harness-key-web: ""
  ld-key: ""
  ld-key-web: ""
  split-key: ""
  split-key-web: ""
kind: Secret
metadata:
  name: vendor-keys
  namespace: open-feature-demo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-key-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/api-key-secret:
apiVersion: v1
data:
  api-key: bXktYXBpLWtleQ==
kind: Secret
metadata:
  name: api-key-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-multipleports:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-multipleports
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: api-multipleports
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-multipleports
      name: api-multipleports
    spec:
      containers:
      - image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-running
        name: pod-lifecycle-running
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports
policy drop-all-capabilities -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-multiport1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-multipleports:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-multipleports
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: api-multipleports
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-multipleports
      name: api-multipleports
    spec:
      containers:
      - env:
        - name: ASPNETCORE_URLS
          value: http://+:8080
        image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-running
        name: pod-lifecycle-running
        ports:
        - containerPort: 8080
          name: api
      - image: containous/whoami
        name: whoami
        ports:
        - containerPort: 80
          name: whoami
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports
policy disallow-latest-tag -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-multiport2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-multipleports:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-multipleports
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: api-multipleports
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-multipleports
      name: api-multipleports
    spec:
      containers:
      - env:
        - name: ASPNETCORE_URLS
          value: http://+:8080
        image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-running
        name: pod-lifecycle-running
        ports:
        - containerPort: 8080
          name: api
      - image: containous/whoami
        name: whoami
        ports:
        - containerPort: 80
          name: whoami
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports
policy disallow-latest-tag -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-multiport3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-multipleports:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-multipleports
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: api-multipleports
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-multipleports
      name: api-multipleports
    spec:
      containers:
      - image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-running
        name: pod-lifecycle-running
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports
policy drop-all-capabilities -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-multiport4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-multipleports:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-multipleports
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: api-multipleports
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-multipleports
      name: api-multipleports
    spec:
      containers:
      - env:
        - name: ASPNETCORE_URLS
          value: http://+:8080
        image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-running
        name: pod-lifecycle-running
        ports:
        - containerPort: 8080
          name: api
      - image: containous/whoami
        name: whoami
        ports:
        - containerPort: 80
          name: whoami
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports
policy disallow-latest-tag -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-multiport5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-multipleports:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-multipleports
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: api-multipleports
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-multipleports
      name: api-multipleports
    spec:
      containers:
      - env:
        - name: ASPNETCORE_URLS
          value: http://+:8080
        image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-running
        name: pod-lifecycle-running
        ports:
        - containerPort: 8080
          name: api
      - image: containous/whoami
        name: whoami
        ports:
        - containerPort: 80
          name: whoami
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports
policy disallow-latest-tag -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-multiport6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-multipleports:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-multipleports
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: api-multipleports
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-multipleports
      name: api-multipleports
    spec:
      containers:
      - image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-running
        name: pod-lifecycle-running
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports
policy drop-all-capabilities -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-multiport7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-multipleports:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-multipleports
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: api-multipleports
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-multipleports
      name: api-multipleports
    spec:
      containers:
      - env:
        - name: ASPNETCORE_URLS
          value: http://+:8080
        image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-running
        name: pod-lifecycle-running
        ports:
        - containerPort: 8080
          name: api
      - image: containous/whoami
        name: whoami
        ports:
        - containerPort: 80
          name: whoami
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports
policy disallow-latest-tag -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-multiport8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-multipleports:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-multipleports
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: api-multipleports
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-multipleports
      name: api-multipleports
    spec:
      containers:
      - env:
        - name: ASPNETCORE_URLS
          value: http://+:8080
        image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-running
        name: pod-lifecycle-running
        ports:
        - containerPort: 8080
          name: api
      - image: containous/whoami
        name: whoami
        ports:
        - containerPort: 80
          name: whoami
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports
policy disallow-latest-tag -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-multiport9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-multipleports:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-multipleports
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: api-multipleports
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-multipleports
      name: api-multipleports
    spec:
      containers:
      - env:
        - name: ASPNETCORE_URLS
          value: http://+:8080
        image: desenvolvedorio/dominando-kubernetes:pod-lifecycle-running
        name: pod-lifecycle-running
        ports:
        - containerPort: 8080
          name: api
      - image: containous/whoami
        name: whoami
        ports:
        - containerPort: 80
          name: whoami
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-multipleports
policy disallow-latest-tag -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-multipleports failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: api-multiport-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports
  name: api-multipleports
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports
  name: api-multipleports
  namespace: default
spec:
  ports:
  - name: api
    port: 4200
    protocol: TCP
    targetPort: api
  - name: whoami
    port: 80
    protocol: TCP
    targetPort: whoami
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport-service10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports-headless:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports-headless
  name: api-multipleports-headless
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: api
    port: 4200
    protocol: TCP
    targetPort: api
  - name: whoami
    port: 80
    protocol: TCP
    targetPort: whoami
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport-service11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports
  name: api-multipleports
  namespace: default
spec:
  ports:
  - name: api
    port: 4200
    protocol: TCP
    targetPort: api
  - name: whoami
    port: 80
    protocol: TCP
    targetPort: whoami
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport-service12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports
  name: api-multipleports
  namespace: default
spec:
  ports:
  - name: api
    port: 4200
    protocol: TCP
    targetPort: api
  - name: whoami
    port: 80
    protocol: TCP
    targetPort: whoami
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports-headless:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports-headless
  name: api-multipleports-headless
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: api
    port: 4200
    protocol: TCP
    targetPort: api
  - name: whoami
    port: 80
    protocol: TCP
    targetPort: whoami
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports
  name: api-multipleports
  namespace: default
spec:
  ports:
  - name: api
    port: 4200
    protocol: TCP
    targetPort: api
  - name: whoami
    port: 80
    protocol: TCP
    targetPort: whoami
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports
  name: api-multipleports
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports
  name: api-multipleports
  namespace: default
spec:
  ports:
  - name: api
    port: 4200
    protocol: TCP
    targetPort: api
  - name: whoami
    port: 80
    protocol: TCP
    targetPort: whoami
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports-headless:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports-headless
  name: api-multipleports-headless
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: api
    port: 4200
    protocol: TCP
    targetPort: api
  - name: whoami
    port: 80
    protocol: TCP
    targetPort: whoami
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports
  name: api-multipleports
  namespace: default
spec:
  ports:
  - name: api
    port: 4200
    protocol: TCP
    targetPort: api
  - name: whoami
    port: 80
    protocol: TCP
    targetPort: whoami
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport-service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports
  name: api-multipleports
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-multiport-service9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-multipleports:
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-multipleports
  name: api-multipleports
  namespace: default
spec:
  ports:
  - name: api
    port: 4200
    protocol: TCP
    targetPort: api
  - name: whoami
    port: 80
    protocol: TCP
    targetPort: whoami
  selector:
    app: api-multipleports
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-mysql-sts.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to db/Service/mysql-headless-svc:
apiVersion: v1
kind: Service
metadata:
  name: mysql-headless-svc
  namespace: db
spec:
  clusterIP: None
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: mysql

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-mysql-sts_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to db/StatefulSet/mysql-sts:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-sts
  namespace: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql-headless-svc
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: mysql-context
        image: devaksacr001.azurecr.io/mysql-8.2.0-init-scheme-amd64:1.0
        name: mysql
        ports:
        - containerPort: 3306
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-vol
  volumeClaimTemplates:
  - metadata:
      name: mysql-vol
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 512Mi
      storageClassName: default

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource db/StatefulSet/mysql-sts

skipped mutate policy add-safe-to-evict -> resource db/StatefulSet/mysql-sts
policy drop-all-capabilities -> resource db/StatefulSet/mysql-sts failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource db/StatefulSet/mysql-sts failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource db/StatefulSet/mysql-sts failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource db/StatefulSet/mysql-sts failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource db/StatefulSet/mysql-sts failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource db/StatefulSet/mysql-sts failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-nombreDelProyecto.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to api/Deployment/api-nombreDelProyecto:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: api-nombreDelProyecto
  name: api-nombreDelProyecto
  namespace: api
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: api-nombreDelProyecto
  template:
    metadata:
      labels:
        k8s-app: api-nombreDelProyecto
      name: api-nombreDelProyecto
    spec:
      containers:
      - env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        envFrom:
        - secretRef:
            name: secret-api-nombreDelProyecto
        image: upsti/api-nombreDelProyecto:v0.0.5
        name: api-nombreDelProyecto
        resources:
          limits:
            cpu: 400m
            memory: 900Mi
          requests:
            cpu: 200m
            memory: 600Mi
        securityContext:
          privileged: false

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource api/Deployment/api-nombreDelProyecto

skipped mutate policy add-safe-to-evict -> resource api/Deployment/api-nombreDelProyecto
policy drop-all-capabilities -> resource api/Deployment/api-nombreDelProyecto failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource api/Deployment/api-nombreDelProyecto failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource api/Deployment/api-nombreDelProyecto failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource api/Deployment/api-nombreDelProyecto failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource api/Deployment/api-nombreDelProyecto failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource api/Deployment/api-nombreDelProyecto failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-noticias.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to backend/Deployment/api-noticias:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-noticias
  namespace: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-noticias
  template:
    metadata:
      labels:
        app: api-noticias
    spec:
      containers:
      - image: lgv1505/fiapnoticiaswebapi:latest
        name: api-noticias-container
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource backend/Deployment/api-noticias

skipped mutate policy add-safe-to-evict -> resource backend/Deployment/api-noticias
policy disallow-latest-tag -> resource backend/Deployment/api-noticias failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource backend/Deployment/api-noticias failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource backend/Deployment/api-noticias failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource backend/Deployment/api-noticias failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource backend/Deployment/api-noticias failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource backend/Deployment/api-noticias failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource backend/Deployment/api-noticias failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource backend/Deployment/api-noticias failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-patch.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-container-sock-mounts -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-docker-sock-mount validation error: Use of the Docker Unix socket is not allowed. rule autogen-validate-docker-sock-mount failed at path /spec/template/
2 - autogen-validate-containerd-sock-mount validation error: Use of the Containerd Unix socket is not allowed. rule autogen-validate-containerd-sock-mount failed at path /spec/template/
3 - autogen-validate-crio-sock-mount validation error: Use of the CRI-O Unix socket is not allowed. rule autogen-validate-crio-sock-mount failed at path /spec/template/
4 - autogen-validate-dockerd-sock-mount validation error: Use of the Docker CRI socket is not allowed. rule autogen-validate-dockerd-sock-mount failed at path /spec/template/

policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/


pass: 0, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/kubernetes-2-desafio-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: kubernetes-2-desafio-pod
  name: kubernetes-2-desafio-pod
  namespace: default
spec:
  containers:
  - image: joohnsro/kubernetes-2-desafio:1.0
    name: kubernetes-2-desafio-container
    ports:
    - containerPort: 3000
      protocol: TCP

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/kubernetes-2-desafio-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/kubernetes-2-desafio-pod
policy disallow-default-namespace -> resource default/Pod/kubernetes-2-desafio-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/kubernetes-2-desafio-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/kubernetes-2-desafio-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/kubernetes-2-desafio-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/kubernetes-2-desafio-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/kubernetes-2-desafio-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/kubernetes-2-desafio-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/kubernetes-2-desafio-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apirest:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: api-pod
  name: apirest
  namespace: default
spec:
  containers:
  - env:
    - name: MYSQL_HOST
      value: svc-bd
    - name: MYSQL_DATABASE
      value: farmacia_semana9
    image: renatospzl/apirest:1.1
    name: apirest
    ports:
    - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apirest

skipped mutate policy add-safe-to-evict -> resource default/Pod/apirest
policy disallow-default-namespace -> resource default/Pod/apirest failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/apirest failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apirest failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apirest failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apirest failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apirest failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apirest failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apirest failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apispring:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: api-pod
  name: apispring
  namespace: default
spec:
  containers:
  - env:
    - name: MYSQL_HOST
      value: svc-bd
    - name: MYSQL_DATABASE
      value: db_farmacia
    image: leosouzadev1/springapi:latest
    name: apispring
    ports:
    - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apispring

skipped mutate policy add-safe-to-evict -> resource default/Pod/apispring
policy disallow-default-namespace -> resource default/Pod/apispring failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apispring failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apispring failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apispring failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apispring failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apispring failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apispring failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apispring failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apispring failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-pod3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apirest:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: api-pod
  name: apirest
  namespace: default
spec:
  containers:
  - env:
    - name: MYSQL_HOST
      value: svc-bd
    - name: MYSQL_DATABASE
      value: farmacia_semana9
    image: fabiano1979/apirest:1.1
    name: apirest
    ports:
    - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apirest

skipped mutate policy add-safe-to-evict -> resource default/Pod/apirest
policy disallow-default-namespace -> resource default/Pod/apirest failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/apirest failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apirest failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apirest failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apirest failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apirest failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apirest failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apirest failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-pod4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apispring:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: api-pod
  name: apispring
  namespace: default
spec:
  containers:
  - env:
    - name: MYSQL_HOST
      value: svc-bd
    - name: MYSQL_DATABASE
      value: db_farmacia
    image: leosouzadev1/springapi:latest
    name: apispring
    ports:
    - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apispring

skipped mutate policy add-safe-to-evict -> resource default/Pod/apispring
policy disallow-default-namespace -> resource default/Pod/apispring failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apispring failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apispring failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apispring failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apispring failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apispring failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apispring failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apispring failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apispring failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-pod5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/farmacia_api:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: api-pod
  name: farmacia_api
  namespace: default
spec:
  containers:
  - envFrom:
    - configMapRef:
        name: db-configmap
    image: rodrigophpweb/app-farma:1.0:latest
    name: farmacia_api
    ports:
    - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/farmacia_api

skipped mutate policy add-safe-to-evict -> resource default/Pod/farmacia_api
policy disallow-default-namespace -> resource default/Pod/farmacia_api failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/farmacia_api failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/farmacia_api failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/farmacia_api failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/farmacia_api failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/farmacia_api failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/farmacia_api failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/farmacia_api failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/farmacia_api failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-pod6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/api:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: api
    release: "0"
  name: api
  namespace: default
spec:
  containers:
  - image: k8s/api:release0
    name: api

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/api

skipped mutate policy add-safe-to-evict -> resource default/Pod/api
policy disallow-default-namespace -> resource default/Pod/api failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/api failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/api failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/api failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/api failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/api failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/api failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/api failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/modality-api-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: modality-api-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 15Gi
  local:
    path: <storage-dir>
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - workernode01
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pv1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/modality-api-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: modality-api-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 15Gi
  local:
    path: <storage-dir>
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - workernode01
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/modality-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: modality-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
  storageClassName: local-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to crawler/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: crawler
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/modality-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: modality-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
  storageClassName: local-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-pvc9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/synergychat-api-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: synergychat-api-pvc
  name: synergychat-api-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-replicaset.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api-service:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api-service
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: api-config
        - secretRef:
            name: api-secret
        image: anuragte88/kubernet:v3
        name: api-service
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 400m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-service

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api-service
policy drop-all-capabilities -> resource default/ReplicaSet/api-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/ReplicaSet/api-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-replicaset1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-deployment
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api-deployment
    spec:
      containers:
      - env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: database-host
              name: api-config
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: database-name
              name: api-config
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: db-username
              name: api-secret
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db-password
              name: api-secret
        image: vermashagun2101/nagp-api:tag5
        name: api-deployment
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 100m
          requests:
            cpu: 100m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-replicaset2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/api:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: api
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: api-config
        - secretRef:
            name: api-secret
        image: uttambhagaur/employee-rest:1.0
        name: api
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api

skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/api
policy drop-all-capabilities -> resource default/ReplicaSet/api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/api-secret:
apiVersion: v1
data:
  DB_PASSWORD: SHJoa0A0MzIxODhAIw==
  DB_USERNAME: a3ViZVVzZXI=
kind: Secret
metadata:
  name: api-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/api-secret:
apiVersion: v1
data:
  db-password: cm9vdA==
  db-username: cm9vdA==
kind: Secret
metadata:
  name: api-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/api-secret:
apiVersion: v1
data:
  db-password: cGFzc3dvcmQ=
  db-user: dXNlcg==
kind: Secret
metadata:
  name: api-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-secret3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/api-secret:
apiVersion: v1
data:
  mysql-password: c2VjcmV0
kind: Secret
metadata:
  name: api-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-secret4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/api-secret:
apiVersion: v1
data:
  DATABASE_PASSWORD: cGFzc3dvcmQ=
  DATABASE_USERNAME: cG9zdGdyZXM=
kind: Secret
metadata:
  name: api-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-server.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Pod/kube-apiserver-minikube:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.49.2:8443
    kubernetes.io/config.hash: 55b4bbe24dac3803a7379f9ae169d6ba
    kubernetes.io/config.mirror: 55b4bbe24dac3803a7379f9ae169d6ba
    kubernetes.io/config.seen: "2024-02-01T01:26:44.246918419Z"
    kubernetes.io/config.source: file
  labels:
    component: kube-apiserver
    tier: control-plane
    xyz: deneme
  name: kube-apiserver-minikube
  namespace: kube-system
  ownerReferences:
  - apiVersion: v1
    controller: true
    kind: Node
    name: minikube
    uid: 31166191-0d81-4775-be27-4aeab86094f9
spec:
  containers:
  - command:
    - kube-apiserver
    - --advertise-address=192.168.49.2
    - --allow-privileged=true
    - --authorization-mode=Node,RBAC
    - --client-ca-file=/var/lib/minikube/certs/ca.crt
    - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
    - --enable-bootstrap-token-auth=true
    - --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt
    - --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt
    - --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key
    - --etcd-servers=https://127.0.0.1:2379
    - --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt
    - --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key
    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
    - --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt
    - --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key
    - --requestheader-allowed-names=front-proxy-client
    - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    - --secure-port=8443
    - --service-account-issuer=https://kubernetes.default.svc.cluster.local
    - --service-account-key-file=/var/lib/minikube/certs/sa.pub
    - --service-account-signing-key-file=/var/lib/minikube/certs/sa.key
    - --service-cluster-ip-range=10.96.0.0/12
    - --tls-cert-file=/var/lib/minikube/certs/apiserver.crt
    - --tls-private-key-file=/var/lib/minikube/certs/apiserver.key
    image: registry.k8s.io/kube-apiserver:v1.28.3
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 192.168.49.2
        path: /livez
        port: 8443
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 15
    name: kube-apiserver
    readinessProbe:
      failureThreshold: 3
      httpGet:
        host: 192.168.49.2
        path: /readyz
        port: 8443
        scheme: HTTPS
      periodSeconds: 1
      successThreshold: 1
      timeoutSeconds: 15
    resources:
      limits:
        cpu: 500m
        memory: 100m
      requests:
        cpu: 250m
        memory: 50m
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: 192.168.49.2
        path: /livez
        port: 8443
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 15
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/ssl/certs
      name: ca-certs
      readOnly: true
    - mountPath: /etc/ca-certificates
      name: etc-ca-certificates
      readOnly: true
    - mountPath: /var/lib/minikube/certs
      name: k8s-certs
      readOnly: true
    - mountPath: /usr/local/share/ca-certificates
      name: usr-local-share-ca-certificates
      readOnly: true
    - mountPath: /usr/share/ca-certificates
      name: usr-share-ca-certificates
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    operator: Exists
  volumes:
  - hostPath:
      path: /etc/ssl/certs
      type: DirectoryOrCreate
    name: ca-certs
  - hostPath:
      path: /etc/ca-certificates
      type: DirectoryOrCreate
    name: etc-ca-certificates
  - hostPath:
      path: /var/lib/minikube/certs
      type: DirectoryOrCreate
    name: k8s-certs
  - hostPath:
      path: /usr/local/share/ca-certificates
      type: DirectoryOrCreate
    name: usr-local-share-ca-certificates
  - hostPath:
      path: /usr/share/ca-certificates
      type: DirectoryOrCreate
    name: usr-share-ca-certificates

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/kube-apiserver-minikube
policy drop-all-capabilities -> resource kube-system/Pod/kube-apiserver-minikube failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Pod/kube-apiserver-minikube failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Pod/kube-apiserver-minikube failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource kube-system/Pod/kube-apiserver-minikube failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Pod/kube-apiserver-minikube failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: api-server1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Pod/my-pod-kube-apiserver:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nginx
    app.kubernetes.io/name: wordpress
    pod-template-hash: 84bbf6f4dd
  name: my-pod-kube-apiserver
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-apiserver
    - --advertise-address=10.89.0.2
    - --allow-privileged=true
    - --authorization-mode=Node,RBAC
    - --client-ca-file=/etc/kubernetes/pki/ca.crt
    - --enable-admission-plugins=NodeRestriction
    - --enable-bootstrap-token-auth=true
    - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
    - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
    - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
    - --etcd-servers=https://127.0.0.1:2379
    - --insecure-port=0
    - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
    - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
    - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
    - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
    - --requestheader-allowed-names=front-proxy-client
    - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    - --runtime-config=
    - --secure-port=6443
    - --service-account-issuer=https://kubernetes.default.svc.cluster.local
    - --service-account-key-file=/etc/kubernetes/pki/sa.pub
    - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
    - --service-cluster-ip-range=10.96.0.0/16
    - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
    - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
    image: app-image:app-image-tag
    name: app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/my-pod-kube-apiserver

skipped mutate policy add-safe-to-evict -> resource kube-system/Pod/my-pod-kube-apiserver
policy drop-all-capabilities -> resource kube-system/Pod/my-pod-kube-apiserver failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Pod/my-pod-kube-apiserver failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource kube-system/Pod/my-pod-kube-apiserver failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/Pod/my-pod-kube-apiserver failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/Pod/my-pod-kube-apiserver failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Pod/my-pod-kube-apiserver failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: api-server2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/hwameistor-apiserver:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hwameistor-apiserver
  name: hwameistor-apiserver
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: http
  selector:
    app: hwameistor-apiserver

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-server2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/hwameistor-apiserver:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hwameistor-apiserver
  name: hwameistor-apiserver
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hwameistor-apiserver
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: hwameistor-apiserver
    spec:
      containers:
      - env:
        - name: EnableAuth
          value: "false"
        - name: AuthAccessId
          value: admin
        - name: AuthSecretKey
          value: admin
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: ghcr.io/hwameistor/apiserver:v0.14.1
        imagePullPolicy: IfNotPresent
        name: server
        ports:
        - containerPort: 80
          name: http
        resources: {}
      serviceAccountName: hwameistor-admin

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/hwameistor-apiserver

skipped mutate policy add-safe-to-evict -> resource default/Deployment/hwameistor-apiserver
policy disallow-default-namespace -> resource default/Deployment/hwameistor-apiserver failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/hwameistor-apiserver failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/hwameistor-apiserver failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/hwameistor-apiserver failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/hwameistor-apiserver failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/hwameistor-apiserver failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/hwameistor-apiserver failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/hwameistor-apiserver failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - name: api-service
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch19
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers
    component: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service100.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service101.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
  namespace: default
spec:
  ports:
  - name: api
    port: 8000
    targetPort: 8000
  selector:
    app: api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service103.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: api-pod
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service104.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/php-api:
apiVersion: v1
kind: Service
metadata:
  name: php-api
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: php-api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service105.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service106.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service107.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to my-pacific-database/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: my-pacific-database
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/modality-api-service:
apiVersion: v1
kind: Service
metadata:
  name: modality-api-service
  namespace: default
spec:
  ports:
  - nodePort: <port>
    port: <port>
    targetPort: <port>
  selector:
    app: modality-api
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/modality-api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-service12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: development
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: api
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource development/Service/api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-service14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - name: api-service
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/synergychat-api:
apiVersion: v1
kind: Service
metadata:
  name: synergychat-api
  namespace: default
spec:
  ports:
  - name: synergychat-api
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/APIService/v1beta1.metrics.k8s.io:
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.metrics.k8s.io
  namespace: default
spec:
  group: metrics.k8s.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: metrics-server
    namespace: kube-system
  version: v1beta1
  versionPriority: 100

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/synergychat-api:
apiVersion: v1
kind: Service
metadata:
  name: synergychat-api
  namespace: default
spec:
  ports:
  - name: synergychat-api
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch06-lab
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch07
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch12
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 8013
    targetPort: api
  selector:
    app: numbers-api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch18
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers
    component: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch19
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers
    component: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/modality-api-service:
apiVersion: v1
kind: Service
metadata:
  name: modality-api-service
  namespace: default
spec:
  ports:
  - nodePort: <port>
    port: <port>
    targetPort: <port>
  selector:
    app: modality-api
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/modality-api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-service26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: development
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: api
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource development/Service/api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-service28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service30_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/api-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - image: domhall/kubernetes-api:latest
        name: kubernetes-api
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/api-deployment
policy disallow-default-namespace -> resource default/Deployment/api-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/api-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/api-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/api-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: api-service31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to raihanorium/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api-service
  name: api-service
  namespace: raihanorium
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch06-lab
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch06-lab
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service36.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch07
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch12
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 8013
    targetPort: api
  selector:
    app: numbers-api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch18
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers
    component: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch19
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers
    component: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/APIService/v1beta1.metrics.k8s.io:
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.metrics.k8s.io
  namespace: default
spec:
  group: metrics.k8s.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: metrics-server
    namespace: kube-system
  version: v1beta1
  versionPriority: 100

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: api
    app.kubernetes.io/part-of: auth-app
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: api
    app.kubernetes.io/part-of: auth-app
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - name: api-service
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/kubernetes-2-desafio-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kubernetes-2-desafio-service
  name: kubernetes-2-desafio-service
  namespace: default
spec:
  ports:
  - nodePort: 31007
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: kubernetes-2-desafio-pod
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/kubernetes-2-desafio-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-service47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-web

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: synergychat-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api:
apiVersion: v1
kind: Service
metadata:
  labels:
    role: api
  name: api
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    role: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service57.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch06-lab
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service58.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch07
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service59.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch12
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 8013
    targetPort: api
  selector:
    app: numbers-api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch06-lab
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service60.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch18
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers
    component: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service61.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch19
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers
    component: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service62.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/g37-lanches-api-service:
apiVersion: v1
kind: Service
metadata:
  name: g37-lanches-api-service
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: g37-lanches-api
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/g37-lanches-api-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-service63.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service64.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    component: api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service65.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service66.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service67.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/webapp-service:
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
  namespace: default
spec:
  ports:
  - nodePort: 30100
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: webapp
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/webapp-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-service68.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: synergychat-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service69.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 4000
    protocol: TCP
    targetPort: 3000
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch07
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  selector:
    app: numbers-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service70.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service71.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service72.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api-service:
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service73.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api:
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: api
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-service74.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/api:
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30081
    port: 3000
  selector:
    app: api
    release: "0"
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/api failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: api-service-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tb-k8-nagp-2024/ConfigMap/api-service-configmap:
apiVersion: v1
data:
  DB_HOST: db-stateful-set.tb-k8-nagp-2024.svc.cluster.local
  DB_NAME: tb-k8-nagp-database
  DB_USER: admin
kind: ConfigMap
metadata:
  name: api-service-configmap
  namespace: tb-k8-nagp-2024

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tb-k8-nagp-2024/Deployment/api-service-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service-deployment
  namespace: tb-k8-nagp-2024
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: api-service-configmap
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: api-service-configmap
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              key: DB_USER
              name: api-service-configmap
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: api-service-secret
        image: index.docker.io/tbansal18101991docker/index_image_v20:latest
        name: api-service-container
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource tb-k8-nagp-2024/Deployment/api-service-deployment

skipped mutate policy add-safe-to-evict -> resource tb-k8-nagp-2024/Deployment/api-service-deployment
policy disallow-latest-tag -> resource tb-k8-nagp-2024/Deployment/api-service-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource tb-k8-nagp-2024/Deployment/api-service-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource tb-k8-nagp-2024/Deployment/api-service-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource tb-k8-nagp-2024/Deployment/api-service-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource tb-k8-nagp-2024/Deployment/api-service-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource tb-k8-nagp-2024/Deployment/api-service-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource tb-k8-nagp-2024/Deployment/api-service-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource tb-k8-nagp-2024/Deployment/api-service-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: api-service-externalName.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  name: numbers-api
  namespace: default
spec:
  externalName: raw.githubusercontent.com
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-externalName1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  name: numbers-api
  namespace: default
spec:
  externalName: raw.githubusercontent.com
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-externalName2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  name: numbers-api
  namespace: default
spec:
  externalName: raw.githubusercontent.com
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-externalName3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  name: numbers-api
  namespace: default
spec:
  externalName: raw.githubusercontent.com
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-headless.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-headless_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Endpoints/numbers-api:
apiVersion: v1
kind: Endpoints
metadata:
  name: numbers-api
  namespace: default
subsets:
- addresses:
  - ip: 192.168.123.234
  ports:
  - port: 80

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-headless1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-headless1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Endpoints/numbers-api:
apiVersion: v1
kind: Endpoints
metadata:
  name: numbers-api
  namespace: default
subsets:
- addresses:
  - ip: 192.168.123.234
  ports:
  - port: 80

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-headless2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-headless2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Endpoints/numbers-api:
apiVersion: v1
kind: Endpoints
metadata:
  name: numbers-api
  namespace: default
subsets:
- addresses:
  - ip: 192.168.123.234
  ports:
  - port: 80

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-headless3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/numbers-api:
apiVersion: v1
kind: Service
metadata:
  name: numbers-api
  namespace: default
spec:
  ports:
  - port: 80
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-headless3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Endpoints/numbers-api:
apiVersion: v1
kind: Endpoints
metadata:
  name: numbers-api
  namespace: default
subsets:
- addresses:
  - ip: 192.168.123.234
  ports:
  - port: 80

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-loadbalancer.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tb-k8-nagp-2024/Service/api-service-loadbalancer:
apiVersion: v1
kind: Service
metadata:
  name: api-service-loadbalancer
  namespace: tb-k8-nagp-2024
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: api
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: api-service-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tb-k8-nagp-2024/Secret/api-service-secret:
apiVersion: v1
data:
  DB_PASSWORD: cGFzc3dvcmQ=
kind: Secret
metadata:
  name: api-service-secret
  namespace: tb-k8-nagp-2024
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ap-postgres-claim0-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/ap-postgres-claim0:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: ap-postgres-claim0
  name: ap-postgres-claim0
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ap-postgres-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ap-postgres:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: ap-postgres
  name: ap-postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ap-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/net: "true"
        io.kompose.service: ap-postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: activepieces
        - name: POSTGRES_PASSWORD
          value: activepieces
        - name: POSTGRES_USER
          value: activepieces
        image: postgres:14.4
        name: ap-postgres
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 10
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: ap-postgres-claim
      restartPolicy: Always
      volumes:
      - name: ap-postgres-claim
        persistentVolumeClaim:
          claimName: ap-postgres-claim
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ap-postgres

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ap-postgres
policy disallow-default-namespace -> resource default/Deployment/ap-postgres failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ap-postgres failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ap-postgres failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ap-postgres failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ap-postgres failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/Deployment/ap-postgres failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ap-postgres failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ap-postgres-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ap-postgres:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: ap-postgres
  name: ap-postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ap-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/net: "true"
        io.kompose.service: ap-postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: activepieces
        - name: POSTGRES_PASSWORD
          value: activepieces
        - name: POSTGRES_USER
          value: activepieces
        image: postgres:14.4
        name: ap-postgres
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 10
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: ap-postgres-claim0
      restartPolicy: Always
      volumes:
      - name: ap-postgres-claim0
        persistentVolumeClaim:
          claimName: ap-postgres-claim0
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ap-postgres

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ap-postgres
policy disallow-default-namespace -> resource default/Deployment/ap-postgres failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ap-postgres failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ap-postgres failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ap-postgres failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ap-postgres failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/Deployment/ap-postgres failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ap-postgres failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ap-postgres-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ap-postgres:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: ap-postgres
  name: ap-postgres
  namespace: default
spec:
  ports:
  - name: "5432"
    port: 5432
    targetPort: 5432
  selector:
    io.kompose.service: ap-postgres
  type: ClusterIP
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ap-postgres-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ap-postgres:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: ap-postgres
  name: ap-postgres
  namespace: default
spec:
  ports:
  - name: "5432"
    port: 5432
    targetPort: 5432
  selector:
    io.kompose.service: ap-postgres
  type: NodePort
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/ap-postgres failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: ap-rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/nginx-ingress-app-protect:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginx-ingress-app-protect
  namespace: default
rules:
- apiGroups:
  - appprotect.f5.com
  resources:
  - appolicies
  - aplogconfs
  - apusersigs
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ap-rbac_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/nginx-ingress-app-protect:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-app-protect
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-app-protect
subjects:
- kind: ServiceAccount
  name: nginx-ingress
  namespace: nginx-ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ap-rbac1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/nginx-ingress-app-protect:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginx-ingress-app-protect
  namespace: default
rules:
- apiGroups:
  - appprotect.f5.com
  resources:
  - appolicies
  - aplogconfs
  - apusersigs
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ap-rbac1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/nginx-ingress-app-protect:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-app-protect
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-app-protect
subjects:
- kind: ServiceAccount
  name: nginx-ingress
  namespace: nginx-ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ap-redis-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ap-redis:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: ap-redis
  name: ap-redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ap-redis
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: ap-redis
    spec:
      containers:
      - image: redis:7.0.7
        name: ap-redis
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: ap-redis-claim
      restartPolicy: Always
      volumes:
      - name: ap-redis-claim
        persistentVolumeClaim:
          claimName: ap-redis-claim
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ap-redis

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ap-redis
policy disallow-default-namespace -> resource default/Deployment/ap-redis failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ap-redis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ap-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ap-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ap-redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/ap-redis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ap-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ap-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ap-redis-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ap-redis:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: ap-redis
  name: ap-redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ap-redis
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: ap-redis
    spec:
      containers:
      - image: redis:7.0.7
        name: ap-redis
        resources: {}
      restartPolicy: Always
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ap-redis

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ap-redis
policy disallow-default-namespace -> resource default/Deployment/ap-redis failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ap-redis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ap-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ap-redis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ap-redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/ap-redis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ap-redis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ap-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ap-redis-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ap-redis:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: ap-redis
  name: ap-redis
  namespace: default
spec:
  ports:
  - name: "6379"
    port: 6379
    targetPort: 6379
  selector:
    io.kompose.service: ap-redis
  type: ClusterIP
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

