##### FILE: app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/hello-service:
apiVersion: v1
kind: Service
metadata:
  name: hello-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: hello

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: app_deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: php_app
  template:
    metadata:
      labels:
        app: php_app
    spec:
      containers:
      - image: 097084951758.dkr.ecr.us-east-1.amazonaws.com/rep_for_php_app:latest
        name: php-app
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment
policy disallow-default-namespace -> resource default/Deployment/app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: app_deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: php_app
  template:
    metadata:
      labels:
        app: php_app
    spec:
      containers:
      - image: 097084951758.dkr.ecr.us-east-1.amazonaws.com/rep_for_php_app:latest
        name: php-app
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment
policy disallow-default-namespace -> resource default/Deployment/app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: app_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to wordpress/Deployment/wordpress:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: wordpress
  name: wordpress
  namespace: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      containers:
      - env:
        - name: WORDPRESS_DB_HOST
          value: wordpress-mysql
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-pass
        - name: WORDPRESS_DB_USER
          value: wordpress
        image: wordpress:6.5.0-apache
        name: wordpress
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - mountPath: /var/www/html
          name: wordpress-persistent-storage
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource wordpress/Deployment/wordpress

skipped mutate policy add-safe-to-evict -> resource wordpress/Deployment/wordpress
policy drop-all-capabilities -> resource wordpress/Deployment/wordpress failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource wordpress/Deployment/wordpress failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource wordpress/Deployment/wordpress failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource wordpress/Deployment/wordpress failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource wordpress/Deployment/wordpress failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource wordpress/Deployment/wordpress failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource wordpress/Deployment/wordpress failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: app_deployment_manifest.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/giropops-senhas:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: giropops-senhas
  template:
    metadata:
      labels:
        app: giropops-senhas
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: redis-service
        image: linuxtips/giropops-senhas:1.0
        imagePullPolicy: Always
        name: giropops-senhas
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas

skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas
policy disallow-default-namespace -> resource default/Deployment/giropops-senhas failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/giropops-senhas failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: app_ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to wordpress/Ingress/wordpress-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wordpress-ingress
  namespace: wordpress
spec:
  rules:
  - host: 192.168.0.79.nip.io
    http:
      paths:
      - backend:
          service:
            name: wordpress-service
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: app_name_deploy01.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/proj-app:
apiVersion: v1
kind: Namespace
metadata:
  name: proj-app
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/proj-app:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: proj-app
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/proj-app:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: proj-app
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/proj-app:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: proj-app
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/proj-app:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: proj-app
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: app_name_deploy01_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to proj-app/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: proj-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource proj-app/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource proj-app/Deployment/nginx-deployment
policy disallow-latest-tag -> resource proj-app/Deployment/nginx-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource proj-app/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource proj-app/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource proj-app/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource proj-app/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource proj-app/Deployment/nginx-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource proj-app/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource proj-app/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: app_namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/devops-mahir-submission-3-ns:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: order-shipping
  name: devops-mahir-submission-3-ns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/devops-mahir-submission-3-ns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: devops-mahir-submission-3-ns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/devops-mahir-submission-3-ns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: devops-mahir-submission-3-ns
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/devops-mahir-submission-3-ns:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: devops-mahir-submission-3-ns
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/devops-mahir-submission-3-ns:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: devops-mahir-submission-3-ns
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: app_pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to wordpress/PersistentVolumeClaim/wp-pv-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: wordpress
  name: wp-pv-claim
  namespace: wordpress
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: app_service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/petfinder:
apiVersion: v1
kind: Service
metadata:
  name: petfinder
  namespace: default
spec:
  ports:
  - name: server-port
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: petfinder
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/petfinder failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: app_service_manifest.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/giropops-senhas:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  ports:
  - name: tcp-app
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: giropops-senhas
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: app_service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/petfinder:
apiVersion: v1
kind: Service
metadata:
  name: petfinder
  namespace: default
spec:
  ports:
  - name: server-port
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: petfinder
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/petfinder failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: app_service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to wordpress/Service/wordpress-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: wordpress
  name: wordpress-service
  namespace: wordpress
spec:
  ports:
  - port: 80
  selector:
    app: wordpress
    tier: frontend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: app_with_nginx_d.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/workout-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: workout-app
    tier: frontend
  name: workout-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: workout-app
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: workout-app
      name: workout-app
    spec:
      containers:
      - image: johndrake31/workout-app:latest
        imagePullPolicy: Always
        name: workout-container
        ports:
        - containerPort: 3000
      - image: nginx:latest
        name: nginx-container
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: react-app
      volumes:
      - emptyDir: {}
        name: react-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/workout-deployment
policy disallow-default-namespace -> resource default/Deployment/workout-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/workout-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/workout-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/workout-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/workout-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/workout-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/workout-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/workout-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/workout-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: apparmorprofile1701.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1702.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1703.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1704.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1705.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1706.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1707.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1708.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1709.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile171.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1710.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1711.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1712.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1713.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1714.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1715.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1716.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1717.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1718.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1719.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile172.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1720.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1721.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1722.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1723.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1724.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1725.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1726.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1727.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1728.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1729.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile173.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1730.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1731.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1732.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1733.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1734.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1735.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1736.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1737.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1738.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1739.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile174.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1740.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1741.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1742.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1743.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1744.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1745.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1746.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1747.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1748.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1749.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile175.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1750.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1751.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1752.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1753.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1754.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1755.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1756.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1757.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1758.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1759.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile176.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1760.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1761.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1762.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1763.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1764.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1765.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1766.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1767.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1768.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1769.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile177.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1770.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1771.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1772.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1773.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1774.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1775.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1776.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1777.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1778.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1779.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile178.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1780.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1781.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1782.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1783.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1784.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1785.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1786.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1787.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1788.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1789.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile179.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1790.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1791.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1792.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1793.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1794.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1795.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1796.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1797.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1798.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1799.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile180.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1800.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1801.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1802.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1803.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1804.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1805.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1806.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1807.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1808.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1809.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile181.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1810.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1811.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1812.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1813.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1814.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1815.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1816.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1817.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1818.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1819.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile182.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1820.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1821.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1822.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1823.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1824.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1825.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1826.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1827.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1828.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1829.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile183.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1830.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1831.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1832.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1833.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1834.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1835.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1836.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1837.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1838.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1839.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile184.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1840.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1841.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1842.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1843.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1844.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1845.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1846.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1847.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1848.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1849.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile185.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1850.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1851.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1852.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1853.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1854.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1855.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1856.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1857.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1858.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1859.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile186.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1860.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1861.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1862.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1863.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1864.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1865.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1866.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1867.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1868.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1869.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile187.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1870.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1871.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1872.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1873.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1874.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1875.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1876.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1877.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1878.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1879.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile188.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1880.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1881.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1882.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1883.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1884.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1885.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1886.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1887.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1888.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1889.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile189.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1890.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1891.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1892.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1893.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1894.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1895.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1896.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1897.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1898.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1899.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile190.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1900.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1901.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1902.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1903.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1904.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1905.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1906.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1907.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1908.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1909.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile191.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1910.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile1911.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: registry.k8s.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: registry.k8s.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile192.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile193.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile194.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile195.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile196.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile197.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile198.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
  securityContext:
    runAsNonRoot: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apparmorprofile199.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apparmorprofile1:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/initcontainer1: unconfined
  name: apparmorprofile1
  namespace: default
spec:
  containers:
  - image: k8s.gcr.io/pause
    name: container1
    securityContext:
      allowPrivilegeEscalation: false
  initContainers:
  - image: k8s.gcr.io/pause
    name: initcontainer1
    securityContext:
      allowPrivilegeEscalation: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1

skipped mutate policy add-safe-to-evict -> resource default/Pod/apparmorprofile1
policy disallow-default-namespace -> resource default/Pod/apparmorprofile1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apparmorprofile1 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apparmorprofile1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apparmorprofile1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/apparmorprofile1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/apparmorprofile1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apparmorprofile1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/apparmorprofile1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appdeploy_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/appdeploy-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: app-deploy-operator
    app.kubernetes.io/instance: appdeploy-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: app-deploy-operator
  name: appdeploy-editor-role
  namespace: default
rules:
- apiGroups:
  - akoserwal.akoserwal
  resources:
  - appdeploys
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - akoserwal.akoserwal
  resources:
  - appdeploys/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appdeploy_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/appdeploy-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: app-deploy-operator
    app.kubernetes.io/instance: appdeploy-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: app-deploy-operator
  name: appdeploy-viewer-role
  namespace: default
rules:
- apiGroups:
  - akoserwal.akoserwal
  resources:
  - appdeploys
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - akoserwal.akoserwal
  resources:
  - appdeploys/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appdeployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/vproapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vproapp
  name: vproapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vproapp
  template:
    metadata:
      labels:
        app: vproapp
    spec:
      containers:
      - image: harmson/containerapp
        name: vproapp
        ports:
        - containerPort: 8080
          name: app-port
      initContainers:
      - command:
        - sh
        - -c
        - sleep 120
        image: busybox:latest
        name: init-db

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/vproapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/vproapp
policy disallow-default-namespace -> resource default/Deployment/vproapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/vproapp failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/vproapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/vproapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/vproapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/vproapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/vproapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/vproapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/vproapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 5, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: appdomain2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/appdomain-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dns
    external-dns.alpha.kubernetes.io/hostname: '*.app.konst.fish'
    external-dns.alpha.kubernetes.io/target: tetra.shoal.konst.fish
  name: appdomain-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: '*.app.konst.fish'
    http:
      paths:
      - backend:
          service:
            name: ingress-nginx-defaultbackend
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - '*.app.konst.fish'
    secretName: appdomain-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appdomain-redirect.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/appdomain-redirect-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dns
    external-dns.alpha.kubernetes.io/hostname: app.konst.fish
    external-dns.alpha.kubernetes.io/target: tetra.shoal.konst.fish
    nginx.ingress.kubernetes.io/permanent-redirect: https://shoal.konst.fish
  name: appdomain-redirect-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: app.konst.fish
    http:
      paths:
      - backend:
          service:
            name: ingress-nginx-defaultbackend
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - app.konst.fish
    secretName: appdomain-star-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/appingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  name: appingress
  namespace: default
spec:
  rules:
  - host: webapp.com
    http:
      paths:
      - backend:
          service:
            name: bluesvc
            port:
              number: 80
        path: /blue
        pathType: Prefix
      - backend:
          service:
            name: greensvc
            port:
              number: 80
        path: /green
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/appingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  name: appingress
  namespace: default
spec:
  rules:
  - host: webapp.com
    http:
      paths:
      - backend:
          service:
            name: bluesvc
            port:
              number: 80
        path: /blue
        pathType: Prefix
      - backend:
          service:
            name: greensvc
            port:
              number: 80
        path: /green
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appingress2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/appingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  name: appingress
  namespace: default
spec:
  rules:
  - host: webapp.com
    http:
      paths:
      - backend:
          service:
            name: bluesvc
            port:
              number: 80
        path: /blue
        pathType: Prefix
      - backend:
          service:
            name: greensvc
            port:
              number: 80
        path: /green
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apple.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apple-app:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: apple
  name: apple-app
  namespace: default
spec:
  containers:
  - args:
    - -text=apple
    image: hashicorp/http-echo
    name: apple-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app
policy disallow-default-namespace -> resource default/Pod/apple-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apple-app failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apple-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apple-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apple-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apple-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apple-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apple-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apple-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apple_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apple-service:
apiVersion: v1
kind: Service
metadata:
  name: apple-service
  namespace: default
spec:
  ports:
  - port: 5678
  selector:
    app: apple

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apple1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apple-app:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: apple
  name: apple-app
  namespace: default
spec:
  containers:
  - args:
    - -text=apple
    image: hashicorp/http-echo
    name: apple-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app
policy disallow-default-namespace -> resource default/Pod/apple-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apple-app failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apple-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apple-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apple-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apple-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apple-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apple-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apple-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apple1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apple-service:
apiVersion: v1
kind: Service
metadata:
  name: apple-service
  namespace: default
spec:
  ports:
  - port: 5678
  selector:
    app: apple

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apple2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apple-app:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: apple
  name: apple-app
  namespace: default
spec:
  containers:
  - args:
    - -text=apple
    image: hashicorp/http-echo
    name: apple-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app
policy disallow-default-namespace -> resource default/Pod/apple-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apple-app failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apple-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apple-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apple-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apple-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apple-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apple-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apple-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apple2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apple-service:
apiVersion: v1
kind: Service
metadata:
  name: apple-service
  namespace: default
spec:
  ports:
  - port: 5678
  selector:
    app: apple

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apple3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apple-app:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: apple
  name: apple-app
  namespace: default
spec:
  containers:
  - args:
    - -text=apple
    image: hashicorp/http-echo
    name: apple-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app
policy disallow-default-namespace -> resource default/Pod/apple-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apple-app failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apple-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apple-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apple-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apple-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apple-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apple-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apple-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apple3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apple-service:
apiVersion: v1
kind: Service
metadata:
  name: apple-service
  namespace: default
spec:
  ports:
  - port: 5678
  selector:
    app: apple

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apple5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apple-app:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: apple
  name: apple-app
  namespace: default
spec:
  containers:
  - args:
    - -text=apple
    image: hashicorp/http-echo
    name: apple-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app
policy disallow-default-namespace -> resource default/Pod/apple-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apple-app failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apple-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apple-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apple-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apple-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apple-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apple-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apple-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apple5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apple-service:
apiVersion: v1
kind: Service
metadata:
  name: apple-service
  namespace: default
spec:
  ports:
  - port: 5678
  selector:
    app: apple

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apple6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apple-app:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: apple
  name: apple-app
  namespace: default
spec:
  containers:
  - args:
    - -text=apple
    image: hashicorp/http-echo
    name: apple-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app
policy disallow-default-namespace -> resource default/Pod/apple-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apple-app failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apple-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apple-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apple-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apple-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apple-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apple-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apple-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apple6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apple-service:
apiVersion: v1
kind: Service
metadata:
  name: apple-service
  namespace: default
spec:
  ports:
  - port: 5678
  selector:
    app: apple

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apple7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/apple-app:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: apple
  name: apple-app
  namespace: default
spec:
  containers:
  - args:
    - -text=apple
    image: hashicorp/http-echo
    name: apple-app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/apple-app
policy disallow-default-namespace -> resource default/Pod/apple-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/apple-app failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/apple-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/apple-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/apple-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/apple-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/apple-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/apple-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/apple-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: apple7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/apple-service:
apiVersion: v1
kind: Service
metadata:
  name: apple-service
  namespace: default
spec:
  ports:
  - port: 5678
  selector:
    app: apple

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apple-ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/apple:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: apple
  name: apple
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/apple:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: apple
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/apple:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: apple
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/apple:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: apple
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/apple:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: apple
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apple-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to apple/Pod/apple-pod:
apiVersion: v1
kind: Pod
metadata:
  name: apple-pod
  namespace: apple
spec:
  containers:
  - image: bibinwilson/docker-kubectl:latest
    name: apple-pod-container
  serviceAccountName: apple-sa

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource apple/Pod/apple-pod

skipped mutate policy add-safe-to-evict -> resource apple/Pod/apple-pod
policy disallow-latest-tag -> resource apple/Pod/apple-pod failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource apple/Pod/apple-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource apple/Pod/apple-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource apple/Pod/apple-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource apple/Pod/apple-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource apple/Pod/apple-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource apple/Pod/apple-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource apple/Pod/apple-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apple-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to apple/Pod/apple-pod2:
apiVersion: v1
kind: Pod
metadata:
  name: apple-pod2
  namespace: apple
spec:
  containers:
  - image: nginx
    name: apple-pod2-container
  serviceAccountName: apple-sa

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource apple/Pod/apple-pod2

skipped mutate policy add-safe-to-evict -> resource apple/Pod/apple-pod2
policy disallow-latest-tag -> resource apple/Pod/apple-pod2 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource apple/Pod/apple-pod2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource apple/Pod/apple-pod2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource apple/Pod/apple-pod2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource apple/Pod/apple-pod2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource apple/Pod/apple-pod2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource apple/Pod/apple-pod2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource apple/Pod/apple-pod2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apple-role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to apple/Role/pod-reader-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-reader-role
  namespace: apple
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apple-rolebinding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to apple/RoleBinding/pod-reader-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-reader-binding
  namespace: apple
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-reader-role
subjects:
- kind: ServiceAccount
  name: apple-sa
  namespace: apple

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apple-sa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to apple/ServiceAccount/apple-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: apple-sa
  namespace: apple

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application_deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application_e2e.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-app-v1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-v1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app-v1
  template:
    metadata:
      labels:
        app: my-app-v1
    spec:
      containers:
      - command:
        - uvicorn
        - main:app
        - --host
        - 0.0.0.0
        - --port
        - "8000"
        env:
        - name: ROOT_PATH
          value: /v1
        image: tiketdatahansen/echoserver:1.0
        name: echoserver
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-app-v1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-app-v1
policy disallow-default-namespace -> resource default/Deployment/my-app-v1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/my-app-v1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-app-v1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-app-v1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-app-v1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-app-v1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-app-v1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-app-v1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application_e2e_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/my-app-v1-svc:
apiVersion: v1
kind: Service
metadata:
  name: my-app-v1-svc
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 8000
  selector:
    app: my-app-v1
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_e2e_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/my-app-v2:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-v2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app-v2
  template:
    metadata:
      labels:
        app: my-app-v2
    spec:
      containers:
      - command:
        - uvicorn
        - main:app
        - --host
        - 0.0.0.0
        - --port
        - "8000"
        env:
        - name: ROOT_PATH
          value: /v2
        image: tiketdatahansen/echoserver:2.0
        name: echoserver
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-app-v2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/my-app-v2
policy disallow-default-namespace -> resource default/Deployment/my-app-v2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/my-app-v2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/my-app-v2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/my-app-v2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/my-app-v2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/my-app-v2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/my-app-v2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/my-app-v2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application_e2e_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/my-app-v2-svc:
apiVersion: v1
kind: Service
metadata:
  name: my-app-v2-svc
  namespace: default
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 8000
  selector:
    app: my-app-v2
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_e2e_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/my-app-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: my-app-ingress
  namespace: default
spec:
  rules:
  - host: my-app-svc.mydomain.com
    http:
      paths:
      - backend:
          service:
            name: my-app-v1-svc
            port:
              number: 5000
        path: /v1
        pathType: Prefix
      - backend:
          service:
            name: my-app-v2-svc
            port:
              number: 5000
        path: /v2
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/application-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: banana-controller
    app.kubernetes.io/instance: application-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: banana-controller
  name: application-editor-role
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_editor_role1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/application-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kdp-oam-operator
    app.kubernetes.io/instance: application-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kdp-oam-operator
  name: application-editor-role
  namespace: default
rules:
- apiGroups:
  - bdc.kdp.io
  resources:
  - applications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - bdc.kdp.io
  resources:
  - applications/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_editor_role2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/application-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: vernal-operator
    app.kubernetes.io/instance: application-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: vernal-operator
  name: application-editor-role
  namespace: default
rules:
- apiGroups:
  - vernal.dev
  resources:
  - applications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vernal.dev
  resources:
  - applications/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_editor_role3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/application-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: application-operator
    app.kubernetes.io/instance: application-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: application-operator
  name: application-editor-role
  namespace: default
rules:
- apiGroups:
  - apps.lixiyu.cn
  resources:
  - applications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps.lixiyu.cn
  resources:
  - applications/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_editor_role4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/application-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: quay-api-operator
  name: application-editor-role
  namespace: default
rules:
- apiGroups:
  - quay.herve4m.github.io
  resources:
  - applications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - quay.herve4m.github.io
  resources:
  - applications/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/application-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: banana-controller
    app.kubernetes.io/instance: application-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: banana-controller
  name: application-viewer-role
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_viewer_role1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/application-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kdp-oam-operator
    app.kubernetes.io/instance: application-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kdp-oam-operator
  name: application-viewer-role
  namespace: default
rules:
- apiGroups:
  - bdc.kdp.io
  resources:
  - applications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - bdc.kdp.io
  resources:
  - applications/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_viewer_role2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/application-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: vernal-operator
    app.kubernetes.io/instance: application-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: vernal-operator
  name: application-viewer-role
  namespace: default
rules:
- apiGroups:
  - vernal.dev
  resources:
  - applications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - vernal.dev
  resources:
  - applications/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_viewer_role3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/application-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: application-operator
    app.kubernetes.io/instance: application-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: application-operator
  name: application-viewer-role
  namespace: default
rules:
- apiGroups:
  - apps.lixiyu.cn
  resources:
  - applications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps.lixiyu.cn
  resources:
  - applications/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application_viewer_role4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/application-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: quay-api-operator
  name: application-viewer-role
  namespace: default
rules:
- apiGroups:
  - quay.herve4m.github.io
  resources:
  - applications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - quay.herve4m.github.io
  resources:
  - applications/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-01-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/application-01-configmap:
apiVersion: v1
data:
  index.html: '{"message":"hello from application 01"}'
kind: ConfigMap
metadata:
  name: application-01-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-01-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/application-01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: application-01
  name: application-01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application-01
  strategy:
    rollingUpdate:
      maxSurge: 50%!
(MISSING)      maxUnavailable: 50%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        app: application-01
    spec:
      containers:
      - image: nginx
        name: nginx
        resources: {}
        volumeMounts:
        - mountPath: /usr/share/nginx/html/
          name: nginx-conf
      volumes:
      - configMap:
          name: application-01-configmap
        name: nginx-conf

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/application-01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/application-01
policy disallow-default-namespace -> resource default/Deployment/application-01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/application-01 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/application-01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/application-01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/application-01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/application-01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/application-01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/application-01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/application-01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application-01-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/application-01:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: application-01
  name: application-01
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app: application-01
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-02-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/application-02-configmap:
apiVersion: v1
data:
  index.html: '{"message":"hello from application 02"}'
kind: ConfigMap
metadata:
  name: application-02-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-02-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/application-02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: application-02
  name: application-02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application-02
  strategy:
    rollingUpdate:
      maxSurge: 50%!
(MISSING)      maxUnavailable: 50%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        app: application-02
    spec:
      containers:
      - image: nginx
        name: nginx
        resources: {}
        volumeMounts:
        - mountPath: /usr/share/nginx/html/
          name: nginx-conf
      volumes:
      - configMap:
          name: application-02-configmap
        name: nginx-conf

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/application-02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/application-02
policy disallow-default-namespace -> resource default/Deployment/application-02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/application-02 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/application-02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/application-02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/application-02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/application-02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/application-02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/application-02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/application-02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application-02-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/application-02:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: application-02
  name: application-02
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app: application-02
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application137.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/hello-dotnet:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: aspnetapp
  name: hello-dotnet
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: aspnetapp
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: aspnetapp
    spec:
      containers:
      - image: mcr.microsoft.com/dotnet/samples:aspnetapp
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        name: aspnetapp
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 250m
            memory: 60Mi
        volumeMounts:
        - mountPath: /diag
          name: diagvol
      volumes:
      - emptyDir: {}
        name: diagvol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/hello-dotnet
policy disallow-default-namespace -> resource default/Deployment/hello-dotnet failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/hello-dotnet failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/hello-dotnet failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/hello-dotnet failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/hello-dotnet failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/hello-dotnet failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: application137_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/hello-dotnet:
apiVersion: v1
kind: Service
metadata:
  labels:
    hpecp.hpe.com/hpecp-internal-gateway: "true"
  name: hello-dotnet
  namespace: default
spec:
  ports:
  - port: 8080
  selector:
    app: aspnetapp
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/hello-dotnet failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: application179.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: deployment
  template:
    metadata:
      labels:
        name: deployment
      name: testpod
    spec:
      containers:
      - image: httpd
        name: myapache
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy
policy disallow-default-namespace -> resource default/Deployment/mydeploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mydeploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mydeploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application181.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: deployment
  template:
    metadata:
      labels:
        name: deployment
      name: testpod
    spec:
      containers:
      - image: httpd
        name: myapache
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy
policy disallow-default-namespace -> resource default/Deployment/mydeploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mydeploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mydeploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application182.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: deployment
  template:
    metadata:
      labels:
        name: deployment
      name: testpod
    spec:
      containers:
      - image: httpd
        name: myapache
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy
policy disallow-default-namespace -> resource default/Deployment/mydeploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mydeploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mydeploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application185.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/wil:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: wil
  name: wil
  namespace: dev
spec:
  selector:
    matchLabels:
      app: wil
  template:
    metadata:
      labels:
        app: wil
    spec:
      containers:
      - image: wil42/playground:v1
        name: wil
        ports:
        - containerPort: 8888

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/wil

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/wil
policy drop-all-capabilities -> resource dev/Deployment/wil failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/wil failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/wil failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Deployment/wil failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dev/Deployment/wil failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/wil failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/wil failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: application185_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/svc-wil:
apiVersion: v1
kind: Service
metadata:
  name: svc-wil
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8888
  selector:
    app: wil

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application188.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: deployment
  template:
    metadata:
      labels:
        name: deployment
      name: testpod
    spec:
      containers:
      - image: httpd
        name: myapache
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy
policy disallow-default-namespace -> resource default/Deployment/mydeploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mydeploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mydeploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalapp/Service/goalapp:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: application
  name: goalapp
  namespace: goalapp
spec:
  ports:
  - name: http
    port: 5000
    protocol: TCP
  selector:
    app: application
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalapp/Deployment/application:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
  namespace: goalapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application
  template:
    metadata:
      labels:
        app: application
    spec:
      containers:
      - image: 549825371516.dkr.ecr.ap-southeast-1.amazonaws.com/goalapp:latest
        imagePullPolicy: Always
        name: application
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource goalapp/Deployment/application

skipped mutate policy add-safe-to-evict -> resource goalapp/Deployment/application
policy disallow-latest-tag -> resource goalapp/Deployment/application failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource goalapp/Deployment/application failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource goalapp/Deployment/application failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource goalapp/Deployment/application failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource goalapp/Deployment/application failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource goalapp/Deployment/application failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource goalapp/Deployment/application failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource goalapp/Deployment/application failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application348.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/wp-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: wp-app
  name: wp-app
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      app: wp-app
  strategy: {}
  template:
    metadata:
      labels:
        app: wp-app
        customer: tuke
        env: prod
        tier: frontend
    spec:
      containers:
      - image: wordpress
        name: wordpress
        resources: {}
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/wp-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/wp-app
policy disallow-default-namespace -> resource default/Deployment/wp-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/wp-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/wp-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/wp-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/wp-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/wp-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/wp-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/wp-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/wp-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application348_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/wp-app:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: wp-app
  name: wp-app
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 80
  selector:
    app: wp-app
  type: LoadBalancer
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: deployment
  template:
    metadata:
      labels:
        name: deployment
      name: testpod
    spec:
      containers:
      - image: httpd
        name: myapache
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy
policy disallow-default-namespace -> resource default/Deployment/mydeploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mydeploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mydeploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application350.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/game-2048:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: game-2048
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/game-2048:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: game-2048
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/game-2048:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: game-2048
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/game-2048:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: game-2048
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/game-2048:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: game-2048
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application350_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to game-2048/Deployment/deployment-2048:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-2048
  namespace: game-2048
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: app-2048
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-2048
    spec:
      containers:
      - image: public.ecr.aws/l6m2t8p7/docker-2048:latest
        imagePullPolicy: Always
        name: app-2048
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource game-2048/Deployment/deployment-2048

skipped mutate policy add-safe-to-evict -> resource game-2048/Deployment/deployment-2048
policy disallow-latest-tag -> resource game-2048/Deployment/deployment-2048 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource game-2048/Deployment/deployment-2048 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource game-2048/Deployment/deployment-2048 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-pod-probes -> resource game-2048/Deployment/deployment-2048 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource game-2048/Deployment/deployment-2048 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource game-2048/Deployment/deployment-2048 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: application350_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to game-2048/Service/service-2048:
apiVersion: v1
kind: Service
metadata:
  name: service-2048
  namespace: game-2048
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/name: app-2048
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application351.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/dbt:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: dbt
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/dbt:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: dbt
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/dbt:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: dbt
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dbt:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: dbt
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/dbt:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: dbt
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application351_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dbt/Deployment/deployment-dbt:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-dbt
  namespace: dbt
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: app-dbt-docs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-dbt-docs
    spec:
      containers:
      - env:
        - name: DATABRICKS_TOKEN
          valueFrom:
            secretKeyRef:
              key: DATABRICKS_TOKEN_
              name: databricks-token
        - name: DATABRICKS_HOST
          valueFrom:
            secretKeyRef:
              key: DATABRICKS_HOST
              name: databricks-host
        - name: DATABRICKS_SQL_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: DATABRICKS_SQL_ENDPOINT
              name: databricks-sql-endpoint
        image: 948065143262.dkr.ecr.us-east-1.amazonaws.com/patrick-cloud-dev-dbt-docs:9e1bcf5f
        imagePullPolicy: Always
        name: app-dbt-docs
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dbt/Deployment/deployment-dbt

skipped mutate policy add-safe-to-evict -> resource dbt/Deployment/deployment-dbt
policy drop-all-capabilities -> resource dbt/Deployment/deployment-dbt failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dbt/Deployment/deployment-dbt failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-pod-probes -> resource dbt/Deployment/deployment-dbt failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dbt/Deployment/deployment-dbt failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dbt/Deployment/deployment-dbt failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: application351_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dbt/Service/service-dbt-docs:
apiVersion: v1
kind: Service
metadata:
  name: service-dbt-docs
  namespace: dbt
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: app-dbt-docs
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application380.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/istio-system:
apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: istio-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/istio-system:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: istio-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: istio-system
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/istio-system:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: istio-system
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application420.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/your-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: your-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: your-app
  template:
    metadata:
      labels:
        app: your-app
    spec:
      containers:
      - env:
        - name: MONGODB_URI
          value: mongodb+srv://Sol:SEvoQqDSdmZwhpx3@cluster0.nrfdmbx.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
        image: your-app-image:tag
        name: KAIA
        resources:
          limits:
            cpu: "1"
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/your-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/your-app
policy disallow-default-namespace -> resource default/Deployment/your-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/your-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/your-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/your-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/your-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/your-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/your-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/your-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application426.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app
  name: app-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: jaidip1994/app:latest
        imagePullPolicy: IfNotPresent
        name: app
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: 20m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment
policy disallow-default-namespace -> resource default/Deployment/app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application426_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/app-service:
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application434.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/test-service-1:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: test-service-1
    service: test-service-1
  name: test-service-1
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: test-service-1

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application434_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/test-service-1:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    account: test-service-1
  name: test-service-1
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application434_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-service-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-service-1
    service: test-service-1
    version: v1
  name: test-service-1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-service-1
      service: test-service-1
      version: v1
  template:
    metadata:
      labels:
        app: test-service-1
        service: test-service-1
        sidecar.istio.io/inject: "true"
        version: v1
    spec:
      containers:
      - env:
        - name: CI
          value: "true"
        - name: LOCAL_POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LOCAL_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: LOCAL_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LOCAL_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOCAL_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOCAL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['version']
        image: service:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        name: test-service-1
        ports:
        - containerPort: 8080
      serviceAccountName: test-service-1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-service-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-service-1
policy disallow-default-namespace -> resource default/Deployment/test-service-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/test-service-1 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/test-service-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/test-service-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/test-service-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/test-service-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/test-service-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/test-service-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application435.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/user-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: user-service
    service: user-service
  name: user-service
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: user-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application435_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/user-service:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    account: user-service
  name: user-service
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application435_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/user-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: user-service
    service: user-service
    version: v1
  name: user-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
      service: user-service
      version: v1
  template:
    metadata:
      labels:
        app: user-service
        service: user-service
        sidecar.istio.io/inject: "true"
        version: v1
    spec:
      containers:
      - env:
        - name: CI
          value: "true"
        - name: LOCAL_POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LOCAL_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: LOCAL_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LOCAL_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOCAL_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOCAL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['version']
        - name: PGHOST
          value: postgres.database.svc.cluster.local
        - name: PGPORT
          value: "5432"
        - name: PGTZ
          value: UTC
        - name: PGAPPNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: PGCONNECT_TIMEOUT
          value: "10"
        envFrom:
        - secretRef:
            name: user-service-postgres-secret
        image: service:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        name: user-service
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/secrets/jwt-ecdsa-pem
          name: jwt-ecdsa-pem
          readOnly: true
        - mountPath: /etc/secrets/jwt-signing-token
          name: jwt-signing-token
          readOnly: true
      serviceAccountName: user-service
      volumes:
      - name: jwt-ecdsa-pem
        secret:
          optional: false
          secretName: jwt-ecdsa-pem
      - name: jwt-signing-token
        secret:
          optional: false
          secretName: jwt-signing-token

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/user-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/user-service
policy disallow-default-namespace -> resource default/Deployment/user-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/user-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/user-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/user-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/user-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/user-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/user-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/user-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application439.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/test-service-2-alpha-derivative-2:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: test-service-2-alpha-derivative-2
    service: test-service-2-alpha-derivative-2
  name: test-service-2-alpha-derivative-2
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: test-service-2-alpha-derivative-2

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application439_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/test-service-2-alpha-derivative-2:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    account: test-service-2-alpha-derivative-2
  name: test-service-2-alpha-derivative-2
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application439_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/test-service-2-alpha-derivative-2:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-service-2-alpha-derivative-2
    service: test-service-2-alpha-derivative-2
    version: v1
  name: test-service-2-alpha-derivative-2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-service-2-alpha-derivative-2
      service: test-service-2-alpha-derivative-2
      version: v1
  template:
    metadata:
      labels:
        app: test-service-2-alpha-derivative-2
        service: test-service-2-alpha-derivative-2
        sidecar.istio.io/inject: "true"
        version: v1
    spec:
      containers:
      - env:
        - name: CI
          value: "true"
        - name: LOCAL_POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LOCAL_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: LOCAL_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LOCAL_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOCAL_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOCAL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['version']
        image: service:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        name: test-service-2-alpha-derivative-2
        ports:
        - containerPort: 8080
      serviceAccountName: test-service-2-alpha-derivative-2

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-service-2-alpha-derivative-2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/test-service-2-alpha-derivative-2
policy disallow-default-namespace -> resource default/Deployment/test-service-2-alpha-derivative-2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/test-service-2-alpha-derivative-2 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/test-service-2-alpha-derivative-2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/test-service-2-alpha-derivative-2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/test-service-2-alpha-derivative-2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/test-service-2-alpha-derivative-2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/test-service-2-alpha-derivative-2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/test-service-2-alpha-derivative-2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/wil-playground:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: wil-playground
  name: wil-playground
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wil-playground
  template:
    metadata:
      labels:
        app: wil-playground
    spec:
      containers:
      - image: wil42/playground:v1
        name: wil-playground
        ports:
        - containerPort: 8888

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/wil-playground

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/wil-playground
policy drop-all-capabilities -> resource dev/Deployment/wil-playground failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/wil-playground failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/wil-playground failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Deployment/wil-playground failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dev/Deployment/wil-playground failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/wil-playground failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/wil-playground failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: application46_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Service/svc-wil:
apiVersion: v1
kind: Service
metadata:
  name: svc-wil
  namespace: dev
spec:
  ports:
  - port: 8888
    protocol: TCP
    targetPort: 8888
  selector:
    app: wil-playground
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application461.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/busybox:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: busybox
  name: busybox
  namespace: default
spec:
  selector:
    matchLabels:
      component: busybox
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        component: busybox
    spec:
      containers:
      - args:
        - sh
        - -c
        - |
          while true; do
            echo $(date) - filebeat log >> /var/log/access.log;
            sleep 10;
          done
        image: busybox
        name: busybox
        volumeMounts:
        - mountPath: /var/log
          name: log
      - args:
        - -c
        - /etc/filebeat/conf.yaml
        - -e
        image: elastic/filebeat:7.16.3
        name: filebeat
        volumeMounts:
        - mountPath: /etc/filebeat
          name: filebeat-config
        - mountPath: /var/log
          name: log
      volumes:
      - emptyDir: {}
        name: log
      - configMap:
          name: filebeat-config
        name: filebeat-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/busybox
policy disallow-default-namespace -> resource default/Deployment/busybox failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/busybox failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/busybox failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/busybox failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/busybox failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/busybox failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/busybox failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/busybox failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/busybox failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: application464.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/wil-playground:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: wil-playground
  name: wil-playground
  namespace: dev
spec:
  replicas: 4
  selector:
    matchLabels:
      app: wil-playground
  template:
    metadata:
      labels:
        app: wil-playground
    spec:
      containers:
      - image: wil42/playground:v2
        name: wil-playground
        ports:
        - containerPort: 8888

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/wil-playground

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/wil-playground
policy drop-all-capabilities -> resource dev/Deployment/wil-playground failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/wil-playground failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/wil-playground failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Deployment/wil-playground failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dev/Deployment/wil-playground failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/wil-playground failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/wil-playground failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: application464_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Service/svc-wil:
apiVersion: v1
kind: Service
metadata:
  name: svc-wil
  namespace: dev
spec:
  ports:
  - port: 8888
    protocol: TCP
    targetPort: 8888
  selector:
    app: wil-playground
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application68.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalapp/Service/goalapp:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: application
  name: goalapp
  namespace: goalapp
spec:
  ports:
  - name: http
    port: 5000
    protocol: TCP
  selector:
    app: application
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application68_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalapp/Deployment/application:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
  namespace: goalapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application
  template:
    metadata:
      labels:
        app: application
    spec:
      containers:
      - image: 549825371516.dkr.ecr.ap-southeast-1.amazonaws.com/goalapp:latest
        imagePullPolicy: Always
        name: application
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource goalapp/Deployment/application

skipped mutate policy add-safe-to-evict -> resource goalapp/Deployment/application
policy disallow-latest-tag -> resource goalapp/Deployment/application failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource goalapp/Deployment/application failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource goalapp/Deployment/application failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource goalapp/Deployment/application failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource goalapp/Deployment/application failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource goalapp/Deployment/application failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource goalapp/Deployment/application failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource goalapp/Deployment/application failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application82.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydeploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: deployment
  template:
    metadata:
      labels:
        name: deployment
      name: testpod
    spec:
      containers:
      - image: httpd
        name: myapache
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydeploy
policy disallow-default-namespace -> resource default/Deployment/mydeploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mydeploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mydeploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydeploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydeploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydeploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application93.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/wil-playground:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: wil-playground
  name: wil-playground
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wil-playground
  template:
    metadata:
      labels:
        app: wil-playground
    spec:
      containers:
      - image: wil42/playground:v1
        name: wil-playground
        ports:
        - containerPort: 8888

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/wil-playground

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/wil-playground
policy drop-all-capabilities -> resource dev/Deployment/wil-playground failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/wil-playground failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/wil-playground failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Deployment/wil-playground failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dev/Deployment/wil-playground failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/wil-playground failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/wil-playground failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: application93_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Service/svc-wil:
apiVersion: v1
kind: Service
metadata:
  name: svc-wil
  namespace: dev
spec:
  ports:
  - port: 8888
    protocol: TCP
    targetPort: 8888
  selector:
    app: wil-playground
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-assignment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/application-assignment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application-assignment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app-label: application-assignment
  template:
    metadata:
      labels:
        app-label: application-assignment
    spec:
      containers:
      - env:
        - name: spring.redis.host
          value: 10.244.2.28
        - name: spring.redis.port
          value: "6379"
        image: vinsdocker/k8s-deploy-assignment
        name: application-assignment
        ports:
        - containerPort: 8080
          name: app-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/application-assignment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/application-assignment
policy disallow-default-namespace -> resource default/Deployment/application-assignment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/application-assignment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/application-assignment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/application-assignment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/application-assignment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/application-assignment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/application-assignment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/application-assignment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/application-assignment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/ConfigMap/application-config:
apiVersion: v1
data:
  application.properties: |
    app.name=MyApplication
    app.environment=development
kind: ConfigMap
metadata:
  name: application-config
  namespace: development

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-config-cm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/application-config-cm:
apiVersion: v1
data:
  greetings: Greating Earthling
kind: ConfigMap
metadata:
  labels:
    tier: control
  name: application-config-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-config-cm1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/application-config-cm:
apiVersion: v1
data:
  greetings: Greating Earthling
kind: ConfigMap
metadata:
  labels:
    tier: control
  name: application-config-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - env:
        - name: ConnectionStrings__WebAppContext
          value: Server=mssql-deployment;Database=ProdcutsDB;User ID=SA;Password=yourpassword;Encrypt=False;
        image: yourcontainerimage/webapp:dotnet-v7.0.1.01
        name: webapp
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 300m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: application-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/webapp-service:
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: webapp
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-failure.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/kplabs-service:
apiVersion: v1
kind: Service
metadata:
  name: kplabs-service
  namespace: default
spec:
  ports:
  - port: 8089
    targetPort: 80
  selector:
    run: nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/kplabs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: application-failure_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/teama:
apiVersion: v1
kind: Namespace
metadata:
  name: teama
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: teama
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: teama
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: teama
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: teama
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-failure_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-first:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: prod
  name: nginx-pod-first
  namespace: teama
spec:
  containers:
  - image: nginx
    name: first-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-first failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-first failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-first failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-first failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-first failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-first failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-second:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: pord
  name: nginx-pod-second
  namespace: teama
spec:
  containers:
  - image: nginx
    name: second-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-second failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-second failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-second failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-second failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-second failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-second failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/kplabs-service:
apiVersion: v1
kind: Service
metadata:
  name: kplabs-service
  namespace: default
spec:
  ports:
  - port: 8089
    targetPort: 80
  selector:
    run: nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/kplabs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: application-failure1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/teama:
apiVersion: v1
kind: Namespace
metadata:
  name: teama
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: teama
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: teama
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: teama
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: teama
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-failure1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-first:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: prod
  name: nginx-pod-first
  namespace: teama
spec:
  containers:
  - image: nginx
    name: first-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-first failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-first failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-first failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-first failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-first failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-first failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-second:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: pord
  name: nginx-pod-second
  namespace: teama
spec:
  containers:
  - image: nginx
    name: second-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-second failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-second failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-second failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-second failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-second failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-second failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Service/promethium-service:
apiVersion: v1
kind: Service
metadata:
  name: promethium-service
  namespace: teama
spec:
  ports:
  - port: 8089
    targetPort: 80
  selector:
    run: nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource teama/Service/promethium-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: application-failure2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/teama:
apiVersion: v1
kind: Namespace
metadata:
  name: teama
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: teama
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: teama
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: teama
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: teama
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-failure2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-first:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: prod
    run: nginx
  name: nginx-pod-first
  namespace: teama
spec:
  containers:
  - image: nginx
    name: first-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-first failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-first failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-first failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-first failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-first failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-first failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-second:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: pord
    run: nginx
  name: nginx-pod-second
  namespace: teama
spec:
  containers:
  - image: nginx
    name: second-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-second failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-second failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-second failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-second failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-second failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-second failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/kplabs-service:
apiVersion: v1
kind: Service
metadata:
  name: kplabs-service
  namespace: default
spec:
  ports:
  - port: 8089
    targetPort: 80
  selector:
    run: nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/kplabs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: application-failure3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/teama:
apiVersion: v1
kind: Namespace
metadata:
  name: teama
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: teama
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: teama
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: teama
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: teama
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-failure3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-first:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: prod
  name: nginx-pod-first
  namespace: teama
spec:
  containers:
  - image: nginx
    name: first-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-first failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-first failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-first failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-first failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-first failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-first failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure3_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-second:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: pord
  name: nginx-pod-second
  namespace: teama
spec:
  containers:
  - image: nginx
    name: second-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-second failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-second failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-second failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-second failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-second failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-second failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure-solution.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Service/kplabs-service:
apiVersion: v1
kind: Service
metadata:
  name: kplabs-service
  namespace: teama
spec:
  ports:
  - port: 8089
    targetPort: 80
  selector:
    run: nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource teama/Service/kplabs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: application-failure-solution_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/teama:
apiVersion: v1
kind: Namespace
metadata:
  name: teama
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: teama
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: teama
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: teama
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: teama
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-failure-solution_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-first:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: prod
    run: nginx
  name: nginx-pod-first
  namespace: teama
spec:
  containers:
  - image: nginx
    name: first-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-first failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-first failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-first failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-first failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-first failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-first failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure-solution_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-second:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: pord
    run: nginx
  name: nginx-pod-second
  namespace: teama
spec:
  containers:
  - image: nginx
    name: second-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-second failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-second failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-second failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-second failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-second failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-second failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure-solution1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Service/kplabs-service:
apiVersion: v1
kind: Service
metadata:
  name: kplabs-service
  namespace: teama
spec:
  ports:
  - port: 8089
    targetPort: 80
  selector:
    run: nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource teama/Service/kplabs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: application-failure-solution1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/teama:
apiVersion: v1
kind: Namespace
metadata:
  name: teama
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: teama
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: teama
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: teama
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: teama
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-failure-solution1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-first:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: prod
    run: nginx
  name: nginx-pod-first
  namespace: teama
spec:
  containers:
  - image: nginx
    name: first-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-first failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-first failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-first failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-first failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-first failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-first failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure-solution1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-second:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: pord
    run: nginx
  name: nginx-pod-second
  namespace: teama
spec:
  containers:
  - image: nginx
    name: second-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-second failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-second failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-second failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-second failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-second failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-second failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure-solution2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Service/kplabs-service:
apiVersion: v1
kind: Service
metadata:
  name: kplabs-service
  namespace: teama
spec:
  ports:
  - port: 8089
    targetPort: 80
  selector:
    run: nginx
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource teama/Service/kplabs-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: application-failure-solution2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/teama:
apiVersion: v1
kind: Namespace
metadata:
  name: teama
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: teama
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/teama:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: teama
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: teama
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/teama:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: teama
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-failure-solution2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-first:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: prod
    run: nginx
  name: nginx-pod-first
  namespace: teama
spec:
  containers:
  - image: nginx
    name: first-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-first
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-first failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-first failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-first failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-first failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-first failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-first failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-first failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-failure-solution2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to teama/Pod/nginx-pod-second:
apiVersion: v1
kind: Pod
metadata:
  labels:
    env: pord
    run: nginx
  name: nginx-pod-second
  namespace: teama
spec:
  containers:
  - image: nginx
    name: second-pod
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second

skipped mutate policy add-safe-to-evict -> resource teama/Pod/nginx-pod-second
policy disallow-latest-tag -> resource teama/Pod/nginx-pod-second failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource teama/Pod/nginx-pod-second failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource teama/Pod/nginx-pod-second failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource teama/Pod/nginx-pod-second failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource teama/Pod/nginx-pod-second failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource teama/Pod/nginx-pod-second failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource teama/Pod/nginx-pod-second failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: application-lifecycle-mgmt.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/ubuntu-sleeper-2:
apiVersion: v1
kind: Pod
metadata:
  name: ubuntu-sleeper-2
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "5000"
    image: ubuntu
    name: ubuntu
    resources:
      limits:
        cpu: 500m
        memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/ubuntu-sleeper-2

skipped mutate policy add-safe-to-evict -> resource default/Pod/ubuntu-sleeper-2
policy disallow-default-namespace -> resource default/Pod/ubuntu-sleeper-2 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/ubuntu-sleeper-2 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/ubuntu-sleeper-2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/ubuntu-sleeper-2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/ubuntu-sleeper-2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/ubuntu-sleeper-2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/ubuntu-sleeper-2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/ubuntu-sleeper-2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/ubuntu-sleeper-2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application-lifecycle-mgmt_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp-green:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: webapp-green
  name: webapp-green
  namespace: default
spec:
  containers:
  - args:
    - --color
    - pink
    command:
    - python
    - app.py
    image: kodekloud/webapp-color
    name: simple-webapp
    resources:
      limits:
        cpu: 500m
        memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-green

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp-green
policy disallow-default-namespace -> resource default/Pod/webapp-green failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/webapp-green failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/webapp-green failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp-green failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp-green failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/webapp-green failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/webapp-green failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp-green failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp-green failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application-lifecycle-mgmt_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/db-secret:
apiVersion: v1
data:
  DB_Host: c3FsMDEK
  DB_Password: cGFzc3dvcmQxMjMK
  DB_User: cm9vdAo=
kind: Secret
metadata:
  name: db-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-lifecycle-mgmt_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/yellow:
apiVersion: v1
kind: Pod
metadata:
  name: yellow
  namespace: default
spec:
  containers:
  - image: busybox
    name: lemon
    resources:
      limits:
        cpu: 500m
        memory: 100Mi
  - image: redis
    name: gold
    resources:
      limits:
        cpu: 500m
        memory: 100Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/yellow

skipped mutate policy add-safe-to-evict -> resource default/Pod/yellow
policy disallow-default-namespace -> resource default/Pod/yellow failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/yellow failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/yellow failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/yellow failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/yellow failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/yellow failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/yellow failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/yellow failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/yellow failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: application-lifecycle-mgmt_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/purple:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2024-04-07T14:58:20Z"
  name: purple
  namespace: default
  resourceVersion: "883"
  uid: a496d635-f7ad-4ae8-893e-6bbc9393366b
spec:
  containers:
  - command:
    - sh
    - -c
    - echo The app is running! && sleep 3600
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    name: purple-container
    resources:
      limits:
        cpu: 500m
        memory: 100Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-s2zc6
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
  - command:
    - sh
    - -c
    - sleep 600
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    name: warm-up-1
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-s2zc6
      readOnly: true
  - command:
    - sh
    - -c
    - sleep 1200
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    name: warm-up-2
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-s2zc6
      readOnly: true
  nodeName: controlplane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-s2zc6
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/purple

skipped mutate policy add-safe-to-evict -> resource default/Pod/purple
policy disallow-default-namespace -> resource default/Pod/purple failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/purple failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/purple failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/purple failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/purple failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/purple failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/purple failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/purple failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: Application-pods-services.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/frontend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/frontend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/frontend
policy disallow-default-namespace -> resource default/Deployment/frontend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/frontend failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/frontend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/frontend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/frontend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/frontend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/frontend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/frontend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/frontend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: Application-pods-services_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/frontend-service:
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: frontend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: Application-pods-services_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/backend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/backend
policy disallow-default-namespace -> resource default/Deployment/backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/backend failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: Application-pods-services_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/backend-service:
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: backend

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: Application-pods-services_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mysql:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: rootpassword
        - name: MYSQL_DATABASE
          value: mydatabase
        - name: MYSQL_USER
          value: myuser
        - name: MYSQL_PASSWORD
          value: mypassword
        image: mysql:8.0
        name: mysql
        ports:
        - containerPort: 3306

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mysql

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mysql
policy disallow-default-namespace -> resource default/Deployment/mysql failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/mysql failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mysql failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mysql failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mysql failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mysql failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mysql failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mysql failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: Application-pods-services_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mysql:
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: default
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: applications7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/applications:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    shared-gateway-access: "true"
  name: applications
  namespace: default
spec: {}

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/applications:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: applications
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/applications:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: applications
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/applications:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: applications
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/applications:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: applications
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: application-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/kube-php:
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: alb
  labels:
    app: kube-php
  name: kube-php
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: kube-php
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apply4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/mynginx-apply:
apiVersion: v1
kind: Pod
metadata:
  labels:
    company: talent
    devops: "18"
  name: mynginx-apply
  namespace: default
spec:
  containers:
  - image: nginx:1.19.1
    name: nginx
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/mynginx-apply

skipped mutate policy add-safe-to-evict -> resource default/Pod/mynginx-apply
policy disallow-default-namespace -> resource default/Pod/mynginx-apply failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/mynginx-apply failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/mynginx-apply failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/mynginx-apply failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/mynginx-apply failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/mynginx-apply failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/mynginx-apply failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/mynginx-apply failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: appointment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/mydocctor-appointment-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydocctor-appointment-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mydocctor-appointment-service
  template:
    metadata:
      labels:
        app: mydocctor-appointment-service
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: appointment-service-config
        image: arjun164/mydocctor-appointment:latest
        name: mydocctor-appointment-service
        ports:
        - containerPort: 4005

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydocctor-appointment-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/mydocctor-appointment-deployment
policy disallow-default-namespace -> resource default/Deployment/mydocctor-appointment-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/mydocctor-appointment-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/mydocctor-appointment-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/mydocctor-appointment-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/mydocctor-appointment-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/mydocctor-appointment-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/mydocctor-appointment-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/mydocctor-appointment-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/mydocctor-appointment-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appointment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mydocctor-appointment-service:
apiVersion: v1
kind: Service
metadata:
  name: mydocctor-appointment-service
  namespace: default
spec:
  ports:
  - port: 4005
    protocol: TCP
    targetPort: 4005
  selector:
    app: mydocctor-appointment-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apponedep.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: lovelearnlinux/webserver:v1
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          name: webroot
      volumes:
      - name: webroot
        persistentVolumeClaim:
          claimName: appone-nfs-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: appone-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/appone-nfs-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: appone-nfs-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apppath.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/student-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    name: student-ingress
  name: student-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - backend:
          service:
            name: student-svc
            port:
              number: 8080
        path: /getStudents
        pathType: Prefix
      - backend:
          service:
            name: mysv-lb
            port:
              number: 8081
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/student-ingress failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: apppod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to application-ns/Pod/my-application:
apiVersion: v1
kind: Pod
metadata:
  name: my-application
  namespace: application-ns
spec:
  containers:
  - env:
    - name: DATABASE_HOST
      value: external-db-service
    - name: DATABASE_PORT
      value: "5432"
    - name: DATABASE_USER
      value: postgres
    - name: DATABASE_PASSWORD
      value: example
    - name: DATABASE_NAME
      value: postgres
    image: ttl.sh/saiyamdemo:1h
    name: app

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource application-ns/Pod/my-application

skipped mutate policy add-safe-to-evict -> resource application-ns/Pod/my-application
policy drop-all-capabilities -> resource application-ns/Pod/my-application failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource application-ns/Pod/my-application failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource application-ns/Pod/my-application failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource application-ns/Pod/my-application failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource application-ns/Pod/my-application failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource application-ns/Pod/my-application failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource application-ns/Pod/my-application failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: appprotect-dos-arb.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to nginx-ingress/Deployment/appprotect-dos-arb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appprotect-dos-arb
  namespace: nginx-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: appprotect-dos-arb
  template:
    metadata:
      labels:
        app: appprotect-dos-arb
    spec:
      containers:
      - image: docker-registry.nginx.com/nap-dos/app_protect_dos_arb:1.1.1
        imagePullPolicy: IfNotPresent
        name: appprotect-dos-arb
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsUser: 1001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource nginx-ingress/Deployment/appprotect-dos-arb

skipped mutate policy add-safe-to-evict -> resource nginx-ingress/Deployment/appprotect-dos-arb
policy drop-cap-net-raw -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: appprotect-dos-arb1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to nginx-ingress/Deployment/appprotect-dos-arb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appprotect-dos-arb
  namespace: nginx-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: appprotect-dos-arb
  template:
    metadata:
      labels:
        app: appprotect-dos-arb
    spec:
      containers:
      - image: docker-registry.nginx.com/nap-dos/app_protect_dos_arb:1.1.1
        imagePullPolicy: IfNotPresent
        name: appprotect-dos-arb
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsUser: 1001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource nginx-ingress/Deployment/appprotect-dos-arb

skipped mutate policy add-safe-to-evict -> resource nginx-ingress/Deployment/appprotect-dos-arb
policy drop-cap-net-raw -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: appprotect-dos-arb2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/appprotect-dos-arb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appprotect-dos-arb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: appprotect-dos-arb
  template:
    metadata:
      labels:
        app: appprotect-dos-arb
    spec:
      containers:
      - image: docker-registry.nginx.com/nap-dos/app_protect_dos_arb:1.1.1
        imagePullPolicy: IfNotPresent
        name: appprotect-dos-arb
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsUser: 1001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/appprotect-dos-arb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/appprotect-dos-arb
policy disallow-default-namespace -> resource default/Deployment/appprotect-dos-arb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/appprotect-dos-arb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/appprotect-dos-arb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: appprotect-dos-arb3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to nginx-ingress/Deployment/appprotect-dos-arb:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appprotect-dos-arb
  namespace: nginx-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: appprotect-dos-arb
  template:
    metadata:
      labels:
        app: appprotect-dos-arb
    spec:
      containers:
      - image: docker-registry.nginx.com/nap-dos/app_protect_dos_arb:1.1.1
        imagePullPolicy: IfNotPresent
        name: appprotect-dos-arb
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsUser: 1001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource nginx-ingress/Deployment/appprotect-dos-arb

skipped mutate policy add-safe-to-evict -> resource nginx-ingress/Deployment/appprotect-dos-arb
policy drop-cap-net-raw -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource nginx-ingress/Deployment/appprotect-dos-arb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: appprotect-dos-arb-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to nginx-ingress/Service/svc-appprotect-dos-arb:
apiVersion: v1
kind: Service
metadata:
  name: svc-appprotect-dos-arb
  namespace: nginx-ingress
spec:
  clusterIP: None
  ports:
  - name: arb
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: appprotect-dos-arb

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appprotect-dos-arb-svc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to nginx-ingress/Service/svc-appprotect-dos-arb:
apiVersion: v1
kind: Service
metadata:
  name: svc-appprotect-dos-arb
  namespace: nginx-ingress
spec:
  clusterIP: None
  ports:
  - name: arb
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: appprotect-dos-arb

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appprotect-dos-arb-svc2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/svc-appprotect-dos-arb:
apiVersion: v1
kind: Service
metadata:
  name: svc-appprotect-dos-arb
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: arb
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: appprotect-dos-arb

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appprotect-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/appprotect-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    appprotect.f5.com/app-protect-enable: "True"
    appprotect.f5.com/app-protect-policy: test-namespace/example-policy
    appprotect.f5.com/app-protect-security-log: test-namespace/logconf
    appprotect.f5.com/app-protect-security-log-destination: syslog:server=<IP>:<PORT>
    appprotect.f5.com/app-protect-security-log-enable: "True"
  name: appprotect-ingress
  namespace: default
spec:
  rules:
  - host: appprotect.example.com
    http:
      paths:
      - backend:
          service:
            name: backend1-svc
            port:
              number: 80
        path: /backend1/v1
        pathType: Prefix
      - backend:
          service:
            name: backend2-svc
            port:
              number: 80
        path: /backend2/v2
        pathType: Prefix
  tls:
  - hosts:
    - appprotect.example.com
    secretName: appprotect-secret

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appprotect-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/appprotect-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    appprotect.f5.com/app-protect-enable: "True"
    appprotect.f5.com/app-protect-policy: test-namespace/example-policy
    appprotect.f5.com/app-protect-security-log: test-namespace/logconf
    appprotect.f5.com/app-protect-security-log-destination: syslog:server=<IP>:<PORT>
    appprotect.f5.com/app-protect-security-log-enable: "True"
  name: appprotect-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: appprotect.example.com
    http:
      paths:
      - backend:
          service:
            name: backend1-svc
            port:
              number: 80
        path: /backend1
        pathType: Prefix
      - backend:
          service:
            name: backend2-svc
            port:
              number: 80
        path: /backend2
        pathType: Prefix
  tls:
  - hosts:
    - appprotect.example.com
    secretName: appprotect-secret

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appprotect-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/appprotect-secret:
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJakNDQWdvQ0NRQ0pqcjBWaG5mTFpEQU5CZ2txaGtpRzl3MEJBUXNGQURCVE1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0F3Q1EwRXhGakFVQmdOVkJBY01EVk5oYmlCR2NtRnVZMmx6WTI4eEh6QWRCZ05WQkFNTQpGbUZ3Y0hCeWIzUmxZM1F1WlhoaGJYQnNaUzVqYjIwd0hoY05NakV3TmpBeU1ERTFOVEkxV2hjTk16RXdOVE14Ck1ERTFOVEkxV2pCVE1Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEZqQVVCZ05WQkFjTURWTmgKYmlCR2NtRnVZMmx6WTI4eEh6QWRCZ05WQkFNTUZtRndjSEJ5YjNSbFkzUXVaWGhoYlhCc1pTNWpiMjB3Z2dFaQpNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURsc2dHc3pXcDNwRllyY0NNZlpTSDBsYnZ5Cnk5MWJJYjhLQ3JhUG5vUTBGdjZneFNmWGtlTVI3dHRHRVI2TTZJdGVKR3hsQTNDS3pESUFPWEtjMHFvTER0Z2YKSUdEQmdWa3dIbGZSa1pld1dIdW51MVU3UmxqTVpvMGVsQUQ0YzVtVDVIV1EvRDF5YmJIR2dCQ2JLR0tZQlM1LwpISXdlb05zZVJpREY3SVpVRUxyak8rdUVHMHA0TnJublAvN1V4aGwrZEd1VXN2ZkdiZERzTnBrYUpzcDlyRDZMCjNrRVJvdkpveDJaV0Q2alkxdisyeGpqTVlCaTFlV2xTQkFHSWZzYVgyUmhXRFM0V0lSS2xBY2txSmgxMkJPTGkKMU12SnJtSEdRVXVCK3lRakc0KzdUdkhPQ1U3OVZHYkRwdnRBd280d2dMV1RNWmRzNG1UNTJoVGFXUXlGQWdNQgpBQUV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQU1EUmlxSzJtbGtLSTdKbFVZRjFHRzNveForZmpaUkdPU2s5CkJnWTNieXBUREQwU2QwVHJDUlZPN1ZXS3JhaU5uK2tDQkgwTEFsRHo0QWZ1QTJTRzhVZzJSVVpXcjhwSVBxRGkKdXhmZEl2SjFaTW9oRjlzWnhPL3d1K0tlbVg5M0hzTHlyMlNwQkx5YllYYlRKOFQ4WVp4L2FEZWpBOG44N2g5UAoxNUV4TTV0NFlZZ1h6NkdSRHJvRDVWbkVRbGRna29YbVk1WlQyT3hlb0JWM0FDcVNrOFZIdCswd05TTnd1dEVZCnRzSVQzY25VK0lpWFR3MHNpWTdaMnpscEFyYXYybjFLT2JkZjhkU1BvdFNGbjhFa045OEdoT1RWNG84QitudUQKMTJlb3pOM2VtMm5IakdWbzZiaDI0RnhNa0NGZ1RoVUhtU0RwaGFETVdjQkFmb015RDYwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRGxzZ0dzeldwM3BGWXIKY0NNZlpTSDBsYnZ5eTkxYkliOEtDcmFQbm9RMEZ2Nmd4U2ZYa2VNUjd0dEdFUjZNNkl0ZUpHeGxBM0NLekRJQQpPWEtjMHFvTER0Z2ZJR0RCZ1Zrd0hsZlJrWmV3V0h1bnUxVTdSbGpNWm8wZWxBRDRjNW1UNUhXUS9EMXliYkhHCmdCQ2JLR0tZQlM1L0hJd2VvTnNlUmlERjdJWlVFTHJqTyt1RUcwcDROcm5uUC83VXhobCtkR3VVc3ZmR2JkRHMKTnBrYUpzcDlyRDZMM2tFUm92Sm94MlpXRDZqWTF2KzJ4ampNWUJpMWVXbFNCQUdJZnNhWDJSaFdEUzRXSVJLbApBY2txSmgxMkJPTGkxTXZKcm1IR1FVdUIreVFqRzQrN1R2SE9DVTc5VkdiRHB2dEF3bzR3Z0xXVE1aZHM0bVQ1CjJoVGFXUXlGQWdNQkFBRUNnZ0VBUE1VaXNsQkttY3JOellKR21Kak9LZ0t2amlZbnMyT3pRbm5oSVJCRVUrKzkKZ0ZXSkcveUtBZ1dhMStmUm1HQXg5ejlWdWtmMXI1TWtxM0NIaFR3ckp1L1BlRFM5eEpSdlAwN1gxeWRZNVp3VApZeVlwLzV1MkJLWWhNZlRnYU50VXg0OExGOGZVamdDOXB4SGMwdUFWYmJqNU8wSVhSRWMwa2NibUJ0ZDBGcXN5Ckh4NjUwYldiSS9WUDVmWWE3ejh2OW5WcmZFMlFkaWczWnVvZUcrZTNWOHY2dXljVmFzZ1pPb2Z1OC9XQXZwSlEKUWdXQW1LNVJqR2sxZkdWMHF5NGY0S0RnK1R4cUV0QWN6bnZMN1V4UmNrT3NiQlpYUWtEM1BOUG43OW1aT016RApxbnhWcTFoOURRVDY5a1pVd3pkUEpZLytRaWc4VDNwUmMwQ0ZoQURNZ1FLQmdRRDN3YkZiRHROQ1VNc0IxUTRvCktuYTNCYzdLT0tiUHVuN0dxbDhFZWhXUllyZm1WdXhYWTNSSTZLMXhFZlMzcjNiRmlCYlZFWi9ybFFrM2kzK3UKaHVtOXRCRHFoZHVpZGEyVU5LRnZ2ZXR3OUdSMkJaNFVXTVpSUDFucCtJY0hqQVRaYXIvRG5hZk9tazhQSzZ6bAo0V3MvdXlONzFXSCthOUVPUWpNMURuVzJwUUtCZ1FEdFZubFNBMWFUdHF4UXZ1aWJ6eVUrYzR3eEswQVo0SHlqCklEc01TbGtFeVpWRXplKzc2YWtTMlpKQVZIRlZPOURXZ0wvTWFBcXdWNHJubnFPYjZ3NERianM2cEU3Wkl2TnkKcGU3R2cvdER0dnZETWZNODlpYmxCUElIbEwyTWU5VjJIWWlVRlRaSHZqaGFlOVRrTXVuMHVPakVQbjE4WlIzbgpnT1FlMFdQNFlRS0JnQWpUeHR6bXIxSTZqTEVaQlRNYktEV25LRkgrS0x0WCtySmJXWjFRT0RxQTJPcUZDRkNvCnczamhpV1J3N2xZcEUwTkFjUWZRWS9GQjB4MCtoQ01VdlhrNzFDcDI4SGRlVi92aTBDbXFDNXh2cUxDbnpKVVAKQUtuZVp2YTJHeUdDdEoyR2R5U2lGbHQvRmZnRloxaWRhblBQMkJqT1pucHBIdjZ5RHg4QnorSGRBb0dBTkFPKwpwUDI4VExVOVFKa0dhNWRUWjBOMWx4VU9nRjFWazM2dDBqeTlFN0tHTjBVVzVFMEtVK3BCQmo0N2RGMmVvRlFwCk5NZ2NoNWM0QnhrYWJFSndtTW5neXpKVllYc3FkWmJ1SksycU5LWDJ1VW5LTURNV1JSejNXamY3N3J6NUJHRG0Kbk9XbE5zWDJuY1lEMjF0Wk1Od1JqMmpPb2FPYmtUQUxUc0cvTWlFQ2dZRUF5aGFEVFh5RnNicEF3bU5yejRuawpoVjVDREVSdnp6MW5NRHp6bTdselhEQkpKZit3Q1VmUnhmY2pSRlV2RWV1cmJ5d2RncForeHBHSkhheE1Pd1FlCk5Bd2RvSjFtbDhHVGozRjYrTUpnZU5CdTgza09abXpXSzQ2MW54NGJhUmplVlBMWTN2WFgvZmVMNi92UnNjQmMKWnpaWkthTVI1REhtU3cwZ3MwSFN1VWc9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: appprotect-secret
  namespace: default
type: kubernetes.io/tls

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/apps:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    admission-webhook: enabled
  name: apps
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/apps:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: apps
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/apps:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: apps
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/apps:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: apps
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/apps:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: apps
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision.after_roundtrip.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
revision: 1089963290653861247

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision.after_roundtrip1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
revision: 1089963290653861247

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
revision: 1089963290653861247

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
revision: 1089963290653861247

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ControllerRevision/2:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
revision: -7716837448637516924

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision55.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps.v1.ControllerRevision9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ControllerRevision/nameValue:
apiVersion: apps/v1
data:
  apiVersion: example.com/v1
  kind: CustomType
  spec:
    replicas: 1
  status:
    available: 1
kind: ControllerRevision
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
revision: 3

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps_v1_deployment_kubesync-controller-manager.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubesync-system/Deployment/kubesync-controller-manager:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kubesync
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: kubesync
    control-plane: controller-manager
  name: kubesync-controller-manager
  namespace: kubesync-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kubesync-controller-manager
      terminationGracePeriodSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kubesync-system/Deployment/kubesync-controller-manager

skipped mutate policy add-safe-to-evict -> resource kubesync-system/Deployment/kubesync-controller-manager
policy disallow-latest-tag -> resource kubesync-system/Deployment/kubesync-controller-manager failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-cap-net-raw -> resource kubesync-system/Deployment/kubesync-controller-manager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kubesync-system/Deployment/kubesync-controller-manager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource kubesync-system/Deployment/kubesync-controller-manager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kubesync-system/Deployment/kubesync-controller-manager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: apps_v1_deployment_kubesync-controller-manager1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kubesync-system/Deployment/kubesync-controller-manager:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kubesync
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: kubesync
    control-plane: controller-manager
  name: kubesync-controller-manager
  namespace: kubesync-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kubesync-controller-manager
      terminationGracePeriodSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kubesync-system/Deployment/kubesync-controller-manager

skipped mutate policy add-safe-to-evict -> resource kubesync-system/Deployment/kubesync-controller-manager
policy disallow-latest-tag -> resource kubesync-system/Deployment/kubesync-controller-manager failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-cap-net-raw -> resource kubesync-system/Deployment/kubesync-controller-manager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kubesync-system/Deployment/kubesync-controller-manager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource kubesync-system/Deployment/kubesync-controller-manager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kubesync-system/Deployment/kubesync-controller-manager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: apps_v1_deployment_neoncode.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/neoncode:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.quarkus.io/vcs-uri: ssh://fluxpres@localhost:30022/home/fluxpres/git/neoncode.git
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: quarkus
    app.kubernetes.io/name: neoncode
  name: neoncode
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: neoncode
  template:
    metadata:
      annotations:
        app.quarkus.io/vcs-uri: ssh://fluxpres@localhost:30022/home/fluxpres/git/neoncode.git
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/managed-by: quarkus
        app.kubernetes.io/name: neoncode
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: localhost:5001/scienta/neon:1.0.0-SNAPSHOT
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /q/health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: neoncode
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /q/health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 3
          httpGet:
            path: /q/health/started
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/neoncode

skipped mutate policy add-safe-to-evict -> resource default/Deployment/neoncode
policy disallow-default-namespace -> resource default/Deployment/neoncode failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/neoncode failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/neoncode failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/neoncode failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/neoncode failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/neoncode failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: apps_v1_deployment_sshd.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/sshd:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sshd
  namespace: default
spec:
  selector:
    matchLabels:
      app: sshd
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: sshd
    spec:
      containers:
      - image: localhost:5001/flux_sshd:v1
        name: sshd
        ports:
        - containerPort: 2220
        volumeMounts:
        - mountPath: /home/fluxpres/git
          name: sshd-pvc
      volumes:
      - name: sshd-pvc
        persistentVolumeClaim:
          claimName: sshd-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/sshd

skipped mutate policy add-safe-to-evict -> resource default/Deployment/sshd
policy disallow-default-namespace -> resource default/Deployment/sshd failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/sshd failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/sshd failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/sshd failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/sshd failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/sshd failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/sshd failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/sshd failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apps210.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/hello-app2:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-app2
  namespace: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello2
  template:
    metadata:
      labels:
        app: hello2
    spec:
      containers:
      - image: gcr.io/google-samples/hello-app:2.0
        name: hello

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/hello-app2

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/hello-app2
policy drop-all-capabilities -> resource dev/Deployment/hello-app2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/hello-app2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/hello-app2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Deployment/hello-app2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dev/Deployment/hello-app2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/hello-app2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/hello-app2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: apps210_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Service/hello-service2:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hello2
  name: hello-service2
  namespace: dev
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: hello2
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps210_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Ingress/test-ingress2:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-ingress2
  namespace: dev
spec:
  ingressClassName: nginx
  rules:
  - host: neuralnet.co.in
    http:
      paths:
      - backend:
          service:
            name: hello-service2
            port:
              number: 80
        path: /app2
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/nginx-custom-default-backend:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: nginx-custom-default-backend
    app.kubernetes.io/part-of: ingress-nginx
  name: nginx-custom-default-backend
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app.kubernetes.io/name: nginx-custom-default-backend
    app.kubernetes.io/part-of: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps28_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-custom-default-backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: nginx-custom-default-backend
    app.kubernetes.io/part-of: ingress-nginx
  name: nginx-custom-default-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-custom-default-backend
      app.kubernetes.io/part-of: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx-custom-default-backend
        app.kubernetes.io/part-of: ingress-nginx
    spec:
      containers:
      - env:
        - name: DEBUG
          value: "false"
        image: lerndevops/samples:default-page
        name: nginx-custom-default-backend
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-custom-default-backend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-custom-default-backend
policy disallow-default-namespace -> resource default/Deployment/nginx-custom-default-backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-custom-default-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-custom-default-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/nginx-custom-default-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-custom-default-backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-custom-default-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-custom-default-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: apps28_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/pyapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pyapp
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pyapp
  template:
    metadata:
      labels:
        app: pyapp
    spec:
      containers:
      - image: lerndevops/samples:pyapp
        name: pyapp
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/pyapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/pyapp
policy disallow-default-namespace -> resource default/Deployment/pyapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/pyapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/pyapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/pyapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/pyapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/pyapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/pyapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/pyapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apps28_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/pyapp-svc:
apiVersion: v1
kind: Service
metadata:
  name: pyapp-svc
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: pyapp

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps28_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/unapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unapp
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: unapp
  template:
    metadata:
      labels:
        app: unapp
    spec:
      containers:
      - image: lerndevops/samples:unapp
        name: unapp
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/unapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/unapp
policy disallow-default-namespace -> resource default/Deployment/unapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/unapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/unapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/unapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/unapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/unapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/unapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/unapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apps28_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/unapp-svc:
apiVersion: v1
kind: Service
metadata:
  name: unapp-svc
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: unapp

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps28_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/petclinic:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: petclinic
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: petclinic
  template:
    metadata:
      labels:
        app: petclinic
    spec:
      containers:
      - image: lerndevops/samples:petclinic-v1
        name: petclinic
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/petclinic

skipped mutate policy add-safe-to-evict -> resource default/Deployment/petclinic
policy disallow-default-namespace -> resource default/Deployment/petclinic failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/petclinic failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/petclinic failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/petclinic failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/petclinic failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/petclinic failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/petclinic failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/petclinic failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apps28_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/petclinic-svc:
apiVersion: v1
kind: Service
metadata:
  name: petclinic-svc
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: petclinic

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps310.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/hello-app3:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-app3
  namespace: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello3
  template:
    metadata:
      labels:
        app: hello3
    spec:
      containers:
      - image: httpd
        name: hello

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/hello-app3

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/hello-app3
policy disallow-latest-tag -> resource dev/Deployment/hello-app3 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource dev/Deployment/hello-app3 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/hello-app3 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/hello-app3 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource dev/Deployment/hello-app3 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource dev/Deployment/hello-app3 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/hello-app3 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/hello-app3 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apps310_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Service/hello-service3:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hello3
  name: hello-service3
  namespace: dev
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: hello3
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps310_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Ingress/test-ingress3:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-ingress3
  namespace: dev
spec:
  ingressClassName: nginx
  rules:
  - host: neuralnet.co.in
    http:
      paths:
      - backend:
          service:
            name: hello-service3
            port:
              number: 80
        path: /app3
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to lesson10/Deployment/server-v1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-v1
  namespace: lesson10
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
        version: v1
    spec:
      containers:
      - env:
        - name: SERVER_MESSAGE
          value: Hi! I am version 1!
        image: server:v1.10
        name: server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource lesson10/Deployment/server-v1

skipped mutate policy add-safe-to-evict -> resource lesson10/Deployment/server-v1
policy drop-all-capabilities -> resource lesson10/Deployment/server-v1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource lesson10/Deployment/server-v1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource lesson10/Deployment/server-v1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource lesson10/Deployment/server-v1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource lesson10/Deployment/server-v1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource lesson10/Deployment/server-v1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource lesson10/Deployment/server-v1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: apps38_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to lesson10/Deployment/server-v2:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-v2
  namespace: lesson10
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
        version: v2
    spec:
      containers:
      - env:
        - name: SERVER_MESSAGE
          value: Hi! I am version 2!
        image: server:v1.10
        name: server

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource lesson10/Deployment/server-v2

skipped mutate policy add-safe-to-evict -> resource lesson10/Deployment/server-v2
policy drop-all-capabilities -> resource lesson10/Deployment/server-v2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource lesson10/Deployment/server-v2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource lesson10/Deployment/server-v2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource lesson10/Deployment/server-v2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource lesson10/Deployment/server-v2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource lesson10/Deployment/server-v2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource lesson10/Deployment/server-v2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: apps38_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to lesson10/Service/server:
apiVersion: v1
kind: Service
metadata:
  name: server
  namespace: lesson10
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: server

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/staging:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    eventing.knative.dev/injection: enabled
  name: staging
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/staging:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: staging
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/staging:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: staging
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/staging:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: staging
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/staging:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: staging
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps42_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/prod:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    eventing.knative.dev/injection: enabled
  name: prod
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/prod:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: prod
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: prod
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/prod:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: prod
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tekton-pipelines/ConfigMap/feature-flags:
apiVersion: v1
data:
  await-sidecar-readiness: "true"
  custom-task-version: v1beta1
  disable-affinity-assistant: "false"
  disable-creds-init: "false"
  enable-api-fields: stable
  enable-provenance-in-status: "false"
  enable-tekton-oci-bundles: "false"
  enforce-nonfalsifiablity: none
  require-git-ssh-secret-known-hosts: "false"
  resource-verification-mode: skip
  running-in-environment-with-injected-sidecars: "true"
  send-cloudevents-for-runs: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: feature-flags
  namespace: tekton-pipelines

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps56_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/webapp-config:
apiVersion: v1
data: {}
kind: ConfigMap
metadata:
  name: webapp-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps56_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webapp
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  strategy: {}
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - image: nginx
        name: nginx
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/webapp failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apps56_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/super-secret:
apiVersion: v1
data:
  bla: Ymxh
kind: Secret
metadata:
  name: super-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps56_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Service/grafana:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 9.3.6
    helm.sh/chart: grafana-6.50.7
  name: grafana
  namespace: monitoring
spec:
  ports:
  - name: service
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps56_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webapp
  name: webapp
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  strategy: {}
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - image: nginx
        name: nginx
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/webapp
policy disallow-default-namespace -> resource default/Deployment/webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/webapp failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apps56_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to monitoring/Service/grafana:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 9.3.6
    helm.sh/chart: grafana-6.50.7
  name: grafana
  namespace: monitoring
spec:
  ports:
  - name: service
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps57.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/nginx-custom-default-backend:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: nginx-custom-default-backend
    app.kubernetes.io/part-of: ingress-nginx
  name: nginx-custom-default-backend
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app.kubernetes.io/name: nginx-custom-default-backend
    app.kubernetes.io/part-of: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps57_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-custom-default-backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: nginx-custom-default-backend
    app.kubernetes.io/part-of: ingress-nginx
  name: nginx-custom-default-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-custom-default-backend
      app.kubernetes.io/part-of: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx-custom-default-backend
        app.kubernetes.io/part-of: ingress-nginx
    spec:
      containers:
      - env:
        - name: DEBUG
          value: "false"
        image: lerndevops/samples:default-page
        name: nginx-custom-default-backend
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-custom-default-backend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-custom-default-backend
policy disallow-default-namespace -> resource default/Deployment/nginx-custom-default-backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/nginx-custom-default-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-custom-default-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/nginx-custom-default-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-custom-default-backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-custom-default-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-custom-default-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: apps57_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/pyapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pyapp
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pyapp
  template:
    metadata:
      labels:
        app: pyapp
    spec:
      containers:
      - image: lerndevops/samples:pyapp
        name: pyapp
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/pyapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/pyapp
policy disallow-default-namespace -> resource default/Deployment/pyapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/pyapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/pyapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/pyapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/pyapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/pyapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/pyapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/pyapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apps57_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/pyapp-svc:
apiVersion: v1
kind: Service
metadata:
  name: pyapp-svc
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: pyapp

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps57_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/unapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unapp
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: unapp
  template:
    metadata:
      labels:
        app: unapp
    spec:
      containers:
      - image: lerndevops/samples:unapp
        name: unapp
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/unapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/unapp
policy disallow-default-namespace -> resource default/Deployment/unapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/unapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/unapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/unapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/unapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/unapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/unapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/unapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apps57_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/unapp-svc:
apiVersion: v1
kind: Service
metadata:
  name: unapp-svc
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: unapp

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps57_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/petclinic:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: petclinic
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: petclinic
  template:
    metadata:
      labels:
        app: petclinic
    spec:
      containers:
      - image: lerndevops/samples:petclinic-v1
        name: petclinic
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/petclinic

skipped mutate policy add-safe-to-evict -> resource default/Deployment/petclinic
policy disallow-default-namespace -> resource default/Deployment/petclinic failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/petclinic failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/petclinic failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/petclinic failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/petclinic failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/petclinic failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/petclinic failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/petclinic failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: apps57_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/petclinic-svc:
apiVersion: v1
kind: Service
metadata:
  name: petclinic-svc
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: petclinic

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps74.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/apps:
apiVersion: v1
kind: Namespace
metadata:
  name: apps
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/apps:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: apps
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/apps:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: apps
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/apps:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: apps
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/apps:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: apps
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appsdeployer_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/appsdeployer-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: app-deploy-operator
    app.kubernetes.io/instance: appsdeployer-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: app-deploy-operator
  name: appsdeployer-editor-role
  namespace: default
rules:
- apiGroups:
  - apps.akoserwal
  resources:
  - appsdeployers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps.akoserwal
  resources:
  - appsdeployers/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appsdeployer_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/appsdeployer-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: app-deploy-operator
    app.kubernetes.io/instance: appsdeployer-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: app-deploy-operator
  name: appsdeployer-viewer-role
  namespace: default
rules:
- apiGroups:
  - apps.akoserwal
  resources:
  - appsdeployers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps.akoserwal
  resources:
  - appsdeployers/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appserver-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app-server-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-server-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-server
  template:
    metadata:
      labels:
        app: app-server
    spec:
      containers:
      - image: bharathviswam/app-server:latest
        imagePullPolicy: Never
        name: app-server
        ports:
        - containerPort: 5001
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-server-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-server-deployment
policy disallow-default-namespace -> resource default/Deployment/app-server-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/app-server-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/app-server-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app-server-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app-server-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/app-server-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app-server-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app-server-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: appserver-lb.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/app-server-loadbalancer:
apiVersion: v1
kind: Service
metadata:
  name: app-server-loadbalancer
  namespace: default
spec:
  ports:
  - port: 5001
    targetPort: 5001
  selector:
    app: app-server
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appservice.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/vproapp-service:
apiVersion: v1
kind: Service
metadata:
  name: vproapp-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: app-port
  selector:
    app: vproapp
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appservice_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/appservice-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kop
    app.kubernetes.io/instance: appservice-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kop
  name: appservice-editor-role
  namespace: default
rules:
- apiGroups:
  - kop.alainrk.com
  resources:
  - appservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kop.alainrk.com
  resources:
  - appservices/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appservice_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/appservice-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kop
    app.kubernetes.io/instance: appservice-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kop
  name: appservice-viewer-role
  namespace: default
rules:
- apiGroups:
  - kop.alainrk.com
  resources:
  - appservices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kop.alainrk.com
  resources:
  - appservices/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: apps-namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/devops-mahir-submission-2-ns:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: karsajobs
  name: devops-mahir-submission-2-ns
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/devops-mahir-submission-2-ns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: devops-mahir-submission-2-ns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/devops-mahir-submission-2-ns:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: devops-mahir-submission-2-ns
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/devops-mahir-submission-2-ns:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: devops-mahir-submission-2-ns
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/devops-mahir-submission-2-ns:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: devops-mahir-submission-2-ns
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appsrv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/appsrv:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appsrv
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: appsrv
  template:
    metadata:
      labels:
        app: appsrv
    spec:
      containers:
      - image: ghcr.io/balintb4/backend:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /q/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 120
          timeoutSeconds: 5
        name: appsrv
        ports:
        - containerPort: 8080
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 8080
        startupProbe:
          httpGet:
            path: /q/health
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/appsrv

skipped mutate policy add-safe-to-evict -> resource default/Deployment/appsrv
policy disallow-default-namespace -> resource default/Deployment/appsrv failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/appsrv failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/appsrv failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/appsrv failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/appsrv failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/appsrv failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/appsrv failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/appsrv failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: appsrv_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/appsrv:
apiVersion: v1
kind: Service
metadata:
  name: appsrv
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: appsrv

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appsrv1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/appsrv:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appsrv
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      component: appsrv
  template:
    metadata:
      labels:
        component: appsrv
    spec:
      containers:
      - image: ghcr.io/sis-hl/backend:latest
        imagePullPolicy: Always
        name: appsrv
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/appsrv

skipped mutate policy add-safe-to-evict -> resource default/Deployment/appsrv
policy disallow-default-namespace -> resource default/Deployment/appsrv failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/appsrv failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/appsrv failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/appsrv failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/appsrv failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/appsrv failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/appsrv failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/appsrv failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/appsrv failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsrv1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/appsrv:
apiVersion: v1
kind: Service
metadata:
  name: appsrv
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    component: appsrv

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appstack_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/appstack-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kube-builder
    app.kubernetes.io/instance: appstack-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kube-builder
  name: appstack-editor-role
  namespace: default
rules:
- apiGroups:
  - stack.kachi-bits
  resources:
  - appstacks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - stack.kachi-bits
  resources:
  - appstacks/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appstack_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/appstack-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kube-builder
    app.kubernetes.io/instance: appstack-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kube-builder
  name: appstack-viewer-role
  namespace: default
rules:
- apiGroups:
  - stack.kachi-bits
  resources:
  - appstacks
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - stack.kachi-bits
  resources:
  - appstacks/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: appsv1deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appsv1deployment-no-selectors9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/expose-test-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: expose-test-deployment
  name: expose-test-deployment
  namespace: default
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/expose-test-deployment
policy disallow-default-namespace -> resource default/Deployment/expose-test-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/expose-test-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: appwrite.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to appwrite/Service/appwrite:
apiVersion: v1
kind: Service
metadata:
  name: appwrite
  namespace: appwrite
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: appwrite-appwrite

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aprodbdep.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/vprodb:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vprodb
  name: vprodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vprodb
  template:
    metadata:
      labels:
        app: vprodb
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db-pass
              name: app-secret
        image: mdasif74/aprofiledb
        name: vprodb
        ports:
        - containerPort: 3306
          name: vprodb-port
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: vpro-db-data
      initContainers:
      - args:
        - rm
        - -rf
        - /var/lib/mysql/lost+found
        image: busybox:latest
        name: busybox
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: vpro-db-data
      nodeSelector:
        zone: us-east-1a
      volumes:
      - awsElasticBlockStore:
          fsType: ext4
          volumeID: vol-0c6825226f349a8d7
        name: vpro-db-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/vprodb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/vprodb
policy disallow-default-namespace -> resource default/Deployment/vprodb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/vprodb failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/
2 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/vprodb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/vprodb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/vprodb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/vprodb failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/vprodb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/vprodb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/vprodb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 5, fail: 10, warn: 0, error: 0, skip: 2 

##### FILE: aproxynate.io.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/aproxynate:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aproxynate
  namespace: default
spec:
  rules:
  - host: aproxynate.io
    http:
      paths:
      - backend:
          service:
            name: aproxynate
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - aproxynate.io
    secretName: aproxynate.io-secret

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aproxynate.io_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/aproxynate:
apiVersion: v1
kind: Service
metadata:
  name: aproxynate
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: aproxynate
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: aproxynate.io_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/aproxynate:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aproxynate
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aproxynate
  template:
    metadata:
      labels:
        app: aproxynate
    spec:
      containers:
      - args:
        - --record
        - FROM=TO
        command:
        - /main
        image: ghcr.io/delduked/go_proxy:latest
        imagePullPolicy: Always
        name: aproxynate
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "0.5"
            memory: 500Mi
          requests:
            cpu: "0.25"
            memory: 200Mi
      imagePullSecrets:
      - name: ghcr.io-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/aproxynate

skipped mutate policy add-safe-to-evict -> resource default/Deployment/aproxynate
policy disallow-default-namespace -> resource default/Deployment/aproxynate failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/aproxynate failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/aproxynate failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/aproxynate failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/aproxynate failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/aproxynate failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/aproxynate failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/aproxynate failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: arbitrator_ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/arbitrator:
apiVersion: v1
kind: Namespace
metadata:
  name: arbitrator
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/arbitrator:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: arbitrator
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/arbitrator:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: arbitrator
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/arbitrator:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: arbitrator
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/arbitrator:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: arbitrator
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: architecture-review1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/break1:
apiVersion: v1
kind: Pod
metadata:
  name: break1
  namespace: default
spec:
  containers:
  - image: nginx:1.11-apline
    name: mountain-region

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/break1

skipped mutate policy add-safe-to-evict -> resource default/Pod/break1
policy disallow-default-namespace -> resource default/Pod/break1 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/break1 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/break1 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/break1 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/break1 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/break1 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/break1 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/break1 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: arc-ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/arc:
apiVersion: v1
kind: Namespace
metadata:
  name: arc
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/arc:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: arc
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/arc:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: arc
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/arc:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: arc
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/arc:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: arc
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment-pidev-database:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: label-deployment-pidev-database
  name: deployment-pidev-database
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: label-deployment-pidev-database
  template:
    metadata:
      labels:
        app: label-deployment-pidev-database
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        image: mysql:latest
        name: pidev-database
        ports:
        - containerPort: 3306
          name: cport-3306
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-database

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-database
policy disallow-default-namespace -> resource default/Deployment/deployment-pidev-database failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidev_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-database-clusterip:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-database-clusterip
  name: service-pidev-database-clusterip
  namespace: default
spec:
  ports:
  - name: port-3306
    port: 3306
    targetPort: 3306
  selector:
    app: label-deployment-pidev-database

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment-pidev-backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: label-deployment-pidev-backend
  name: deployment-pidev-backend
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: label-deployment-pidev-backend
  template:
    metadata:
      labels:
        app: label-deployment-pidev-backend
    spec:
      containers:
      - image: mdjdocker/arctic4_pidev_backend:latest
        name: pidev-backend
        ports:
        - containerPort: 9000
          name: cport-9000
        - containerPort: 2424
          name: cport-2424
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-backend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-backend
policy disallow-default-namespace -> resource default/Deployment/deployment-pidev-backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidev_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-backend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-backend-nodeport
  name: service-pidev-backend-nodeport
  namespace: default
spec:
  ports:
  - name: port-9000
    nodePort: 30001
    port: 9000
    targetPort: 9000
  - name: port-2424
    nodePort: 30003
    port: 2424
    targetPort: 2424
  selector:
    app: label-deployment-pidev-backend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-backend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment-pidev-frontend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: label-deployment-pidev-frontend
  name: deployment-pidev-frontend
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: label-deployment-pidev-frontend
  template:
    metadata:
      labels:
        app: label-deployment-pidev-frontend
    spec:
      containers:
      - image: mdjdocker/arctic4_pidev_frontend:latest
        name: pidev-frontend
        ports:
        - containerPort: 80
          name: cport-80
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-frontend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-frontend
policy disallow-default-namespace -> resource default/Deployment/deployment-pidev-frontend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidev_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-frontend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-frontend-nodeport
  name: service-pidev-frontend-nodeport
  namespace: default
spec:
  ports:
  - name: port-80
    nodePort: 30002
    port: 80
    targetPort: 80
  selector:
    app: label-deployment-pidev-frontend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-frontend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_back_db_dep_ser.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment-pidev-backend-database:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: label-deployment-pidev-backend-database
  name: deployment-pidev-backend-database
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: label-deployment-pidev-backend-database
  template:
    metadata:
      labels:
        app: label-deployment-pidev-backend-database
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        image: mysql:latest
        name: pidev-database
        ports:
        - containerPort: 3306
          name: mysql
      - image: mdjdocker/arctic4_pidev_backend:latest
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 20
          tcpSocket:
            port: 3306
        name: pidev-backend
        ports:
        - containerPort: 9000
          name: cport-9000
        - containerPort: 2424
          name: cport-2424
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-backend-database

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-backend-database
policy disallow-default-namespace -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidev_back_db_dep_ser_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-backend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-backend-database-nodeport
  name: service-pidev-backend-nodeport
  namespace: default
spec:
  ports:
  - name: port-9000
    nodePort: 30001
    port: 9000
    targetPort: 9000
  - name: port-2424
    nodePort: 30003
    port: 2424
    targetPort: 2424
  selector:
    app: label-deployment-pidev-backend-database
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-backend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_back_db_dep_ser_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-backend-clusterip:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-backend-database-clusterip
  name: service-pidev-backend-clusterip
  namespace: default
spec:
  ports:
  - name: port-9000
    port: 9000
    targetPort: 9000
  - name: port-2424
    port: 2424
    targetPort: 2424
  selector:
    app: label-deployment-pidev-backend-database
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_back_db_pod_ser.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-pidev-backend-database:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: label-pod-pidev-backend-database
  name: pod-pidev-backend-database
  namespace: default
spec:
  containers:
  - env:
    - name: MYSQL_ROOT_PASSWORD
      value: root
    image: mysql:latest
    name: pidev-database
    ports:
    - containerPort: 3306
      name: cport-3306
  - image: mdjdocker/arctic4_pidev_backend:latest
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 20
      tcpSocket:
        port: 3306
    name: pidev-backend
    ports:
    - containerPort: 9000
      name: cport-9000
    - containerPort: 2424
      name: cport-2424
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-pidev-backend-database

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-pidev-backend-database
policy disallow-default-namespace -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod-pidev-backend-database failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-pidev-backend-database failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-pidev-backend-database failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidev_back_db_pod_ser_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-backend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-backend-database-nodeport
  name: service-pidev-backend-nodeport
  namespace: default
spec:
  ports:
  - name: port-9000
    nodePort: 30001
    port: 9000
    targetPort: 9000
  - name: port-2424
    nodePort: 30003
    port: 2424
    targetPort: 2424
  selector:
    app: label-pod-pidev-backend-database
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-backend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_back_db_pod_ser_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-backend-clusterip:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-backend-database-clusterip
  name: service-pidev-backend-clusterip
  namespace: default
spec:
  ports:
  - name: port-9000
    port: 9000
    targetPort: 9000
  - name: port-2424
    port: 2424
    targetPort: 2424
  selector:
    app: label-pod-pidev-backend-database
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_front_dep_ser.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment-pidev-frontend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: label-deployment-pidev-frontend
  name: deployment-pidev-frontend
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: label-deployment-pidev-frontend
  template:
    metadata:
      labels:
        app: label-deployment-pidev-frontend
    spec:
      containers:
      - image: mdjdocker/arctic4_pidev_frontend:latest
        name: pidev-frontend
        ports:
        - containerPort: 80
          name: cport-80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-frontend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-frontend
policy disallow-default-namespace -> resource default/Deployment/deployment-pidev-frontend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidev_front_dep_ser_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-frontend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-frontend-nodeport
  name: service-pidev-frontend-nodeport
  namespace: default
spec:
  ports:
  - name: port-80
    nodePort: 30002
    port: 80
    targetPort: 80
  selector:
    app: label-deployment-pidev-frontend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-frontend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_front_dep_ser_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-frontend-clusterip:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-frontend-clusterip
  name: service-pidev-frontend-clusterip
  namespace: default
spec:
  ports:
  - name: port-80
    port: 80
    targetPort: 80
  selector:
    app: label-deployment-pidev-frontend
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_front_pod_ser.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-pidev-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: label-pod-pidev-frontend
  name: pod-pidev-frontend
  namespace: default
spec:
  containers:
  - image: mdjdocker/arctic4_pidev_frontend:latest
    name: pidev-frontend
    ports:
    - containerPort: 80
      name: cport-80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-pidev-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-pidev-frontend
policy disallow-default-namespace -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod-pidev-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-pidev-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-pidev-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidev_front_pod_ser_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-frontend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-frontend-nodeport
  name: service-pidev-frontend-nodeport
  namespace: default
spec:
  ports:
  - name: port-80
    nodePort: 30002
    port: 80
    targetPort: 80
  selector:
    app: label-pod-pidev-frontend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-frontend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_front_pod_ser_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-frontend-clusterip:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-frontend-clusterip
  name: service-pidev-frontend-clusterip
  namespace: default
spec:
  ports:
  - name: port-80
    port: 80
    targetPort: 80
  selector:
    app: label-pod-pidev-frontend
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_full_dep_ser.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment-pidev-backend-database:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: label-deployment-pidev-backend-database
  name: deployment-pidev-backend-database
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: label-deployment-pidev-backend-database
  template:
    metadata:
      labels:
        app: label-deployment-pidev-backend-database
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        image: mysql:latest
        name: pidev-database
        ports:
        - containerPort: 3306
          name: cport-3306
      - image: mdjdocker/arctic4_pidev_backend:latest
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 20
          tcpSocket:
            port: 3306
        name: pidev-backend
        ports:
        - containerPort: 9000
          name: cport-9000
        - containerPort: 2424
          name: cport-2424
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-backend-database

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-backend-database
policy disallow-default-namespace -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment-pidev-backend-database failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidev_full_dep_ser_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-backend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-backend-database-nodeport
  name: service-pidev-backend-nodeport
  namespace: default
spec:
  ports:
  - name: port-9000
    nodePort: 30001
    port: 9000
    targetPort: 9000
  - name: port-2424
    nodePort: 30003
    port: 2424
    targetPort: 2424
  selector:
    app: label-deployment-pidev-backend-database
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-backend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_full_dep_ser_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-backend-clusterip:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-backend-database-clusterip
  name: service-pidev-backend-clusterip
  namespace: default
spec:
  ports:
  - name: port-9000
    port: 9000
    targetPort: 9000
  - name: port-2424
    port: 2424
    targetPort: 2424
  selector:
    app: label-deployment-pidev-backend-database
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_full_dep_ser_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment-pidev-frontend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: label-deployment-pidev-frontend
  name: deployment-pidev-frontend
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: label-deployment-pidev-frontend
  template:
    metadata:
      labels:
        app: label-deployment-pidev-frontend
    spec:
      containers:
      - image: mdjdocker/arctic4_pidev_frontend:latest
        name: pidev-frontend
        ports:
        - containerPort: 80
          name: cport-80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-frontend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-frontend
policy disallow-default-namespace -> resource default/Deployment/deployment-pidev-frontend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidev_full_dep_ser_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-frontend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-frontend-nodeport
  name: service-pidev-frontend-nodeport
  namespace: default
spec:
  ports:
  - name: port-80
    nodePort: 30002
    port: 80
    targetPort: 80
  selector:
    app: label-deployment-pidev-frontend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-frontend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_full_dep_ser_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-frontend-clusterip:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-frontend-clusterip
  name: service-pidev-frontend-clusterip
  namespace: default
spec:
  ports:
  - name: port-80
    port: 80
    targetPort: 80
  selector:
    app: label-deployment-pidev-frontend
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_full_pod_ser.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-pidev-backend-database:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: label-pod-pidev-backend-database
  name: pod-pidev-backend-database
  namespace: default
spec:
  containers:
  - env:
    - name: MYSQL_ROOT_PASSWORD
      value: root
    image: mysql:latest
    name: pidev-database
    ports:
    - containerPort: 3306
      name: cport-3306
  - image: mdjdocker/arctic4_pidev_backend:latest
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 20
      tcpSocket:
        port: 3306
    name: pidev-backend
    ports:
    - containerPort: 9000
      name: cport-9000
    - containerPort: 2424
      name: cport-2424
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-pidev-backend-database

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-pidev-backend-database
policy disallow-default-namespace -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod-pidev-backend-database failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-pidev-backend-database failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-pidev-backend-database failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidev_full_pod_ser_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-backend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-backend-database-nodeport
  name: service-pidev-backend-nodeport
  namespace: default
spec:
  ports:
  - name: port-9000
    nodePort: 30001
    port: 9000
    targetPort: 9000
  - name: port-2424
    nodePort: 30003
    port: 2424
    targetPort: 2424
  selector:
    app: label-pod-pidev-backend-database
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-backend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_full_pod_ser_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-backend-clusterip:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-backend-database-clusterip
  name: service-pidev-backend-clusterip
  namespace: default
spec:
  ports:
  - name: port-9000
    port: 9000
    targetPort: 9000
  - name: port-2424
    port: 2424
    targetPort: 2424
  selector:
    app: label-pod-pidev-backend-database
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_full_pod_ser_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-pidev-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: label-pod-pidev-frontend
  name: pod-pidev-frontend
  namespace: default
spec:
  containers:
  - image: mdjdocker/arctic4_pidev_frontend:latest
    name: pidev-frontend
    ports:
    - containerPort: 80
      name: cport-80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-pidev-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-pidev-frontend
policy disallow-default-namespace -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod-pidev-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-pidev-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-pidev-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidev_full_pod_ser_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-frontend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-frontend-nodeport
  name: service-pidev-frontend-nodeport
  namespace: default
spec:
  ports:
  - name: port-80
    nodePort: 30002
    port: 80
    targetPort: 80
  selector:
    app: label-pod-pidev-frontend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-frontend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidev_full_pod_ser_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-frontend-clusterip:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-frontend-clusterip
  name: service-pidev-frontend-clusterip
  namespace: default
spec:
  ports:
  - name: port-80
    port: 80
    targetPort: 80
  selector:
    app: label-pod-pidev-frontend
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidevmdj_full_pod_ser.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-pidev-backend-database:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: label-pod-pidev-backend-database
  name: pod-pidev-backend-database
  namespace: default
spec:
  containers:
  - env:
    - name: MYSQL_ROOT_PASSWORD
      value: root
    image: mysql:latest
    name: pidev-database
    ports:
    - containerPort: 3306
      name: mysql
  - image: mdjdocker/arctic4_pidev_mdj_backend:latest
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 20
      tcpSocket:
        port: 3306
    name: pidev-backend
    ports:
    - containerPort: 9000
      name: backend
  restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-pidev-backend-database

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-pidev-backend-database
policy disallow-default-namespace -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod-pidev-backend-database failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-pidev-backend-database failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-pidev-backend-database failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-pidev-backend-database failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidevmdj_full_pod_ser_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-backend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-backend-database-nodeport
  name: service-pidev-backend-nodeport
  namespace: default
spec:
  ports:
  - nodePort: 30001
    port: 9000
    targetPort: 9000
  selector:
    app: label-pod-pidev-backend-database
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-backend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidevmdj_full_pod_ser_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-pidev-frontend:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: label-pod-pidev-frontend
  name: pod-pidev-frontend
  namespace: default
spec:
  containers:
  - image: mdjdocker/arctic4_pidev_mdj_frontend:latest
    name: pidev-frontend
    ports:
    - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-pidev-frontend

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-pidev-frontend
policy disallow-default-namespace -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod-pidev-frontend failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-pidev-frontend failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-pidev-frontend failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-pidev-frontend failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidevmdj_full_pod_ser_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-frontend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-frontend-nodeport
  name: service-pidev-frontend-nodeport
  namespace: default
spec:
  ports:
  - nodePort: 30002
    port: 80
    targetPort: 80
  selector:
    app: label-pod-pidev-frontend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-frontend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidevmdj_full_pod_ser_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-frontend-clusterip:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-frontend-clusterip
  name: service-pidev-frontend-clusterip
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: label-pod-pidev-frontend
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidevx.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-pidev-database:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
  name: pv-pidev-database
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /var/data/mysql
  storageClassName: sc-pidev-database

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidevx_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-pidev-database:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-pidev-database
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: sc-pidev-database

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidevx_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment-pidev-database:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: label-deployment-pidev-database
  name: deployment-pidev-database
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: label-deployment-pidev-database
  template:
    metadata:
      labels:
        app: label-deployment-pidev-database
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        image: mdjdocker/arctic4_pidev_database:latest
        name: pidev-database
        ports:
        - containerPort: 3303
          name: cport-3303
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: volume-pidev-database
      restartPolicy: Always
      volumes:
      - name: volume-pidev-database
        persistentVolumeClaim:
          claimName: pvc-pidev-database

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-database

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-database
policy disallow-default-namespace -> resource default/Deployment/deployment-pidev-database failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment-pidev-database failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidevx_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-database-clusterip:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-database-clusterip
  name: service-pidev-database-clusterip
  namespace: default
spec:
  ports:
  - name: port-3306
    port: 3306
    targetPort: 3306
  selector:
    app: label-deployment-pidev-database

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidevx_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment-pidev-backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: label-deployment-pidev-backend
  name: deployment-pidev-backend
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: label-deployment-pidev-backend
  template:
    metadata:
      labels:
        app: label-deployment-pidev-backend
    spec:
      containers:
      - image: mdjdocker/arctic4_pidev_backend:latest
        name: pidev-backend
        ports:
        - containerPort: 9000
          name: cport-9000
        - containerPort: 2424
          name: cport-2424
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-backend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-backend
policy disallow-default-namespace -> resource default/Deployment/deployment-pidev-backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment-pidev-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidevx_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-backend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-backend-nodeport
  name: service-pidev-backend-nodeport
  namespace: default
spec:
  ports:
  - name: port-9000
    nodePort: 30001
    port: 9000
    targetPort: 9000
  - name: port-2424
    nodePort: 30003
    port: 2424
    targetPort: 2424
  selector:
    app: label-deployment-pidev-backend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-backend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: arctic4pidevx_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/deployment-pidev-frontend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: label-deployment-pidev-frontend
  name: deployment-pidev-frontend
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: label-deployment-pidev-frontend
  template:
    metadata:
      labels:
        app: label-deployment-pidev-frontend
    spec:
      containers:
      - image: mdjdocker/arctic4_pidev_frontend:latest
        name: pidev-frontend
        ports:
        - containerPort: 80
          name: cport-80
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-frontend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/deployment-pidev-frontend
policy disallow-default-namespace -> resource default/Deployment/deployment-pidev-frontend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/deployment-pidev-frontend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: arctic4pidevx_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/service-pidev-frontend-nodeport:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: label-service-pidev-frontend-nodeport
  name: service-pidev-frontend-nodeport
  namespace: default
spec:
  ports:
  - name: port-80
    nodePort: 30002
    port: 80
    targetPort: 80
  selector:
    app: label-deployment-pidev-frontend
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/service-pidev-frontend-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: argo4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/argo:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    shared-gateway-access: "true"
  name: argo
  namespace: default
spec: {}

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/argo:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: argo
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/argo:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: argo
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/argo:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: argo
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/argo:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: argo
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-application-controller:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-application-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-applicationset-controller:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: applicationset-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-applicationset-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-gpg-keys-cm:
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-gpg-keys-cm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-gpg-keys-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-notifications-cm:
apiVersion: v1
data:
  context: |
    argocdUrl: https://argocd.example.com
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-notifications-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-rbac-cm:
apiVersion: v1
data:
  policy.csv: ""
  policy.default: ""
  policy.matchMode: glob
  scopes: '[groups]'
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-rbac-cm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-rbac-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-ssh-known-hosts-cm:
apiVersion: v1
data:
  ssh_known_hosts: |
    [ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
    [ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
    [ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
    bitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=
    bitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=
    github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
    github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
    gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
    gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
    ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
    vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-ssh-known-hosts-cm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-ssh-known-hosts-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-tls-certs-cm:
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-tls-certs-cm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-tls-certs-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-redis-health-configmap:
apiVersion: v1
data:
  redis_liveness.sh: |
    response=$(
      redis-cli \
        -h localhost \
        -p 6379 \
        ping
    )
    if [ "$response" != "PONG" ] && [ "${response:0:7}" != "LOADING" ] ; then
      echo "$response"
      exit 1
    fi
    echo "response=$response"
  redis_readiness.sh: |
    response=$(
      redis-cli \
        -h localhost \
        -p 6379 \
        ping
    )
    if [ "$response" != "PONG" ] ; then
      echo "$response"
      exit 1
    fi
    echo "response=$response"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-redis
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-redis-health-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-application-controller
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-notifications-controller:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-notifications-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argocd-notifications-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-notifications-controller
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - argocd-notifications-cm
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - ""
  resourceNames:
  - argocd-notifications-secret
  resources:
  - secrets
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argocd-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-server
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - delete
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - applicationsets
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-application-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-application-controller
subjects:
- kind: ServiceAccount
  name: argocd-application-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argocd-notifications-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-notifications-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-notifications-controller
subjects:
- kind: ServiceAccount
  name: argocd-notifications-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argocd-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-server
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-server
subjects:
- kind: ServiceAccount
  name: argocd-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-application-controller
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-applicationset-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: applicationset-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-applicationset-controller
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - applicationsets
  - applicationsets/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applicationsets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - argoproj.io
  resources:
  - appprojects
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - update
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-notifications-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-notifications-controller
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - argocd-notifications-cm
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - ""
  resourceNames:
  - argocd-notifications-secret
  resources:
  - secrets
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-repo-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-repo-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-repo-server
  namespace: default
rules: null

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-server
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - applicationsets
  - appprojects
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-repo-server:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-repo-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-repo-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-dex-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-dex-server
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-application-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-application-controller
subjects:
- kind: ServiceAccount
  name: argocd-application-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-applicationset-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: applicationset-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-applicationset-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-applicationset-controller
subjects:
- kind: ServiceAccount
  name: argocd-applicationset-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-notifications-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-notifications-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-notifications-controller
subjects:
- kind: ServiceAccount
  name: argocd-notifications-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-repo-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-repo-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-repo-server
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-repo-server
subjects:
- kind: ServiceAccount
  name: argocd-repo-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-server
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-server
subjects:
- kind: ServiceAccount
  name: argocd-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_36.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-dex-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-dex-server
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-dex-server
subjects:
- kind: ServiceAccount
  name: argocd-dex-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-applicationset-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: applicationset-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-applicationset-controller
  namespace: default
spec:
  ports:
  - name: http-webhook
    port: 7000
    targetPort: webhook
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: argocd-applicationset-controller
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-repo-server:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-repo-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-repo-server
  namespace: default
spec:
  ports:
  - name: tcp-repo-server
    port: 8081
    protocol: TCP
    targetPort: repo-server
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: argocd-repo-server

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-server:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-server
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: argocd-server
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-server:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-dex-server:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-dex-server
  namespace: default
spec:
  ports:
  - name: http
    port: 5556
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 5557
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: argocd-dex-server

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-redis:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-redis
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-redis
  namespace: default
spec:
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: argocd-redis

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/argocd-notifications-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-notifications-controller
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: argocd-notifications-controller
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: notifications-controller
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argocd-notifications-controller
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: v2.10.6
        helm.sh/chart: argo-cd-6.7.10
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: argocd-notifications-controller
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - /usr/local/bin/argocd-notifications
        - --metrics-port=9001
        - --loglevel=info
        - --logformat=text
        - --namespace=default
        - --argocd-repo-server=argocd-repo-server:8081
        - --secret-name=argocd-notifications-secret
        env:
        - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL
          valueFrom:
            configMapKeyRef:
              key: notificationscontroller.log.level
              name: argocd-cmd-params-cm
              optional: true
        - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT
          valueFrom:
            configMapKeyRef:
              key: notificationscontroller.log.format
              name: argocd-cmd-params-cm
              optional: true
        - name: ARGOCD_APPLICATION_NAMESPACES
          valueFrom:
            configMapKeyRef:
              key: application.namespaces
              name: argocd-cmd-params-cm
              optional: true
        - name: ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED
          valueFrom:
            configMapKeyRef:
              key: notificationscontroller.selfservice.enabled
              name: argocd-cmd-params-cm
              optional: true
        image: quay.io/argoproj/argocd:v2.10.6
        imagePullPolicy: IfNotPresent
        name: notifications-controller
        ports:
        - containerPort: 9001
          name: metrics
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /app/config/tls
          name: tls-certs
        - mountPath: /app/config/reposerver/tls
          name: argocd-repo-server-tls
        workingDir: /app
      dnsPolicy: ClusterFirst
      serviceAccountName: argocd-notifications-controller
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: argocd-tls-certs-cm
        name: tls-certs
      - name: argocd-repo-server-tls
        secret:
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          - key: ca.crt
            path: ca.crt
          optional: true
          secretName: argocd-repo-server-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-notifications-controller

skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-notifications-controller
policy disallow-default-namespace -> resource default/Deployment/argocd-notifications-controller failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/argocd-notifications-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/argocd-notifications-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/argocd-notifications-controller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/argocd-notifications-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: argo-cd.v2.10.6_46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/argocd-dex-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-dex-server
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: argocd-dex-server
  template:
    metadata:
      annotations:
        checksum/cmd-params: 857d22e253aab0d0f3bea96c59a5b48fd3bea7cac9e98a37df18c9a2f5d77968
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app.kubernetes.io/component: dex-server
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argocd-dex-server
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: v2.10.6
        helm.sh/chart: argo-cd-6.7.10
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: argocd-dex-server
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - rundex
        command:
        - /shared/argocd-dex
        - --logformat=text
        - --loglevel=info
        env:
        - name: ARGOCD_DEX_SERVER_DISABLE_TLS
          valueFrom:
            configMapKeyRef:
              key: dexserver.disable.tls
              name: argocd-cmd-params-cm
              optional: true
        image: ghcr.io/dexidp/dex:v2.38.0
        imagePullPolicy: IfNotPresent
        name: dex-server
        ports:
        - containerPort: 5556
          name: http
          protocol: TCP
        - containerPort: 5557
          name: grpc
          protocol: TCP
        - containerPort: 5558
          name: metrics
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /shared
          name: static-files
        - mountPath: /tmp
          name: dexconfig
        - mountPath: /tls
          name: argocd-dex-server-tls
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /bin/cp
        - -n
        - /usr/local/bin/argocd
        - /shared/argocd-dex
        image: quay.io/argoproj/argocd:v2.10.6
        imagePullPolicy: IfNotPresent
        name: copyutil
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /shared
          name: static-files
        - mountPath: /tmp
          name: dexconfig
      serviceAccountName: argocd-dex-server
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: static-files
      - emptyDir: {}
        name: dexconfig
      - name: argocd-dex-server-tls
        secret:
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          - key: ca.crt
            path: ca.crt
          optional: true
          secretName: argocd-dex-server-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-dex-server
policy disallow-default-namespace -> resource default/Deployment/argocd-dex-server failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/argocd-dex-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/argocd-dex-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/argocd-dex-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/argocd-dex-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: argo-cd.v2.10.6_47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/argocd-redis:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-redis
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-redis
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/component: redis
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argocd-redis
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: v2.10.6
        helm.sh/chart: argo-cd-6.7.10
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: argocd-redis
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --save
        - ""
        - --appendonly
        - "no"
        image: public.ecr.aws/docker/library/redis:7.2.4-alpine
        imagePullPolicy: IfNotPresent
        name: redis
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /health
          name: health
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 493
          name: argocd-redis-health-configmap
        name: health

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-redis

skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-redis
policy disallow-default-namespace -> resource default/Deployment/argocd-redis failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/argocd-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/argocd-redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/argocd-redis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/argocd-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: argo-cd.v2.10.6_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-dex-server:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-dex-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/argocd-notifications-secret:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-notifications-secret
  namespace: default
stringData: null
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/argocd-secret:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-secret
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-cm:
apiVersion: v1
data:
  admin.enabled: "true"
  application.instanceLabelKey: argocd.argoproj.io/instance
  exec.enabled: "false"
  server.rbac.log.enforce.enable: "false"
  timeout.hard.reconciliation: 0s
  timeout.reconciliation: 180s
  url: https://argocd.example.com
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cd.v2.10.6_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-cmd-params-cm:
apiVersion: v1
data:
  application.namespaces: ""
  applicationsetcontroller.enable.leader.election: "false"
  applicationsetcontroller.enable.progressive.syncs: "false"
  applicationsetcontroller.log.format: text
  applicationsetcontroller.log.level: info
  applicationsetcontroller.policy: sync
  controller.log.format: text
  controller.log.level: info
  controller.operation.processors: "10"
  controller.repo.server.timeout.seconds: "60"
  controller.self.heal.timeout.seconds: "5"
  controller.status.processors: "20"
  otlp.address: ""
  redis.server: argocd-redis:6379
  repo.server: argocd-repo-server:8081
  reposerver.log.format: text
  reposerver.log.level: info
  reposerver.parallelism.limit: "0"
  server.basehref: /
  server.dex.server: https://argocd-dex-server:5556
  server.dex.server.strict.tls: "false"
  server.disable.auth: "false"
  server.enable.gzip: "true"
  server.insecure: "false"
  server.log.format: text
  server.log.level: info
  server.repo.server.strict.tls: "false"
  server.rootpath: ""
  server.staticassets: /shared/app
  server.x.frame.options: sameorigin
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-cmd-params-cm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.10.6
    helm.sh/chart: argo-cd-6.7.10
  name: argocd-cmd-params-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argocd-application-controller-clusterrole.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argocd-application-controller-clusterrole1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argocd-application-controller-clusterrolebinding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-application-controller
subjects:
- kind: ServiceAccount
  name: argocd-application-controller
  namespace: argocd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argocd-application-controller-clusterrolebinding1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-application-controller
subjects:
- kind: ServiceAccount
  name: argocd-application-controller
  namespace: argocd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argocd-application-controller-network-policy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/argocd-application-controller-network-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: argocd-application-controller-network-policy
  namespace: default
spec:
  ingress:
  - from:
    - namespaceSelector: {}
    ports:
    - port: 8082
  podSelector:
    matchLabels:
      app.kubernetes.io/name: argocd-application-controller
  policyTypes:
  - Ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argocd-application-controller-network-policy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/argocd-application-controller-network-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: argocd-application-controller-network-policy
  namespace: default
spec:
  ingress:
  - from:
    - namespaceSelector: {}
    ports:
    - port: 8082
  podSelector:
    matchLabels:
      app.kubernetes.io/name: argocd-application-controller
  policyTypes:
  - Ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argocd-application-controller-role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-applicationset-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: applicationset-controller
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-applicationset-controller
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - applicationsets
  - applicationsets/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - appprojects
  verbs:
  - get
- apiGroups:
  - argoproj.io
  resources:
  - applicationsets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-dex-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
  name: argocd-dex-server
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-notifications-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-notifications-controller
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - argocd-notifications-cm
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - ""
  resourceNames:
  - argocd-notifications-secret
  resources:
  - secrets
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
  name: argocd-server
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  - applicationsets
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argocd-applicationset-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: applicationset-controller
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-applicationset-controller
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - applicationsets
  - applicationsets/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applicationsets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - argoproj.io
  resources:
  - appprojects
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - update
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argocd-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
  name: argocd-server
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - delete
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - applicationsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-application-controller
subjects:
- kind: ServiceAccount
  name: argocd-application-controller

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-applicationset-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: applicationset-controller
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-applicationset-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-applicationset-controller
subjects:
- kind: ServiceAccount
  name: argocd-applicationset-controller

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-dex-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
  name: argocd-dex-server
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-dex-server
subjects:
- kind: ServiceAccount
  name: argocd-dex-server

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-notifications-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-notifications-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-notifications-controller
subjects:
- kind: ServiceAccount
  name: argocd-notifications-controller

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
  name: argocd-server
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-server
subjects:
- kind: ServiceAccount
  name: argocd-server

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argocd-application-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-application-controller
subjects:
- kind: ServiceAccount
  name: argocd-application-controller
  namespace: argocd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argocd-applicationset-controller:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: applicationset-controller
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-applicationset-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-applicationset-controller
subjects:
- kind: ServiceAccount
  name: argocd-applicationset-controller
  namespace: argocd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argocd-server:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
  name: argocd-server
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-server
subjects:
- kind: ServiceAccount
  name: argocd-server
  namespace: argocd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-cm:
apiVersion: v1
data:
  timeout.reconciliation: 10s
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-cmd-params-cm:
apiVersion: v1
data:
  server.insecure: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-cmd-params-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-cmd-params-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-gpg-keys-cm:
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-gpg-keys-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-gpg-keys-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-notifications-cm:
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-notifications-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-application-controller:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-rbac-cm:
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-rbac-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-rbac-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-ssh-known-hosts-cm:
apiVersion: v1
data:
  ssh_known_hosts: |
    # This file was automatically generated by hack/update-ssh-known-hosts.sh. DO NOT EDIT
    [ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
    [ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
    [ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
    bitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=
    bitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=
    github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
    github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
    gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
    gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
    ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
    vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-ssh-known-hosts-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-ssh-known-hosts-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-tls-certs-cm:
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-tls-certs-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-tls-certs-cm
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/argocd-notifications-secret:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-notifications-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/argocd-secret:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: argocd-secret
    app.kubernetes.io/part-of: argocd
  name: argocd-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-applicationset-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: applicationset-controller
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-applicationset-controller
  namespace: default
spec:
  ports:
  - name: webhook
    port: 7000
    protocol: TCP
    targetPort: webhook
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/name: argocd-applicationset-controller

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_36.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-dex-server:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
  name: argocd-dex-server
  namespace: default
spec:
  ports:
  - appProtocol: TCP
    name: http
    port: 5556
    protocol: TCP
    targetPort: 5556
  - name: grpc
    port: 5557
    protocol: TCP
    targetPort: 5557
  - name: metrics
    port: 5558
    protocol: TCP
    targetPort: 5558
  selector:
    app.kubernetes.io/name: argocd-dex-server

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-metrics:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/name: argocd-metrics
    app.kubernetes.io/part-of: argocd
  name: argocd-metrics
  namespace: default
spec:
  ports:
  - name: metrics
    port: 8082
    protocol: TCP
    targetPort: 8082
  selector:
    app.kubernetes.io/name: argocd-application-controller

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-notifications-controller-metrics:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/name: argocd-notifications-controller-metrics
    app.kubernetes.io/part-of: argocd
  name: argocd-notifications-controller-metrics
  namespace: default
spec:
  ports:
  - name: metrics
    port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app.kubernetes.io/name: argocd-notifications-controller

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-redis:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: argocd-redis
    app.kubernetes.io/part-of: argocd
  name: argocd-redis
  namespace: default
spec:
  ports:
  - name: tcp-redis
    port: 6379
    targetPort: 6379
  selector:
    app.kubernetes.io/name: argocd-redis

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-applicationset-controller:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: applicationset-controller
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-applicationset-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-repo-server:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/name: argocd-repo-server
    app.kubernetes.io/part-of: argocd
  name: argocd-repo-server
  namespace: default
spec:
  ports:
  - name: server
    port: 8081
    protocol: TCP
    targetPort: 8081
  - name: metrics
    port: 8084
    protocol: TCP
    targetPort: 8084
  selector:
    app.kubernetes.io/name: argocd-repo-server

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-server:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
  name: argocd-server
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 32073
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    nodePort: 32074
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: argocd-server
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/argocd-server failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argocd-server-metrics:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: argocd-server-metrics
    app.kubernetes.io/part-of: argocd
  name: argocd-server-metrics
  namespace: default
spec:
  ports:
  - name: metrics
    port: 8083
    protocol: TCP
    targetPort: 8083
  selector:
    app.kubernetes.io/name: argocd-server

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/argocd-dex-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
  name: argocd-dex-server
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-dex-server
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app.kubernetes.io/name: argocd-dex-server
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/part-of: argocd
              topologyKey: kubernetes.io/hostname
            weight: 5
      containers:
      - command:
        - /shared/argocd-dex
        - rundex
        env:
        - name: ARGOCD_DEX_SERVER_DISABLE_TLS
          valueFrom:
            configMapKeyRef:
              key: dexserver.disable.tls
              name: argocd-cmd-params-cm
              optional: true
        image: ghcr.io/dexidp/dex:v2.37.0
        imagePullPolicy: Always
        name: dex
        ports:
        - containerPort: 5556
        - containerPort: 5557
        - containerPort: 5558
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /shared
          name: static-files
        - mountPath: /tmp
          name: dexconfig
        - mountPath: /tls
          name: argocd-dex-server-tls
      initContainers:
      - command:
        - /bin/cp
        - -n
        - /usr/local/bin/argocd
        - /shared/argocd-dex
        image: quay.io/argoproj/argocd:v2.10.2
        imagePullPolicy: Always
        name: copyutil
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /shared
          name: static-files
        - mountPath: /tmp
          name: dexconfig
      serviceAccountName: argocd-dex-server
      volumes:
      - emptyDir: {}
        name: static-files
      - emptyDir: {}
        name: dexconfig
      - name: argocd-dex-server-tls
        secret:
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          - key: ca.crt
            path: ca.crt
          optional: true
          secretName: argocd-dex-server-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-dex-server
policy disallow-default-namespace -> resource default/Deployment/argocd-dex-server failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/argocd-dex-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/argocd-dex-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/argocd-dex-server failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/argocd-dex-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: argo-cm-nodeport_45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/argocd-notifications-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-notifications-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-notifications-controller
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-notifications-controller
    spec:
      containers:
      - args:
        - /usr/local/bin/argocd-notifications
        env:
        - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT
          valueFrom:
            configMapKeyRef:
              key: notificationscontroller.log.format
              name: argocd-cmd-params-cm
              optional: true
        - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL
          valueFrom:
            configMapKeyRef:
              key: notificationscontroller.log.level
              name: argocd-cmd-params-cm
              optional: true
        - name: ARGOCD_APPLICATION_NAMESPACES
          valueFrom:
            configMapKeyRef:
              key: application.namespaces
              name: argocd-cmd-params-cm
              optional: true
        - name: ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED
          valueFrom:
            configMapKeyRef:
              key: notificationscontroller.selfservice.enabled
              name: argocd-cmd-params-cm
              optional: true
        image: quay.io/argoproj/argocd:v2.10.2
        imagePullPolicy: Always
        livenessProbe:
          tcpSocket:
            port: 9001
        name: argocd-notifications-controller
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /app/config/tls
          name: tls-certs
        - mountPath: /app/config/reposerver/tls
          name: argocd-repo-server-tls
        workingDir: /app
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: argocd-notifications-controller
      volumes:
      - configMap:
          name: argocd-tls-certs-cm
        name: tls-certs
      - name: argocd-repo-server-tls
        secret:
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          - key: ca.crt
            path: ca.crt
          optional: true
          secretName: argocd-repo-server-tls

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-notifications-controller

skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-notifications-controller
policy disallow-default-namespace -> resource default/Deployment/argocd-notifications-controller failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/argocd-notifications-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/argocd-notifications-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/Deployment/argocd-notifications-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: argo-cm-nodeport_46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/argocd-redis:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: argocd-redis
    app.kubernetes.io/part-of: argocd
  name: argocd-redis
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-redis
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: argocd-redis
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/part-of: argocd
              topologyKey: kubernetes.io/hostname
            weight: 5
      containers:
      - args:
        - --save
        - ""
        - --appendonly
        - "no"
        image: redis:7.0.14-alpine
        imagePullPolicy: Always
        name: redis
        ports:
        - containerPort: 6379
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: argocd-redis

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-redis

skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-redis
policy disallow-default-namespace -> resource default/Deployment/argocd-redis failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/argocd-redis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/argocd-redis failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/argocd-redis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/argocd-redis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: argo-cm-nodeport_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-dex-server:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
  name: argocd-dex-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/argocd-application-controller-network-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: argocd-application-controller-network-policy
  namespace: default
spec:
  ingress:
  - from:
    - namespaceSelector: {}
    ports:
    - port: 8082
  podSelector:
    matchLabels:
      app.kubernetes.io/name: argocd-application-controller
  policyTypes:
  - Ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/argocd-applicationset-controller-network-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: argocd-applicationset-controller-network-policy
  namespace: default
spec:
  ingress:
  - from:
    - namespaceSelector: {}
    ports:
    - port: 7000
      protocol: TCP
    - port: 8080
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/name: argocd-applicationset-controller
  policyTypes:
  - Ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/argocd-dex-server-network-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: argocd-dex-server-network-policy
  namespace: default
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: argocd-server
    ports:
    - port: 5556
      protocol: TCP
    - port: 5557
      protocol: TCP
  - from:
    - namespaceSelector: {}
    ports:
    - port: 5558
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/name: argocd-dex-server
  policyTypes:
  - Ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/argocd-notifications-controller-network-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-notifications-controller-network-policy
  namespace: default
spec:
  ingress:
  - from:
    - namespaceSelector: {}
    ports:
    - port: 9001
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/name: argocd-notifications-controller
  policyTypes:
  - Ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/argocd-redis-network-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: argocd-redis-network-policy
  namespace: default
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: argocd-server
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: argocd-repo-server
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: argocd-application-controller
    ports:
    - port: 6379
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/name: argocd-redis
  policyTypes:
  - Ingress
  - Egress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_55.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/argocd-repo-server-network-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: argocd-repo-server-network-policy
  namespace: default
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: argocd-server
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: argocd-application-controller
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: argocd-notifications-controller
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: argocd-applicationset-controller
    ports:
    - port: 8081
      protocol: TCP
  - from:
    - namespaceSelector: {}
    ports:
    - port: 8084
  podSelector:
    matchLabels:
      app.kubernetes.io/name: argocd-repo-server
  policyTypes:
  - Ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/argocd-server-network-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: argocd-server-network-policy
  namespace: default
spec:
  ingress:
  - {}
  podSelector:
    matchLabels:
      app.kubernetes.io/name: argocd-server
  policyTypes:
  - Ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-notifications-controller:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-notifications-controller
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-redis:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: argocd-redis
    app.kubernetes.io/part-of: argocd
  name: argocd-redis
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-repo-server:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/name: argocd-repo-server
    app.kubernetes.io/part-of: argocd
  name: argocd-repo-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cm-nodeport_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-server:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
  name: argocd-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-cred.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/argo-cred:
apiVersion: v1
kind: Secret
metadata:
  name: argo-cred
  namespace: default
stringData:
  minio-accesskey: j0iQviP2TdbN5kHjMwB4
  minio-secretkey: 2xKybM7PZXjWq2EatP8KmBKyKGoE69fBotiZptoC
  psql-password: p5xF1PJ1T6z69sjVC9khniBTUvAMsToYzKdQxisXTkzK8yUT1dENh6ejhlVljKfq
  psql-username: app
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-events_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo-events/Deployment/controller-manager:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: argo-events
spec:
  replicas: 1
  selector:
    matchLabels:
      app: controller-manager
  template:
    metadata:
      labels:
        app: controller-manager
    spec:
      containers:
      - args:
        - controller
        env:
        - name: ARGO_EVENTS_IMAGE
          value: quay.io/argoproj/argo-events:v1.9.0
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/argoproj/argo-events:v1.9.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        name: controller-manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
        - mountPath: /etc/argo-events
          name: controller-config-volume
      securityContext:
        runAsNonRoot: true
        runAsUser: 9731
      serviceAccountName: argo-events-sa
      volumes:
      - configMap:
          name: argo-events-controller-config
        name: controller-config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource argo-events/Deployment/controller-manager

skipped mutate policy add-safe-to-evict -> resource argo-events/Deployment/controller-manager
policy drop-all-capabilities -> resource argo-events/Deployment/controller-manager failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource argo-events/Deployment/controller-manager failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource argo-events/Deployment/controller-manager failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource argo-events/Deployment/controller-manager failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource argo-events/Deployment/controller-manager failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource argo-events/Deployment/controller-manager failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: argo-events_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo-events/ServiceAccount/argo-events-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-events-sa
  namespace: argo-events

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-events_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argo-events-aggregate-to-admin:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: argo-events-aggregate-to-admin
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - sensors
  - sensors/finalizers
  - sensors/status
  - eventsources
  - eventsources/finalizers
  - eventsources/status
  - eventbus
  - eventbus/finalizers
  - eventbus/status
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-events_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argo-events-aggregate-to-edit:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: argo-events-aggregate-to-edit
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - sensors
  - sensors/finalizers
  - sensors/status
  - eventsources
  - eventsources/finalizers
  - eventsources/status
  - eventbus
  - eventbus/finalizers
  - eventbus/status
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-events_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argo-events-aggregate-to-view:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: argo-events-aggregate-to-view
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - sensors
  - sensors/finalizers
  - sensors/status
  - eventsources
  - eventsources/finalizers
  - eventsources/status
  - eventbus
  - eventbus/finalizers
  - eventbus/status
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-events_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argo-events-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-events-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - argoproj.io
  resources:
  - sensors
  - sensors/finalizers
  - sensors/status
  - eventsources
  - eventsources/finalizers
  - eventsources/status
  - eventbus
  - eventbus/finalizers
  - eventbus/status
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - configmaps
  - services
  - persistentvolumeclaims
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - update
  - patch
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-events_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argo-events-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-events-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-events-role
subjects:
- kind: ServiceAccount
  name: argo-events-sa
  namespace: argo-events

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-events_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo-events/ConfigMap/argo-events-controller-config:
apiVersion: v1
data:
  controller-config.yaml: |
    eventBus:
      nats:
        versions:
        - version: 0.22.1
          natsStreamingImage: nats-streaming:0.22.1
          metricsExporterImage: natsio/prometheus-nats-exporter:0.8.0
      jetstream:
        # Default JetStream settings, could be overridden by EventBus JetStream specs
        settings: |
          # https://docs.nats.io/running-a-nats-service/configuration#jetstream
          # Only configure "max_memory_store" or "max_file_store", do not set "store_dir" as it has been hardcoded.
          # e.g. 1G. -1 means no limit, up to 75%!o(MISSING)f available memory
          max_memory_store: -1
          # e.g. 20G. -1 means no limit, Up to 1TB if available
          max_file_store: 1TB
        streamConfig: |
          # The default properties of the streams to be created in this JetStream service
          maxMsgs: 50000
          maxAge: 168h
          maxBytes: -1
          replicas: 3
          duplicates: 300s
        versions:
        - version: latest
          natsImage: nats:2.9.16
          metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
          configReloaderImage: natsio/nats-server-config-reloader:0.7.0
          startCommand: /nats-server
        - version: 2.8.1
          natsImage: nats:2.8.1
          metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
          configReloaderImage: natsio/nats-server-config-reloader:0.7.0
          startCommand: /nats-server
        - version: 2.8.1-alpine
          natsImage: nats:2.8.1-alpine
          metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
          configReloaderImage: natsio/nats-server-config-reloader:0.7.0
          startCommand: nats-server
        - version: 2.8.2
          natsImage: nats:2.8.2
          metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
          configReloaderImage: natsio/nats-server-config-reloader:0.7.0
          startCommand: /nats-server
        - version: 2.8.2-alpine
          natsImage: nats:2.8.2-alpine
          metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
          configReloaderImage: natsio/nats-server-config-reloader:0.7.0
          startCommand: nats-server
        - version: 2.9.1
          natsImage: nats:2.9.1
          metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
          configReloaderImage: natsio/nats-server-config-reloader:0.7.0
          startCommand: /nats-server
        - version: 2.9.12
          natsImage: nats:2.9.12
          metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
          configReloaderImage: natsio/nats-server-config-reloader:0.7.0
          startCommand: /nats-server
        - version: 2.9.16
          natsImage: nats:2.9.16
          metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
          configReloaderImage: natsio/nats-server-config-reloader:0.7.0
          startCommand: /nats-server
kind: ConfigMap
metadata:
  name: argo-events-controller-config
  namespace: argo-events

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-events-sa-setup.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo-events/ServiceAccount/argo-events-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-events-sa
  namespace: argo-events

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-events-sa-setup_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo-events/Role/workflow-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: workflow-role
  namespace: argo-events
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-events-sa-setup_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo-events/RoleBinding/workflow-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: workflow-role-binding
  namespace: argo-events
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: workflow-role
subjects:
- kind: ServiceAccount
  name: argo-events-sa
  namespace: argo-events

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-events-sa-setup_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo-events/Role/pod-patcher:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-patcher
  namespace: argo-events
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-events-sa-setup_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo-events/RoleBinding/default-pod-patcher:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-pod-patcher
  namespace: argo-events
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-patcher
subjects:
- kind: ServiceAccount
  name: default
  namespace: argo-events

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/argocd-server-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  name: argocd-server-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: argo.devtechops.dev
    http:
      paths:
      - backend:
          service:
            name: argocd-server
            port:
              name: https
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - argo.devtechops.dev
    secretName: tls-secret

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Ingress/argocd-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/ssl-passthrough: "true"
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
  name: argocd-ingress
  namespace: argocd
spec:
  rules:
  - host: argo.devtechops.dev
    http:
      paths:
      - backend:
          service:
            name: argocd-server
            port:
              name: http
        path: /
        pathType: Prefix
  - host: frontend.devtechops.dev
    http:
      paths:
      - backend:
          service:
            name: kuberada-python-svc
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-lb.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Service/argocd-server-loadbalancer:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: argocd-server
  name: argocd-server-loadbalancer
  namespace: argocd
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: argocd-server
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-minio-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/argo-minio-secret:
apiVersion: v1
kind: Secret
metadata:
  name: argo-minio-secret
  namespace: default
stringData:
  accesskey: j0iQviP2TdbN5kHjMwB4
  secretkey: 2xKybM7PZXjWq2EatP8KmBKyKGoE69fBotiZptoC
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-psql-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/argo-psql-secret:
Data: {}
apiVersion: v1
kind: Secret
metadata:
  annotations:
    reflector.v1.k8s.emberstack.com/reflects: cnpg-cluster/cnpg-cluster-r4iny-app
  name: argo-psql-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/github.com:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: github.com
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/agent:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    workflows.argoproj.io/description: |
      This is the minimum recommended permissions needed if you want to use the agent, e.g. for HTTP or plugin templates.

      If <= v3.2 you must replace `workflowtasksets/status` with `patch workflowtasksets`.
  name: agent
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflowtasksets
  verbs:
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - workflowtasksets/status
  verbs:
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argo-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-role
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/finalizers
  verbs:
  - create
  - update
  - delete
  - get
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workflowtasksets
  - workflowtasksets/finalizers
  - workflowartifactgctasks
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
  - create
- apiGroups:
  - argoproj.io
  resources:
  - workflowtemplates
  - workflowtemplates/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - workflowtaskresults
  verbs:
  - list
  - watch
  - deletecollection
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - argoproj.io
  resources:
  - cronworkflows
  - cronworkflows/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - get
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argo-server-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-server-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - pods/log
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - watch
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - eventsources
  - sensors
  - workflows
  - workfloweventbindings
  - workflowtemplates
  - cronworkflows
  - cronworkflows/finalizers
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/artifactgc:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    workflows.argoproj.io/description: |
      This is the minimum recommended permissions needed if you want to use artifact GC.
  name: artifactgc
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflowartifactgctasks
  verbs:
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - workflowartifactgctasks/status
  verbs:
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/executor:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    workflows.argoproj.io/description: |
      Recomended minimum permissions for the `emissary` executor.
  name: executor
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflowtaskresults
  verbs:
  - create
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/pod-manager:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    workflows.argoproj.io/description: |
      This is an example of the permissions you would need if you wanted to use a resource template to create and manage
      other pods. The same pattern would be suitable for other resurces, e.g. a service
  name: pod-manager
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - get
  - patch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/submit-workflow-template:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: submit-workflow-template
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workfloweventbindings
  verbs:
  - list
- apiGroups:
  - argoproj.io
  resources:
  - workflowtemplates
  verbs:
  - get
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/workflow-manager:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    workflows.argoproj.io/description: |
      This is an example of the permissions you would need if you wanted to use a resource template to create and manage
      other workflows. The same pattern would be suitable for other resurces, e.g. a service
  name: workflow-manager
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - create
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argo-clusterworkflowtemplate-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-clusterworkflowtemplate-role
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argo-server-clusterworkflowtemplate-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-server-clusterworkflowtemplate-role
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - create
  - delete
  - watch
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/agent-default:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: agent-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: agent
subjects:
- kind: ServiceAccount
  name: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argo-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-role
subjects:
- kind: ServiceAccount
  name: argo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argo-server-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-server-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-server-role
subjects:
- kind: ServiceAccount
  name: argo-server

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/artifactgc-default:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: artifactgc-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: artifactgc
subjects:
- kind: ServiceAccount
  name: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/executor-default:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: executor-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: executor
subjects:
- kind: ServiceAccount
  name: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/github.com:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: github.com
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: submit-workflow-template
subjects:
- kind: ServiceAccount
  name: github.com
  namespace: argo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/pod-manager-default:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-manager-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-manager
subjects:
- kind: ServiceAccount
  name: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/workflow-manager-default:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: workflow-manager-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: workflow-manager
subjects:
- kind: ServiceAccount
  name: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argo-clusterworkflowtemplate-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-clusterworkflowtemplate-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-clusterworkflowtemplate-role
subjects:
- kind: ServiceAccount
  name: argo
  namespace: argo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argo-server-clusterworkflowtemplate-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-server-clusterworkflowtemplate-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-server-clusterworkflowtemplate-role
subjects:
- kind: ServiceAccount
  name: argo-server
  namespace: argo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/artifact-repositories:
apiVersion: v1
data:
  default-v1: |
    archiveLogs: true
    s3:
      bucket: my-bucket
      endpoint: minio:9000
      insecure: true
      accessKeySecret:
        name: my-minio-cred
        key: accesskey
      secretKeySecret:
        name: my-minio-cred
        key: secretkey
  empty: ""
  my-key: |
    archiveLogs: true
    s3:
      bucket: my-bucket
      endpoint: minio:9000
      insecure: true
      accessKeySecret:
        name: my-minio-cred
        key: accesskey
      secretKeySecret:
        name: my-minio-cred
        key: secretkey
kind: ConfigMap
metadata:
  annotations:
    workflows.argoproj.io/default-artifact-repository: default-v1
  name: artifact-repositories
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/workflow-controller-configmap:
apiVersion: v1
data:
  artifactRepository: |
    s3:
      bucket: my-bucket
      endpoint: minio:9000
      insecure: true
      accessKeySecret:
        name: my-minio-cred
        key: accesskey
      secretKeySecret:
        name: my-minio-cred
        key: secretkey
  columns: |
    - name: Workflow Completed
      type: label
      key: workflows.argoproj.io/completed
  executor: |
    resources:
      requests:
        cpu: 10m
        memory: 64Mi
  images: |
    docker/whalesay:v3.5.4:
       cmd: [cowsay]
  links: |
    - name: Workflow Link
      scope: workflow
      url: http://logging-facility?namespace=${metadata.namespace}&workflowName=${metadata.name}&startedAt=${status.startedAt}&finishedAt=${status.finishedAt}
    - name: Pod Link
      scope: pod
      url: http://logging-facility?namespace=${metadata.namespace}&podName=${metadata.name}&startedAt=${status.startedAt}&finishedAt=${status.finishedAt}
    - name: Pod Logs Link
      scope: pod-logs
      url: http://logging-facility?namespace=${metadata.namespace}&podName=${metadata.name}&startedAt=${status.startedAt}&finishedAt=${status.finishedAt}
    - name: Event Source Logs Link
      scope: event-source-logs
      url: http://logging-facility?namespace=${metadata.namespace}&podName=${metadata.name}&startedAt=${status.startedAt}&finishedAt=${status.finishedAt}
    - name: Sensor Logs Link
      scope: sensor-logs
      url: http://logging-facility?namespace=${metadata.namespace}&podName=${metadata.name}&startedAt=${status.startedAt}&finishedAt=${status.finishedAt}
    - name: Completed Workflows
      scope: workflow-list
      url: http://workflows?label=workflows.argoproj.io/completed=true
  metricsConfig: |
    enabled: true
    path: /metrics
    port: 9090
  namespaceParallelism: "10"
  retentionPolicy: |
    completed: 10
    failed: 3
    errored: 3
kind: ConfigMap
metadata:
  name: workflow-controller-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/argo-server-sso:
apiVersion: v1
kind: Secret
metadata:
  name: argo-server-sso
  namespace: default
stringData:
  clientID: argo-server
  clientSecret: ZXhhbXBsZS1hcHAtc2VjcmV0

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/argo-workflows-webhook-clients:
apiVersion: v1
kind: Secret
metadata:
  name: argo-workflows-webhook-clients
  namespace: default
stringData:
  bitbucket.org: |
    type: bitbucket
    secret: "my-uuid"
  bitbucketserver: |
    type: bitbucketserver
    secret: "shh!"
  github.com: |
    type: github
    secret: "shh!"
  gitlab.com: |-
    type: gitlab
    secret: "shh!"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/default.service-account-token:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: default
  name: default.service-account-token
  namespace: default
type: kubernetes.io/service-account-token

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_36.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/github.com.service-account-token:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: github.com
  name: github.com.service-account-token
  namespace: default
type: kubernetes.io/service-account-token

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/my-minio-cred:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: minio
  name: my-minio-cred
  namespace: default
stringData:
  accesskey: admin
  secretkey: password
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/argo-server:
apiVersion: v1
kind: Service
metadata:
  name: argo-server
  namespace: default
spec:
  ports:
  - name: web
    port: 2746
    targetPort: 2746
  selector:
    app: argo-server

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/httpbin:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: httpbin
  name: httpbin
  namespace: default
spec:
  ports:
  - name: api
    port: 9100
    protocol: TCP
    targetPort: 80
  selector:
    app: httpbin

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/minio:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  name: minio
  namespace: default
spec:
  ports:
  - name: api
    port: 9000
    protocol: TCP
    targetPort: 9000
  - name: dashboard
    port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app: minio

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PriorityClass/workflow-controller:
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: workflow-controller
  namespace: default
value: 1000000

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/argo-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-server
  namespace: default
spec:
  selector:
    matchLabels:
      app: argo-server
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: argo-server
    spec:
      containers:
      - args:
        - server
        - --namespaced
        - --auth-mode
        - server
        - --auth-mode
        - client
        env: []
        image: quay.io/argoproj/argocli:v3.5.4
        name: argo-server
        ports:
        - containerPort: 2746
          name: web
        readinessProbe:
          httpGet:
            path: /
            port: 2746
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 20
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argo-server
      volumes:
      - emptyDir: {}
        name: tmp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/argo-server
policy disallow-default-namespace -> resource default/Deployment/argo-server failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/argo-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/argo-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/argo-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/Deployment/argo-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: argo-quick-start-minimal_44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/httpbin:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: httpbin
  name: httpbin
  namespace: default
spec:
  selector:
    matchLabels:
      app: httpbin
  template:
    metadata:
      labels:
        app: httpbin
    spec:
      automountServiceAccountToken: false
      containers:
      - image: kong/httpbin
        livenessProbe:
          httpGet:
            path: /get
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        name: main
        ports:
        - containerPort: 80
          name: api
        readinessProbe:
          httpGet:
            path: /get
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/httpbin

skipped mutate policy add-safe-to-evict -> resource default/Deployment/httpbin
policy disallow-default-namespace -> resource default/Deployment/httpbin failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/httpbin failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/httpbin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/httpbin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/httpbin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/httpbin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/httpbin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/httpbin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: argo-quick-start-minimal_45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/minio:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minio
  name: minio
  namespace: default
spec:
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      automountServiceAccountToken: false
      containers:
      - command:
        - minio
        - server
        - --console-address
        - :9001
        - /data
        env:
        - name: MINIO_ACCESS_KEY
          value: admin
        - name: MINIO_SECRET_KEY
          value: password
        image: minio/minio:RELEASE.2022-11-17T23-20-09Z
        lifecycle:
          postStart:
            exec:
              command:
              - mkdir
              - -p
              - /data/my-bucket
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 5
          periodSeconds: 10
        name: main
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: dashboard
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 5
          periodSeconds: 10

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio

skipped mutate policy add-safe-to-evict -> resource default/Deployment/minio
policy disallow-default-namespace -> resource default/Deployment/minio failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/minio failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/minio failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/minio failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/minio failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/minio failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/minio failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: argo-quick-start-minimal_46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/workflow-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app: workflow-controller
  template:
    metadata:
      labels:
        app: workflow-controller
    spec:
      containers:
      - args:
        - --namespaced
        command:
        - workflow-controller
        env:
        - name: LEADER_ELECTION_IDENTITY
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: quay.io/argoproj/workflow-controller:v3.5.4
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 6060
          initialDelaySeconds: 90
          periodSeconds: 60
          timeoutSeconds: 30
        name: workflow-controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 6060
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: workflow-controller
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/workflow-controller

skipped mutate policy add-safe-to-evict -> resource default/Deployment/workflow-controller
policy disallow-default-namespace -> resource default/Deployment/workflow-controller failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/workflow-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/workflow-controller failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/workflow-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/Deployment/workflow-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: argo-quick-start-minimal_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argo:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-quick-start-minimal_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argo-server:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-image-updater:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-image-updater:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications
  verbs:
  - get
  - list
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-image-updater:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-image-updater
subjects:
- kind: ServiceAccount
  name: argocd-image-updater

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-image-updater-config:
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-image-updater-config
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-image-updater-ssh-config:
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-image-updater-ssh-config
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater-ssh-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/argocd-image-updater-secret:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: argocd-image-updater-secret
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/argocd-image-updater:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-image-updater
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-image-updater
    spec:
      containers:
      - command:
        - /usr/local/bin/argocd-image-updater
        - run
        env:
        - name: APPLICATIONS_API
          valueFrom:
            configMapKeyRef:
              key: applications_api
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_GRPC_WEB
          valueFrom:
            configMapKeyRef:
              key: argocd.grpc_web
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_SERVER
          valueFrom:
            configMapKeyRef:
              key: argocd.server_addr
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_INSECURE
          valueFrom:
            configMapKeyRef:
              key: argocd.insecure
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_PLAINTEXT
          valueFrom:
            configMapKeyRef:
              key: argocd.plaintext
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_TOKEN
          valueFrom:
            secretKeyRef:
              key: argocd.token
              name: argocd-image-updater-secret
              optional: true
        - name: IMAGE_UPDATER_LOGLEVEL
          valueFrom:
            configMapKeyRef:
              key: log.level
              name: argocd-image-updater-config
              optional: true
        - name: GIT_COMMIT_USER
          valueFrom:
            configMapKeyRef:
              key: git.user
              name: argocd-image-updater-config
              optional: true
        - name: GIT_COMMIT_EMAIL
          valueFrom:
            configMapKeyRef:
              key: git.email
              name: argocd-image-updater-config
              optional: true
        - name: IMAGE_UPDATER_KUBE_EVENTS
          valueFrom:
            configMapKeyRef:
              key: kube.events
              name: argocd-image-updater-config
              optional: true
        image: quay.io/argoprojlabs/argocd-image-updater:v0.13.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
        name: argocd-image-updater
        ports:
        - containerPort: 8080
        - containerPort: 8081
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
        volumeMounts:
        - mountPath: /app/config
          name: image-updater-conf
        - mountPath: /app/config/ssh
          name: ssh-known-hosts
        - mountPath: /app/.ssh
          name: ssh-config
      serviceAccountName: argocd-image-updater
      volumes:
      - configMap:
          items:
          - key: registries.conf
            path: registries.conf
          - key: git.commit-message-template
            path: commit.template
          name: argocd-image-updater-config
          optional: true
        name: image-updater-conf
      - configMap:
          name: argocd-ssh-known-hosts-cm
          optional: true
        name: ssh-known-hosts
      - configMap:
          name: argocd-image-updater-ssh-config
          optional: true
        name: ssh-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-image-updater

skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-image-updater
policy disallow-default-namespace -> resource default/Deployment/argocd-image-updater failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/argocd-image-updater failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/argocd-image-updater failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/argocd-image-updater failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/argocd-image-updater failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/argocd-image-updater failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: argo-updater_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Service/argocd-image-updater:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: argocd-image-updater
  name: argocd-image-updater
  namespace: argocd
spec:
  ports:
  - name: metrics
    port: 8081
    targetPort: 8081
  selector:
    app.kubernetes.io/name: argocd-image-updater

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/argocd-image-updater:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/argocd-image-updater:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications
  verbs:
  - get
  - list
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/argocd-image-updater:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-image-updater
subjects:
- kind: ServiceAccount
  name: argocd-image-updater

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-image-updater-config:
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-image-updater-config
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/argocd-image-updater-ssh-config:
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-image-updater-ssh-config
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater-ssh-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/argocd-image-updater-secret:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: argocd-image-updater-secret
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater-secret
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-updater1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/argocd-image-updater:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd-image-updater
  name: argocd-image-updater
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-image-updater
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-image-updater
    spec:
      containers:
      - command:
        - /usr/local/bin/argocd-image-updater
        - run
        env:
        - name: APPLICATIONS_API
          valueFrom:
            configMapKeyRef:
              key: applications_api
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_GRPC_WEB
          valueFrom:
            configMapKeyRef:
              key: argocd.grpc_web
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_SERVER
          valueFrom:
            configMapKeyRef:
              key: argocd.server_addr
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_INSECURE
          valueFrom:
            configMapKeyRef:
              key: argocd.insecure
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_PLAINTEXT
          valueFrom:
            configMapKeyRef:
              key: argocd.plaintext
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_TOKEN
          valueFrom:
            secretKeyRef:
              key: argocd.token
              name: argocd-image-updater-secret
              optional: true
        - name: IMAGE_UPDATER_LOGLEVEL
          valueFrom:
            configMapKeyRef:
              key: log.level
              name: argocd-image-updater-config
              optional: true
        - name: GIT_COMMIT_USER
          valueFrom:
            configMapKeyRef:
              key: git.user
              name: argocd-image-updater-config
              optional: true
        - name: GIT_COMMIT_EMAIL
          valueFrom:
            configMapKeyRef:
              key: git.email
              name: argocd-image-updater-config
              optional: true
        - name: IMAGE_UPDATER_KUBE_EVENTS
          valueFrom:
            configMapKeyRef:
              key: kube.events
              name: argocd-image-updater-config
              optional: true
        image: quay.io/argoprojlabs/argocd-image-updater:v0.13.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
        name: argocd-image-updater
        ports:
        - containerPort: 8080
        - containerPort: 8081
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
        volumeMounts:
        - mountPath: /app/config
          name: image-updater-conf
        - mountPath: /app/config/ssh
          name: ssh-known-hosts
        - mountPath: /app/.ssh
          name: ssh-config
      serviceAccountName: argocd-image-updater
      volumes:
      - configMap:
          items:
          - key: registries.conf
            path: registries.conf
          - key: git.commit-message-template
            path: commit.template
          name: argocd-image-updater-config
          optional: true
        name: image-updater-conf
      - configMap:
          name: argocd-ssh-known-hosts-cm
          optional: true
        name: ssh-known-hosts
      - configMap:
          name: argocd-image-updater-ssh-config
          optional: true
        name: ssh-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-image-updater

skipped mutate policy add-safe-to-evict -> resource default/Deployment/argocd-image-updater
policy disallow-default-namespace -> resource default/Deployment/argocd-image-updater failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/argocd-image-updater failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/argocd-image-updater failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/argocd-image-updater failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/argocd-image-updater failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/argocd-image-updater failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: argo-updater1_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Service/argocd-image-updater:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: argocd-image-updater
  name: argocd-image-updater
  namespace: argocd
spec:
  ports:
  - name: metrics
    port: 8081
    targetPort: 8081
  selector:
    app.kubernetes.io/name: argocd-image-updater

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo/Role/argo-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-role
  namespace: argo
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argo-aggregate-to-admin:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: argo-aggregate-to-admin
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workfloweventbindings
  - workfloweventbindings/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  - workflowtasksets
  - workflowtasksets/finalizers
  - workflowtaskresults
  - workflowtaskresults/finalizers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argo-aggregate-to-edit:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: argo-aggregate-to-edit
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workfloweventbindings
  - workfloweventbindings/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  - workflowtaskresults
  - workflowtaskresults/finalizers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argo-aggregate-to-view:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: argo-aggregate-to-view
  namespace: default
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workfloweventbindings
  - workfloweventbindings/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  - workflowtaskresults
  - workflowtaskresults/finalizers
  verbs:
  - get
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argo-cluster-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-cluster-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/finalizers
  verbs:
  - create
  - update
  - delete
  - get
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workflowtasksets
  - workflowtasksets/finalizers
  - workflowartifactgctasks
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
  - create
- apiGroups:
  - argoproj.io
  resources:
  - workflowtemplates
  - workflowtemplates/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - workflowtaskresults
  verbs:
  - list
  - watch
  - deletecollection
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
- apiGroups:
  - argoproj.io
  resources:
  - cronworkflows
  - cronworkflows/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - get
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/argo-server-cluster-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-server-cluster-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - pods/log
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - watch
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - eventsources
  - sensors
  - workflows
  - workfloweventbindings
  - workflowtemplates
  - cronworkflows
  - clusterworkflowtemplates
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo/RoleBinding/argo-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-binding
  namespace: argo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-role
subjects:
- kind: ServiceAccount
  name: argo
  namespace: argo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argo-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-cluster-role
subjects:
- kind: ServiceAccount
  name: argo
  namespace: argo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/argo-server-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-server-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-server-cluster-role
subjects:
- kind: ServiceAccount
  name: argo-server
  namespace: argo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo/ConfigMap/workflow-controller-configmap:
apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-controller-configmap
  namespace: argo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo/Service/argo-server:
apiVersion: v1
kind: Service
metadata:
  name: argo-server
  namespace: argo
spec:
  ports:
  - name: web
    port: 2746
    targetPort: 2746
  selector:
    app: argo-server

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PriorityClass/workflow-controller:
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: workflow-controller
  namespace: default
value: 1000000

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo/Deployment/argo-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-server
  namespace: argo
spec:
  selector:
    matchLabels:
      app: argo-server
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: argo-server
    spec:
      containers:
      - args:
        - server
        env: []
        image: quay.io/argoproj/argocli:v3.5.4
        name: argo-server
        ports:
        - containerPort: 2746
          name: web
        readinessProbe:
          httpGet:
            path: /
            port: 2746
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 20
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argo-server
      volumes:
      - emptyDir: {}
        name: tmp

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource argo/Deployment/argo-server
policy drop-cap-net-raw -> resource argo/Deployment/argo-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource argo/Deployment/argo-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource argo/Deployment/argo-server failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource argo/Deployment/argo-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 4, warn: 0, error: 0, skip: 1 

##### FILE: argo-workflows3_23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo/Deployment/workflow-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-controller
  namespace: argo
spec:
  selector:
    matchLabels:
      app: workflow-controller
  template:
    metadata:
      labels:
        app: workflow-controller
    spec:
      containers:
      - args: []
        command:
        - workflow-controller
        env:
        - name: LEADER_ELECTION_IDENTITY
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: quay.io/argoproj/workflow-controller:v3.5.4
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 6060
          initialDelaySeconds: 90
          periodSeconds: 60
          timeoutSeconds: 30
        name: workflow-controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 6060
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: workflow-controller
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource argo/Deployment/workflow-controller

skipped mutate policy add-safe-to-evict -> resource argo/Deployment/workflow-controller
policy drop-cap-net-raw -> resource argo/Deployment/workflow-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource argo/Deployment/workflow-controller failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource argo/Deployment/workflow-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource argo/Deployment/workflow-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: argo-workflows3_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo/ServiceAccount/argo:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo
  namespace: argo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: argo-workflows3_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argo/ServiceAccount/argo-server:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-server
  namespace: argo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

