##### FILE: core.v1.Node9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Node/nameValue:
apiVersion: v1
kind: Node
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  configSource:
    configMap:
      kubeletConfigKey: kubeletConfigKeyValue
      name: nameValue
      namespace: namespaceValue
      resourceVersion: resourceVersionValue
      uid: uidValue
  externalID: externalIDValue
  podCIDR: podCIDRValue
  podCIDRs:
  - podCIDRsValue
  providerID: providerIDValue
  taints:
  - effect: effectValue
    key: keyValue
    timeAdded: "2004-01-01T01:01:01Z"
    value: valueValue
  unschedulable: true
status:
  addresses:
  - address: addressValue
    type: typeValue
  allocatable:
    allocatableKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastHeartbeatTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  config:
    active:
      configMap:
        kubeletConfigKey: kubeletConfigKeyValue
        name: nameValue
        namespace: namespaceValue
        resourceVersion: resourceVersionValue
        uid: uidValue
    assigned:
      configMap:
        kubeletConfigKey: kubeletConfigKeyValue
        name: nameValue
        namespace: namespaceValue
        resourceVersion: resourceVersionValue
        uid: uidValue
    error: errorValue
    lastKnownGood:
      configMap:
        kubeletConfigKey: kubeletConfigKeyValue
        name: nameValue
        namespace: namespaceValue
        resourceVersion: resourceVersionValue
        uid: uidValue
  daemonEndpoints:
    kubeletEndpoint:
      Port: 1
  images:
  - names:
    - namesValue
    sizeBytes: 2
  nodeInfo:
    architecture: architectureValue
    bootID: bootIDValue
    containerRuntimeVersion: containerRuntimeVersionValue
    kernelVersion: kernelVersionValue
    kubeProxyVersion: kubeProxyVersionValue
    kubeletVersion: kubeletVersionValue
    machineID: machineIDValue
    operatingSystem: operatingSystemValue
    osImage: osImageValue
    systemUUID: systemUUIDValue
  phase: phaseValue
  volumesAttached:
  - devicePath: devicePathValue
    name: nameValue
  volumesInUse:
  - volumesInUseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume.after_roundtrip.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  accessModes:
  - £.vǴʌ鴜Ł%!Ũ(MISSING)
  awsElasticBlockStore:
    fsType: "27"
    partition: -321835912
    readOnly: true
    volumeID: "26"
  azureDisk:
    cachingMode: rȮO励鹗塢ē ƕP喂ƈ斎AO6ĴC
    diskName: "83"
    diskURI: "84"
    fsType: "85"
    kind: 壝
    readOnly: false
  azureFile:
    readOnly: true
    secretName: "71"
    secretNamespace: "73"
    shareName: "72"
  capacity:
    脽ěĂ凗蓏Ŋ蛊ĉy緅縕: "57"
  cephfs:
    monitors:
    - "54"
    path: "55"
    secretFile: "57"
    secretRef:
      name: "58"
      namespace: "59"
    user: "56"
  cinder:
    fsType: "51"
    readOnly: true
    secretRef:
      name: "52"
      namespace: "53"
    volumeID: "50"
  claimRef:
    apiVersion: "126"
    fieldPath: "128"
    kind: "123"
    name: "125"
    namespace: "124"
    resourceVersion: "127"
    uid: '>Ņ£趕ã/鈱$-议}ȧ外ĺ'
  csi:
    controllerExpandSecretRef:
      name: "121"
      namespace: "122"
    controllerPublishSecretRef:
      name: "115"
      namespace: "116"
    driver: "110"
    fsType: "112"
    nodePublishSecretRef:
      name: "119"
      namespace: "120"
    nodeStageSecretRef:
      name: "117"
      namespace: "118"
    volumeAttributes:
      "113": "114"
    volumeHandle: "111"
  fc:
    fsType: "61"
    lun: -655946460
    targetWWNs:
    - "60"
    wwids:
    - "62"
  flexVolume:
    driver: "65"
    fsType: "66"
    options:
      "69": "70"
    secretRef:
      name: "67"
      namespace: "68"
  flocker:
    datasetName: "63"
    datasetUUID: "64"
  gcePersistentDisk:
    fsType: "25"
    partition: 1035515117
    pdName: "24"
    readOnly: true
  glusterfs:
    endpoints: "29"
    endpointsNamespace: "31"
    path: "30"
  hostPath:
    path: "28"
    type: 狱³-Ǐ忄*齧獚
  iscsi:
    fsType: "45"
    initiatorName: "49"
    iqn: "43"
    iscsiInterface: "44"
    lun: -21009133
    portals:
    - "46"
    readOnly: true
    secretRef:
      name: "47"
      namespace: "48"
    targetPortal: "42"
  local:
    fsType: "100"
    path: "99"
  mountOptions:
  - "130"
  nfs:
    path: "33"
    readOnly: true
    server: "32"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "131"
          operator: 廄裭4懙鏮嵒ƫS捕ɷD¡轫n(
          values:
          - "132"
        matchFields:
        - key: "133"
          operator: 郀叚Fi皬择,Q捇ȸ{+ɸ殁
          values:
          - "134"
  persistentVolumeReclaimPolicy: ž譋娲瘹ɭȊɚɎ(dɅ囥糷
  photonPersistentDisk:
    fsType: "87"
    pdID: "86"
  portworxVolume:
    fsType: "89"
    volumeID: "88"
  quobyte:
    group: "81"
    registry: "78"
    tenant: "82"
    user: "80"
    volume: "79"
  rbd:
    fsType: "36"
    image: "35"
    keyring: "39"
    monitors:
    - "34"
    pool: "37"
    readOnly: true
    secretRef:
      name: "40"
      namespace: "41"
    user: "38"
  scaleIO:
    fsType: "98"
    gateway: "90"
    protectionDomain: "94"
    readOnly: true
    secretRef:
      name: "92"
      namespace: "93"
    sslEnabled: true
    storageMode: "96"
    storagePool: "95"
    system: "91"
    volumeName: "97"
  storageClassName: "129"
  storageos:
    fsType: "103"
    readOnly: true
    secretRef:
      apiVersion: "107"
      fieldPath: "109"
      kind: "104"
      name: "106"
      namespace: "105"
      resourceVersion: "108"
      uid: ?øēƺ魋Ď儇击3ƆìQ
    volumeName: "101"
    volumeNamespace: "102"
  volumeMode: 圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1ZƜ/
  vsphereVolume:
    fsType: "75"
    storagePolicyID: "77"
    storagePolicyName: "76"
    volumePath: "74"
status:
  message: "135"
  phase: a縳讋ɮ衺勽Ƙq/Ź u衲<¿燥ǖ_è
  reason: "136"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume.after_roundtrip1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  accessModes:
  - £.vǴʌ鴜Ł%!Ũ(MISSING)
  awsElasticBlockStore:
    fsType: "27"
    partition: -321835912
    readOnly: true
    volumeID: "26"
  azureDisk:
    cachingMode: rȮO励鹗塢ē ƕP喂ƈ斎AO6ĴC
    diskName: "83"
    diskURI: "84"
    fsType: "85"
    kind: 壝
    readOnly: false
  azureFile:
    readOnly: true
    secretName: "71"
    secretNamespace: "73"
    shareName: "72"
  capacity:
    脽ěĂ凗蓏Ŋ蛊ĉy緅縕: "57"
  cephfs:
    monitors:
    - "54"
    path: "55"
    secretFile: "57"
    secretRef:
      name: "58"
      namespace: "59"
    user: "56"
  cinder:
    fsType: "51"
    readOnly: true
    secretRef:
      name: "52"
      namespace: "53"
    volumeID: "50"
  claimRef:
    apiVersion: "126"
    fieldPath: "128"
    kind: "123"
    name: "125"
    namespace: "124"
    resourceVersion: "127"
    uid: '>Ņ£趕ã/鈱$-议}ȧ外ĺ'
  csi:
    controllerExpandSecretRef:
      name: "121"
      namespace: "122"
    controllerPublishSecretRef:
      name: "115"
      namespace: "116"
    driver: "110"
    fsType: "112"
    nodePublishSecretRef:
      name: "119"
      namespace: "120"
    nodeStageSecretRef:
      name: "117"
      namespace: "118"
    volumeAttributes:
      "113": "114"
    volumeHandle: "111"
  fc:
    fsType: "61"
    lun: -655946460
    targetWWNs:
    - "60"
    wwids:
    - "62"
  flexVolume:
    driver: "65"
    fsType: "66"
    options:
      "69": "70"
    secretRef:
      name: "67"
      namespace: "68"
  flocker:
    datasetName: "63"
    datasetUUID: "64"
  gcePersistentDisk:
    fsType: "25"
    partition: 1035515117
    pdName: "24"
    readOnly: true
  glusterfs:
    endpoints: "29"
    endpointsNamespace: "31"
    path: "30"
  hostPath:
    path: "28"
    type: 狱³-Ǐ忄*齧獚
  iscsi:
    fsType: "45"
    initiatorName: "49"
    iqn: "43"
    iscsiInterface: "44"
    lun: -21009133
    portals:
    - "46"
    readOnly: true
    secretRef:
      name: "47"
      namespace: "48"
    targetPortal: "42"
  local:
    fsType: "100"
    path: "99"
  mountOptions:
  - "130"
  nfs:
    path: "33"
    readOnly: true
    server: "32"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "131"
          operator: 廄裭4懙鏮嵒ƫS捕ɷD¡轫n(
          values:
          - "132"
        matchFields:
        - key: "133"
          operator: 郀叚Fi皬择,Q捇ȸ{+ɸ殁
          values:
          - "134"
  persistentVolumeReclaimPolicy: ž譋娲瘹ɭȊɚɎ(dɅ囥糷
  photonPersistentDisk:
    fsType: "87"
    pdID: "86"
  portworxVolume:
    fsType: "89"
    volumeID: "88"
  quobyte:
    group: "81"
    registry: "78"
    tenant: "82"
    user: "80"
    volume: "79"
  rbd:
    fsType: "36"
    image: "35"
    keyring: "39"
    monitors:
    - "34"
    pool: "37"
    readOnly: true
    secretRef:
      name: "40"
      namespace: "41"
    user: "38"
  scaleIO:
    fsType: "98"
    gateway: "90"
    protectionDomain: "94"
    readOnly: true
    secretRef:
      name: "92"
      namespace: "93"
    sslEnabled: true
    storageMode: "96"
    storagePool: "95"
    system: "91"
    volumeName: "97"
  storageClassName: "129"
  storageos:
    fsType: "103"
    readOnly: true
    secretRef:
      apiVersion: "107"
      fieldPath: "109"
      kind: "104"
      name: "106"
      namespace: "105"
      resourceVersion: "108"
      uid: ?øēƺ魋Ď儇击3ƆìQ
    volumeName: "101"
    volumeNamespace: "102"
  volumeMode: 圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1ZƜ/
  vsphereVolume:
    fsType: "75"
    storagePolicyID: "77"
    storagePolicyName: "76"
    volumePath: "74"
status:
  message: "135"
  phase: a縳讋ɮ衺勽Ƙq/Ź u衲<¿燥ǖ_è
  reason: "136"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "23"
    partition: -1821408417
    volumeID: "22"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "79"
    diskURI: "80"
    fsType: "81"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "67"
    secretNamespace: "69"
    shareName: "68"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "50"
    path: "51"
    secretFile: "53"
    secretRef:
      name: "54"
      namespace: "55"
    user: "52"
  cinder:
    fsType: "47"
    readOnly: true
    secretRef:
      name: "48"
      namespace: "49"
    volumeID: "46"
  claimRef:
    apiVersion: "122"
    fieldPath: "124"
    kind: "119"
    name: "121"
    namespace: "120"
    resourceVersion: "123"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "117"
      namespace: "118"
    controllerPublishSecretRef:
      name: "111"
      namespace: "112"
    driver: "106"
    fsType: "108"
    nodePublishSecretRef:
      name: "115"
      namespace: "116"
    nodeStageSecretRef:
      name: "113"
      namespace: "114"
    volumeAttributes:
      "109": "110"
    volumeHandle: "107"
  fc:
    fsType: "57"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "56"
    wwids:
    - "58"
  flexVolume:
    driver: "61"
    fsType: "62"
    options:
      "65": "66"
    secretRef:
      name: "63"
      namespace: "64"
  flocker:
    datasetName: "59"
    datasetUUID: "60"
  gcePersistentDisk:
    fsType: "21"
    partition: 757808475
    pdName: "20"
    readOnly: true
  glusterfs:
    endpoints: "25"
    endpointsNamespace: "27"
    path: "26"
    readOnly: true
  hostPath:
    path: "24"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "41"
    initiatorName: "45"
    iqn: "39"
    iscsiInterface: "40"
    lun: 494729996
    portals:
    - "42"
    readOnly: true
    secretRef:
      name: "43"
      namespace: "44"
    targetPortal: "38"
  local:
    fsType: "96"
    path: "95"
  mountOptions:
  - "126"
  nfs:
    path: "29"
    server: "28"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "127"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "128"
        matchFields:
        - key: "129"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "130"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "83"
    pdID: "82"
  portworxVolume:
    fsType: "85"
    volumeID: "84"
  quobyte:
    group: "77"
    registry: "74"
    tenant: "78"
    user: "76"
    volume: "75"
  rbd:
    fsType: "32"
    image: "31"
    keyring: "35"
    monitors:
    - "30"
    pool: "33"
    secretRef:
      name: "36"
      namespace: "37"
    user: "34"
  scaleIO:
    fsType: "94"
    gateway: "86"
    protectionDomain: "90"
    readOnly: true
    secretRef:
      name: "88"
      namespace: "89"
    sslEnabled: true
    storageMode: "92"
    storagePool: "91"
    system: "87"
    volumeName: "93"
  storageClassName: "125"
  storageos:
    fsType: "99"
    readOnly: true
    secretRef:
      apiVersion: "103"
      fieldPath: "105"
      kind: "100"
      name: "102"
      namespace: "101"
      resourceVersion: "104"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "97"
    volumeNamespace: "98"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "71"
    storagePolicyID: "73"
    storagePolicyName: "72"
    volumePath: "70"
status:
  message: "131"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "132"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "22"
    partition: -1821408417
    volumeID: "21"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "78"
    diskURI: "79"
    fsType: "80"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "66"
    secretNamespace: "68"
    shareName: "67"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "49"
    path: "50"
    secretFile: "52"
    secretRef:
      name: "53"
      namespace: "54"
    user: "51"
  cinder:
    fsType: "46"
    readOnly: true
    secretRef:
      name: "47"
      namespace: "48"
    volumeID: "45"
  claimRef:
    apiVersion: "121"
    fieldPath: "123"
    kind: "118"
    name: "120"
    namespace: "119"
    resourceVersion: "122"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "116"
      namespace: "117"
    controllerPublishSecretRef:
      name: "110"
      namespace: "111"
    driver: "105"
    fsType: "107"
    nodePublishSecretRef:
      name: "114"
      namespace: "115"
    nodeStageSecretRef:
      name: "112"
      namespace: "113"
    volumeAttributes:
      "108": "109"
    volumeHandle: "106"
  fc:
    fsType: "56"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "55"
    wwids:
    - "57"
  flexVolume:
    driver: "60"
    fsType: "61"
    options:
      "64": "65"
    secretRef:
      name: "62"
      namespace: "63"
  flocker:
    datasetName: "58"
    datasetUUID: "59"
  gcePersistentDisk:
    fsType: "20"
    partition: 757808475
    pdName: "19"
    readOnly: true
  glusterfs:
    endpoints: "24"
    endpointsNamespace: "26"
    path: "25"
    readOnly: true
  hostPath:
    path: "23"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "40"
    initiatorName: "44"
    iqn: "38"
    iscsiInterface: "39"
    lun: 494729996
    portals:
    - "41"
    readOnly: true
    secretRef:
      name: "42"
      namespace: "43"
    targetPortal: "37"
  local:
    fsType: "95"
    path: "94"
  mountOptions:
  - "125"
  nfs:
    path: "28"
    server: "27"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "126"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "127"
        matchFields:
        - key: "128"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "129"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "82"
    pdID: "81"
  portworxVolume:
    fsType: "84"
    volumeID: "83"
  quobyte:
    group: "76"
    registry: "73"
    tenant: "77"
    user: "75"
    volume: "74"
  rbd:
    fsType: "31"
    image: "30"
    keyring: "34"
    monitors:
    - "29"
    pool: "32"
    secretRef:
      name: "35"
      namespace: "36"
    user: "33"
  scaleIO:
    fsType: "93"
    gateway: "85"
    protectionDomain: "89"
    readOnly: true
    secretRef:
      name: "87"
      namespace: "88"
    sslEnabled: true
    storageMode: "91"
    storagePool: "90"
    system: "86"
    volumeName: "92"
  storageClassName: "124"
  storageos:
    fsType: "98"
    readOnly: true
    secretRef:
      apiVersion: "102"
      fieldPath: "104"
      kind: "99"
      name: "101"
      namespace: "100"
      resourceVersion: "103"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "96"
    volumeNamespace: "97"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "70"
    storagePolicyID: "72"
    storagePolicyName: "71"
    volumePath: "69"
status:
  message: "130"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "131"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  accessModes:
  - £.vǴʌ鴜Ł%!Ũ(MISSING)
  awsElasticBlockStore:
    fsType: "27"
    partition: -321835912
    readOnly: true
    volumeID: "26"
  azureDisk:
    cachingMode: rȮO励鹗塢ē ƕP喂ƈ斎AO6ĴC
    diskName: "83"
    diskURI: "84"
    fsType: "85"
    kind: 壝
    readOnly: false
  azureFile:
    readOnly: true
    secretName: "71"
    secretNamespace: "73"
    shareName: "72"
  capacity:
    脽ěĂ凗蓏Ŋ蛊ĉy緅縕: "57"
  cephfs:
    monitors:
    - "54"
    path: "55"
    secretFile: "57"
    secretRef:
      name: "58"
      namespace: "59"
    user: "56"
  cinder:
    fsType: "51"
    readOnly: true
    secretRef:
      name: "52"
      namespace: "53"
    volumeID: "50"
  claimRef:
    apiVersion: "126"
    fieldPath: "128"
    kind: "123"
    name: "125"
    namespace: "124"
    resourceVersion: "127"
    uid: '>Ņ£趕ã/鈱$-议}ȧ外ĺ'
  csi:
    controllerExpandSecretRef:
      name: "121"
      namespace: "122"
    controllerPublishSecretRef:
      name: "115"
      namespace: "116"
    driver: "110"
    fsType: "112"
    nodePublishSecretRef:
      name: "119"
      namespace: "120"
    nodeStageSecretRef:
      name: "117"
      namespace: "118"
    volumeAttributes:
      "113": "114"
    volumeHandle: "111"
  fc:
    fsType: "61"
    lun: -655946460
    targetWWNs:
    - "60"
    wwids:
    - "62"
  flexVolume:
    driver: "65"
    fsType: "66"
    options:
      "69": "70"
    secretRef:
      name: "67"
      namespace: "68"
  flocker:
    datasetName: "63"
    datasetUUID: "64"
  gcePersistentDisk:
    fsType: "25"
    partition: 1035515117
    pdName: "24"
    readOnly: true
  glusterfs:
    endpoints: "29"
    endpointsNamespace: "31"
    path: "30"
  hostPath:
    path: "28"
    type: 狱³-Ǐ忄*齧獚
  iscsi:
    fsType: "45"
    initiatorName: "49"
    iqn: "43"
    iscsiInterface: "44"
    lun: -21009133
    portals:
    - "46"
    readOnly: true
    secretRef:
      name: "47"
      namespace: "48"
    targetPortal: "42"
  local:
    fsType: "100"
    path: "99"
  mountOptions:
  - "130"
  nfs:
    path: "33"
    readOnly: true
    server: "32"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "131"
          operator: 廄裭4懙鏮嵒ƫS捕ɷD¡轫n(
          values:
          - "132"
        matchFields:
        - key: "133"
          operator: 郀叚Fi皬择,Q捇ȸ{+ɸ殁
          values:
          - "134"
  persistentVolumeReclaimPolicy: ž譋娲瘹ɭȊɚɎ(dɅ囥糷
  photonPersistentDisk:
    fsType: "87"
    pdID: "86"
  portworxVolume:
    fsType: "89"
    volumeID: "88"
  quobyte:
    group: "81"
    registry: "78"
    tenant: "82"
    user: "80"
    volume: "79"
  rbd:
    fsType: "36"
    image: "35"
    keyring: "39"
    monitors:
    - "34"
    pool: "37"
    readOnly: true
    secretRef:
      name: "40"
      namespace: "41"
    user: "38"
  scaleIO:
    fsType: "98"
    gateway: "90"
    protectionDomain: "94"
    readOnly: true
    secretRef:
      name: "92"
      namespace: "93"
    sslEnabled: true
    storageMode: "96"
    storagePool: "95"
    system: "91"
    volumeName: "97"
  storageClassName: "129"
  storageos:
    fsType: "103"
    readOnly: true
    secretRef:
      apiVersion: "107"
      fieldPath: "109"
      kind: "104"
      name: "106"
      namespace: "105"
      resourceVersion: "108"
      uid: ?øēƺ魋Ď儇击3ƆìQ
    volumeName: "101"
    volumeNamespace: "102"
  volumeMode: 圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1ZƜ/
  vsphereVolume:
    fsType: "75"
    storagePolicyID: "77"
    storagePolicyName: "76"
    volumePath: "74"
status:
  message: "135"
  phase: a縳讋ɮ衺勽Ƙq/Ź u衲<¿燥ǖ_è
  reason: "136"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "22"
    partition: -1821408417
    volumeID: "21"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "78"
    diskURI: "79"
    fsType: "80"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "66"
    secretNamespace: "68"
    shareName: "67"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "49"
    path: "50"
    secretFile: "52"
    secretRef:
      name: "53"
      namespace: "54"
    user: "51"
  cinder:
    fsType: "46"
    readOnly: true
    secretRef:
      name: "47"
      namespace: "48"
    volumeID: "45"
  claimRef:
    apiVersion: "121"
    fieldPath: "123"
    kind: "118"
    name: "120"
    namespace: "119"
    resourceVersion: "122"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "116"
      namespace: "117"
    controllerPublishSecretRef:
      name: "110"
      namespace: "111"
    driver: "105"
    fsType: "107"
    nodePublishSecretRef:
      name: "114"
      namespace: "115"
    nodeStageSecretRef:
      name: "112"
      namespace: "113"
    volumeAttributes:
      "108": "109"
    volumeHandle: "106"
  fc:
    fsType: "56"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "55"
    wwids:
    - "57"
  flexVolume:
    driver: "60"
    fsType: "61"
    options:
      "64": "65"
    secretRef:
      name: "62"
      namespace: "63"
  flocker:
    datasetName: "58"
    datasetUUID: "59"
  gcePersistentDisk:
    fsType: "20"
    partition: 757808475
    pdName: "19"
    readOnly: true
  glusterfs:
    endpoints: "24"
    endpointsNamespace: "26"
    path: "25"
    readOnly: true
  hostPath:
    path: "23"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "40"
    initiatorName: "44"
    iqn: "38"
    iscsiInterface: "39"
    lun: 494729996
    portals:
    - "41"
    readOnly: true
    secretRef:
      name: "42"
      namespace: "43"
    targetPortal: "37"
  local:
    fsType: "95"
    path: "94"
  mountOptions:
  - "125"
  nfs:
    path: "28"
    server: "27"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "126"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "127"
        matchFields:
        - key: "128"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "129"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "82"
    pdID: "81"
  portworxVolume:
    fsType: "84"
    volumeID: "83"
  quobyte:
    group: "76"
    registry: "73"
    tenant: "77"
    user: "75"
    volume: "74"
  rbd:
    fsType: "31"
    image: "30"
    keyring: "34"
    monitors:
    - "29"
    pool: "32"
    secretRef:
      name: "35"
      namespace: "36"
    user: "33"
  scaleIO:
    fsType: "93"
    gateway: "85"
    protectionDomain: "89"
    readOnly: true
    secretRef:
      name: "87"
      namespace: "88"
    sslEnabled: true
    storageMode: "91"
    storagePool: "90"
    system: "86"
    volumeName: "92"
  storageClassName: "124"
  storageos:
    fsType: "98"
    readOnly: true
    secretRef:
      apiVersion: "102"
      fieldPath: "104"
      kind: "99"
      name: "101"
      namespace: "100"
      resourceVersion: "103"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "96"
    volumeNamespace: "97"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "70"
    storagePolicyID: "72"
    storagePolicyName: "71"
    volumePath: "69"
status:
  message: "130"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "131"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "23"
    partition: -1821408417
    volumeID: "22"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "79"
    diskURI: "80"
    fsType: "81"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "67"
    secretNamespace: "69"
    shareName: "68"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "50"
    path: "51"
    secretFile: "53"
    secretRef:
      name: "54"
      namespace: "55"
    user: "52"
  cinder:
    fsType: "47"
    readOnly: true
    secretRef:
      name: "48"
      namespace: "49"
    volumeID: "46"
  claimRef:
    apiVersion: "122"
    fieldPath: "124"
    kind: "119"
    name: "121"
    namespace: "120"
    resourceVersion: "123"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "117"
      namespace: "118"
    controllerPublishSecretRef:
      name: "111"
      namespace: "112"
    driver: "106"
    fsType: "108"
    nodePublishSecretRef:
      name: "115"
      namespace: "116"
    nodeStageSecretRef:
      name: "113"
      namespace: "114"
    volumeAttributes:
      "109": "110"
    volumeHandle: "107"
  fc:
    fsType: "57"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "56"
    wwids:
    - "58"
  flexVolume:
    driver: "61"
    fsType: "62"
    options:
      "65": "66"
    secretRef:
      name: "63"
      namespace: "64"
  flocker:
    datasetName: "59"
    datasetUUID: "60"
  gcePersistentDisk:
    fsType: "21"
    partition: 757808475
    pdName: "20"
    readOnly: true
  glusterfs:
    endpoints: "25"
    endpointsNamespace: "27"
    path: "26"
    readOnly: true
  hostPath:
    path: "24"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "41"
    initiatorName: "45"
    iqn: "39"
    iscsiInterface: "40"
    lun: 494729996
    portals:
    - "42"
    readOnly: true
    secretRef:
      name: "43"
      namespace: "44"
    targetPortal: "38"
  local:
    fsType: "96"
    path: "95"
  mountOptions:
  - "126"
  nfs:
    path: "29"
    server: "28"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "127"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "128"
        matchFields:
        - key: "129"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "130"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "83"
    pdID: "82"
  portworxVolume:
    fsType: "85"
    volumeID: "84"
  quobyte:
    group: "77"
    registry: "74"
    tenant: "78"
    user: "76"
    volume: "75"
  rbd:
    fsType: "32"
    image: "31"
    keyring: "35"
    monitors:
    - "30"
    pool: "33"
    secretRef:
      name: "36"
      namespace: "37"
    user: "34"
  scaleIO:
    fsType: "94"
    gateway: "86"
    protectionDomain: "90"
    readOnly: true
    secretRef:
      name: "88"
      namespace: "89"
    sslEnabled: true
    storageMode: "92"
    storagePool: "91"
    system: "87"
    volumeName: "93"
  storageClassName: "125"
  storageos:
    fsType: "99"
    readOnly: true
    secretRef:
      apiVersion: "103"
      fieldPath: "105"
      kind: "100"
      name: "102"
      namespace: "101"
      resourceVersion: "104"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "97"
    volumeNamespace: "98"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "71"
    storagePolicyID: "73"
    storagePolicyName: "72"
    volumePath: "70"
status:
  message: "131"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "132"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "23"
    partition: -1821408417
    volumeID: "22"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "79"
    diskURI: "80"
    fsType: "81"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "67"
    secretNamespace: "69"
    shareName: "68"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "50"
    path: "51"
    secretFile: "53"
    secretRef:
      name: "54"
      namespace: "55"
    user: "52"
  cinder:
    fsType: "47"
    readOnly: true
    secretRef:
      name: "48"
      namespace: "49"
    volumeID: "46"
  claimRef:
    apiVersion: "122"
    fieldPath: "124"
    kind: "119"
    name: "121"
    namespace: "120"
    resourceVersion: "123"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "117"
      namespace: "118"
    controllerPublishSecretRef:
      name: "111"
      namespace: "112"
    driver: "106"
    fsType: "108"
    nodePublishSecretRef:
      name: "115"
      namespace: "116"
    nodeStageSecretRef:
      name: "113"
      namespace: "114"
    volumeAttributes:
      "109": "110"
    volumeHandle: "107"
  fc:
    fsType: "57"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "56"
    wwids:
    - "58"
  flexVolume:
    driver: "61"
    fsType: "62"
    options:
      "65": "66"
    secretRef:
      name: "63"
      namespace: "64"
  flocker:
    datasetName: "59"
    datasetUUID: "60"
  gcePersistentDisk:
    fsType: "21"
    partition: 757808475
    pdName: "20"
    readOnly: true
  glusterfs:
    endpoints: "25"
    endpointsNamespace: "27"
    path: "26"
    readOnly: true
  hostPath:
    path: "24"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "41"
    initiatorName: "45"
    iqn: "39"
    iscsiInterface: "40"
    lun: 494729996
    portals:
    - "42"
    readOnly: true
    secretRef:
      name: "43"
      namespace: "44"
    targetPortal: "38"
  local:
    fsType: "96"
    path: "95"
  mountOptions:
  - "126"
  nfs:
    path: "29"
    server: "28"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "127"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "128"
        matchFields:
        - key: "129"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "130"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "83"
    pdID: "82"
  portworxVolume:
    fsType: "85"
    volumeID: "84"
  quobyte:
    group: "77"
    registry: "74"
    tenant: "78"
    user: "76"
    volume: "75"
  rbd:
    fsType: "32"
    image: "31"
    keyring: "35"
    monitors:
    - "30"
    pool: "33"
    secretRef:
      name: "36"
      namespace: "37"
    user: "34"
  scaleIO:
    fsType: "94"
    gateway: "86"
    protectionDomain: "90"
    readOnly: true
    secretRef:
      name: "88"
      namespace: "89"
    sslEnabled: true
    storageMode: "92"
    storagePool: "91"
    system: "87"
    volumeName: "93"
  storageClassName: "125"
  storageos:
    fsType: "99"
    readOnly: true
    secretRef:
      apiVersion: "103"
      fieldPath: "105"
      kind: "100"
      name: "102"
      namespace: "101"
      resourceVersion: "104"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "97"
    volumeNamespace: "98"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "71"
    storagePolicyID: "73"
    storagePolicyName: "72"
    volumePath: "70"
status:
  message: "131"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "132"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "22"
    partition: -1821408417
    volumeID: "21"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "78"
    diskURI: "79"
    fsType: "80"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "66"
    secretNamespace: "68"
    shareName: "67"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "49"
    path: "50"
    secretFile: "52"
    secretRef:
      name: "53"
      namespace: "54"
    user: "51"
  cinder:
    fsType: "46"
    readOnly: true
    secretRef:
      name: "47"
      namespace: "48"
    volumeID: "45"
  claimRef:
    apiVersion: "121"
    fieldPath: "123"
    kind: "118"
    name: "120"
    namespace: "119"
    resourceVersion: "122"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "116"
      namespace: "117"
    controllerPublishSecretRef:
      name: "110"
      namespace: "111"
    driver: "105"
    fsType: "107"
    nodePublishSecretRef:
      name: "114"
      namespace: "115"
    nodeStageSecretRef:
      name: "112"
      namespace: "113"
    volumeAttributes:
      "108": "109"
    volumeHandle: "106"
  fc:
    fsType: "56"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "55"
    wwids:
    - "57"
  flexVolume:
    driver: "60"
    fsType: "61"
    options:
      "64": "65"
    secretRef:
      name: "62"
      namespace: "63"
  flocker:
    datasetName: "58"
    datasetUUID: "59"
  gcePersistentDisk:
    fsType: "20"
    partition: 757808475
    pdName: "19"
    readOnly: true
  glusterfs:
    endpoints: "24"
    endpointsNamespace: "26"
    path: "25"
    readOnly: true
  hostPath:
    path: "23"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "40"
    initiatorName: "44"
    iqn: "38"
    iscsiInterface: "39"
    lun: 494729996
    portals:
    - "41"
    readOnly: true
    secretRef:
      name: "42"
      namespace: "43"
    targetPortal: "37"
  local:
    fsType: "95"
    path: "94"
  mountOptions:
  - "125"
  nfs:
    path: "28"
    server: "27"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "126"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "127"
        matchFields:
        - key: "128"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "129"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "82"
    pdID: "81"
  portworxVolume:
    fsType: "84"
    volumeID: "83"
  quobyte:
    group: "76"
    registry: "73"
    tenant: "77"
    user: "75"
    volume: "74"
  rbd:
    fsType: "31"
    image: "30"
    keyring: "34"
    monitors:
    - "29"
    pool: "32"
    secretRef:
      name: "35"
      namespace: "36"
    user: "33"
  scaleIO:
    fsType: "93"
    gateway: "85"
    protectionDomain: "89"
    readOnly: true
    secretRef:
      name: "87"
      namespace: "88"
    sslEnabled: true
    storageMode: "91"
    storagePool: "90"
    system: "86"
    volumeName: "92"
  storageClassName: "124"
  storageos:
    fsType: "98"
    readOnly: true
    secretRef:
      apiVersion: "102"
      fieldPath: "104"
      kind: "99"
      name: "101"
      namespace: "100"
      resourceVersion: "103"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "96"
    volumeNamespace: "97"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "70"
    storagePolicyID: "72"
    storagePolicyName: "71"
    volumePath: "69"
status:
  message: "130"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "131"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  accessModes:
  - £.vǴʌ鴜Ł%!Ũ(MISSING)
  awsElasticBlockStore:
    fsType: "27"
    partition: -321835912
    readOnly: true
    volumeID: "26"
  azureDisk:
    cachingMode: rȮO励鹗塢ē ƕP喂ƈ斎AO6ĴC
    diskName: "83"
    diskURI: "84"
    fsType: "85"
    kind: 壝
    readOnly: false
  azureFile:
    readOnly: true
    secretName: "71"
    secretNamespace: "73"
    shareName: "72"
  capacity:
    脽ěĂ凗蓏Ŋ蛊ĉy緅縕: "57"
  cephfs:
    monitors:
    - "54"
    path: "55"
    secretFile: "57"
    secretRef:
      name: "58"
      namespace: "59"
    user: "56"
  cinder:
    fsType: "51"
    readOnly: true
    secretRef:
      name: "52"
      namespace: "53"
    volumeID: "50"
  claimRef:
    apiVersion: "126"
    fieldPath: "128"
    kind: "123"
    name: "125"
    namespace: "124"
    resourceVersion: "127"
    uid: '>Ņ£趕ã/鈱$-议}ȧ外ĺ'
  csi:
    controllerExpandSecretRef:
      name: "121"
      namespace: "122"
    controllerPublishSecretRef:
      name: "115"
      namespace: "116"
    driver: "110"
    fsType: "112"
    nodePublishSecretRef:
      name: "119"
      namespace: "120"
    nodeStageSecretRef:
      name: "117"
      namespace: "118"
    volumeAttributes:
      "113": "114"
    volumeHandle: "111"
  fc:
    fsType: "61"
    lun: -655946460
    targetWWNs:
    - "60"
    wwids:
    - "62"
  flexVolume:
    driver: "65"
    fsType: "66"
    options:
      "69": "70"
    secretRef:
      name: "67"
      namespace: "68"
  flocker:
    datasetName: "63"
    datasetUUID: "64"
  gcePersistentDisk:
    fsType: "25"
    partition: 1035515117
    pdName: "24"
    readOnly: true
  glusterfs:
    endpoints: "29"
    endpointsNamespace: "31"
    path: "30"
  hostPath:
    path: "28"
    type: 狱³-Ǐ忄*齧獚
  iscsi:
    fsType: "45"
    initiatorName: "49"
    iqn: "43"
    iscsiInterface: "44"
    lun: -21009133
    portals:
    - "46"
    readOnly: true
    secretRef:
      name: "47"
      namespace: "48"
    targetPortal: "42"
  local:
    fsType: "100"
    path: "99"
  mountOptions:
  - "130"
  nfs:
    path: "33"
    readOnly: true
    server: "32"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "131"
          operator: 廄裭4懙鏮嵒ƫS捕ɷD¡轫n(
          values:
          - "132"
        matchFields:
        - key: "133"
          operator: 郀叚Fi皬择,Q捇ȸ{+ɸ殁
          values:
          - "134"
  persistentVolumeReclaimPolicy: ž譋娲瘹ɭȊɚɎ(dɅ囥糷
  photonPersistentDisk:
    fsType: "87"
    pdID: "86"
  portworxVolume:
    fsType: "89"
    volumeID: "88"
  quobyte:
    group: "81"
    registry: "78"
    tenant: "82"
    user: "80"
    volume: "79"
  rbd:
    fsType: "36"
    image: "35"
    keyring: "39"
    monitors:
    - "34"
    pool: "37"
    readOnly: true
    secretRef:
      name: "40"
      namespace: "41"
    user: "38"
  scaleIO:
    fsType: "98"
    gateway: "90"
    protectionDomain: "94"
    readOnly: true
    secretRef:
      name: "92"
      namespace: "93"
    sslEnabled: true
    storageMode: "96"
    storagePool: "95"
    system: "91"
    volumeName: "97"
  storageClassName: "129"
  storageos:
    fsType: "103"
    readOnly: true
    secretRef:
      apiVersion: "107"
      fieldPath: "109"
      kind: "104"
      name: "106"
      namespace: "105"
      resourceVersion: "108"
      uid: ?øēƺ魋Ď儇击3ƆìQ
    volumeName: "101"
    volumeNamespace: "102"
  volumeMode: 圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1ZƜ/
  vsphereVolume:
    fsType: "75"
    storagePolicyID: "77"
    storagePolicyName: "76"
    volumePath: "74"
status:
  message: "135"
  phase: a縳讋ɮ衺勽Ƙq/Ź u衲<¿燥ǖ_è
  reason: "136"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "22"
    partition: -1821408417
    volumeID: "21"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "78"
    diskURI: "79"
    fsType: "80"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "66"
    secretNamespace: "68"
    shareName: "67"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "49"
    path: "50"
    secretFile: "52"
    secretRef:
      name: "53"
      namespace: "54"
    user: "51"
  cinder:
    fsType: "46"
    readOnly: true
    secretRef:
      name: "47"
      namespace: "48"
    volumeID: "45"
  claimRef:
    apiVersion: "121"
    fieldPath: "123"
    kind: "118"
    name: "120"
    namespace: "119"
    resourceVersion: "122"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "116"
      namespace: "117"
    controllerPublishSecretRef:
      name: "110"
      namespace: "111"
    driver: "105"
    fsType: "107"
    nodePublishSecretRef:
      name: "114"
      namespace: "115"
    nodeStageSecretRef:
      name: "112"
      namespace: "113"
    volumeAttributes:
      "108": "109"
    volumeHandle: "106"
  fc:
    fsType: "56"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "55"
    wwids:
    - "57"
  flexVolume:
    driver: "60"
    fsType: "61"
    options:
      "64": "65"
    secretRef:
      name: "62"
      namespace: "63"
  flocker:
    datasetName: "58"
    datasetUUID: "59"
  gcePersistentDisk:
    fsType: "20"
    partition: 757808475
    pdName: "19"
    readOnly: true
  glusterfs:
    endpoints: "24"
    endpointsNamespace: "26"
    path: "25"
    readOnly: true
  hostPath:
    path: "23"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "40"
    initiatorName: "44"
    iqn: "38"
    iscsiInterface: "39"
    lun: 494729996
    portals:
    - "41"
    readOnly: true
    secretRef:
      name: "42"
      namespace: "43"
    targetPortal: "37"
  local:
    fsType: "95"
    path: "94"
  mountOptions:
  - "125"
  nfs:
    path: "28"
    server: "27"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "126"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "127"
        matchFields:
        - key: "128"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "129"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "82"
    pdID: "81"
  portworxVolume:
    fsType: "84"
    volumeID: "83"
  quobyte:
    group: "76"
    registry: "73"
    tenant: "77"
    user: "75"
    volume: "74"
  rbd:
    fsType: "31"
    image: "30"
    keyring: "34"
    monitors:
    - "29"
    pool: "32"
    secretRef:
      name: "35"
      namespace: "36"
    user: "33"
  scaleIO:
    fsType: "93"
    gateway: "85"
    protectionDomain: "89"
    readOnly: true
    secretRef:
      name: "87"
      namespace: "88"
    sslEnabled: true
    storageMode: "91"
    storagePool: "90"
    system: "86"
    volumeName: "92"
  storageClassName: "124"
  storageos:
    fsType: "98"
    readOnly: true
    secretRef:
      apiVersion: "102"
      fieldPath: "104"
      kind: "99"
      name: "101"
      namespace: "100"
      resourceVersion: "103"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "96"
    volumeNamespace: "97"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "70"
    storagePolicyID: "72"
    storagePolicyName: "71"
    volumePath: "69"
status:
  message: "130"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "131"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "23"
    partition: -1821408417
    volumeID: "22"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "79"
    diskURI: "80"
    fsType: "81"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "67"
    secretNamespace: "69"
    shareName: "68"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "50"
    path: "51"
    secretFile: "53"
    secretRef:
      name: "54"
      namespace: "55"
    user: "52"
  cinder:
    fsType: "47"
    readOnly: true
    secretRef:
      name: "48"
      namespace: "49"
    volumeID: "46"
  claimRef:
    apiVersion: "122"
    fieldPath: "124"
    kind: "119"
    name: "121"
    namespace: "120"
    resourceVersion: "123"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "117"
      namespace: "118"
    controllerPublishSecretRef:
      name: "111"
      namespace: "112"
    driver: "106"
    fsType: "108"
    nodePublishSecretRef:
      name: "115"
      namespace: "116"
    nodeStageSecretRef:
      name: "113"
      namespace: "114"
    volumeAttributes:
      "109": "110"
    volumeHandle: "107"
  fc:
    fsType: "57"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "56"
    wwids:
    - "58"
  flexVolume:
    driver: "61"
    fsType: "62"
    options:
      "65": "66"
    secretRef:
      name: "63"
      namespace: "64"
  flocker:
    datasetName: "59"
    datasetUUID: "60"
  gcePersistentDisk:
    fsType: "21"
    partition: 757808475
    pdName: "20"
    readOnly: true
  glusterfs:
    endpoints: "25"
    endpointsNamespace: "27"
    path: "26"
    readOnly: true
  hostPath:
    path: "24"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "41"
    initiatorName: "45"
    iqn: "39"
    iscsiInterface: "40"
    lun: 494729996
    portals:
    - "42"
    readOnly: true
    secretRef:
      name: "43"
      namespace: "44"
    targetPortal: "38"
  local:
    fsType: "96"
    path: "95"
  mountOptions:
  - "126"
  nfs:
    path: "29"
    server: "28"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "127"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "128"
        matchFields:
        - key: "129"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "130"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "83"
    pdID: "82"
  portworxVolume:
    fsType: "85"
    volumeID: "84"
  quobyte:
    group: "77"
    registry: "74"
    tenant: "78"
    user: "76"
    volume: "75"
  rbd:
    fsType: "32"
    image: "31"
    keyring: "35"
    monitors:
    - "30"
    pool: "33"
    secretRef:
      name: "36"
      namespace: "37"
    user: "34"
  scaleIO:
    fsType: "94"
    gateway: "86"
    protectionDomain: "90"
    readOnly: true
    secretRef:
      name: "88"
      namespace: "89"
    sslEnabled: true
    storageMode: "92"
    storagePool: "91"
    system: "87"
    volumeName: "93"
  storageClassName: "125"
  storageos:
    fsType: "99"
    readOnly: true
    secretRef:
      apiVersion: "103"
      fieldPath: "105"
      kind: "100"
      name: "102"
      namespace: "101"
      resourceVersion: "104"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "97"
    volumeNamespace: "98"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "71"
    storagePolicyID: "73"
    storagePolicyName: "72"
    volumePath: "70"
status:
  message: "131"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "132"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "23"
    partition: -1821408417
    volumeID: "22"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "79"
    diskURI: "80"
    fsType: "81"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "67"
    secretNamespace: "69"
    shareName: "68"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "50"
    path: "51"
    secretFile: "53"
    secretRef:
      name: "54"
      namespace: "55"
    user: "52"
  cinder:
    fsType: "47"
    readOnly: true
    secretRef:
      name: "48"
      namespace: "49"
    volumeID: "46"
  claimRef:
    apiVersion: "122"
    fieldPath: "124"
    kind: "119"
    name: "121"
    namespace: "120"
    resourceVersion: "123"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "117"
      namespace: "118"
    controllerPublishSecretRef:
      name: "111"
      namespace: "112"
    driver: "106"
    fsType: "108"
    nodePublishSecretRef:
      name: "115"
      namespace: "116"
    nodeStageSecretRef:
      name: "113"
      namespace: "114"
    volumeAttributes:
      "109": "110"
    volumeHandle: "107"
  fc:
    fsType: "57"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "56"
    wwids:
    - "58"
  flexVolume:
    driver: "61"
    fsType: "62"
    options:
      "65": "66"
    secretRef:
      name: "63"
      namespace: "64"
  flocker:
    datasetName: "59"
    datasetUUID: "60"
  gcePersistentDisk:
    fsType: "21"
    partition: 757808475
    pdName: "20"
    readOnly: true
  glusterfs:
    endpoints: "25"
    endpointsNamespace: "27"
    path: "26"
    readOnly: true
  hostPath:
    path: "24"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "41"
    initiatorName: "45"
    iqn: "39"
    iscsiInterface: "40"
    lun: 494729996
    portals:
    - "42"
    readOnly: true
    secretRef:
      name: "43"
      namespace: "44"
    targetPortal: "38"
  local:
    fsType: "96"
    path: "95"
  mountOptions:
  - "126"
  nfs:
    path: "29"
    server: "28"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "127"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "128"
        matchFields:
        - key: "129"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "130"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "83"
    pdID: "82"
  portworxVolume:
    fsType: "85"
    volumeID: "84"
  quobyte:
    group: "77"
    registry: "74"
    tenant: "78"
    user: "76"
    volume: "75"
  rbd:
    fsType: "32"
    image: "31"
    keyring: "35"
    monitors:
    - "30"
    pool: "33"
    secretRef:
      name: "36"
      namespace: "37"
    user: "34"
  scaleIO:
    fsType: "94"
    gateway: "86"
    protectionDomain: "90"
    readOnly: true
    secretRef:
      name: "88"
      namespace: "89"
    sslEnabled: true
    storageMode: "92"
    storagePool: "91"
    system: "87"
    volumeName: "93"
  storageClassName: "125"
  storageos:
    fsType: "99"
    readOnly: true
    secretRef:
      apiVersion: "103"
      fieldPath: "105"
      kind: "100"
      name: "102"
      namespace: "101"
      resourceVersion: "104"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "97"
    volumeNamespace: "98"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "71"
    storagePolicyID: "73"
    storagePolicyName: "72"
    volumePath: "70"
status:
  message: "131"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "132"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "22"
    partition: -1821408417
    volumeID: "21"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "78"
    diskURI: "79"
    fsType: "80"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "66"
    secretNamespace: "68"
    shareName: "67"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "49"
    path: "50"
    secretFile: "52"
    secretRef:
      name: "53"
      namespace: "54"
    user: "51"
  cinder:
    fsType: "46"
    readOnly: true
    secretRef:
      name: "47"
      namespace: "48"
    volumeID: "45"
  claimRef:
    apiVersion: "121"
    fieldPath: "123"
    kind: "118"
    name: "120"
    namespace: "119"
    resourceVersion: "122"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "116"
      namespace: "117"
    controllerPublishSecretRef:
      name: "110"
      namespace: "111"
    driver: "105"
    fsType: "107"
    nodePublishSecretRef:
      name: "114"
      namespace: "115"
    nodeStageSecretRef:
      name: "112"
      namespace: "113"
    volumeAttributes:
      "108": "109"
    volumeHandle: "106"
  fc:
    fsType: "56"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "55"
    wwids:
    - "57"
  flexVolume:
    driver: "60"
    fsType: "61"
    options:
      "64": "65"
    secretRef:
      name: "62"
      namespace: "63"
  flocker:
    datasetName: "58"
    datasetUUID: "59"
  gcePersistentDisk:
    fsType: "20"
    partition: 757808475
    pdName: "19"
    readOnly: true
  glusterfs:
    endpoints: "24"
    endpointsNamespace: "26"
    path: "25"
    readOnly: true
  hostPath:
    path: "23"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "40"
    initiatorName: "44"
    iqn: "38"
    iscsiInterface: "39"
    lun: 494729996
    portals:
    - "41"
    readOnly: true
    secretRef:
      name: "42"
      namespace: "43"
    targetPortal: "37"
  local:
    fsType: "95"
    path: "94"
  mountOptions:
  - "125"
  nfs:
    path: "28"
    server: "27"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "126"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "127"
        matchFields:
        - key: "128"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "129"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "82"
    pdID: "81"
  portworxVolume:
    fsType: "84"
    volumeID: "83"
  quobyte:
    group: "76"
    registry: "73"
    tenant: "77"
    user: "75"
    volume: "74"
  rbd:
    fsType: "31"
    image: "30"
    keyring: "34"
    monitors:
    - "29"
    pool: "32"
    secretRef:
      name: "35"
      namespace: "36"
    user: "33"
  scaleIO:
    fsType: "93"
    gateway: "85"
    protectionDomain: "89"
    readOnly: true
    secretRef:
      name: "87"
      namespace: "88"
    sslEnabled: true
    storageMode: "91"
    storagePool: "90"
    system: "86"
    volumeName: "92"
  storageClassName: "124"
  storageos:
    fsType: "98"
    readOnly: true
    secretRef:
      apiVersion: "102"
      fieldPath: "104"
      kind: "99"
      name: "101"
      namespace: "100"
      resourceVersion: "103"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "96"
    volumeNamespace: "97"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "70"
    storagePolicyID: "72"
    storagePolicyName: "71"
    volumePath: "69"
status:
  message: "130"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "131"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "23"
    partition: -1821408417
    volumeID: "22"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "79"
    diskURI: "80"
    fsType: "81"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "67"
    secretNamespace: "69"
    shareName: "68"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "50"
    path: "51"
    secretFile: "53"
    secretRef:
      name: "54"
      namespace: "55"
    user: "52"
  cinder:
    fsType: "47"
    readOnly: true
    secretRef:
      name: "48"
      namespace: "49"
    volumeID: "46"
  claimRef:
    apiVersion: "122"
    fieldPath: "124"
    kind: "119"
    name: "121"
    namespace: "120"
    resourceVersion: "123"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "117"
      namespace: "118"
    controllerPublishSecretRef:
      name: "111"
      namespace: "112"
    driver: "106"
    fsType: "108"
    nodePublishSecretRef:
      name: "115"
      namespace: "116"
    nodeStageSecretRef:
      name: "113"
      namespace: "114"
    volumeAttributes:
      "109": "110"
    volumeHandle: "107"
  fc:
    fsType: "57"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "56"
    wwids:
    - "58"
  flexVolume:
    driver: "61"
    fsType: "62"
    options:
      "65": "66"
    secretRef:
      name: "63"
      namespace: "64"
  flocker:
    datasetName: "59"
    datasetUUID: "60"
  gcePersistentDisk:
    fsType: "21"
    partition: 757808475
    pdName: "20"
    readOnly: true
  glusterfs:
    endpoints: "25"
    endpointsNamespace: "27"
    path: "26"
    readOnly: true
  hostPath:
    path: "24"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "41"
    initiatorName: "45"
    iqn: "39"
    iscsiInterface: "40"
    lun: 494729996
    portals:
    - "42"
    readOnly: true
    secretRef:
      name: "43"
      namespace: "44"
    targetPortal: "38"
  local:
    fsType: "96"
    path: "95"
  mountOptions:
  - "126"
  nfs:
    path: "29"
    server: "28"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "127"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "128"
        matchFields:
        - key: "129"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "130"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "83"
    pdID: "82"
  portworxVolume:
    fsType: "85"
    volumeID: "84"
  quobyte:
    group: "77"
    registry: "74"
    tenant: "78"
    user: "76"
    volume: "75"
  rbd:
    fsType: "32"
    image: "31"
    keyring: "35"
    monitors:
    - "30"
    pool: "33"
    secretRef:
      name: "36"
      namespace: "37"
    user: "34"
  scaleIO:
    fsType: "94"
    gateway: "86"
    protectionDomain: "90"
    readOnly: true
    secretRef:
      name: "88"
      namespace: "89"
    sslEnabled: true
    storageMode: "92"
    storagePool: "91"
    system: "87"
    volumeName: "93"
  storageClassName: "125"
  storageos:
    fsType: "99"
    readOnly: true
    secretRef:
      apiVersion: "103"
      fieldPath: "105"
      kind: "100"
      name: "102"
      namespace: "101"
      resourceVersion: "104"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "97"
    volumeNamespace: "98"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "71"
    storagePolicyID: "73"
    storagePolicyName: "72"
    volumePath: "70"
status:
  message: "131"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "132"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "22"
    partition: -1821408417
    volumeID: "21"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "78"
    diskURI: "79"
    fsType: "80"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "66"
    secretNamespace: "68"
    shareName: "67"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "49"
    path: "50"
    secretFile: "52"
    secretRef:
      name: "53"
      namespace: "54"
    user: "51"
  cinder:
    fsType: "46"
    readOnly: true
    secretRef:
      name: "47"
      namespace: "48"
    volumeID: "45"
  claimRef:
    apiVersion: "121"
    fieldPath: "123"
    kind: "118"
    name: "120"
    namespace: "119"
    resourceVersion: "122"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "116"
      namespace: "117"
    controllerPublishSecretRef:
      name: "110"
      namespace: "111"
    driver: "105"
    fsType: "107"
    nodePublishSecretRef:
      name: "114"
      namespace: "115"
    nodeStageSecretRef:
      name: "112"
      namespace: "113"
    volumeAttributes:
      "108": "109"
    volumeHandle: "106"
  fc:
    fsType: "56"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "55"
    wwids:
    - "57"
  flexVolume:
    driver: "60"
    fsType: "61"
    options:
      "64": "65"
    secretRef:
      name: "62"
      namespace: "63"
  flocker:
    datasetName: "58"
    datasetUUID: "59"
  gcePersistentDisk:
    fsType: "20"
    partition: 757808475
    pdName: "19"
    readOnly: true
  glusterfs:
    endpoints: "24"
    endpointsNamespace: "26"
    path: "25"
    readOnly: true
  hostPath:
    path: "23"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "40"
    initiatorName: "44"
    iqn: "38"
    iscsiInterface: "39"
    lun: 494729996
    portals:
    - "41"
    readOnly: true
    secretRef:
      name: "42"
      namespace: "43"
    targetPortal: "37"
  local:
    fsType: "95"
    path: "94"
  mountOptions:
  - "125"
  nfs:
    path: "28"
    server: "27"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "126"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "127"
        matchFields:
        - key: "128"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "129"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "82"
    pdID: "81"
  portworxVolume:
    fsType: "84"
    volumeID: "83"
  quobyte:
    group: "76"
    registry: "73"
    tenant: "77"
    user: "75"
    volume: "74"
  rbd:
    fsType: "31"
    image: "30"
    keyring: "34"
    monitors:
    - "29"
    pool: "32"
    secretRef:
      name: "35"
      namespace: "36"
    user: "33"
  scaleIO:
    fsType: "93"
    gateway: "85"
    protectionDomain: "89"
    readOnly: true
    secretRef:
      name: "87"
      namespace: "88"
    sslEnabled: true
    storageMode: "91"
    storagePool: "90"
    system: "86"
    volumeName: "92"
  storageClassName: "124"
  storageos:
    fsType: "98"
    readOnly: true
    secretRef:
      apiVersion: "102"
      fieldPath: "104"
      kind: "99"
      name: "101"
      namespace: "100"
      resourceVersion: "103"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "96"
    volumeNamespace: "97"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "70"
    storagePolicyID: "72"
    storagePolicyName: "71"
    volumePath: "69"
status:
  message: "130"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "131"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolume41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolume/2:
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - ƺ魋Ď儇击3ƆìQ
  awsElasticBlockStore:
    fsType: "22"
    partition: -1821408417
    volumeID: "21"
  azureDisk:
    cachingMode: ȎțêɘĲ斬³;Ơ歿
    diskName: "78"
    diskURI: "79"
    fsType: "80"
    kind: 夌碕ʂɭîcP$Iņɖ橙9ȫŚʒ
    readOnly: false
  azureFile:
    secretName: "66"
    secretNamespace: "68"
    shareName: "67"
  capacity:
    '@Hr鯹)晿': "617"
  cephfs:
    monitors:
    - "49"
    path: "50"
    secretFile: "52"
    secretRef:
      name: "53"
      namespace: "54"
    user: "51"
  cinder:
    fsType: "46"
    readOnly: true
    secretRef:
      name: "47"
      namespace: "48"
    volumeID: "45"
  claimRef:
    apiVersion: "121"
    fieldPath: "123"
    kind: "118"
    name: "120"
    namespace: "119"
    resourceVersion: "122"
    uid: 艋涽託仭w-檮Ǣ冖ž琔n宂¬轚
  csi:
    controllerExpandSecretRef:
      name: "116"
      namespace: "117"
    controllerPublishSecretRef:
      name: "110"
      namespace: "111"
    driver: "105"
    fsType: "107"
    nodePublishSecretRef:
      name: "114"
      namespace: "115"
    nodeStageSecretRef:
      name: "112"
      namespace: "113"
    volumeAttributes:
      "108": "109"
    volumeHandle: "106"
  fc:
    fsType: "56"
    lun: 1820560904
    readOnly: true
    targetWWNs:
    - "55"
    wwids:
    - "57"
  flexVolume:
    driver: "60"
    fsType: "61"
    options:
      "64": "65"
    secretRef:
      name: "62"
      namespace: "63"
  flocker:
    datasetName: "58"
    datasetUUID: "59"
  gcePersistentDisk:
    fsType: "20"
    partition: 757808475
    pdName: "19"
    readOnly: true
  glusterfs:
    endpoints: "24"
    endpointsNamespace: "26"
    path: "25"
    readOnly: true
  hostPath:
    path: "23"
    type: rt昍řČ扷5ƗǸƢ6/
  iscsi:
    chapAuthDiscovery: true
    fsType: "40"
    initiatorName: "44"
    iqn: "38"
    iscsiInterface: "39"
    lun: 494729996
    portals:
    - "41"
    readOnly: true
    secretRef:
      name: "42"
      namespace: "43"
    targetPortal: "37"
  local:
    fsType: "95"
    path: "94"
  mountOptions:
  - "125"
  nfs:
    path: "28"
    server: "27"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "126"
          operator: f倐ȓ圬剴扲ȿQZ{ʁgɸ=ǤÆ碛,1
          values:
          - "127"
        matchFields:
        - key: "128"
          operator: l恕ɍȇ廄裭4懙鏮嵒
          values:
          - "129"
  persistentVolumeReclaimPolicy: £趕ã/鈱$-议}ȧ外ĺ
  photonPersistentDisk:
    fsType: "82"
    pdID: "81"
  portworxVolume:
    fsType: "84"
    volumeID: "83"
  quobyte:
    group: "76"
    registry: "73"
    tenant: "77"
    user: "75"
    volume: "74"
  rbd:
    fsType: "31"
    image: "30"
    keyring: "34"
    monitors:
    - "29"
    pool: "32"
    secretRef:
      name: "35"
      namespace: "36"
    user: "33"
  scaleIO:
    fsType: "93"
    gateway: "85"
    protectionDomain: "89"
    readOnly: true
    secretRef:
      name: "87"
      namespace: "88"
    sslEnabled: true
    storageMode: "91"
    storagePool: "90"
    system: "86"
    volumeName: "92"
  storageClassName: "124"
  storageos:
    fsType: "98"
    readOnly: true
    secretRef:
      apiVersion: "102"
      fieldPath: "104"
      kind: "99"
      name: "101"
      namespace: "100"
      resourceVersion: "103"
      uid: ȸd賑'üA謥ǣ偐圠=l
    volumeName: "96"
    volumeNamespace: "97"
  volumeMode: 譋娲瘹ɭȊɚɎ(
  vsphereVolume:
    fsType: "70"
    storagePolicyID: "72"
    storagePolicyName: "71"
    volumePath: "69"
status:
  message: "130"
  phase: S捕ɷD¡轫n(鲼ƳÐƣKʘ
  reason: "131"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.after_roundtrip.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.after_roundtrip1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.after_roundtrip10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.after_roundtrip11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.after_roundtrip2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.after_roundtrip3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.after_roundtrip4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  accessModes:
  - 脽ěĂ凗蓏Ŋ蛊ĉy緅縕
  dataSource:
    apiGroup: "32"
    kind: "33"
    name: "34"
  resources:
    limits:
      p:籀帊: "219"
    requests:
      骀Šĸ: "986"
  selector:
    matchExpressions:
    - key: g0d--o82-g50-u--25cu87--r7p-w1e67-8j/42M--n1-p5.3___47._49pIB_o61ISU4--N
      operator: In
      values:
      - t_k-_v.6
    matchLabels:
      p-g8c2-k-912e5-c-e63-n-3n.c83-b-w7ld-6cs06xj-x5yv0wm-k1-87-3s-g3/9_-.-W._AAn---v_-5-_8LXP-o-9..1m: JTrcd-2.-__E_Sv__26KX_R_.-N
  storageClassName: "31"
  volumeMode: e0ɔȖ脵鴈Ōƾ焁yǠ/淹\韲翁&
  volumeName: "30"
status:
  accessModes:
  - '曢\%!枅(MISSING):'
  capacity:
    ǛƓɥ踓Ǻǧ湬淊kŪ睴: "659"
  conditions:
  - lastProbeTime: "2197-07-19T07:02:22Z"
    lastTransitionTime: "2641-12-26T14:46:27Z"
    message: "36"
    reason: "35"
    status: ĪȸŹăȲĻ¤Ħʅ芝
    type: 3fƻfʣ繡楙¯ĦE
  phase: s

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.after_roundtrip5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.after_roundtrip6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.after_roundtrip7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  accessModes:
  - 脽ěĂ凗蓏Ŋ蛊ĉy緅縕
  dataSource:
    apiGroup: "32"
    kind: "33"
    name: "34"
  resources:
    limits:
      p:籀帊: "219"
    requests:
      骀Šĸ: "986"
  selector:
    matchExpressions:
    - key: g0d--o82-g50-u--25cu87--r7p-w1e67-8j/42M--n1-p5.3___47._49pIB_o61ISU4--N
      operator: In
      values:
      - t_k-_v.6
    matchLabels:
      p-g8c2-k-912e5-c-e63-n-3n.c83-b-w7ld-6cs06xj-x5yv0wm-k1-87-3s-g3/9_-.-W._AAn---v_-5-_8LXP-o-9..1m: JTrcd-2.-__E_Sv__26KX_R_.-N
  storageClassName: "31"
  volumeMode: e0ɔȖ脵鴈Ōƾ焁yǠ/淹\韲翁&
  volumeName: "30"
status:
  accessModes:
  - '曢\%!枅(MISSING):'
  capacity:
    ǛƓɥ踓Ǻǧ湬淊kŪ睴: "659"
  conditions:
  - lastProbeTime: "2197-07-19T07:02:22Z"
    lastTransitionTime: "2641-12-26T14:46:27Z"
    message: "36"
    reason: "35"
    status: ĪȸŹăȲĻ¤Ħʅ芝
    type: 3fƻfʣ繡楙¯ĦE
  phase: s

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.after_roundtrip8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.after_roundtrip9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    claims:
    - name: nameValue
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue
  resizeStatus: resizeStatusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "28"
    kind: "29"
    name: "30"
  dataSourceRef:
    apiGroup: "31"
    kind: "32"
    name: "33"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "27"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "26"
status:
  accessModes:
  - l殛瓷雼浢Ü礽
  allocatedResources:
    ' u衲<¿燥': "98"
  capacity:
    '{囥': "721"
  conditions:
  - lastProbeTime: "2343-07-10T15:32:16Z"
    lastTransitionTime: "2944-07-13T11:02:13Z"
    message: "35"
    reason: "34"
    status: Ka縳讋ɮ衺勽Ƙq
    type: n(鲼ƳÐƣKʘńw:5塋訩塶"=
  phase: gɸ=ǤÆ碛,1ZƜ/C龷Ȫ
  resizeStatus: '{舁吉蓨O澘'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue
  resizeStatus: resizeStatusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "27"
    kind: "28"
    name: "29"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "26"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "25"
status:
  accessModes:
  - ĭÐl恕ɍȇ廄裭4懙
  capacity:
    嵒ƫS捕ɷD¡轫n: "583"
  conditions:
  - lastProbeTime: "2588-10-04T08:20:38Z"
    lastTransitionTime: "2095-10-31T02:52:44Z"
    message: "31"
    reason: "30"
    status: ƣKʘńw:5塋
    type: Ü郀
  phase: 燴壩卄蓨MĮ?

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  accessModes:
  - 脽ěĂ凗蓏Ŋ蛊ĉy緅縕
  dataSource:
    apiGroup: "32"
    kind: "33"
    name: "34"
  resources:
    limits:
      p:籀帊: "219"
    requests:
      骀Šĸ: "986"
  selector:
    matchExpressions:
    - key: g0d--o82-g50-u--25cu87--r7p-w1e67-8j/42M--n1-p5.3___47._49pIB_o61ISU4--N
      operator: In
      values:
      - t_k-_v.6
    matchLabels:
      p-g8c2-k-912e5-c-e63-n-3n.c83-b-w7ld-6cs06xj-x5yv0wm-k1-87-3s-g3/9_-.-W._AAn---v_-5-_8LXP-o-9..1m: JTrcd-2.-__E_Sv__26KX_R_.-N
  storageClassName: "31"
  volumeMode: e0ɔȖ脵鴈Ōƾ焁yǠ/淹\韲翁&
  volumeName: "30"
status:
  accessModes:
  - '曢\%!枅(MISSING):'
  capacity:
    ǛƓɥ踓Ǻǧ湬淊kŪ睴: "659"
  conditions:
  - lastProbeTime: "2197-07-19T07:02:22Z"
    lastTransitionTime: "2641-12-26T14:46:27Z"
    message: "36"
    reason: "35"
    status: ĪȸŹăȲĻ¤Ħʅ芝
    type: 3fƻfʣ繡楙¯ĦE
  phase: s

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "27"
    kind: "28"
    name: "29"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "26"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "25"
status:
  accessModes:
  - ĭÐl恕ɍȇ廄裭4懙
  capacity:
    嵒ƫS捕ɷD¡轫n: "583"
  conditions:
  - lastProbeTime: "2588-10-04T08:20:38Z"
    lastTransitionTime: "2095-10-31T02:52:44Z"
    message: "31"
    reason: "30"
    status: ƣKʘńw:5塋
    type: Ü郀
  phase: 燴壩卄蓨MĮ?

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue
  resizeStatus: resizeStatusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "28"
    kind: "29"
    name: "30"
  dataSourceRef:
    apiGroup: "31"
    kind: "32"
    name: "33"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "27"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "26"
status:
  accessModes:
  - l殛瓷雼浢Ü礽
  capacity:
    '{囥': "721"
  conditions:
  - lastProbeTime: "2343-07-10T15:32:16Z"
    lastTransitionTime: "2944-07-13T11:02:13Z"
    message: "35"
    reason: "34"
    status: Ka縳讋ɮ衺勽Ƙq
    type: n(鲼ƳÐƣKʘńw:5塋訩塶"=
  phase: gɸ=ǤÆ碛,1ZƜ/C龷Ȫ

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "28"
    kind: "29"
    name: "30"
  dataSourceRef:
    apiGroup: "31"
    kind: "32"
    name: "33"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "27"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "26"
status:
  accessModes:
  - l殛瓷雼浢Ü礽
  allocatedResources:
    ' u衲<¿燥': "98"
  capacity:
    '{囥': "721"
  conditions:
  - lastProbeTime: "2343-07-10T15:32:16Z"
    lastTransitionTime: "2944-07-13T11:02:13Z"
    message: "35"
    reason: "34"
    status: Ka縳讋ɮ衺勽Ƙq
    type: n(鲼ƳÐƣKʘńw:5塋訩塶"=
  phase: gɸ=ǤÆ碛,1ZƜ/C龷Ȫ
  resizeStatus: '{舁吉蓨O澘'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    claims:
    - name: nameValue
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    claims:
    - name: nameValue
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    claims:
    - name: nameValue
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "27"
    kind: "28"
    name: "29"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "26"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "25"
status:
  accessModes:
  - ĭÐl恕ɍȇ廄裭4懙
  capacity:
    嵒ƫS捕ɷD¡轫n: "583"
  conditions:
  - lastProbeTime: "2588-10-04T08:20:38Z"
    lastTransitionTime: "2095-10-31T02:52:44Z"
    message: "31"
    reason: "30"
    status: ƣKʘńw:5塋
    type: Ü郀
  phase: 燴壩卄蓨MĮ?

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  accessModes:
  - 脽ěĂ凗蓏Ŋ蛊ĉy緅縕
  dataSource:
    apiGroup: "32"
    kind: "33"
    name: "34"
  resources:
    limits:
      p:籀帊: "219"
    requests:
      骀Šĸ: "986"
  selector:
    matchExpressions:
    - key: g0d--o82-g50-u--25cu87--r7p-w1e67-8j/42M--n1-p5.3___47._49pIB_o61ISU4--N
      operator: In
      values:
      - t_k-_v.6
    matchLabels:
      p-g8c2-k-912e5-c-e63-n-3n.c83-b-w7ld-6cs06xj-x5yv0wm-k1-87-3s-g3/9_-.-W._AAn---v_-5-_8LXP-o-9..1m: JTrcd-2.-__E_Sv__26KX_R_.-N
  storageClassName: "31"
  volumeMode: e0ɔȖ脵鴈Ōƾ焁yǠ/淹\韲翁&
  volumeName: "30"
status:
  accessModes:
  - '曢\%!枅(MISSING):'
  capacity:
    ǛƓɥ踓Ǻǧ湬淊kŪ睴: "659"
  conditions:
  - lastProbeTime: "2197-07-19T07:02:22Z"
    lastTransitionTime: "2641-12-26T14:46:27Z"
    message: "36"
    reason: "35"
    status: ĪȸŹăȲĻ¤Ħʅ芝
    type: 3fƻfʣ繡楙¯ĦE
  phase: s

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "27"
    kind: "28"
    name: "29"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "26"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "25"
status:
  accessModes:
  - ĭÐl恕ɍȇ廄裭4懙
  capacity:
    嵒ƫS捕ɷD¡轫n: "583"
  conditions:
  - lastProbeTime: "2588-10-04T08:20:38Z"
    lastTransitionTime: "2095-10-31T02:52:44Z"
    message: "31"
    reason: "30"
    status: ƣKʘńw:5塋
    type: Ü郀
  phase: 燴壩卄蓨MĮ?

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue
  resizeStatus: resizeStatusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "28"
    kind: "29"
    name: "30"
  dataSourceRef:
    apiGroup: "31"
    kind: "32"
    name: "33"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "27"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "26"
status:
  accessModes:
  - l殛瓷雼浢Ü礽
  capacity:
    '{囥': "721"
  conditions:
  - lastProbeTime: "2343-07-10T15:32:16Z"
    lastTransitionTime: "2944-07-13T11:02:13Z"
    message: "35"
    reason: "34"
    status: Ka縳讋ɮ衺勽Ƙq
    type: n(鲼ƳÐƣKʘńw:5塋訩塶"=
  phase: gɸ=ǤÆ碛,1ZƜ/C龷Ȫ

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "28"
    kind: "29"
    name: "30"
  dataSourceRef:
    apiGroup: "31"
    kind: "32"
    name: "33"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "27"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "26"
status:
  accessModes:
  - l殛瓷雼浢Ü礽
  allocatedResources:
    ' u衲<¿燥': "98"
  capacity:
    '{囥': "721"
  conditions:
  - lastProbeTime: "2343-07-10T15:32:16Z"
    lastTransitionTime: "2944-07-13T11:02:13Z"
    message: "35"
    reason: "34"
    status: Ka縳讋ɮ衺勽Ƙq
    type: n(鲼ƳÐƣKʘńw:5塋訩塶"=
  phase: gɸ=ǤÆ碛,1ZƜ/C龷Ȫ
  resizeStatus: '{舁吉蓨O澘'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue
  resizeStatus: resizeStatusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    claims:
    - name: nameValue
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    claims:
    - name: nameValue
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "27"
    kind: "28"
    name: "29"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "26"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "25"
status:
  accessModes:
  - ĭÐl恕ɍȇ廄裭4懙
  capacity:
    嵒ƫS捕ɷD¡轫n: "583"
  conditions:
  - lastProbeTime: "2588-10-04T08:20:38Z"
    lastTransitionTime: "2095-10-31T02:52:44Z"
    message: "31"
    reason: "30"
    status: ƣKʘńw:5塋
    type: Ü郀
  phase: 燴壩卄蓨MĮ?

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "28"
    kind: "29"
    name: "30"
  dataSourceRef:
    apiGroup: "31"
    kind: "32"
    name: "33"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "27"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "26"
status:
  accessModes:
  - l殛瓷雼浢Ü礽
  allocatedResources:
    ' u衲<¿燥': "98"
  capacity:
    '{囥': "721"
  conditions:
  - lastProbeTime: "2343-07-10T15:32:16Z"
    lastTransitionTime: "2944-07-13T11:02:13Z"
    message: "35"
    reason: "34"
    status: Ka縳讋ɮ衺勽Ƙq
    type: n(鲼ƳÐƣKʘńw:5塋訩塶"=
  phase: gɸ=ǤÆ碛,1ZƜ/C龷Ȫ
  resizeStatus: '{舁吉蓨O澘'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "27"
    kind: "28"
    name: "29"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "26"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "25"
status:
  accessModes:
  - ĭÐl恕ɍȇ廄裭4懙
  capacity:
    嵒ƫS捕ɷD¡轫n: "583"
  conditions:
  - lastProbeTime: "2588-10-04T08:20:38Z"
    lastTransitionTime: "2095-10-31T02:52:44Z"
    message: "31"
    reason: "30"
    status: ƣKʘńw:5塋
    type: Ü郀
  phase: 燴壩卄蓨MĮ?

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/PersistentVolumeClaim/2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  accessModes:
  - '@Hr鯹)晿'
  dataSource:
    apiGroup: "27"
    kind: "28"
    name: "29"
  resources:
    limits:
      Ď儇击3ƆìQ喞艋涽託仭w-檮Ǣ: "465"
    requests:
      Ł%!Ũ(MISSING)Ȉ>Ņ£趕ã/鈱$-议}ȧ外ĺ稥: "713"
  selector:
    matchExpressions:
    - key: PGg8-2_kS91.e5K-_e63_-_3n
      operator: DoesNotExist
    matchLabels:
      h0-6pJ: Hn7y-74.-0MUORQQ.N2.1L
  storageClassName: "26"
  volumeMode: 娲瘹ɭȊɚɎ(dɅ囥糷磩窮秳ķ蟒苾h^
  volumeName: "25"
status:
  accessModes:
  - ĭÐl恕ɍȇ廄裭4懙
  capacity:
    嵒ƫS捕ɷD¡轫n: "583"
  conditions:
  - lastProbeTime: "2588-10-04T08:20:38Z"
    lastTransitionTime: "2095-10-31T02:52:44Z"
    message: "31"
    reason: "30"
    status: ƣKʘńw:5塋
    type: Ü郀
  phase: 燴壩卄蓨MĮ?

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    claims:
    - name: nameValue
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    claims:
    - name: nameValue
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue
  resizeStatus: resizeStatusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim55.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeAttributesClassName: volumeAttributesClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  currentVolumeAttributesClassName: currentVolumeAttributesClassNameValue
  modifyVolumeStatus:
    status: statusValue
    targetVolumeAttributesClassName: targetVolumeAttributesClassNameValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    claims:
    - name: nameValue
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue
  resizeStatus: resizeStatusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
    namespace: namespaceValue
  resources:
    claims:
    - name: nameValue
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResourceStatuses:
    allocatedResourceStatusesKey: allocatedResourceStatusesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.PersistentVolumeClaim9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/PersistentVolumeClaim/nameValue:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  accessModes:
  - accessModesValue
  dataSource:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  dataSourceRef:
    apiGroup: apiGroupValue
    kind: kindValue
    name: nameValue
  resources:
    limits:
      limitsKey: "0"
    requests:
      requestsKey: "0"
  selector:
    matchExpressions:
    - key: keyValue
      operator: operatorValue
      values:
      - valuesValue
    matchLabels:
      matchLabelsKey: matchLabelsValue
  storageClassName: storageClassNameValue
  volumeMode: volumeModeValue
  volumeName: volumeNameValue
status:
  accessModes:
  - accessModesValue
  allocatedResources:
    allocatedResourcesKey: "0"
  capacity:
    capacityKey: "0"
  conditions:
  - lastProbeTime: "2003-01-01T01:01:01Z"
    lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    reason: reasonValue
    status: statusValue
    type: typeValue
  phase: phaseValue
  resizeStatus: resizeStatusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota.after_roundtrip.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  hard:
    脽ěĂ凗蓏Ŋ蛊ĉy緅縕: "57"
  scopeSelector:
    matchExpressions:
    - operator: 彀亞
      scopeName: ?狱³-Ǐ忄*齧獚
      values:
      - "24"
  scopes:
  - 颋ǅ
status:
  hard:
    ɘĲ斬³;: "753"
  used:
    'rŎǀ朲^苣fƼ@hDrȮO励鹗塢ē ': "995"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota.after_roundtrip1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  hard:
    脽ěĂ凗蓏Ŋ蛊ĉy緅縕: "57"
  scopeSelector:
    matchExpressions:
    - operator: 彀亞
      scopeName: ?狱³-Ǐ忄*齧獚
      values:
      - "24"
  scopes:
  - 颋ǅ
status:
  hard:
    ɘĲ斬³;: "753"
  used:
    'rŎǀ朲^苣fƼ@hDrȮO励鹗塢ē ': "995"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "20"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "19"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  hard:
    脽ěĂ凗蓏Ŋ蛊ĉy緅縕: "57"
  scopeSelector:
    matchExpressions:
    - operator: 彀亞
      scopeName: ?狱³-Ǐ忄*齧獚
      values:
      - "24"
  scopes:
  - 颋ǅ
status:
  hard:
    ɘĲ斬³;: "753"
  used:
    'rŎǀ朲^苣fƼ@hDrȮO励鹗塢ē ': "995"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "19"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "20"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "20"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "19"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  hard:
    脽ěĂ凗蓏Ŋ蛊ĉy緅縕: "57"
  scopeSelector:
    matchExpressions:
    - operator: 彀亞
      scopeName: ?狱³-Ǐ忄*齧獚
      values:
      - "24"
  scopes:
  - 颋ǅ
status:
  hard:
    ɘĲ斬³;: "753"
  used:
    'rŎǀ朲^苣fƼ@hDrȮO励鹗塢ē ': "995"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "19"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "20"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "20"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "19"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "20"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "19"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ResourceQuota/2:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  hard:
    '@Hr鯹)晿': "617"
  scopeSelector:
    matchExpressions:
    - operator: 獚敆ȎțêɘĲ斬³;Ơ歿:狞夌碕ʂɭ
      scopeName: ʕVŚ(ĿȊ甞谐颋ǅSǡƏS$+½H牗
      values:
      - "19"
  scopes:
  - Ĩɘ.蘯6ċV夸eɑeʤ脽ěĂ
status:
  hard:
    "": "929"
  used:
    $Iņɖ橙9ȫŚʒUɦOŖ樅: "934"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota55.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ResourceQuota9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ResourceQuota/nameValue:
apiVersion: v1
kind: ResourceQuota
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  hard:
    hardKey: "0"
  scopeSelector:
    matchExpressions:
    - operator: operatorValue
      scopeName: scopeNameValue
      values:
      - valuesValue
  scopes:
  - scopesValue
status:
  hard:
    hardKey: "0"
  used:
    usedKey: "0"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret.after_roundtrip.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "24": LA==
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
stringData:
  "25": "26"
type: Ă凗蓏Ŋ蛊ĉy

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret.after_roundtrip1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "24": LA==
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
stringData:
  "25": "26"
type: Ă凗蓏Ŋ蛊ĉy

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "20": xw==
immutable: false
kind: Secret
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "21": "22"
type: 鯹)晿<

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "19": Hg==
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "20": "21"
type: r鯹)晿<o,c鮽ort昍řČ扷5ƗǸ

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "24": LA==
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
stringData:
  "25": "26"
type: Ă凗蓏Ŋ蛊ĉy

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "19": Hg==
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "20": "21"
type: r鯹)晿<o,c鮽ort昍řČ扷5ƗǸ

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "20": xw==
immutable: false
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "21": "22"
type: 鯹)晿<

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "20": xw==
immutable: false
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "21": "22"
type: 鯹)晿<

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "19": Hg==
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "20": "21"
type: r鯹)晿<o,c鮽ort昍řČ扷5ƗǸ

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "24": LA==
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
stringData:
  "25": "26"
type: Ă凗蓏Ŋ蛊ĉy

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "19": Hg==
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "20": "21"
type: r鯹)晿<o,c鮽ort昍řČ扷5ƗǸ

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "20": xw==
immutable: false
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "21": "22"
type: 鯹)晿<

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "20": xw==
immutable: false
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "21": "22"
type: 鯹)晿<

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "19": xw==
immutable: false
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "20": "21"
type: 鯹)晿<

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "20": xw==
immutable: false
kind: Secret
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "21": "22"
type: 鯹)晿<

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "19": xw==
immutable: false
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "20": "21"
type: 鯹)晿<

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Secret/2:
apiVersion: v1
data:
  "19": xw==
immutable: false
kind: Secret
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
stringData:
  "20": "21"
type: 鯹)晿<

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret55.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Secret9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Secret/nameValue:
apiVersion: v1
data:
  dataKey: Ag==
immutable: true
kind: Secret
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
stringData:
  stringDataKey: stringDataValue
type: typeValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service.after_roundtrip.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  clusterIP: "27"
  externalIPs:
  - "28"
  externalName: "31"
  externalTrafficPolicy: 螩B
  healthCheckNodePort: -21009133
  loadBalancerIP: "29"
  loadBalancerSourceRanges:
  - "30"
  ports:
  - name: "24"
    nodePort: 2048967527
    port: -1493017703
    protocol: 脽ěĂ凗蓏Ŋ蛊ĉy緅縕
    targetPort: -123438221
  publishNotReadyAddresses: true
  selector:
    "25": "26"
  sessionAffinity: 洝尿彀
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: -1487653240
  type: ǡƏS$+½H
status:
  loadBalancer:
    ingress:
    - hostname: "33"
      ip: "32"

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service.after_roundtrip1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  clusterIP: "27"
  externalIPs:
  - "28"
  externalName: "31"
  externalTrafficPolicy: 螩B
  healthCheckNodePort: -21009133
  loadBalancerIP: "29"
  loadBalancerSourceRanges:
  - "30"
  ports:
  - name: "24"
    nodePort: 2048967527
    port: -1493017703
    protocol: 脽ěĂ凗蓏Ŋ蛊ĉy緅縕
    targetPort: -123438221
  publishNotReadyAddresses: true
  selector:
    "25": "26"
  sessionAffinity: 洝尿彀
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: -1487653240
  type: ǡƏS$+½H
status:
  loadBalancer:
    ingress:
    - hostname: "33"
      ip: "32"

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service.after_roundtrip2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  clusterIP: "24"
  externalIPs:
  - "25"
  externalName: "28"
  externalTrafficPolicy: ʤ脽ěĂ凗蓏Ŋ蛊ĉy緅縕>Ž
  healthCheckNodePort: -1095807277
  loadBalancerIP: "26"
  loadBalancerSourceRanges:
  - "27"
  ports:
  - appProtocol: "20"
    name: "19"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "21"
  publishNotReadyAddresses: true
  selector:
    "22": "23"
  sessionAffinity: ɑ
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: -1973740160
  topologyKeys:
  - "29"
  type: .蘯6ċV夸
status:
  loadBalancer:
    ingress:
    - hostname: "31"
      ip: "30"

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: "25"
  clusterIPs:
  - "26"
  externalIPs:
  - "27"
  externalName: "30"
  externalTrafficPolicy: ƏS$+½H牗洝尿
  healthCheckNodePort: -1965738697
  internalTrafficPolicy: hDrȮO励鹗
  ipFamilies:
  - x
  ipFamilyPolicy: '%!a(MISSING)鯿rŎǀ朲^苣f'
  loadBalancerClass: "31"
  loadBalancerIP: "28"
  loadBalancerSourceRanges:
  - "29"
  ports:
  - appProtocol: "21"
    name: "20"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "22"
  publishNotReadyAddresses: true
  selector:
    "23": "24"
  sessionAffinity: 甞谐颋ǅS
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 2072604405
  type: 鮽ort昍řČ扷5ƗǸƢ6/ʕVŚ(Ŀ
status:
  conditions:
  - lastTransitionTime: "2256-09-10T15:38:25Z"
    message: "37"
    observedGeneration: 3519145202439908029
    reason: "36"
    status: 尷ȸd賑
    type: "35"
  loadBalancer:
    ingress:
    - hostname: "33"
      ip: "32"
      ports:
      - error: "34"
        port: 165528693
        protocol: UɦOŖ

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  clusterIP: "23"
  externalIPs:
  - "24"
  externalName: "27"
  externalTrafficPolicy: ʤ脽ěĂ凗蓏Ŋ蛊ĉy緅縕>Ž
  healthCheckNodePort: -1095807277
  ipFamily: ³-Ǐ忄*齧獚敆ȎțêɘĲ斬
  loadBalancerIP: "25"
  loadBalancerSourceRanges:
  - "26"
  ports:
  - name: "19"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "20"
  publishNotReadyAddresses: true
  selector:
    "21": "22"
  sessionAffinity: ɑ
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: -1973740160
  type: .蘯6ċV夸
status:
  loadBalancer:
    ingress:
    - hostname: "29"
      ip: "28"

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  clusterIP: "27"
  externalIPs:
  - "28"
  externalName: "31"
  externalTrafficPolicy: 螩B
  healthCheckNodePort: -21009133
  loadBalancerIP: "29"
  loadBalancerSourceRanges:
  - "30"
  ports:
  - name: "24"
    nodePort: 2048967527
    port: -1493017703
    protocol: 脽ěĂ凗蓏Ŋ蛊ĉy緅縕
    targetPort: -123438221
  publishNotReadyAddresses: true
  selector:
    "25": "26"
  sessionAffinity: 洝尿彀
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: -1487653240
  type: ǡƏS$+½H
status:
  loadBalancer:
    ingress:
    - hostname: "33"
      ip: "32"

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  clusterIP: "23"
  externalIPs:
  - "24"
  externalName: "27"
  externalTrafficPolicy: ʤ脽ěĂ凗蓏Ŋ蛊ĉy緅縕>Ž
  healthCheckNodePort: -1095807277
  ipFamily: ³-Ǐ忄*齧獚敆ȎțêɘĲ斬
  loadBalancerIP: "25"
  loadBalancerSourceRanges:
  - "26"
  ports:
  - name: "19"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "20"
  publishNotReadyAddresses: true
  selector:
    "21": "22"
  sessionAffinity: ɑ
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: -1973740160
  type: .蘯6ċV夸
status:
  loadBalancer:
    ingress:
    - hostname: "29"
      ip: "28"

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: "25"
  clusterIPs:
  - "26"
  externalIPs:
  - "27"
  externalName: "30"
  externalTrafficPolicy: ƏS$+½H牗洝尿
  healthCheckNodePort: -1965738697
  internalTrafficPolicy: hDrȮO励鹗
  ipFamilies:
  - x
  ipFamilyPolicy: '%!a(MISSING)鯿rŎǀ朲^苣f'
  loadBalancerClass: "31"
  loadBalancerIP: "28"
  loadBalancerSourceRanges:
  - "29"
  ports:
  - appProtocol: "21"
    name: "20"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "22"
  publishNotReadyAddresses: true
  selector:
    "23": "24"
  sessionAffinity: 甞谐颋ǅS
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 2072604405
  type: 鮽ort昍řČ扷5ƗǸƢ6/ʕVŚ(Ŀ
status:
  conditions:
  - lastTransitionTime: "2256-09-10T15:38:25Z"
    message: "37"
    observedGeneration: 3519145202439908029
    reason: "36"
    status: 尷ȸd賑
    type: "35"
  loadBalancer:
    ingress:
    - hostname: "33"
      ip: "32"
      ports:
      - error: "34"
        port: 165528693
        protocol: UɦOŖ

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: "25"
  clusterIPs:
  - "26"
  externalIPs:
  - "27"
  externalName: "30"
  externalTrafficPolicy: ƏS$+½H牗洝尿
  healthCheckNodePort: -1965738697
  internalTrafficPolicy: hDrȮO励鹗
  ipFamilies:
  - x
  ipFamilyPolicy: '%!a(MISSING)鯿rŎǀ朲^苣f'
  loadBalancerClass: "31"
  loadBalancerIP: "28"
  loadBalancerSourceRanges:
  - "29"
  ports:
  - appProtocol: "21"
    name: "20"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "22"
  publishNotReadyAddresses: true
  selector:
    "23": "24"
  sessionAffinity: 甞谐颋ǅS
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 2072604405
  type: 鮽ort昍řČ扷5ƗǸƢ6/ʕVŚ(Ŀ
status:
  conditions:
  - lastTransitionTime: "2256-09-10T15:38:25Z"
    message: "37"
    observedGeneration: 3519145202439908029
    reason: "36"
    status: 尷ȸd賑
    type: "35"
  loadBalancer:
    ingress:
    - hostname: "33"
      ip: "32"
      ports:
      - error: "34"
        port: 165528693
        protocol: UɦOŖ

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  clusterIP: "23"
  externalIPs:
  - "24"
  externalName: "27"
  externalTrafficPolicy: ʤ脽ěĂ凗蓏Ŋ蛊ĉy緅縕>Ž
  healthCheckNodePort: -1095807277
  ipFamily: ³-Ǐ忄*齧獚敆ȎțêɘĲ斬
  loadBalancerIP: "25"
  loadBalancerSourceRanges:
  - "26"
  ports:
  - name: "19"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "20"
  publishNotReadyAddresses: true
  selector:
    "21": "22"
  sessionAffinity: ɑ
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: -1973740160
  topologyKeys:
  - "28"
  type: .蘯6ċV夸
status:
  loadBalancer:
    ingress:
    - hostname: "30"
      ip: "29"

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
spec:
  clusterIP: "27"
  externalIPs:
  - "28"
  externalName: "31"
  externalTrafficPolicy: 螩B
  healthCheckNodePort: -21009133
  loadBalancerIP: "29"
  loadBalancerSourceRanges:
  - "30"
  ports:
  - name: "24"
    nodePort: 2048967527
    port: -1493017703
    protocol: 脽ěĂ凗蓏Ŋ蛊ĉy緅縕
    targetPort: -123438221
  publishNotReadyAddresses: true
  selector:
    "25": "26"
  sessionAffinity: 洝尿彀
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: -1487653240
  type: ǡƏS$+½H
status:
  loadBalancer:
    ingress:
    - hostname: "33"
      ip: "32"

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  clusterIP: "23"
  externalIPs:
  - "24"
  externalName: "27"
  externalTrafficPolicy: ʤ脽ěĂ凗蓏Ŋ蛊ĉy緅縕>Ž
  healthCheckNodePort: -1095807277
  ipFamily: ³-Ǐ忄*齧獚敆ȎțêɘĲ斬
  loadBalancerIP: "25"
  loadBalancerSourceRanges:
  - "26"
  ports:
  - name: "19"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "20"
  publishNotReadyAddresses: true
  selector:
    "21": "22"
  sessionAffinity: ɑ
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: -1973740160
  type: .蘯6ċV夸
status:
  loadBalancer:
    ingress:
    - hostname: "29"
      ip: "28"

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: "25"
  clusterIPs:
  - "26"
  externalIPs:
  - "27"
  externalName: "30"
  externalTrafficPolicy: ƏS$+½H牗洝尿
  healthCheckNodePort: -1965738697
  internalTrafficPolicy: hDrȮO励鹗
  ipFamilies:
  - x
  ipFamilyPolicy: '%!a(MISSING)鯿rŎǀ朲^苣f'
  loadBalancerClass: "31"
  loadBalancerIP: "28"
  loadBalancerSourceRanges:
  - "29"
  ports:
  - appProtocol: "21"
    name: "20"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "22"
  publishNotReadyAddresses: true
  selector:
    "23": "24"
  sessionAffinity: 甞谐颋ǅS
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 2072604405
  type: 鮽ort昍řČ扷5ƗǸƢ6/ʕVŚ(Ŀ
status:
  conditions:
  - lastTransitionTime: "2256-09-10T15:38:25Z"
    message: "37"
    observedGeneration: 3519145202439908029
    reason: "36"
    status: 尷ȸd賑
    type: "35"
  loadBalancer:
    ingress:
    - hostname: "33"
      ip: "32"
      ports:
      - error: "34"
        port: 165528693
        protocol: UɦOŖ

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: "25"
  clusterIPs:
  - "26"
  externalIPs:
  - "27"
  externalName: "30"
  externalTrafficPolicy: ƏS$+½H牗洝尿
  healthCheckNodePort: -1965738697
  internalTrafficPolicy: hDrȮO励鹗
  ipFamilies:
  - x
  ipFamilyPolicy: '%!a(MISSING)鯿rŎǀ朲^苣f'
  loadBalancerClass: "31"
  loadBalancerIP: "28"
  loadBalancerSourceRanges:
  - "29"
  ports:
  - appProtocol: "21"
    name: "20"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "22"
  publishNotReadyAddresses: true
  selector:
    "23": "24"
  sessionAffinity: 甞谐颋ǅS
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 2072604405
  type: 鮽ort昍řČ扷5ƗǸƢ6/ʕVŚ(Ŀ
status:
  conditions:
  - lastTransitionTime: "2256-09-10T15:38:25Z"
    message: "37"
    observedGeneration: 3519145202439908029
    reason: "36"
    status: 尷ȸd賑
    type: "35"
  loadBalancer:
    ingress:
    - hostname: "33"
      ip: "32"
      ports:
      - error: "34"
        port: 165528693
        protocol: UɦOŖ

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  trafficDistribution: trafficDistributionValue
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  trafficDistribution: trafficDistributionValue
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: "24"
  clusterIPs:
  - "25"
  externalIPs:
  - "26"
  externalName: "29"
  externalTrafficPolicy: ƏS$+½H牗洝尿
  healthCheckNodePort: -1965738697
  internalTrafficPolicy: ""
  ipFamilies:
  - 斬³;Ơ歿:狞夌碕ʂɭîcP$Iņɖ
  ipFamilyPolicy: 9ȫŚ
  loadBalancerClass: "31"
  loadBalancerIP: "27"
  loadBalancerSourceRanges:
  - "28"
  ports:
  - appProtocol: "20"
    name: "19"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "21"
  publishNotReadyAddresses: true
  selector:
    "22": "23"
  sessionAffinity: 甞谐颋ǅS
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 2072604405
  topologyKeys:
  - "30"
  type: 鮽ort昍řČ扷5ƗǸƢ6/ʕVŚ(Ŀ
status:
  conditions:
  - lastTransitionTime: "2404-01-10T11:35:42Z"
    message: "37"
    observedGeneration: -8651056334266075769
    reason: "36"
    status: ž(-譵
    type: "35"
  loadBalancer:
    ingress:
    - hostname: "33"
      ip: "32"
      ports:
      - error: "34"
        port: 684408190
        protocol: ƈ斎AO6ĴC浔Ű

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: "25"
  clusterIPs:
  - "26"
  externalIPs:
  - "27"
  externalName: "30"
  externalTrafficPolicy: ƏS$+½H牗洝尿
  healthCheckNodePort: -1965738697
  internalTrafficPolicy: hDrȮO励鹗
  ipFamilies:
  - x
  ipFamilyPolicy: '%!a(MISSING)鯿rŎǀ朲^苣f'
  loadBalancerClass: "31"
  loadBalancerIP: "28"
  loadBalancerSourceRanges:
  - "29"
  ports:
  - appProtocol: "21"
    name: "20"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "22"
  publishNotReadyAddresses: true
  selector:
    "23": "24"
  sessionAffinity: 甞谐颋ǅS
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 2072604405
  type: 鮽ort昍řČ扷5ƗǸƢ6/ʕVŚ(Ŀ
status:
  conditions:
  - lastTransitionTime: "2256-09-10T15:38:25Z"
    message: "37"
    observedGeneration: 3519145202439908029
    reason: "36"
    status: 尷ȸd賑
    type: "35"
  loadBalancer:
    ingress:
    - hostname: "33"
      ip: "32"
      ports:
      - error: "34"
        port: 165528693
        protocol: UɦOŖ

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  clusterIP: "24"
  externalIPs:
  - "25"
  externalName: "28"
  externalTrafficPolicy: ʤ脽ěĂ凗蓏Ŋ蛊ĉy緅縕>Ž
  healthCheckNodePort: -1095807277
  ipFamily: ³-Ǐ忄*齧獚敆ȎțêɘĲ斬
  loadBalancerIP: "26"
  loadBalancerSourceRanges:
  - "27"
  ports:
  - appProtocol: "20"
    name: "19"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "21"
  publishNotReadyAddresses: true
  selector:
    "22": "23"
  sessionAffinity: ɑ
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: -1973740160
  topologyKeys:
  - "29"
  type: .蘯6ċV夸
status:
  loadBalancer:
    ingress:
    - hostname: "31"
      ip: "30"

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/Service/2:
apiVersion: v1
kind: Service
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: "24"
  clusterIPs:
  - "25"
  externalIPs:
  - "26"
  externalName: "29"
  externalTrafficPolicy: ƏS$+½H牗洝尿
  healthCheckNodePort: -1965738697
  ipFamilies:
  - 斬³;Ơ歿:狞夌碕ʂɭîcP$Iņɖ
  ipFamilyPolicy: 9ȫŚ
  loadBalancerIP: "27"
  loadBalancerSourceRanges:
  - "28"
  ports:
  - appProtocol: "20"
    name: "19"
    nodePort: -474380055
    port: 202283346
    protocol: '@Hr鯹)晿'
    targetPort: "21"
  publishNotReadyAddresses: true
  selector:
    "22": "23"
  sessionAffinity: 甞谐颋ǅS
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 2072604405
  topologyKeys:
  - "30"
  type: 鮽ort昍řČ扷5ƗǸƢ6/ʕVŚ(Ŀ
status:
  conditions:
  - lastTransitionTime: "2392-12-09T15:37:55Z"
    message: "36"
    observedGeneration: -2492120148461555858
    reason: "35"
    status: C
    type: "34"
  loadBalancer:
    ingress:
    - hostname: "32"
      ip: "31"
      ports:
      - error: "33"
        port: -907310967
        protocol: 喂ƈ斎AO6

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource 4/Service/2 failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  trafficDistribution: trafficDistributionValue
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  trafficDistribution: trafficDistributionValue
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  trafficDistribution: trafficDistributionValue
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  trafficDistribution: trafficDistributionValue
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  trafficDistribution: trafficDistributionValue
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  trafficDistribution: trafficDistributionValue
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  trafficDistribution: trafficDistributionValue
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service55.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  trafficDistribution: trafficDistributionValue
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ipMode: ipModeValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Service9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/Service/nameValue:
apiVersion: v1
kind: Service
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: clusterIPValue
  clusterIPs:
  - clusterIPsValue
  externalIPs:
  - externalIPsValue
  externalName: externalNameValue
  externalTrafficPolicy: externalTrafficPolicyValue
  healthCheckNodePort: 12
  internalTrafficPolicy: internalTrafficPolicyValue
  ipFamilies:
  - ipFamiliesValue
  ipFamilyPolicy: ipFamilyPolicyValue
  loadBalancerClass: loadBalancerClassValue
  loadBalancerIP: loadBalancerIPValue
  loadBalancerSourceRanges:
  - loadBalancerSourceRangesValue
  ports:
  - appProtocol: appProtocolValue
    name: nameValue
    nodePort: 5
    port: 3
    protocol: protocolValue
    targetPort: targetPortValue
  publishNotReadyAddresses: true
  selector:
    selectorKey: selectorValue
  sessionAffinity: sessionAffinityValue
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 1
  type: typeValue
status:
  conditions:
  - lastTransitionTime: "2004-01-01T01:01:01Z"
    message: messageValue
    observedGeneration: 3
    reason: reasonValue
    status: statusValue
    type: typeValue
  loadBalancer:
    ingress:
    - hostname: hostnameValue
      ip: ipValue
      ports:
      - error: errorValue
        port: 1
        protocol: protocolValue

---


Mutation:
Mutation has been applied successfully.policy restrict-external-ips -> resource namespaceValue/Service/nameValue failed:
1 - check-ips validation error: externalIPs are not allowed. rule check-ips failed at path /spec/externalIPs/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount.after_roundtrip.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: "30"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
secrets:
- apiVersion: "27"
  fieldPath: "29"
  kind: "24"
  name: "26"
  namespace: "25"
  resourceVersion: "28"
  uid: 脽ěĂ凗蓏Ŋ蛊ĉy緅縕

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount.after_roundtrip1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: "30"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
secrets:
- apiVersion: "27"
  fieldPath: "29"
  kind: "24"
  name: "26"
  namespace: "25"
  resourceVersion: "28"
  uid: 脽ěĂ凗蓏Ŋ蛊ĉy緅縕

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "26"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "23"
  fieldPath: "25"
  kind: "20"
  name: "22"
  namespace: "21"
  resourceVersion: "24"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "25"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "22"
  fieldPath: "24"
  kind: "19"
  name: "21"
  namespace: "20"
  resourceVersion: "23"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: "30"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
secrets:
- apiVersion: "27"
  fieldPath: "29"
  kind: "24"
  name: "26"
  namespace: "25"
  resourceVersion: "28"
  uid: 脽ěĂ凗蓏Ŋ蛊ĉy緅縕

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "25"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "22"
  fieldPath: "24"
  kind: "19"
  name: "21"
  namespace: "20"
  resourceVersion: "23"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "26"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "23"
  fieldPath: "25"
  kind: "20"
  name: "22"
  namespace: "21"
  resourceVersion: "24"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "26"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "23"
  fieldPath: "25"
  kind: "20"
  name: "22"
  namespace: "21"
  resourceVersion: "24"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "25"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "22"
  fieldPath: "24"
  kind: "19"
  name: "21"
  namespace: "20"
  resourceVersion: "23"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: "30"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fields:
      "18":
        "19": null
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "16964250748386560239"
  selfLink: "5"
  uid: ą飋īqJ枊a8衍`Ĩɘ.蘯6ċV夸e
secrets:
- apiVersion: "27"
  fieldPath: "29"
  kind: "24"
  name: "26"
  namespace: "25"
  resourceVersion: "28"
  uid: 脽ěĂ凗蓏Ŋ蛊ĉy緅縕

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "25"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "22"
  fieldPath: "24"
  kind: "19"
  name: "21"
  namespace: "20"
  resourceVersion: "23"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  clusterName: clusterNameValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "26"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "23"
  fieldPath: "25"
  kind: "20"
  name: "22"
  namespace: "21"
  resourceVersion: "24"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "26"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "23"
  fieldPath: "25"
  kind: "20"
  name: "22"
  namespace: "21"
  resourceVersion: "24"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "25"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "22"
  fieldPath: "24"
  kind: "19"
  name: "21"
  namespace: "20"
  resourceVersion: "23"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "26"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  creationTimestamp: "2061-09-19T18:13:36Z"
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
    subresource: "19"
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "23"
  fieldPath: "25"
  kind: "20"
  name: "22"
  namespace: "21"
  resourceVersion: "24"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "25"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "22"
  fieldPath: "24"
  kind: "19"
  name: "21"
  namespace: "20"
  resourceVersion: "23"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to 4/ServiceAccount/2:
apiVersion: v1
automountServiceAccountToken: false
imagePullSecrets:
- name: "25"
kind: ServiceAccount
metadata:
  annotations:
    "9": "10"
  clusterName: "15"
  creationTimestamp: null
  deletionGracePeriodSeconds: -4955867275792137171
  finalizers:
  - "14"
  generateName: "3"
  generation: 8071137005907523419
  labels:
    "7": "8"
  managedFields:
  - apiVersion: "17"
    fieldsType: "18"
    manager: "16"
    operation: 鐊唊飙Ş-U圴÷a/ɔ}摁(湗Ć]
  name: "2"
  namespace: "4"
  ownerReferences:
  - apiVersion: "11"
    blockOwnerDeletion: true
    controller: false
    kind: "12"
    name: "13"
    uid: Dz廔ȇ{sŊƏp
  resourceVersion: "11042405498087606203"
  selfLink: "5"
  uid: "7"
secrets:
- apiVersion: "22"
  fieldPath: "24"
  kind: "19"
  name: "21"
  namespace: "20"
  resourceVersion: "23"
  uid: '@Hr鯹)晿'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount55.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.ServiceAccount9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to namespaceValue/ServiceAccount/nameValue:
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets:
- name: nameValue
kind: ServiceAccount
metadata:
  annotations:
    annotationsKey: annotationsValue
  creationTimestamp: "2008-01-01T01:01:01Z"
  deletionGracePeriodSeconds: 10
  deletionTimestamp: "2009-01-01T01:01:01Z"
  finalizers:
  - finalizersValue
  generateName: generateNameValue
  generation: 7
  labels:
    labelsKey: labelsValue
  managedFields:
  - apiVersion: apiVersionValue
    fieldsType: fieldsTypeValue
    fieldsV1: {}
    manager: managerValue
    operation: operationValue
    subresource: subresourceValue
    time: "2004-01-01T01:01:01Z"
  name: nameValue
  namespace: namespaceValue
  ownerReferences:
  - apiVersion: apiVersionValue
    blockOwnerDeletion: true
    controller: true
    kind: kindValue
    name: nameValue
    uid: uidValue
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
  uid: uidValue
secrets:
- apiVersion: apiVersionValue
  fieldPath: fieldPathValue
  kind: kindValue
  name: nameValue
  namespace: namespaceValue
  resourceVersion: resourceVersionValue
  uid: uidValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: -467962515
details:
  causes:
  - field: "8"
    message: "7"
    reason: 桰]]æȌ殸2爟¼ªov鈶Ƒ
  group: "5"
  kind: "6"
  name: "4"
  retryAfterSeconds: -309161244
kind: Status
message: "3"
metadata:
  namespace: default
  resourceVersion: "17435791464288618533"
  selfLink: ȉŏ軂:鹼(c螂z=lx*
reason: '>渽蝧抰鹐ȾZȢXQ輂]'
status: "2"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status45.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status46.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status47.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status48.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status49.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status50.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status51.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status52.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status53.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status54.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status55.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status56.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core.v1.Status9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Status/:
apiVersion: v1
code: 6
details:
  causes:
  - field: fieldValue
    message: messageValue
    reason: reasonValue
  group: groupValue
  kind: kindValue
  name: nameValue
  retryAfterSeconds: 5
  uid: uidValue
kind: Status
message: messageValue
metadata:
  continue: continueValue
  namespace: default
  remainingItemCount: 4
  resourceVersion: resourceVersionValue
  selfLink: selfLinkValue
reason: reasonValue
status: statusValue

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/core-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cardano-operator
    app.kubernetes.io/instance: core-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cardano-operator
  name: core-editor-role
  namespace: default
rules:
- apiGroups:
  - node.cardano.io
  resources:
  - cores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - node.cardano.io
  resources:
  - cores/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: core_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/core-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cardano-operator
    app.kubernetes.io/instance: core-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cardano-operator
  name: core-viewer-role
  namespace: default
rules:
- apiGroups:
  - node.cardano.io
  resources:
  - cores
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - node.cardano.io
  resources:
  - cores/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    k8s-app: kube-dns
  name: coredns
  namespace: kube-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
      dnsPolicy: Default
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: coredns
      serviceAccountName: coredns
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-all-capabilities -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        log
        errors
        health
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
           ttl 5
           upstream
           fallthrough in-addr.arpa ip6.arpa
        }
        proxy cilium.test 10.96.0.100:53
        prometheus :9153
        proxy . /etc/resolv.conf
        cache 3
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:coredns
  namespace: default
  resourceVersion: "181"
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: 2018-07-05 13:39:24+00:00
  name: system:coredns
  namespace: default
  resourceVersion: "183"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system
  resourceVersion: "208"
secrets:
- name: coredns-token-p8dq2

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: KubeDNS
  name: kube-dns
  namespace: kube-system
  resourceVersion: "0"
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        forward . /etc/resolv.conf {
            max_fails 0
        }
        prometheus :9153
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment10_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment10_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.100.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment10_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment10_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.100.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment11_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment11_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment11_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment11_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment12_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment12_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment12_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.100.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment12_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment12_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.100.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment13_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment13_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment13_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment13_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment14_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment14_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.100.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment14_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment14_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.100.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment15_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment15_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 0
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment15_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment15_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment16_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment16_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment16_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.100.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 0
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment16_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment16_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.100.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment17_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment17_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment17_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 0
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment17_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment17_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment18_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment18_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.100.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 0
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment18_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment18_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.100.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment19_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment19_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 0
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment19_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.9.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment19_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        log
        errors
        health
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        forward cilium.test 10.100.0.100:53 {
            max_fails 0
        }
        prometheus :9153
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment2_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment2_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.100.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment20_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment20_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment20_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.100.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 0
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment20_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment20_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.100.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment21_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment21_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 0
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment21_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.9.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment21_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment22_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment22_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment22_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.100.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 0
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment22_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.9.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment22_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.100.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment23_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment23_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment23_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 0
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment23_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment23_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment24_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment24_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment24_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 0
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment24_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment24_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment3_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        forward . /etc/resolv.conf {
            max_fails 0
        }
        prometheus :9153
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment3_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment3_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment4_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.100.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        forward . /etc/resolv.conf {
            max_fails 0
        }
        prometheus :9153
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment4_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment4_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.100.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment5_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment5_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        forward . /etc/resolv.conf {
            max_fails 0
        }
        prometheus :9153
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment5_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment5_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment6_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment6_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.100.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        forward . /etc/resolv.conf {
            max_fails 0
        }
        prometheus :9153
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment6_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment6_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.100.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment7_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment7_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 30
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment7_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment7_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment8_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment8_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.100.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        forward . /etc/resolv.conf {
            max_fails 0
        }
        prometheus :9153
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment8_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment8_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.100.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment9_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment9_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    cilium.test:53 {
        forward . 10.96.0.100:53 {
            max_fails 0
        }
    }
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            ttl 0
            fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_fails 0
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns_deployment9_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.8.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns_deployment9_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.10.1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.10.1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.10.1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.10.1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
          lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
          max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.10.1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns-new:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coredns-new
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns-new

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns-new
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns-new failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns-new failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns-new failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns-1.10.1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.32.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.10.11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.10.11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.10.11_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.10.11_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
          lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
          max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.10.11_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns-new:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coredns-new
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns-new

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns-new
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns-new failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns-new failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns-new failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns-1.10.11_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.32.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.7.0.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.7.0_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.7.0_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.7.0_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.7.0_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        beta.kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns-1.7.0_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.32.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.7.01.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.7.01_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.7.01_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.7.01_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-1.7.01_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        beta.kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns-1.7.01_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.32.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns10_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns10_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 30
        }
        prometheus :9153
        forward . /etc/resolv.conf
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns10_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.6.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns10_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.32.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns13_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns13_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.cn-hangzhou.aliyuncs.com/huisebug/source:coredns-1.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns13_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: ${ClusterDns}
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns14_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns14_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
          lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
          max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns14_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns14_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns19_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns19_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 30
        }
        prometheus :9153
        forward . /etc/resolv.conf
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns19_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccompProfile: runtime/default
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.aliyuncs.com/google_containers/coredns:v1.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns19_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.0.0.2
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns20_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns20_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns20_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 30
        }
        prometheus :9153
        forward . /etc/resolv.conf
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns20_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccompProfile: runtime/default
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.aliyuncs.com/google_containers/coredns:v1.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns20_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.0.0.2
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns21_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns21_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns21_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        beta.kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns21_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.32.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns23_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns23_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns23_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          upstream
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        proxy . 8.8.8.8
        cache 30
        reload
        loadbalance
        loop
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns23_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.2.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      serviceAccountName: coredns
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns23_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.32.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns24_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns24_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns24_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns24_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns24_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.32.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns25_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns25_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns25_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
          lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
          max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns25_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns25_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns27_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns27_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns27_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf
        cache 30
        loop
        reload
        loadbalance
    }
    internal.cloudapp.net:53 {
      errors
      cache 30
      forward . 168.63.129.16
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns27_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.6.9
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        beta.kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns27_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.32.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coredns-coredns:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: coredns
  name: coredns-coredns
  namespace: default
spec:
  ports:
  - name: udp-53
    port: 53
    protocol: UDP
    targetPort: 53
  - name: tcp-53
    port: 53
    protocol: TCP
    targetPort: 53
  selector:
    app.kubernetes.io/name: coredns
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns28_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: coredns
  name: coredns
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: coredns
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coredns
        k8s-app: coredns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: tcp-53
        - containerPort: 9153
          name: tcp-9153
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
      dnsPolicy: Default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coredns
policy disallow-default-namespace -> resource default/Deployment/coredns failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coredns failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-ro-rootfs -> resource default/Deployment/coredns failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: coredns3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns3_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          upstream
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        proxy . 8.8.8.8
        cache 30
        reload
        loadbalance
        loop
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns3_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.2.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      serviceAccountName: coredns
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns3_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.32.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns30_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns30_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns30_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
          lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
          max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns30_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns30_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns35_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns35_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns35_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
          lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
          max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns35_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns35_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns37_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          upstream
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        proxy . /etc/resolv.conf
        cache 30
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns37_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: coredns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.0.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  selector:
    k8s-app: coredns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns38_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns38_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns38_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
          lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
          max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns38_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns38_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns42_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns42_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns42_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
          lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
          max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns42_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns42_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns44_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns44_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns44_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
          lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf {
          max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns44_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns44_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns7_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns7_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          upstream
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        proxy . 8.8.8.8
        cache 30
        reload
        loadbalance
        loop
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns7_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: coredns/coredns:1.2.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      serviceAccountName: coredns
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns7_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/kube-dns:
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
spec:
  clusterIP: 10.32.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  selector:
    k8s-app: kube-dns

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-cm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
           lameduck 5s
        }
        ready
        rewrite name exact kc.platform.local istio-gateway.istio-system.svc.cluster.local
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
           fallthrough in-addr.arpa ip6.arpa
           ttl 30
        }
        prometheus :9153
        forward . /etc/resolv.conf {
           max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
           lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
           fallthrough in-addr.arpa ip6.arpa
           ttl 30
        }
        prometheus :9153
        forward . /etc/resolv.conf {
           max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  creationTimestamp: "2024-05-15T02:18:47Z"
  name: coredns
  namespace: kube-system
  resourceVersion: "225"
  uid: a1b54c66-3445-4ca8-a007-eaf844b29021

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-configmap1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
           lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
           fallthrough in-addr.arpa ip6.arpa
           ttl 30
        }
        prometheus :9153
        forward . /etc/resolv.conf {
           max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  creationTimestamp: "2024-05-15T02:18:47Z"
  name: coredns
  namespace: kube-system
  resourceVersion: "225"
  uid: a1b54c66-3445-4ca8-a007-eaf844b29021

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-configmap2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns:
apiVersion: v1
data:
  Corefile: ".:53 {\n    errors\n    health {\n      lameduck 5s\n    }\n    ready\n
    \   kubernetes ${ClusterDomain} REVERSE_CIDRS {\n      fallthrough in-addr.arpa
    ip6.arpa\n    }\n    hosts {\n      #此处输入自定义解析域名,格式为: ip 域名 多个域名  例如下:\n      #1.1.1.1
    huisebug.org huisebug.com\n      fallthrough\n    }\n    prometheus :9153\n    forward
    . /etc/resolv.conf {\n      max_concurrent 1000\n    }\n    cache 30\n    loop\n
    \   reload\n    loadbalance\n}        \n"
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-controller.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Deployment/coredns:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: coredns
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns

skipped mutate policy add-safe-to-evict -> resource kube-system/Deployment/coredns
policy drop-cap-net-raw -> resource kube-system/Deployment/coredns failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/Deployment/coredns failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource kube-system/Deployment/coredns failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 12, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: coredns-custom.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns-custom:
apiVersion: v1
data:
  log.override: |
    log
kind: ConfigMap
metadata:
  name: coredns-custom
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-custom2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns-custom:
apiVersion: v1
data:
  forward.override: |
    forward . 9.9.9.9 1.1.1.1
kind: ConfigMap
metadata:
  name: coredns-custom
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-custom3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/coredns-custom:
apiVersion: v1
data:
  Profisee.server: |
    $EXTERNALDNSNAME:53 {
        rewrite name $EXTERNALDNSNAME nginx-ingress-nginx-controller.profisee.svc.cluster.local
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ipv6.arpa
            ttl 30
        }
    }
kind: ConfigMap
metadata:
  name: coredns-custom
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-loadbalancer.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-dns/Service/kube-dns-lb:
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: kube-dns
  name: kube-dns-lb
  namespace: kube-dns
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    k8s-app: kube-dns
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-network-policy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/NetworkPolicy/monitoring-network-coredns-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-network-coredns-policy
  namespace: kube-system
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: cattle-monitoring-system
    ports:
    - port: 9153
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/name: rke2-coredns
      k8s-app: kube-dns
  policyTypes:
  - Ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-network-policy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/NetworkPolicy/monitoring-network-coredns-policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-network-coredns-policy
  namespace: kube-system
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: cattle-monitoring-system
    ports:
    - port: 9153
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/name: rke2-coredns
      k8s-app: kube-dns
  policyTypes:
  - Ingress

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-sa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/coredns:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-sa_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-sa_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/system:coredns:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:coredns
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coredns-tcp-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/k8gb-coredns-tcp:
apiVersion: v1
kind: Service
metadata:
  name: k8gb-coredns-tcp
  namespace: default
spec:
  ports:
  - name: tcp-5353
    nodePort: 30053
    port: 53
    protocol: TCP
    targetPort: 5353
  selector:
    app.kubernetes.io/instance: k8gb
    app.kubernetes.io/name: coredns
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/k8gb-coredns-tcp failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: corex-example.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/corex-example:
apiVersion: v1
kind: Pod
metadata:
  name: corex-example
  namespace: default
spec:
  containers:
  - args:
    - -l
    command:
    - /usr/local/corex/bin/ixsmi
    image: corex:4.2.0
    name: corex-example
    resources:
      limits:
        iluvatar.com/gpu: 1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/corex-example

skipped mutate policy add-safe-to-evict -> resource default/Pod/corex-example
policy disallow-default-namespace -> resource default/Pod/corex-example failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/corex-example failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/corex-example failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/corex-example failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/corex-example failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/corex-example failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/corex-example failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/corex-example failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: correction-exercice1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/development:
apiVersion: v1
kind: Namespace
metadata:
  name: development
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/development:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: development
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/development:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: development
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/development:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: development
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/development:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: development
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: correction-exercice1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/ServiceAccount/developer:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: developer
  namespace: development

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: correction-exercice1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/Role/pod-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-reader
  namespace: development
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - delete

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: correction-exercice1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to development/RoleBinding/developer-pod-reader-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: developer-pod-reader-binding
  namespace: development
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-reader
subjects:
- kind: ServiceAccount
  name: developer
  namespace: development

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: correct-port-name-external-name-service-type.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to nginx-ns4/Service/nginx-svc4:
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc4
  namespace: nginx-ns4
spec:
  externalName: nginx.example.com
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cortex-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/cortex:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.33.0 (3ce457399)
  labels:
    io.kompose.service: cortex
  name: cortex
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: cortex
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.33.0 (3ce457399)
      labels:
        io.kompose.network/cortex-default: "true"
        io.kompose.service: cortex
    spec:
      containers:
      - env:
        - name: job_directory
        image: thehiveproject/cortex:3.1.1
        name: cortex
        ports:
        - containerPort: 9001
          hostIP: 0.0.0.0
          hostPort: 9001
          protocol: TCP
      - env:
        - name: discovery.type
          value: single-node
        - name: http.host
          value: 0.0.0.0
        - name: script.allowed_types
          value: inline
        - name: thread_pool.search.queue_size
          value: "100000"
        - name: thread_pool.write.queue_size
          value: "10000"
        image: elasticsearch:7.9.1
        name: elasticsearch
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: elasticsearch-claim0
      restartPolicy: Always
      volumes:
      - name: elasticsearch-claim0
        persistentVolumeClaim:
          claimName: elasticsearch-claim0

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/cortex

skipped mutate policy add-safe-to-evict -> resource default/Deployment/cortex
policy disallow-default-namespace -> resource default/Deployment/cortex failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/cortex failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/cortex failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/cortex failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/cortex failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/cortex failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/cortex failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/cortex failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: cortex-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/cortex:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.33.0 (3ce457399)
  labels:
    io.kompose.service: cortex
  name: cortex
  namespace: default
spec:
  ports:
  - name: "9001"
    port: 9001
    targetPort: 9001
  selector:
    io.kompose.service: cortex

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: countdown-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/countdown-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: countdown-job
  namespace: default
spec:
  activeDeadlineSeconds: 100
  backoffLimit: 3
  completions: 10
  parallelism: 4
  template:
    metadata:
      labels:
        app: countdown-job
        color: aqua
      name: countdown-job
    spec:
      containers:
      - command:
        - bin/bash
        - -c
        - for i in 9 8 7 6 5 4 3 2 1 ; do echo $i; sleep 2 ; done
        image: centos:7
        name: counter
      restartPolicy: OnFailure

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/countdown-job

skipped mutate policy add-safe-to-evict -> resource default/Job/countdown-job
policy disallow-default-namespace -> resource default/Job/countdown-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/countdown-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/countdown-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/countdown-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/countdown-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/countdown-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/countdown-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: countdown-job1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/countdown-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: countdown-job
  namespace: default
spec:
  activeDeadlineSeconds: 100
  backoffLimit: 3
  completions: 10
  parallelism: 4
  template:
    metadata:
      labels:
        app: countdown-job
        color: aqua
      name: countdown-job
    spec:
      containers:
      - command:
        - bin/bash
        - -c
        - for i in 9 8 7 6 5 4 3 2 1 ; do echo $i; sleep 2 ; done
        image: centos:7
        name: counter
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
  ttlSecondsAfterFinished: 240

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/countdown-job

skipped mutate policy add-safe-to-evict -> resource default/Job/countdown-job
policy disallow-default-namespace -> resource default/Job/countdown-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/countdown-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/countdown-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/countdown-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/countdown-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/countdown-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/countdown-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: countdown-job2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/countdown-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: countdown-job
  namespace: default
spec:
  activeDeadlineSeconds: 100
  backoffLimit: 3
  completions: 30
  parallelism: 6
  template:
    metadata:
      labels:
        app: countdown-job
        color: aqua
      name: countdown-job
    spec:
      containers:
      - command:
        - bin/bash
        - -c
        - for i in 9 8 7 6 5 4 3 2 1 ; do echo $i; sleep 2 ; done
        image: centos:7
        name: counter
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
  ttlSecondsAfterFinished: 240

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/countdown-job

skipped mutate policy add-safe-to-evict -> resource default/Job/countdown-job
policy disallow-default-namespace -> resource default/Job/countdown-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/countdown-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/countdown-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/countdown-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Job/countdown-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/countdown-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/countdown-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: countdown-jobs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/countdown:
apiVersion: batch/v1
kind: Job
metadata:
  name: countdown
  namespace: default
spec:
  template:
    metadata:
      name: countdown
    spec:
      containers:
      - command:
        - bin/bash
        - -c
        - for i in 9 8 7 6 5 4 3 2 1 ; do echo $i ; done
        image: centos:7
        name: counter
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/countdown

skipped mutate policy add-safe-to-evict -> resource default/Job/countdown
policy disallow-default-namespace -> resource default/Job/countdown failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/countdown failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/countdown failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/countdown failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/countdown failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/countdown failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/countdown failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: countdown-jobs1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/countdown:
apiVersion: batch/v1
kind: Job
metadata:
  name: countdown
  namespace: default
spec:
  template:
    metadata:
      name: countdown
    spec:
      containers:
      - command:
        - bin/bash
        - -c
        - for i in 9 8 7 6 5 4 3 2 1 ; do echo $i ; done
        image: centos:7
        name: counter
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/countdown

skipped mutate policy add-safe-to-evict -> resource default/Job/countdown
policy disallow-default-namespace -> resource default/Job/countdown failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Job/countdown failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/countdown failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/countdown failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/countdown failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/countdown failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/countdown failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: countdown-xfusion-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/countdown-xfusion:
apiVersion: batch/v1
kind: Job
metadata:
  name: countdown-xfusion
  namespace: default
spec:
  template:
    metadata:
      name: countdown-xfusion
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - sleep 5
        image: fedora:latest
        name: container-countdown-xfusion
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/countdown-xfusion

skipped mutate policy add-safe-to-evict -> resource default/Job/countdown-xfusion
policy disallow-default-namespace -> resource default/Job/countdown-xfusion failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/countdown-xfusion failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/countdown-xfusion failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/countdown-xfusion failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/countdown-xfusion failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/countdown-xfusion failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/countdown-xfusion failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/countdown-xfusion failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: counter.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter:
apiVersion: v1
kind: Pod
metadata:
  name: counter
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - 'i=0; while true; do echo "$i: $(date)"; i=$((i+1)); sleep 1; done'
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter
policy disallow-default-namespace -> resource default/Pod/counter failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/counter failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter:
apiVersion: v1
kind: Pod
metadata:
  name: counter
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - 'i=0; while true; do echo "$i: $(date)"; i=$((i+1)); sleep 1; done'
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter
policy disallow-default-namespace -> resource default/Pod/counter failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/counter failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter:
apiVersion: v1
kind: Pod
metadata:
  name: counter
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - 'i=0; while true; do echo "$i: $(date)"; i=$((i+1)); sleep 1; done'
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter
policy disallow-default-namespace -> resource default/Pod/counter failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/counter failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter:
apiVersion: v1
kind: Pod
metadata:
  name: counter
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - 'i=0; while true; do echo "$i: $(date)"; i=$((i+1)); sleep 1; done'
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter
policy disallow-default-namespace -> resource default/Pod/counter failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/counter failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter:
apiVersion: v1
kind: Pod
metadata:
  name: counter
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - 'i=0; while true; do echo "$i: $(date)"; i=$((i+1)); sleep 1; done'
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter
policy disallow-default-namespace -> resource default/Pod/counter failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/counter failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter:
apiVersion: v1
kind: Pod
metadata:
  name: counter
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - 'i=0; while true; do echo "$i: $(date)"; i=$((i+1)); sleep 1; done'
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter
policy disallow-default-namespace -> resource default/Pod/counter failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/counter failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter-app-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/flask-persistent-volume:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: flask-persistent-volume
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /mnt/flask-app
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: counter-app-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/flask-app-claim:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: flask-app-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: counter-app-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/app-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask
    env: dev
  name: app-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask
      env: dev
  template:
    metadata:
      labels:
        app: flask
        env: dev
    spec:
      containers:
      - image: burkanoves/k8s-app:0.3.1
        name: flask-app
        ports:
        - containerPort: 5000
        volumeMounts:
        - mountPath: /data
          name: flask-pv-storage
      volumes:
      - name: flask-pv-storage
        persistentVolumeClaim:
          claimName: flask-app-claim

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/app-deployment
policy disallow-default-namespace -> resource default/Deployment/app-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/app-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/app-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/app-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: counter-app-deployment_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app-lb-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-app-lb-service
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: flask
    env: dev
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: counter-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/counter-env:
apiVersion: v1
data:
  folder: counter
kind: ConfigMap
metadata:
  name: counter-env
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: counter-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/counter-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: counter-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: counter
  template:
    metadata:
      labels:
        app: counter
    spec:
      containers:
      - env:
        - name: COUNT_FOLDER
          valueFrom:
            configMapKeyRef:
              key: folder
              name: counter-env
        image: ekaghnimukherjee/counter_trial_7:v9
        name: counter-container
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /data/counter-data
          name: counter-storage
      volumes:
      - name: counter-storage
        persistentVolumeClaim:
          claimName: counter-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/counter-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/counter-deployment
policy disallow-default-namespace -> resource default/Deployment/counter-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/counter-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/counter-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/counter-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/counter-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/counter-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/counter-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/counter-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: counter-deployment-test.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/counter:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: counter
  namespace: default
spec:
  selector:
    matchLabels:
      app: counter
      tier: app
  template:
    metadata:
      labels:
        app: counter
        tier: app
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        image: ghcr.io/subicura/counter:latest
        name: counter

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/counter

skipped mutate policy add-safe-to-evict -> resource default/Deployment/counter
policy disallow-default-namespace -> resource default/Deployment/counter failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/counter failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/counter failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/counter failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/counter failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/counter failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/counter failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/counter failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/counter failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter-err.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter-err:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: counter-err
    version: v1.2
  name: counter-err
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - i=0; RANDOM=$$; while true; do R=$(($RANDOM%!)(MISSING)); echo "loop:$i  value:$R";
      if [ $R -gt 80 ]; then echo "Warning:$R too high" 1>&2; fi; i=$((i+1)); sleep
      1; done
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter-err

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter-err
policy disallow-default-namespace -> resource default/Pod/counter-err failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter-err failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter-err failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter-err failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter-err failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/counter-err failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter-err failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter-err failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter-err failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter-err1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter-err:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: counter-err
    version: v1.2
  name: counter-err
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - i=0; RANDOM=$$; while true; do R=$(($RANDOM%!)(MISSING)); echo "loop:$i  value:$R";
      if [ $R -gt 80 ]; then echo "Warning:$R too high" 1>&2; fi; i=$((i+1)); sleep
      1; done
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter-err

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter-err
policy disallow-default-namespace -> resource default/Pod/counter-err failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter-err failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter-err failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter-err failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter-err failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/counter-err failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter-err failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter-err failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter-err failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter-err2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter-err:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: counter-err
    version: v1.2
  name: counter-err
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - i=0; RANDOM=$$; while true; do R=$(($RANDOM%!)(MISSING)); echo "loop:$i  value:$R";
      if [ $R -gt 80 ]; then echo "Warning:$R too high" 1>&2; fi; i=$((i+1)); sleep
      1; done
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter-err

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter-err
policy disallow-default-namespace -> resource default/Pod/counter-err failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter-err failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter-err failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter-err failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter-err failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/counter-err failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter-err failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter-err failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter-err failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter-incrementer-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/flask-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: razyal/twitter_insight:latest
        name: flask-app
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/flask-app
policy disallow-default-namespace -> resource default/Deployment/flask-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/flask-app failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/flask-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/flask-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/flask-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/flask-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/flask-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/flask-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter-incrementer-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/flask-app-service:
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: flask-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: counter-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter:
apiVersion: v1
kind: Pod
metadata:
  name: counter
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - 'i=0; while true; do echo "$i: $(date)"; i=$((i+1)); sleep 1; done'
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter
policy disallow-default-namespace -> resource default/Pod/counter failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/counter failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter:
apiVersion: v1
kind: Pod
metadata:
  name: counter
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - 'i=0; while true; do echo "$i: $(date)"; i=$((i+1)); sleep 1; done'
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter
policy disallow-default-namespace -> resource default/Pod/counter failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/counter failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/counter:
apiVersion: v1
kind: Pod
metadata:
  name: counter
  namespace: default
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - 'i=0; while true; do echo "This is demo log $i: $(date)"; i=$((i+1)); sleep
      1; done'
    image: busybox
    name: count

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/counter

skipped mutate policy add-safe-to-evict -> resource default/Pod/counter
policy disallow-default-namespace -> resource default/Pod/counter failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/counter failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/counter failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/counter failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/counter failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/counter failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/counter failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/counter failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/counter failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counter-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/counter-service:
apiVersion: v1
kind: Service
metadata:
  name: counter-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: counter
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/counter-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: counting.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/counting:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: counting
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: counting
  template:
    metadata:
      labels:
        app: counting
    spec:
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: counting
        imagePullPolicy: Never
        name: counting
        ports:
        - containerPort: 3000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/counting

skipped mutate policy add-safe-to-evict -> resource default/Deployment/counting
policy disallow-default-namespace -> resource default/Deployment/counting failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/counting failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/counting failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/counting failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/counting failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/counting failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/counting failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/counting failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/counting failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: counting-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/counting:
apiVersion: v1
kind: Service
metadata:
  name: counting
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: counting
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: countnumberjob.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/countnumberjob:
apiVersion: batch/v1
kind: Job
metadata:
  name: countnumberjob
  namespace: default
spec:
  template:
    metadata:
      name: countnumber
    spec:
      containers:
      - command:
        - sh
        - -c
        - for i in {1,2,3,4,5,6,7,8,9}; do echo $i; sleep 5; done
        image: busybox
        name: countnumber
      restartPolicy: OnFailure

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/countnumberjob

skipped mutate policy add-safe-to-evict -> resource default/Job/countnumberjob
policy disallow-default-namespace -> resource default/Job/countnumberjob failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/countnumberjob failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/countnumberjob failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/countnumberjob failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/countnumberjob failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/

policy require-requests-limits -> resource default/Job/countnumberjob failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/countnumberjob failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/countnumberjob failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: courierwebapp-depl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/courierwebapp-depl:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: courierwebapp-depl
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: courierwebapp
  template:
    metadata:
      labels:
        app: courierwebapp
    spec:
      containers:
      - image: karthickselvamdev/courierwebapp:latest
        imagePullPolicy: Never
        name: courierwebapp
        ports:
        - containerPort: 4200
        resources:
          limits:
            cpu: 500m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/courierwebapp-depl

skipped mutate policy add-safe-to-evict -> resource default/Deployment/courierwebapp-depl
policy disallow-default-namespace -> resource default/Deployment/courierwebapp-depl failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/courierwebapp-depl failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/courierwebapp-depl failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/courierwebapp-depl failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/courierwebapp-depl failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/courierwebapp-depl failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/courierwebapp-depl failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/courierwebapp-depl failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/courierwebapp-depl failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: courierwebapp-depl_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/courierwebapp-clusterip-service:
apiVersion: v1
kind: Service
metadata:
  name: courierwebapp-clusterip-service
  namespace: default
spec:
  ports:
  - port: 4200
    protocol: TCP
    targetPort: 4200
  selector:
    app: courierwebapp

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: course.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/zakaa-course-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: course-service
  name: zakaa-course-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: course-service
  template:
    metadata:
      labels:
        app: course-service
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: course-service-config
        image: nabeelncz/zakaa-course:latest
        name: course-service

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/zakaa-course-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/zakaa-course-deployment
policy disallow-default-namespace -> resource default/Deployment/zakaa-course-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/zakaa-course-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/zakaa-course-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/zakaa-course-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/zakaa-course-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/zakaa-course-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/zakaa-course-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/zakaa-course-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/zakaa-course-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: course_service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/course-svc:
apiVersion: v1
kind: Service
metadata:
  name: course-svc
  namespace: default
spec:
  clusterIP: None
  selector:
    app: jupyterhub
    component: hub

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: course1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/zakaa-course-service:
apiVersion: v1
kind: Service
metadata:
  name: zakaa-course-service
  namespace: default
spec:
  ports:
  - name: course-service
    port: 3004
    protocol: TCP
    targetPort: 3004
  selector:
    app: course-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: course2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/learnwise-course-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: course-service
  name: learnwise-course-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: course-service
  template:
    metadata:
      labels:
        app: course-service
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: course-service-config
        image: rithickramanthali/learnwise-course:latest
        name: course-service

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/learnwise-course-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/learnwise-course-deployment
policy disallow-default-namespace -> resource default/Deployment/learnwise-course-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/learnwise-course-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/learnwise-course-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/learnwise-course-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/learnwise-course-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/learnwise-course-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/learnwise-course-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/learnwise-course-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/learnwise-course-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: course3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/learnwise-course-service:
apiVersion: v1
kind: Service
metadata:
  name: learnwise-course-service
  namespace: default
spec:
  ports:
  - name: course-service
    port: 4004
    protocol: TCP
    targetPort: 4004
  selector:
    app: course-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: course4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/eduverse-course-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eduverse-course-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eduverse-course-service
  template:
    metadata:
      labels:
        app: eduverse-course-service
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: course-config
        image: nahyan007/eduverse-course:latest
        name: eduverse-course-service

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/eduverse-course-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/eduverse-course-deployment
policy disallow-default-namespace -> resource default/Deployment/eduverse-course-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/eduverse-course-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/eduverse-course-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/eduverse-course-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/eduverse-course-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/eduverse-course-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/eduverse-course-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/eduverse-course-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/eduverse-course-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: course4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/eduverse-course-service:
apiVersion: v1
kind: Service
metadata:
  name: eduverse-course-service
  namespace: default
spec:
  ports:
  - port: 7001
    protocol: TCP
    targetPort: 7001
  selector:
    app: eduverse-course-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: course5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/etutor-course-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: course-service
  name: etutor-course-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: course-service
  template:
    metadata:
      labels:
        app: course-service
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: course-service-config
        image: muhammedt1207/etutor-course:latest
        name: course-service

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/etutor-course-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/etutor-course-deployment
policy disallow-default-namespace -> resource default/Deployment/etutor-course-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/etutor-course-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/etutor-course-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/etutor-course-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/etutor-course-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/etutor-course-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/etutor-course-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/etutor-course-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/etutor-course-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: course6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/etutor-course-service:
apiVersion: v1
kind: Service
metadata:
  name: etutor-course-service
  namespace: default
spec:
  ports:
  - name: course-service
    port: 8085
    protocol: TCP
    targetPort: 8085
  selector:
    app: course-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: course-management-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/course-management-service:
apiVersion: v1
kind: Service
metadata:
  name: course-management-service
  namespace: default
spec:
  ports:
  - port: 3002
    protocol: TCP
    targetPort: 3002
  selector:
    app: course-management-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coursemanagement-service-claim0-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/coursemanagement-service-claim0:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: coursemanagement-service-claim0
  name: coursemanagement-service-claim0
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coursemanagement-service-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coursemanagement-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\nadun\AppData\Local\Microsoft\WinGet\Links\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: coursemanagement-service
  name: coursemanagement-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: coursemanagement-service
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\nadun\AppData\Local\Microsoft\WinGet\Links\kompose.exe
          convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/lms-microservice-default: "true"
        io.kompose.service: coursemanagement-service
    spec:
      containers:
      - env:
        - name: DB
          value: mongodb+srv://admin:admin@lms.mqm8lgp.mongodb.net/coursemanagement-service?retryWrites=true&w=majority&appName=LMS
        image: coursemanagement-service
        name: courses
        ports:
        - containerPort: 3002
          hostPort: 3002
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /app
          name: coursemanagement-service-claim0
      restartPolicy: Always
      volumes:
      - name: coursemanagement-service-claim0
        persistentVolumeClaim:
          claimName: coursemanagement-service-claim0
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coursemanagement-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coursemanagement-service
policy disallow-default-namespace -> resource default/Deployment/coursemanagement-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/coursemanagement-service failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/coursemanagement-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coursemanagement-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coursemanagement-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coursemanagement-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/coursemanagement-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/coursemanagement-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coursemanagement-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: course-management-service-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/course-management-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: course-management-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: course-management-service
  template:
    metadata:
      labels:
        app: course-management-service
    spec:
      containers:
      - image: manulagunatilleke/ds-microservices-project-course-management-service:latest
        name: course-management-service
        ports:
        - containerPort: 3002

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/course-management-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/course-management-service
policy disallow-default-namespace -> resource default/Deployment/course-management-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/course-management-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/course-management-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/course-management-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/course-management-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/course-management-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/course-management-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/course-management-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/course-management-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: coursemanagement-service-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coursemanagement-service:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\nadun\AppData\Local\Microsoft\WinGet\Links\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: coursemanagement-service
  name: coursemanagement-service
  namespace: default
spec:
  ports:
  - name: "3002"
    port: 3002
    targetPort: 3002
  selector:
    io.kompose.service: coursemanagement-service
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: course-service-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/course-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: course-service
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: course-service
  template:
    metadata:
      labels:
        app: course-service
    spec:
      containers:
      - image: sanjananilanka/course-service:latest
        name: course-service
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/course-service

skipped mutate policy add-safe-to-evict -> resource default/Deployment/course-service
policy disallow-default-namespace -> resource default/Deployment/course-service failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/course-service failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/course-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/course-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/course-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/course-service failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/course-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/course-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/course-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: course-service-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/course-service:
apiVersion: v1
kind: Service
metadata:
  name: course-service
  namespace: default
spec:
  ports:
  - port: 82
    protocol: TCP
    targetPort: 5000
  selector:
    app: course-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coursework4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devesa/PersistentVolumeClaim/aki-detection-state:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aki-detection-state
  namespace: devesa
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: managed-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coursework4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devesa/Deployment/aki-detection:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aki-detection
  namespace: devesa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aki-detection
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: aki-detection
    spec:
      containers:
      - args:
        - prediction_system.py
        - --pathname=/data/history.csv
        command:
        - python3
        env:
        - name: MLLP_ADDRESS
          value: devesa-simulator.coursework4:8440
        - name: PAGER_ADDRESS
          value: devesa-simulator.coursework4:8441
        image: imperialswemlsspring2024.azurecr.io/coursework4-devesa
        name: aki-detection
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - mountPath: /hospital-history
          name: hospital-history
          readOnly: true
        - mountPath: /state
          name: aki-detection-state
      initContainers:
      - image: imperialswemlsspring2024.azurecr.io/coursework5-history
        name: copy-hospital-history
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - mountPath: /hospital-history
          name: hospital-history
      volumes:
      - emptyDir:
          sizeLimit: 50Mi
        name: hospital-history
      - name: aki-detection-state
        persistentVolumeClaim:
          claimName: aki-detection-state

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource devesa/Deployment/aki-detection
policy disallow-latest-tag -> resource devesa/Deployment/aki-detection failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource devesa/Deployment/aki-detection failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource devesa/Deployment/aki-detection failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource devesa/Deployment/aki-detection failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource devesa/Deployment/aki-detection failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/limits/

policy require-pod-probes -> resource devesa/Deployment/aki-detection failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource devesa/Deployment/aki-detection failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource devesa/Deployment/aki-detection failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: coursework5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devesa/PersistentVolumeClaim/aki-detection-state:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aki-detection-state
  namespace: devesa
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: managed-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coursework5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devesa/Deployment/aki-detection:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aki-detection
  namespace: devesa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aki-detection
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: aki-detection
    spec:
      containers:
      - args:
        - prediction_system.py
        - --pathname=/hospital-history/history.csv
        - --db_path=/state/my_database.db
        - --metrics_path=/state/counter_state.json
        command:
        - python3
        env:
        - name: MLLP_ADDRESS
          value: devesa-simulator.coursework5:8440
        - name: PAGER_ADDRESS
          value: devesa-simulator.coursework5:8441
        image: imperialswemlsspring2024.azurecr.io/coursework5-devesa
        name: aki-detection
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - mountPath: /hospital-history
          name: hospital-history
          readOnly: true
        - mountPath: /state
          name: aki-detection-state
      initContainers:
      - image: imperialswemlsspring2024.azurecr.io/coursework5-history
        name: copy-hospital-history
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - mountPath: /hospital-history
          name: hospital-history
      volumes:
      - emptyDir:
          sizeLimit: 50Mi
        name: hospital-history
      - name: aki-detection-state
        persistentVolumeClaim:
          claimName: aki-detection-state

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource devesa/Deployment/aki-detection
policy disallow-latest-tag -> resource devesa/Deployment/aki-detection failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource devesa/Deployment/aki-detection failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource devesa/Deployment/aki-detection failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource devesa/Deployment/aki-detection failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource devesa/Deployment/aki-detection failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/limits/

policy require-pod-probes -> resource devesa/Deployment/aki-detection failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource devesa/Deployment/aki-detection failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource devesa/Deployment/aki-detection failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: coursework6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devesa/PersistentVolumeClaim/aki-detection-state:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aki-detection-state
  namespace: devesa
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: managed-csi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coursework6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to devesa/Deployment/aki-detection:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aki-detection
  namespace: devesa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aki-detection
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: aki-detection
    spec:
      containers:
      - args:
        - prediction_system.py
        - --pathname=/hospital-history/history.csv
        - --db_path=/state/my_database.db
        - --metrics_path=/state/counter_state.json
        command:
        - python3
        env:
        - name: MLLP_ADDRESS
          value: devesa-simulator.coursework6:8440
        - name: PAGER_ADDRESS
          value: devesa-simulator.coursework6:8441
        image: imperialswemlsspring2024.azurecr.io/coursework6-devesa
        name: aki-detection
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - mountPath: /hospital-history
          name: hospital-history
          readOnly: true
        - mountPath: /state
          name: aki-detection-state
      initContainers:
      - image: imperialswemlsspring2024.azurecr.io/coursework6-history
        name: copy-hospital-history
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - mountPath: /hospital-history
          name: hospital-history
      volumes:
      - emptyDir:
          sizeLimit: 50Mi
        name: hospital-history
      - name: aki-detection-state
        persistentVolumeClaim:
          claimName: aki-detection-state

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource devesa/Deployment/aki-detection
policy disallow-latest-tag -> resource devesa/Deployment/aki-detection failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource devesa/Deployment/aki-detection failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource devesa/Deployment/aki-detection failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource devesa/Deployment/aki-detection failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource devesa/Deployment/aki-detection failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/limits/

policy require-pod-probes -> resource devesa/Deployment/aki-detection failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource devesa/Deployment/aki-detection failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource devesa/Deployment/aki-detection failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: cow-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/cowsay-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cowsay-hw
  name: cowsay-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cowsay-hw
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: cowsay-hw
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: shared-data
      - image: hsnlabhu/hw2:cowsay
        name: cowsay
        volumeMounts:
        - mountPath: /root/html
          name: shared-data
      volumes:
      - emptyDir: {}
        name: shared-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/cowsay-deployment
policy disallow-default-namespace -> resource default/Deployment/cowsay-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/cowsay-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/cowsay-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/cowsay-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/cowsay-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/cowsay-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/cowsay-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/cowsay-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/cowsay-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: cow-deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/cowsay-deployment1:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cowsay-hw
  name: cowsay-deployment1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cowsay-hw
  template:
    metadata:
      labels:
        app: cowsay-hw
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: shared-data
      - image: hsnlabhu/hw2:cowsay
        name: cowsay
        volumeMounts:
        - mountPath: /root/html
          name: shared-data
      volumes:
      - name: shared-data
        persistentVolumeClaim:
          claimName: mypvclaim1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/cowsay-deployment1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/cowsay-deployment1
policy disallow-default-namespace -> resource default/Deployment/cowsay-deployment1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/cowsay-deployment1 failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/cowsay-deployment1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/cowsay-deployment1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/cowsay-deployment1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/cowsay-deployment1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/cowsay-deployment1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/cowsay-deployment1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/cowsay-deployment1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: coworking.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking:
apiVersion: v1
kind: Service
metadata:
  name: coworking
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    service: coworking
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coworking_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking
  name: coworking
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: <THE KEY FROM Secret WHICH has THE ENCODED PASSWORD>
              name: <NAME OF THE Secret>
        envFrom:
        - configMapRef:
            name: <NAME OF THE ConfigMap>
        image: <DOCKER_IMAGE_URI_FROM_ECR>
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking
policy disallow-default-namespace -> resource default/Deployment/coworking failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/coworking failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: coworking1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking:
apiVersion: v1
kind: Service
metadata:
  name: coworking
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    service: coworking
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/coworking failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: coworking1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking
  name: coworking
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: <THE KEY FROM Secret WHICH has THE ENCODED PASSWORD>
              name: <NAME OF THE Secret>
        envFrom:
        - configMapRef:
            name: <NAME OF THE ConfigMap>
        image: <DOCKER_IMAGE_NAME>:<IMAGE_TAG>
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking
policy disallow-default-namespace -> resource default/Deployment/coworking failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: coworking10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking:
apiVersion: v1
kind: Service
metadata:
  name: coworking
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    service: coworking
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/coworking failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: coworking10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking
  name: coworking
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: <THE KEY FROM Secret WHICH has THE ENCODED PASSWORD>
              name: <NAME OF THE Secret>
        envFrom:
        - configMapRef:
            name: <NAME OF THE ConfigMap>
        image: <DOCKER_IMAGE_NAME>:<IMAGE_TAG>
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking
policy disallow-default-namespace -> resource default/Deployment/coworking failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: coworking2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking:
apiVersion: v1
kind: Service
metadata:
  name: coworking
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    service: coworking
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coworking2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking
  name: coworking
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: udacity-secret
        envFrom:
        - configMapRef:
            name: udacity-configmap
        image: 055656678958.dkr.ecr.us-east-1.amazonaws.com/coworking:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      imagePullSecrets:
      - name: regcred
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking
policy disallow-default-namespace -> resource default/Deployment/coworking failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/coworking failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: coworking3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking:
apiVersion: v1
kind: Service
metadata:
  name: coworking
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    service: coworking
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coworking3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking
  name: coworking
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - env:
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              key: DB_USER
              name: tsu-coworking-config-map
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: tsu-coworking-secret
        envFrom:
        - configMapRef:
            name: tsu-coworking-config-map
        image: 085018986241.dkr.ecr.us-east-1.amazonaws.com/udacity-cd12355-ecr-repo:8
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking
policy disallow-default-namespace -> resource default/Deployment/coworking failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: coworking4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking:
apiVersion: v1
kind: Service
metadata:
  name: coworking
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    service: coworking
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/coworking failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: coworking4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking
  name: coworking
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: <THE KEY FROM Secret WHICH has THE ENCODED PASSWORD>
              name: <NAME OF THE Secret>
        envFrom:
        - configMapRef:
            name: <NAME OF THE ConfigMap>
        image: <DOCKER_IMAGE_NAME>:<IMAGE_TAG>
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking
policy disallow-default-namespace -> resource default/Deployment/coworking failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: coworking5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking:
apiVersion: v1
kind: Service
metadata:
  name: coworking
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    service: coworking
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coworking5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking
  name: coworking
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: db-secret
        envFrom:
        - configMapRef:
            name: db-env
        image: 995346277474.dkr.ecr.us-east-1.amazonaws.com/coworking:4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking
policy disallow-default-namespace -> resource default/Deployment/coworking failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: coworking6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking:
apiVersion: v1
kind: Service
metadata:
  name: coworking
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    service: coworking
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/coworking failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: coworking6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking
  name: coworking
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: <THE KEY FROM Secret WHICH has THE ENCODED PASSWORD>
              name: <NAME OF THE Secret>
        envFrom:
        - configMapRef:
            name: <NAME OF THE ConfigMap>
        image: <DOCKER_IMAGE_NAME>:<IMAGE_TAG>
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking
policy disallow-default-namespace -> resource default/Deployment/coworking failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: coworking7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking:
apiVersion: v1
kind: Service
metadata:
  name: coworking
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    service: coworking
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coworking7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking
  name: coworking
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: db-secret
        envFrom:
        - configMapRef:
            name: coworking-env
        image: 448474411863.dkr.ecr.us-east-1.amazonaws.com/coworking-analytics:2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking
policy disallow-default-namespace -> resource default/Deployment/coworking failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: coworking8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking:
apiVersion: v1
kind: Service
metadata:
  name: coworking
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    service: coworking
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/coworking failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: coworking8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking
  name: coworking
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: <THE KEY FROM Secret WHICH has THE ENCODED PASSWORD>
              name: <NAME OF THE Secret>
        envFrom:
        - configMapRef:
            name: <NAME OF THE ConfigMap>
        image: <DOCKER_IMAGE_NAME>:<IMAGE_TAG>
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking
policy disallow-default-namespace -> resource default/Deployment/coworking failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: coworking9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking:
apiVersion: v1
kind: Service
metadata:
  name: coworking
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    service: coworking
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coworking9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking
  name: coworking
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: postgresql-secret
        envFrom:
        - configMapRef:
            name: postgresql-cm
        image: 741692117543.dkr.ecr.us-east-1.amazonaws.com/coworking:9
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking
policy disallow-default-namespace -> resource default/Deployment/coworking failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: coworking-api.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/coworking-api:
apiVersion: v1
kind: Service
metadata:
  name: coworking-api
  namespace: default
spec:
  ports:
  - name: "5153"
    port: 5153
    protocol: TCP
    targetPort: 5153
  selector:
    app.kubernetes.io/name: coworking-api

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: coworking-api_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/coworking-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: coworking-api
  name: coworking-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking-api
  template:
    metadata:
      labels:
        service: coworking-api
    spec:
      containers:
      - env:
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              key: DB_USERNAME
              name: db-env
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: db-env
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: db-env
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              key: DB_PORT
              name: db-env
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: db-secret
        image: 985294037487.dkr.ecr.us-east-1.amazonaws.com/coworking-app:0.0.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        name: coworking-api
        readinessProbe:
          httpGet:
            path: /readiness_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking-api

skipped mutate policy add-safe-to-evict -> resource default/Deployment/coworking-api
policy disallow-default-namespace -> resource default/Deployment/coworking-api failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/coworking-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/coworking-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/coworking-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/coworking-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/coworking-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/coworking-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: cowsay.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cow-say-cronjob:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cow-say-cronjob
  namespace: default
spec:
  failedJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: rancher/cowsay:latest
            name: cow-say
          restartPolicy: Never
  schedule: '* * * * *'
  successfulJobsHistoryLimit: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cow-say-cronjob

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cow-say-cronjob
policy disallow-latest-tag -> resource default/CronJob/cow-say-cronjob failed:
1 - autogen-cronjob-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-cronjob-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/cow-say-cronjob failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cow-say-cronjob failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cow-say-cronjob failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cow-say-cronjob failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cow-say-cronjob failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cow-say-cronjob failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: cowsay1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/cow-say-job:
apiVersion: batch/v1
kind: Job
metadata:
  name: cow-say-job
  namespace: default
spec:
  template:
    spec:
      containers:
      - image: rancher/cowsay:latest
        name: cow-say
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/cow-say-job

skipped mutate policy add-safe-to-evict -> resource default/Job/cow-say-job
policy disallow-default-namespace -> resource default/Job/cow-say-job failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/cow-say-job failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/cow-say-job failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/cow-say-job failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/cow-say-job failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/cow-say-job failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/cow-say-job failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/cow-say-job failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: cowsay-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/cowsay:
apiVersion: v1
kind: Service
metadata:
  name: cowsay
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    kubevirt.io/domain: cowsay-service
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cow-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/cowsay-service:
apiVersion: v1
kind: Service
metadata:
  name: cowsay-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: cowsay-hw
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/cowsay-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: cow-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/cowsay-service1:
apiVersion: v1
kind: Service
metadata:
  name: cowsay-service1
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: cowsay-hw
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/cowsay-service1 failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: cpu-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/echo-server:
apiVersion: v1
kind: Namespace
metadata:
  name: echo-server
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/echo-server:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: echo-server
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/echo-server:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: echo-server
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/echo-server:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: echo-server
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/echo-server:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: echo-server
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cpu-config_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to echo-server/Deployment/echo-server:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-server
  namespace: echo-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo-server
  template:
    metadata:
      annotations:
        csa.expediagroup.com/cpu-post-startup-limits: 150m
        csa.expediagroup.com/cpu-post-startup-requests: 150m
        csa.expediagroup.com/cpu-startup: 100m
        csa.expediagroup.com/memory-post-startup-limits: 100M
        csa.expediagroup.com/memory-post-startup-requests: 100M
        csa.expediagroup.com/memory-startup: 150M
        csa.expediagroup.com/target-container-name: echo-server
      labels:
        app: echo-server
        csa.expediagroup.com/enabled: "true"
    spec:
      containers:
      - env:
        - name: PORT
          value: "80"
        image: ealen/echo-server:0.7.0
        imagePullPolicy: IfNotPresent
        name: echo-server
        ports:
        - containerPort: 80
        resizePolicy:
        - resourceName: cpu
          restartPolicy: NotRequired
        - resourceName: memory
          restartPolicy: NotRequired
        resources:
          limits:
            cpu: 150m
            memory: 150M
          requests:
            cpu: 150m
            memory: 150M
        startupProbe:
          failureThreshold: 1
          httpGet:
            path: /?echo_code=200
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource echo-server/Deployment/echo-server

skipped mutate policy add-safe-to-evict -> resource echo-server/Deployment/echo-server
policy drop-all-capabilities -> resource echo-server/Deployment/echo-server failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource echo-server/Deployment/echo-server failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource echo-server/Deployment/echo-server failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource echo-server/Deployment/echo-server failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource echo-server/Deployment/echo-server failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: cpudefault.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/LimitRange/cpu-limit-range:
apiVersion: v1
kind: LimitRange
metadata:
  name: cpu-limit-range
  namespace: default
spec:
  limits:
  - default:
      cpu: 1
    defaultRequest:
      cpu: 0.5
    type: Container

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cpu-default-limitrange.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/LimitRange/cpu-default-limitrange:
apiVersion: v1
kind: LimitRange
metadata:
  name: cpu-default-limitrange
  namespace: default
spec:
  limits:
  - default:
      cpu: 500m
    defaultRequest:
      cpu: 500m
    max:
      cpu: 1
    min:
      cpu: 100m
    type: Container

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cpu-hog.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/cpu-hog:
apiVersion: v1
kind: Pod
metadata:
  name: cpu-hog
  namespace: default
spec:
  containers:
  - args:
    - --cpu
    - "2"
    command:
    - stress
    image: polinux/stress
    name: stress
    resources:
      limits:
        cpu: "100"
      requests:
        cpu: "100"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/cpu-hog

skipped mutate policy add-safe-to-evict -> resource default/Pod/cpu-hog
policy disallow-default-namespace -> resource default/Pod/cpu-hog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/cpu-hog failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/cpu-hog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/cpu-hog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/cpu-hog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/cpu-hog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/cpu-hog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/cpu-hog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/cpu-hog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: cpu-hog1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/cpu-hog:
apiVersion: v1
kind: Pod
metadata:
  name: cpu-hog
  namespace: default
spec:
  containers:
  - args:
    - --cpu
    - "2"
    command:
    - stress
    image: polinux/stress
    name: stress
    resources:
      limits:
        cpu: "100"
      requests:
        cpu: "100"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/cpu-hog

skipped mutate policy add-safe-to-evict -> resource default/Pod/cpu-hog
policy disallow-default-namespace -> resource default/Pod/cpu-hog failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/cpu-hog failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/cpu-hog failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/cpu-hog failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/cpu-hog failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/cpu-hog failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/cpu-hog failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/cpu-hog failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/cpu-hog failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: cpu-limit.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/myapp:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: myapp
  name: myapp
  namespace: default
spec:
  containers:
  - args:
    - -cpus
    - "2"
    image: registry.cn-beijing.aliyuncs.com/qingfeng666/stress
    name: myapp
    ports:
    - containerPort: 80
    resources:
      limits:
        cpu: "1"
        memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/myapp
policy disallow-default-namespace -> resource default/Pod/myapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/myapp failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/myapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/myapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/myapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/myapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/myapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/myapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/myapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: cpu-limit1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/cpu-limit:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: cpu-limit
  name: cpu-limit
  namespace: default
spec:
  containers:
  - args:
    - -cpus
    - "2"
    image: registry.cn-beijing.aliyuncs.com/qingfeng666/stress
    name: cpu-limit
    resources:
      limits:
        cpu: "1"
        memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/cpu-limit

skipped mutate policy add-safe-to-evict -> resource default/Pod/cpu-limit
policy disallow-default-namespace -> resource default/Pod/cpu-limit failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/cpu-limit failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/cpu-limit failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/cpu-limit failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/cpu-limit failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/cpu-limit failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/cpu-limit failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/cpu-limit failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/cpu-limit failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: cpu-load-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/cpu-load-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cpu-load-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cpu-load-app
  template:
    metadata:
      labels:
        app: cpu-load-app
    spec:
      containers:
      - image: gcr.io/google-samples/hello-app:1.0
        name: cpu-load-app
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 250m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/cpu-load-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/cpu-load-app
policy disallow-default-namespace -> resource default/Deployment/cpu-load-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/cpu-load-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/cpu-load-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/cpu-load-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/cpu-load-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/cpu-load-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/cpu-load-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/cpu-load-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: cpu-load-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/cpu-load-app-service:
apiVersion: v1
kind: Service
metadata:
  name: cpu-load-app-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: cpu-load-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cpuload-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/cpuload:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cpuload
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: thispod
  template:
    metadata:
      labels:
        app: thispod
    spec:
      containers:
      - command:
        - usecpu
        image: atcomp/perfload
        name: usecpu
      nodeName: work1

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/cpuload

skipped mutate policy add-safe-to-evict -> resource default/Deployment/cpuload
policy disallow-default-namespace -> resource default/Deployment/cpuload failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/cpuload failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/cpuload failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/cpuload failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/cpuload failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/cpuload failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/cpuload failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/cpuload failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/cpuload failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: cpu-load-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/cpu-load-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cpu-load-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cpu-load-app
  template:
    metadata:
      labels:
        app: cpu-load-app
    spec:
      containers:
      - args:
        - -cpus
        - "1"
        image: vish/stress
        name: web
        resources:
          limits:
            cpu: "1"
          requests:
            cpu: "0.5"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/cpu-load-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/cpu-load-app
policy disallow-default-namespace -> resource default/Deployment/cpu-load-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/cpu-load-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/cpu-load-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/cpu-load-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/cpu-load-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/cpu-load-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/cpu-load-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/cpu-load-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/cpu-load-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: cpu-load-hpa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/cpu-load-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cpu-load-hpa
  namespace: default
spec:
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 50
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cpu-load-app

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: cpu-load-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/cpu-load-service:
apiVersion: v1
kind: Service
metadata:
  name: cpu-load-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: cpu-load-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cpu-ops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/medium-stress:
apiVersion: batch/v1
kind: Job
metadata:
  name: medium-stress
  namespace: default
spec:
  backoffLimit: 4
  completionMode: Indexed
  completions: 15
  parallelism: 15
  template:
    metadata:
      labels:
        job: medium-stress
      name: stress-ng-pod
    spec:
      containers:
      - args:
        - apt-get update && apt-get install -y stress-ng && stress-ng --cpu 1 --cpu-ops
          80000  --metrics-brief
        command:
        - /bin/bash
        - -c
        image: ubuntu:latest
        name: stress-ng-container
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "0.5"
            memory: 512Mi
      restartPolicy: Never

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/medium-stress

skipped mutate policy add-safe-to-evict -> resource default/Job/medium-stress
policy disallow-default-namespace -> resource default/Job/medium-stress failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/medium-stress failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/medium-stress failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/medium-stress failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/medium-stress failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Job/medium-stress failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/medium-stress failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: cpupod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/default-cpu-demo:
apiVersion: v1
kind: Pod
metadata:
  name: default-cpu-demo
  namespace: default
spec:
  containers:
  - image: nginx
    name: default-cpu-demo-ctr

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/default-cpu-demo

skipped mutate policy add-safe-to-evict -> resource default/Pod/default-cpu-demo
policy disallow-default-namespace -> resource default/Pod/default-cpu-demo failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/default-cpu-demo failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/default-cpu-demo failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/default-cpu-demo failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/default-cpu-demo failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/default-cpu-demo failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/default-cpu-demo failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/default-cpu-demo failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/default-cpu-demo failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: cpupod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/default-cpu-demo-2:
apiVersion: v1
kind: Pod
metadata:
  name: default-cpu-demo-2
  namespace: default
spec:
  containers:
  - image: nginx
    name: default-cpu-demo-2-ctr
    resources:
      limits:
        cpu: "1"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/default-cpu-demo-2

skipped mutate policy add-safe-to-evict -> resource default/Pod/default-cpu-demo-2
policy disallow-default-namespace -> resource default/Pod/default-cpu-demo-2 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/default-cpu-demo-2 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/default-cpu-demo-2 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/default-cpu-demo-2 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/default-cpu-demo-2 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/default-cpu-demo-2 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Pod/default-cpu-demo-2 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/default-cpu-demo-2 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/default-cpu-demo-2 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: cpupod3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/default-cpu-demo-3:
apiVersion: v1
kind: Pod
metadata:
  name: default-cpu-demo-3
  namespace: default
spec:
  containers:
  - image: nginx
    name: default-cpu-demo-3-ctr
    resources:
      requests:
        cpu: "0.75"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/default-cpu-demo-3

skipped mutate policy add-safe-to-evict -> resource default/Pod/default-cpu-demo-3
policy disallow-default-namespace -> resource default/Pod/default-cpu-demo-3 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/default-cpu-demo-3 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/default-cpu-demo-3 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/default-cpu-demo-3 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/default-cpu-demo-3 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/default-cpu-demo-3 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/default-cpu-demo-3 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/default-cpu-demo-3 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/default-cpu-demo-3 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: cpu-quota.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to quota-demo/ResourceQuota/test-cpu-quota:
apiVersion: v1
kind: ResourceQuota
metadata:
  name: test-cpu-quota
  namespace: quota-demo
spec:
  hard:
    limits.cpu: 300m
    requests.cpu: 200m

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cpu-request-limit.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cpu-example/Pod/cpu-demo:
apiVersion: v1
kind: Pod
metadata:
  name: cpu-demo
  namespace: cpu-example
spec:
  containers:
  - args:
    - -cpus
    - "2"
    image: nginx:stable
    name: cpu-demo-ctr
    resources:
      limits:
        cpu: "100"
      requests:
        cpu: "100"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cpu-example/Pod/cpu-demo

skipped mutate policy add-safe-to-evict -> resource cpu-example/Pod/cpu-demo
policy drop-all-capabilities -> resource cpu-example/Pod/cpu-demo failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cpu-example/Pod/cpu-demo failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cpu-example/Pod/cpu-demo failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource cpu-example/Pod/cpu-demo failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource cpu-example/Pod/cpu-demo failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource cpu-example/Pod/cpu-demo failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource cpu-example/Pod/cpu-demo failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: cpu-request-limit1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to cpu-example/Pod/cpu-demo:
apiVersion: v1
kind: Pod
metadata:
  name: cpu-demo
  namespace: cpu-example
spec:
  containers:
  - args:
    - -cpus
    - "2"
    image: nginx:stable
    name: cpu-demo-ctr
    resources:
      limits:
        cpu: "100"
      requests:
        cpu: "100"

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource cpu-example/Pod/cpu-demo

skipped mutate policy add-safe-to-evict -> resource cpu-example/Pod/cpu-demo
policy drop-all-capabilities -> resource cpu-example/Pod/cpu-demo failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource cpu-example/Pod/cpu-demo failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource cpu-example/Pod/cpu-demo failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource cpu-example/Pod/cpu-demo failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource cpu-example/Pod/cpu-demo failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource cpu-example/Pod/cpu-demo failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource cpu-example/Pod/cpu-demo failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: cpu-test-load.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/cpu-load-test:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cpu-load-test
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cpu-load-test
  template:
    metadata:
      labels:
        app: cpu-load-test
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - while true; do :; done
        image: busybox
        name: cpu-load-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/cpu-load-test

skipped mutate policy add-safe-to-evict -> resource default/Deployment/cpu-load-test
policy disallow-default-namespace -> resource default/Deployment/cpu-load-test failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/cpu-load-test failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/cpu-load-test failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/cpu-load-test failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/cpu-load-test failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/cpu-load-test failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/cpu-load-test failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/cpu-load-test failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/cpu-load-test failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: cr-bad.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes/proxy
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - bind
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes/proxy
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes/proxy
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - bind
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batches
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - escalate
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad11_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - bind
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batches
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad12_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad12_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - update
  - list
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - '*'
  - pods
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad13_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - update
  - list
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - watch
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad14_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - update
  - '*'
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes/proxy
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes/proxy
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - bind
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad16_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batches
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - escalate
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad16_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  - apps
  resources:
  - deployments
  - roles
  verbs:
  - get
  - watch
  - bind
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batches
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr01:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr01
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad17_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr02:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr02
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - create
  - watch
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: cr-bad17_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/badcr03:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: badcr03
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - update
  - list
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

