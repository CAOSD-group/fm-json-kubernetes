##### FILE: generated_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to rabbitmq/Secret/rabbitmq-config:
apiVersion: v1
data:
  rabbitmq.conf: IyMgVXNlcm5hbWUgYW5kIHBhc3N3b3JkCiMjCmRlZmF1bHRfdXNlciA9IHVzZXIKZGVmYXVsdF9wYXNzID0gQ0hBTkdFTUUKIyMgQ2x1c3RlcmluZwojIwpjbHVzdGVyX2Zvcm1hdGlvbi5wZWVyX2Rpc2NvdmVyeV9iYWNrZW5kICA9IHJhYmJpdF9wZWVyX2Rpc2NvdmVyeV9rOHMKY2x1c3Rlcl9mb3JtYXRpb24uazhzLmhvc3QgPSBrdWJlcm5ldGVzLmRlZmF1bHQKY2x1c3Rlcl9mb3JtYXRpb24ubm9kZV9jbGVhbnVwLmludGVydmFsID0gMTAKY2x1c3Rlcl9mb3JtYXRpb24ubm9kZV9jbGVhbnVwLm9ubHlfbG9nX3dhcm5pbmcgPSB0cnVlCmNsdXN0ZXJfcGFydGl0aW9uX2hhbmRsaW5nID0gYXV0b2hlYWwKIyBxdWV1ZSBtYXN0ZXIgbG9jYXRvcgpxdWV1ZV9tYXN0ZXJfbG9jYXRvciA9IG1pbi1tYXN0ZXJzCiMgZW5hYmxlIGd1ZXN0IHVzZXIKbG9vcGJhY2tfdXNlcnMuZ3Vlc3QgPSBmYWxzZQojZGVmYXVsdF92aG9zdCA9IHJhYmJpdG1xLXZob3N0CiNkaXNrX2ZyZWVfbGltaXQuYWJzb2x1dGUgPSA1ME1C
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.0.1
  name: rabbitmq-config
  namespace: rabbitmq
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generated_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to rabbitmq/Secret/rabbitmq:
apiVersion: v1
data:
  rabbitmq-erlang-cookie: WnFkT1lqR0cyZ29NVWdiaUFwbHRDendabkRrZ0ZqVjU=
  rabbitmq-password: d282NkZHRjV0RWFJNDU0RA==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.0.1
  name: rabbitmq
  namespace: rabbitmq
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generated_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to rabbitmq/Role/rabbitmq-endpoint-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.0.1
  name: rabbitmq-endpoint-reader
  namespace: rabbitmq
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generated_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to rabbitmq/RoleBinding/rabbitmq-endpoint-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.0.1
  name: rabbitmq-endpoint-reader
  namespace: rabbitmq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rabbitmq-endpoint-reader
subjects:
- kind: ServiceAccount
  name: rabbitmq

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generated_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to rabbitmq/Service/rabbitmq-headless:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.0.1
  name: rabbitmq-headless
  namespace: rabbitmq
spec:
  clusterIP: None
  ports:
  - name: epmd
    port: 4369
    targetPort: epmd
  - name: amqp
    port: 5672
    targetPort: amqp
  - name: dist
    port: 25672
    targetPort: dist
  - name: http-stats
    port: 15672
    targetPort: stats
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/name: rabbitmq

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generated_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to rabbitmq/Service/rabbitmq:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/created-by: eks-workshop
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.0.1
  name: rabbitmq
  namespace: rabbitmq
spec:
  ports:
  - name: amqp
    nodePort: null
    port: 5672
    targetPort: amqp
  - name: epmd
    nodePort: null
    port: 4369
    targetPort: epmd
  - name: dist
    nodePort: null
    port: 25672
    targetPort: dist
  - name: http-stats
    nodePort: null
    port: 15672
    targetPort: stats
  selector:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/name: rabbitmq
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generatedResources_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-tenant-namespace/ServiceAccount/ftenant:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    toolkit.fluxcd.io/tenant: ftenant
  name: ftenant
  namespace: flux-tenant-namespace

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generatedResources3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-tenant-namespace/ServiceAccount/ftenant:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    toolkit.fluxcd.io/tenant: ftenant
  name: ftenant
  namespace: flux-tenant-namespace

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generatedResources4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-tenant-namespace/RoleBinding/ftenant:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    toolkit.fluxcd.io/tenant: ftenant
  name: ftenant
  namespace: flux-tenant-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: User
  name: flux:flux-tenant-namespace:ftenant
- kind: ServiceAccount
  name: ftenant
  namespace: flux-tenant-namespace

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generatedResources4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-tenant-namespace/ServiceAccount/ftenant:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    toolkit.fluxcd.io/tenant: ftenant
  name: ftenant
  namespace: flux-tenant-namespace

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generator-a100-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/generator-a100:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: generator-a100
  name: generator-a100
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: generator-a100
  template:
    metadata:
      labels:
        app: generator-a100
      name: generator-a100
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/region
                operator: In
                values:
                - LAS1
              - key: gpu.nvidia.com/class
                operator: In
                values:
                - A100_PCIE_80GB
      containers:
      - env:
        - name: APP_PORT
          value: "8080"
        - name: EXEC_PORT
          value: "8080"
        - name: BUCKET_REGION
          value: las1
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: accessKey
              name: s3-full-secret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secretKey
              name: s3-full-secret
        - name: FILE_NAME
          value: ggml-model-f16.gguf
        image: ghcr.io/brianlechthaler/llama-k8s/generator:main
        imagePullPolicy: Always
        name: generator
        resources:
          limits:
            cpu: 32
            memory: 64Gi
            nvidia.com/gpu: 2
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/generator-a100

skipped mutate policy add-safe-to-evict -> resource default/Deployment/generator-a100
policy disallow-default-namespace -> resource default/Deployment/generator-a100 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/generator-a100 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/generator-a100 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/generator-a100 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: generator-a100-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/generator-a100:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: generator-a100
  name: generator-a100
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: generator-a100
  template:
    metadata:
      labels:
        app: generator-a100
      name: generator-a100
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/region
                operator: In
                values:
                - LAS1
              - key: gpu.nvidia.com/class
                operator: In
                values:
                - A100_PCIE_80GB
      containers:
      - env:
        - name: APP_PORT
          value: "8080"
        - name: EXEC_PORT
          value: "8080"
        - name: BUCKET_REGION
          value: las1
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: accessKey
              name: s3-full-secret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secretKey
              name: s3-full-secret
        - name: FILE_NAME
          value: ggml-model-f16.gguf
        image: ghcr.io/brianlechthaler/llama-k8s/generator:main
        imagePullPolicy: Always
        name: generator
        resources:
          limits:
            cpu: 32
            memory: 64Gi
            nvidia.com/gpu: 2
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/generator-a100

skipped mutate policy add-safe-to-evict -> resource default/Deployment/generator-a100
policy disallow-default-namespace -> resource default/Deployment/generator-a100 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/generator-a100 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/generator-a100 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/generator-a100 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: generator-a100-nvlink-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/generator-a100:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: generator-a100
  name: generator-a100
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: generator-a100
  template:
    metadata:
      labels:
        app: generator-a100-nvlink
      name: generator-a100-nvlink
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/region
                operator: In
                values:
                - LAS1
              - key: gpu.nvidia.com/class
                operator: In
                values:
                - A100_NVLINK_80GB
      containers:
      - env:
        - name: APP_PORT
          value: "8080"
        - name: EXEC_PORT
          value: "8080"
        - name: BUCKET_REGION
          value: las1
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: accessKey
              name: s3-full-secret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secretKey
              name: s3-full-secret
        - name: FILE_NAME
          value: ggml-model-f16.gguf
        image: ghcr.io/brianlechthaler/llama-k8s/generator:main
        imagePullPolicy: Always
        name: generator
        resources:
          limits:
            cpu: 32
            memory: 64Gi
            nvidia.com/gpu: 2
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/generator-a100

skipped mutate policy add-safe-to-evict -> resource default/Deployment/generator-a100
policy disallow-default-namespace -> resource default/Deployment/generator-a100 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/generator-a100 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/generator-a100 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/generator-a100 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: generator-a100-nvlink-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/generator-a100:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: generator-a100
  name: generator-a100
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: generator-a100
  template:
    metadata:
      labels:
        app: generator-a100-nvlink
      name: generator-a100-nvlink
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/region
                operator: In
                values:
                - LAS1
              - key: gpu.nvidia.com/class
                operator: In
                values:
                - A100_NVLINK_80GB
      containers:
      - env:
        - name: APP_PORT
          value: "8080"
        - name: EXEC_PORT
          value: "8080"
        - name: BUCKET_REGION
          value: las1
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: accessKey
              name: s3-full-secret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secretKey
              name: s3-full-secret
        - name: FILE_NAME
          value: ggml-model-f16.gguf
        image: ghcr.io/brianlechthaler/llama-k8s/generator:main
        imagePullPolicy: Always
        name: generator
        resources:
          limits:
            cpu: 32
            memory: 64Gi
            nvidia.com/gpu: 2
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/generator-a100

skipped mutate policy add-safe-to-evict -> resource default/Deployment/generator-a100
policy disallow-default-namespace -> resource default/Deployment/generator-a100 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/generator-a100 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/generator-a100 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/generator-a100 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/generator-a100 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: generator-a40-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/generator-a40:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: generator-a40
  name: generator-a40
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: generator-a40
  template:
    metadata:
      labels:
        app: generator-a40
      name: generator-a40
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/region
                operator: In
                values:
                - LAS1
              - key: gpu.nvidia.com/class
                operator: In
                values:
                - A40
      containers:
      - env:
        - name: APP_PORT
          value: "8080"
        - name: EXEC_PORT
          value: "8080"
        - name: BUCKET_NAME
          valueFrom:
            secretKeyRef:
              key: name
              name: s3-bucket
        - name: BUCKET_REGION
          value: las1
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: accessKey
              name: s3-full-secret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secretKey
              name: s3-full-secret
        - name: FILE_NAME
          value: ggml-model-f16.gguf
        image: ghcr.io/brianlechthaler/llama-k8s/generator:main
        imagePullPolicy: Always
        name: generator
        resources:
          limits:
            cpu: 32
            memory: 64Gi
            nvidia.com/gpu: 3
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/generator-a40

skipped mutate policy add-safe-to-evict -> resource default/Deployment/generator-a40
policy disallow-default-namespace -> resource default/Deployment/generator-a40 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/generator-a40 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/generator-a40 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/generator-a40 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/generator-a40 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/generator-a40 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/generator-a40 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/generator-a40 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: generator-a40-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/generator-a40:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: generator-a40
  name: generator-a40
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: generator-a40
  template:
    metadata:
      labels:
        app: generator-a40
      name: generator-a40
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/region
                operator: In
                values:
                - LAS1
              - key: gpu.nvidia.com/class
                operator: In
                values:
                - A40
      containers:
      - env:
        - name: APP_PORT
          value: "8080"
        - name: EXEC_PORT
          value: "8080"
        - name: BUCKET_NAME
          valueFrom:
            secretKeyRef:
              key: name
              name: s3-bucket
        - name: BUCKET_REGION
          value: las1
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: accessKey
              name: s3-full-secret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secretKey
              name: s3-full-secret
        - name: FILE_NAME
          value: ggml-model-f16.gguf
        image: ghcr.io/brianlechthaler/llama-k8s/generator:main
        imagePullPolicy: Always
        name: generator
        resources:
          limits:
            cpu: 32
            memory: 64Gi
            nvidia.com/gpu: 3
      restartPolicy: Always

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/generator-a40

skipped mutate policy add-safe-to-evict -> resource default/Deployment/generator-a40
policy disallow-default-namespace -> resource default/Deployment/generator-a40 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/generator-a40 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/generator-a40 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/generator-a40 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/generator-a40 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/generator-a40 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/generator-a40 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/generator-a40 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: generic.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/api-script:
apiVersion: v1
data:
  index.js: |
    console.log(`Starting ${Bun.env.MODEL_ALIAS} API!`);
    Bun.serve({
      fetch(req) {
        console.log(req);
        return new Response("gpt-4");
      },
    });
kind: ConfigMap
metadata:
  name: api-script
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generic_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/my-app:
apiVersion: v1
kind: Pod
metadata:
  name: my-app
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "1000000"
    image: busybox:1.28
    name: my-frontend
    volumeMounts:
    - mountPath: /scratch
      name: scratch-volume
  volumes:
  - ephemeral:
      volumeClaimTemplate:
        metadata:
          labels:
            type: my-frontend-volume
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
          storageClassName: scratch-storage-class
    name: scratch-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/my-app

skipped mutate policy add-safe-to-evict -> resource default/Pod/my-app
policy disallow-default-namespace -> resource default/Pod/my-app failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/my-app failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/my-app failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/my-app failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/my-app failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/my-app failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/my-app failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/my-app failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: generic_CSI.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/my-csi-app-inline-volume:
apiVersion: v1
kind: Pod
metadata:
  name: my-csi-app-inline-volume
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "100000"
    image: intel/pmem-csi-driver-test:v0.7.14
    name: my-frontend
    volumeMounts:
    - mountPath: /data
      name: my-csi-volume
  volumes:
  - ephemeral:
      volumeClaimTemplate:
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 4Gi
          storageClassName: pmem-csi-sc-late-binding
    name: my-csi-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/my-csi-app-inline-volume

skipped mutate policy add-safe-to-evict -> resource default/Pod/my-csi-app-inline-volume
policy disallow-default-namespace -> resource default/Pod/my-csi-app-inline-volume failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/my-csi-app-inline-volume failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/my-csi-app-inline-volume failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/my-csi-app-inline-volume failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/my-csi-app-inline-volume failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/my-csi-app-inline-volume failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/my-csi-app-inline-volume failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/my-csi-app-inline-volume failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: genericBackupRestorePod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ibm-common-services/Pod/hold-for-backup:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    backup.velero.io/backup-volumes: mongodump,zendump
  labels:
    foundationservices.cloudpak.ibm.com: data
  name: hold-for-backup
  namespace: ibm-common-services
spec:
  containers:
  - command:
    - bash
    - -c
    - sleep infinity
    image: registry.access.redhat.com/ubi8/ubi:latest
    name: hold-for-backup
    volumeMounts:
    - mountPath: /dump
      name: mongodump
      subpath: dump
    - mountPath: /zen-dump
      name: zendump
  restartPolicy: Never
  volumes:
  - name: mongodump
    persistentVolumeClaim:
      claimName: cs-mongodump
  - name: zendump
    persistentVolumeClaim:
      claimName: zen-backup-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ibm-common-services/Pod/hold-for-backup

skipped mutate policy add-safe-to-evict -> resource ibm-common-services/Pod/hold-for-backup
policy disallow-latest-tag -> resource ibm-common-services/Pod/hold-for-backup failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource ibm-common-services/Pod/hold-for-backup failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ibm-common-services/Pod/hold-for-backup failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ibm-common-services/Pod/hold-for-backup failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ibm-common-services/Pod/hold-for-backup failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource ibm-common-services/Pod/hold-for-backup failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ibm-common-services/Pod/hold-for-backup failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource ibm-common-services/Pod/hold-for-backup failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: generic-database.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/PersistentVolumeClaim/generic-database:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: generic-database
  namespace: airflow-v10
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generic-database1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/PersistentVolumeClaim/generic-database:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: generic-database
  namespace: airflow-v10
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generic-device-plugin1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/generic-device-plugin:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: generic-device-plugin
  name: generic-device-plugin
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: generic-device-plugin
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app.kubernetes.io/name: generic-device-plugin
    spec:
      containers:
      - args:
        - --device
        - "name: tun\ngroups:\n  - count: 1000\n    paths:\n      - path: /dev/net/tun
          \         \n"
        image: ghcr.io/squat/generic-device-plugin
        name: generic-device-plugin
        ports:
        - containerPort: 8080
          name: http
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /var/lib/kubelet/device-plugins
          name: device-plugin
        - mountPath: /dev
          name: dev
      priorityClassName: system-node-critical
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /var/lib/kubelet/device-plugins
        name: device-plugin
      - hostPath:
          path: /dev
        name: dev
  updateStrategy:
    type: RollingUpdate

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/generic-device-plugin
policy disallow-latest-tag -> resource kube-system/DaemonSet/generic-device-plugin failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-cap-net-raw -> resource kube-system/DaemonSet/generic-device-plugin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource kube-system/DaemonSet/generic-device-plugin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/generic-device-plugin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource kube-system/DaemonSet/generic-device-plugin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 5, warn: 0, error: 0, skip: 1 

##### FILE: generic-flower.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/PersistentVolumeClaim/generic-flower:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: generic-flower
  namespace: airflow-v10
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generic-flower1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/PersistentVolumeClaim/generic-flower:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: generic-flower
  namespace: airflow-v10
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generic-redis.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/PersistentVolumeClaim/generic-redis:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: generic-redis
  namespace: airflow-v10
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generic-redis1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/PersistentVolumeClaim/generic-redis:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: generic-redis
  namespace: airflow-v10
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generic-webserver.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/PersistentVolumeClaim/generic-webserver:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: generic-webserver
  namespace: airflow-v10
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generic-webserver1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/PersistentVolumeClaim/generic-webserver:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: generic-webserver
  namespace: airflow-v10
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generic-worker.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/PersistentVolumeClaim/generic-worker:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: generic-worker
  namespace: airflow-v10
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: generic-worker1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to airflow-v10/PersistentVolumeClaim/generic-worker:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: generic-worker
  namespace: airflow-v10
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genesis.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/chain-master:
apiVersion: v1
kind: Namespace
metadata:
  name: chain-master
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/chain-master:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: chain-master
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/chain-master:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: chain-master
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/chain-master:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: chain-master
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/chain-master:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: chain-master
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genesis_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to chain-master/Service/genesis:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: genesis
  name: genesis
  namespace: chain-master
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: genesis
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genesis_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to chain-master/Deployment/genesis:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: genesis
  name: genesis
  namespace: chain-master
spec:
  progressDeadlineSeconds: 10
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: genesis
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: genesis
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - genesis
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --disable-ssl
        - --mining-difficulty=2
        - --ip=0.0.0.0
        - --port=8080
        - --bootstrap-ip=0.0.0.0
        - --bootstrap-port=8080
        - --bootstrap-account=0x9049b2dcdb126e3003eff55f23bc3d7f570ce0e3
        - --miner=0x9049b2dcdb126e3003eff55f23bc3d7f570ce0e3
        - --datadir=/opt/tbb/data
        image: ccr.ccs.tencentyun.com/superproj/tbb:v0.0.2
        imagePullPolicy: Always
        name: genesis
        ports:
        - containerPort: 8080
          name: http-insecure
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/tbb/data
          name: genesis-database
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 5
      volumes:
      - hostPath:
          path: /data/genesis-database
          type: DirectoryOrCreate
        name: genesis-database

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource chain-master/Deployment/genesis
policy drop-all-capabilities -> resource chain-master/Deployment/genesis failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource chain-master/Deployment/genesis failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource chain-master/Deployment/genesis failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource chain-master/Deployment/genesis failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource chain-master/Deployment/genesis failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource chain-master/Deployment/genesis failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: genid.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-stone:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-stone
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        configMapKeyRef:
          key: INTERVAL
          name: ttabae-config
    image: smlinux/genid:env
    name: fakeid
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-stone
policy disallow-default-namespace -> resource default/Pod/genid-stone failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-stone failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-stone failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-stone failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-stone failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-stone failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-stone failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-stone failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-stone:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-stone
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        configMapKeyRef:
          key: INTERVAL
          name: ttabae-config
    image: smlinux/genid:env
    name: fakeid
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-stone
policy disallow-default-namespace -> resource default/Pod/genid-stone failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-stone failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-stone failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-stone failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-stone failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-stone failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-stone failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-stone failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-stone:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-stone
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        configMapKeyRef:
          key: INTERVAL
          name: ttabae-config
    image: smlinux/genid:env
    name: fakeid
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-stone
policy disallow-default-namespace -> resource default/Pod/genid-stone failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-stone failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-stone failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-stone failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-stone failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-stone failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-stone failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-stone failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-stone:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-stone
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        configMapKeyRef:
          key: INTERVAL
          name: test-config
    image: smlinux/genid:env
    name: fakeid
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-stone
policy disallow-default-namespace -> resource default/Pod/genid-stone failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-stone failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-stone failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-stone failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-stone failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-stone failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-stone failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-stone failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-env-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-env-secret:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-env-secret
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        secretKeyRef:
          key: INTERVAL
          name: ttabae-secret
    image: smlinux/genid:env
    name: fakeid-generator
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-env-secret
policy disallow-default-namespace -> resource default/Pod/genid-env-secret failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-env-secret failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-env-secret failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-env-secret failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-env-secret failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-env-secret failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-env-secret failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-env-secret failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-env-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-env-secret:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-env-secret
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        secretKeyRef:
          key: INTERVAL
          name: ttabae-secret
    image: smlinux/genid:env
    name: fakeid-generator
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-env-secret
policy disallow-default-namespace -> resource default/Pod/genid-env-secret failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-env-secret failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-env-secret failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-env-secret failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-env-secret failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-env-secret failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-env-secret failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-env-secret failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-env-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-env-secret:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-env-secret
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        secretKeyRef:
          key: INTERVAL
          name: ttabae-secret
    image: smlinux/genid:env
    name: fakeid-generator
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-env-secret
policy disallow-default-namespace -> resource default/Pod/genid-env-secret failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-env-secret failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-env-secret failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-env-secret failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-env-secret failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-env-secret failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-env-secret failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-env-secret failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-volume.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-volume:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-volume
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        configMapKeyRef:
          key: INTERVAL
          name: ttabae-config
    image: smlinux/genid:env
    name: fakeid-generator
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
    - mountPath: /etc/nginx/conf.d
      name: config
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html
  - configMap:
      items:
      - key: nginx-config.conf
        path: nginx-config.conf
      name: ttabae-config
    name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-volume
policy disallow-default-namespace -> resource default/Pod/genid-volume failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-volume failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-volume failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-volume failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-volume failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-volume failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-volume failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-volume failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-volume1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-volume:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-volume
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        configMapKeyRef:
          key: INTERVAL
          name: ttabae-config
    image: smlinux/genid:env
    name: fakeid-generator
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
    - mountPath: /etc/nginx/conf.d
      name: config
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html
  - configMap:
      items:
      - key: nginx-config.conf
        path: nginx-config.conf
      name: ttabae-config
    name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-volume
policy disallow-default-namespace -> resource default/Pod/genid-volume failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-volume failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-volume failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-volume failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-volume failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-volume failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-volume failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-volume failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-volume2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-volume:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-volume
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        configMapKeyRef:
          key: INTERVAL
          name: ttabae-config
    image: smlinux/genid:env
    name: fakeid-generator
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
    - mountPath: /etc/nginx/conf.d
      name: config
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html
  - configMap:
      items:
      - key: nginx-config.conf
        path: nginx-config.conf
      name: ttabae-config
    name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-volume
policy disallow-default-namespace -> resource default/Pod/genid-volume failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-volume failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-volume failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-volume failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-volume failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-volume failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-volume failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-volume failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-volume-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-volume-secret:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-volume-secret
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        secretKeyRef:
          key: INTERVAL
          name: ttabae-secret
    image: smlinux/genid:env
    name: fakeid-generator
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
    - mountPath: /etc/nginx/conf.d
      name: config
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html
  - name: config
    secret:
      items:
      - key: nginx-config.conf
        path: nginx-config.conf
      secretName: ttabae-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-volume-secret
policy disallow-default-namespace -> resource default/Pod/genid-volume-secret failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-volume-secret failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-volume-secret failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-volume-secret failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-volume-secret failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-volume-secret failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-volume-secret failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-volume-secret failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-volume-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-volume-secret:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-volume-secret
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        secretKeyRef:
          key: INTERVAL
          name: ttabae-secret
    image: smlinux/genid:env
    name: fakeid-generator
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
    - mountPath: /etc/nginx/conf.d
      name: config
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html
  - name: config
    secret:
      items:
      - key: nginx-config.conf
        path: nginx-config.conf
      secretName: ttabae-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-volume-secret
policy disallow-default-namespace -> resource default/Pod/genid-volume-secret failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-volume-secret failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-volume-secret failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-volume-secret failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-volume-secret failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-volume-secret failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-volume-secret failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-volume-secret failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-volume-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-volume-secret:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-volume-secret
  namespace: default
spec:
  containers:
  - env:
    - name: INTERVAL
      valueFrom:
        secretKeyRef:
          key: INTERVAL
          name: ttabae-secret
    image: smlinux/genid:env
    name: fakeid-generator
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
    - mountPath: /etc/nginx/conf.d
      name: config
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html
  - name: config
    secret:
      items:
      - key: nginx-config.conf
        path: nginx-config.conf
      secretName: ttabae-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-volume-secret
policy disallow-default-namespace -> resource default/Pod/genid-volume-secret failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-volume-secret failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-volume-secret failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-volume-secret failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-volume-secret failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-volume-secret failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-volume-secret failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-volume-secret failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-whole.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-boy:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-boy
  namespace: default
spec:
  containers:
  - envFrom:
    - configMapRef:
        name: ttabae-config
    image: smlinux/genid:env
    name: fakeid
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-boy
policy disallow-default-namespace -> resource default/Pod/genid-boy failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-boy failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-boy failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-boy failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-boy failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-boy failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-boy failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-boy failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-whole1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-boy:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-boy
  namespace: default
spec:
  containers:
  - envFrom:
    - configMapRef:
        name: ttabae-config
    image: smlinux/genid:env
    name: fakeid
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-boy
policy disallow-default-namespace -> resource default/Pod/genid-boy failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-boy failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-boy failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-boy failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-boy failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-boy failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-boy failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-boy failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-whole2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-boy:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-boy
  namespace: default
spec:
  containers:
  - envFrom:
    - configMapRef:
        name: ttabae-config
    image: smlinux/genid:env
    name: fakeid
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-boy
policy disallow-default-namespace -> resource default/Pod/genid-boy failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-boy failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-boy failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-boy failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-boy failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-boy failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-boy failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-boy failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genid-whole3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/genid-stone:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: genid-stone
  namespace: default
spec:
  containers:
  - envFrom:
    - configMapRef:
        name: test-config
    image: smlinux/genid:env
    name: fakeid
    volumeMounts:
    - mountPath: /webdata
      name: html
  - image: nginx:1.14
    name: web-server
    ports:
    - containerPort: 80
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - emptyDir: {}
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/genid-stone
policy disallow-default-namespace -> resource default/Pod/genid-stone failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/genid-stone failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/genid-stone failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/genid-stone failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/genid-stone failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/genid-stone failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/genid-stone failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/genid-stone failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genie.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/genie-config:
apiVersion: v1
data:
  cni_genie_network_config: |-
    {
        "name": "k8s-pod-network",
        "type": "genie",
        "log_level": "info",
        "datastore_type": "kubernetes",
        "hostname": "__KUBERNETES_NODE_NAME__",
        "policy": {
            "type": "k8s",
            "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
        },
        "kubernetes": {
            "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
            "kubeconfig": "/etc/cni/net.d/genie-kubeconfig"
        },
        "romana_root": "http://__ROMANA_SERVICE_HOST__:__ROMANA_SERVICE_PORT__",
        "segment_label_name": "romanaSegment"
    }
kind: ConfigMap
metadata:
  name: genie-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genie1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/genie:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: genie
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genie1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/genie-config:
apiVersion: v1
data:
  cni_genie_network_config: |-
    {
        "name": "k8s-pod-network",
        "type": "genie",
        "log_level": "info",
        "datastore_type": "kubernetes",
        "hostname": "__KUBERNETES_NODE_NAME__",
        "policy": {
            "type": "k8s",
            "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
        },
        "kubernetes": {
            "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
            "kubeconfig": "/etc/cni/net.d/genie-kubeconfig"
        },
        "romana_root": "http://__ROMANA_SERVICE_HOST__:__ROMANA_SERVICE_PORT__",
        "segment_label_name": "romanaSegment"
    }
kind: ConfigMap
metadata:
  name: genie-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genie2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/genie:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: genie
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genie2_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/genie-config:
apiVersion: v1
data:
  cni_genie_network_config: |-
    {
        "name": "k8s-pod-network",
        "type": "genie",
        "log_level": "info",
        "datastore_type": "kubernetes",
        "hostname": "__KUBERNETES_NODE_NAME__",
        "policy": {
            "type": "k8s",
            "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
        },
        "kubernetes": {
            "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
            "kubeconfig": "/etc/cni/net.d/genie-kubeconfig"
        },
        "romana_root": "http://__ROMANA_SERVICE_HOST__:__ROMANA_SERVICE_PORT__",
        "segment_label_name": "romanaSegment"
    }
kind: ConfigMap
metadata:
  name: genie-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genie-complete_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/genie-policy-controller:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: genie-policy
  name: genie-policy-controller
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: genie-policy
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: |
          [
            {
              "key": "dedicated",
              "value": "master",
              "effect": "NoSchedule"
            },
            {
              "key": "CriticalAddonsOnly",
              "operator": "Exists"
            }
          ]
      labels:
        k8s-app: genie-policy
    spec:
      containers:
      - args:
        - -kubeconfig=/etc/kubernetes/admin.conf
        - -logtostderr=true
        command:
        - /genie-policy
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: quay.io/huawei-cni-genie/genie-policy-controller:latest
        imagePullPolicy: Always
        name: policy-engine
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/kubernetes
          name: etc-kubernetes
          readOnly: true
      hostNetwork: true
      hostPID: true
      serviceAccountName: genie-policy
      volumes:
      - hostPath:
          path: /etc/kubernetes
        name: etc-kubernetes

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/genie-policy-controller
policy disallow-latest-tag -> resource kube-system/DaemonSet/genie-policy-controller failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource kube-system/DaemonSet/genie-policy-controller failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/genie-policy-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/genie-policy-controller failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/genie-policy-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/genie-policy-controller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/genie-policy-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource kube-system/DaemonSet/genie-policy-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genie-complete_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/genie-plugin:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: genie-plugin
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genie-complete_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/genie-policy:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: genie-policy
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genie-complete_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/genie-config:
apiVersion: v1
data:
  cni_genie_network_config: |-
    {
        "name": "k8s-pod-network",
        "type": "genie",
        "cniVersion": "0.2.0",
        "log_level": "info",
        "datastore_type": "kubernetes",
        "hostname": "__KUBERNETES_NODE_NAME__",
        "policy": {
            "type": "k8s",
            "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
        },
        "kubernetes": {
            "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
            "kubeconfig": "/etc/cni/net.d/genie-kubeconfig"
        },
        "romana_root": "http://__ROMANA_SERVICE_HOST__:__ROMANA_SERVICE_PORT__",
        "segment_label_name": "romanaSegment"
    }
kind: ConfigMap
metadata:
  name: genie-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genie-complete_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/genie-plugin:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: genie
  name: genie-plugin
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: genie
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: genie
    spec:
      containers:
      - command:
        - /launch.sh
        env:
        - name: CNI_NETWORK_CONFIG
          valueFrom:
            configMapKeyRef:
              key: cni_genie_network_config
              name: genie-config
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: quay.io/huawei-cni-genie/genie-plugin:latest
        imagePullPolicy: Always
        name: install-cni
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-bin-dir
        - mountPath: /host/etc/cni/net.d
          name: cni-net-dir
      hostNetwork: true
      hostPID: true
      serviceAccountName: genie-plugin
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/not-ready
        operator: Exists
      volumes:
      - hostPath:
          path: /opt/cni/bin
        name: cni-bin-dir
      - hostPath:
          path: /etc/cni/net.d
        name: cni-net-dir

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/genie-plugin
policy disallow-latest-tag -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genie-complete_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/genie-network-admission-controller:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    role: genie-network-admission-controller
  name: genie-network-admission-controller
  namespace: kube-system
spec:
  selector:
    matchLabels:
      role: genie-network-admission-controller
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        role: genie-network-admission-controller
    spec:
      containers:
      - image: quay.io/huawei-cni-genie/genie-admission-controller:latest
        imagePullPolicy: Always
        name: genie-network-admission-controller
        ports:
        - containerPort: 8000
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/master: ""
      serviceAccountName: genie-plugin
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node.kubernetes.io/not-ready
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/genie-network-admission-controller

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/genie-network-admission-controller
policy disallow-latest-tag -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: genie-complete_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/genie-network-admission-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    role: genie-network-admission-controller
  name: genie-network-admission-controller
  namespace: kube-system
spec:
  ports:
  - port: 443
    targetPort: 8000
  selector:
    role: genie-network-admission-controller

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genie-plugin_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ServiceAccount/genie-plugin:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: genie-plugin
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genie-plugin_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/ConfigMap/genie-config:
apiVersion: v1
data:
  cni_genie_network_config: |-
    {
        "name": "k8s-pod-network",
        "type": "genie",
        "cniVersion": "0.2.0",
        "log_level": "info",
        "datastore_type": "kubernetes",
        "hostname": "__KUBERNETES_NODE_NAME__",
        "policy": {
            "type": "k8s",
            "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
        },
        "kubernetes": {
            "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
            "kubeconfig": "/etc/cni/net.d/genie-kubeconfig"
        },
        "romana_root": "http://__ROMANA_SERVICE_HOST__:__ROMANA_SERVICE_PORT__",
        "segment_label_name": "romanaSegment"
    }
kind: ConfigMap
metadata:
  name: genie-config
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: genie-plugin_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/genie-plugin:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: genie
  name: genie-plugin
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: genie
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: genie
    spec:
      containers:
      - command:
        - /launch.sh
        env:
        - name: CNI_NETWORK_CONFIG
          valueFrom:
            configMapKeyRef:
              key: cni_genie_network_config
              name: genie-config
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: quay.io/huawei-cni-genie/genie-plugin:latest
        imagePullPolicy: Always
        name: install-cni
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-bin-dir
        - mountPath: /host/etc/cni/net.d
          name: cni-net-dir
      hostNetwork: true
      hostPID: true
      serviceAccountName: genie-plugin
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/not-ready
        operator: Exists
      volumes:
      - hostPath:
          path: /opt/cni/bin
        name: cni-bin-dir
      - hostPath:
          path: /etc/cni/net.d
        name: cni-net-dir

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/genie-plugin
policy disallow-latest-tag -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/DaemonSet/genie-plugin failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: genie-plugin_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/DaemonSet/genie-network-admission-controller:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    role: genie-network-admission-controller
  name: genie-network-admission-controller
  namespace: kube-system
spec:
  selector:
    matchLabels:
      role: genie-network-admission-controller
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        role: genie-network-admission-controller
    spec:
      containers:
      - image: quay.io/huawei-cni-genie/genie-admission-controller:latest
        imagePullPolicy: Always
        name: genie-network-admission-controller
        ports:
        - containerPort: 8000
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/master: ""
      serviceAccountName: genie-plugin
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node.kubernetes.io/not-ready
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/genie-network-admission-controller

skipped mutate policy add-safe-to-evict -> resource kube-system/DaemonSet/genie-network-admission-controller
policy disallow-latest-tag -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource kube-system/DaemonSet/genie-network-admission-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: genie-plugin_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Service/genie-network-admission-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    role: genie-network-admission-controller
  name: genie-network-admission-controller
  namespace: kube-system
spec:
  ports:
  - port: 443
    targetPort: 8000
  selector:
    role: genie-network-admission-controller

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geo-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/geolocation-service-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: geo-deploy
  name: geolocation-service-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: geo-deploy
  template:
    metadata:
      labels:
        app: geo-deploy
    spec:
      containers:
      - env:
        - name: FLASK_RUN_PORT
          value: "4000"
        - name: INFRA_URL
          value: infra-service
        image: resilientsixregistry.azurecr.io/geo-service:v2.0.3
        name: geo-deploy
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/geolocation-service-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/geolocation-service-deployment
policy disallow-default-namespace -> resource default/Deployment/geolocation-service-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/geolocation-service-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/geolocation-service-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/geolocation-service-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/geolocation-service-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/geolocation-service-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/geolocation-service-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: geo-deploy_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/geo-service:
apiVersion: v1
kind: Service
metadata:
  name: geo-service
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 4000
  selector:
    app: geo-deploy

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geo-deploy_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/geo-service-public:
apiVersion: v1
kind: Service
metadata:
  name: geo-service-public
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 4000
  selector:
    app: geo-deploy
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geo-deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/geolocation-service-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: geo-deploy
  name: geolocation-service-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: geo-deploy
  template:
    metadata:
      labels:
        app: geo-deploy
    spec:
      containers:
      - env:
        - name: FLASK_RUN_PORT
          value: "4000"
        - name: INFRA_URL
          value: infra-service
        image: marcinziolkowski/geo-service:v1.0.1
        name: geo-deploy
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/geolocation-service-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/geolocation-service-deployment
policy disallow-default-namespace -> resource default/Deployment/geolocation-service-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/geolocation-service-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/geolocation-service-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/geolocation-service-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/geolocation-service-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/geolocation-service-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/geolocation-service-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: geo-deploy1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/geo-service:
apiVersion: v1
kind: Service
metadata:
  name: geo-service
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 4000
  selector:
    app: geo-deploy

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geo-hpa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/geo-hpa:
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: geo-hpa
  namespace: default
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: geolocation-service-deployment
  targetCPUUtilizationPercentage: 50

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: geoipupdate.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to loki/DaemonSet/geoipupdate:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: geoipupdate
  namespace: loki
spec:
  selector:
    matchLabels:
      name: geoipupdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        name: geoipupdate
    spec:
      containers:
      - env:
        - name: GEOIPUPDATE_EDITION_IDS
          value: GeoLite2-City
        - name: GEOIPUPDATE_FREQUENCY
          value: "24"
        - name: GEOIPUPDATE_ACCOUNT_ID
          valueFrom:
            secretKeyRef:
              key: MAXMIND_ACCOUNT_ID
              name: loki-secret
        - name: GEOIPUPDATE_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: MAXMIND_LICENSE_KEY
              name: loki-secret
        image: ghcr.io/maxmind/geoipupdate:v7.0.1
        imagePullPolicy: IfNotPresent
        name: geoipupdate
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 32Mi
        volumeMounts:
        - mountPath: /usr/share/GeoIP
          name: download-folder
      volumes:
      - hostPath:
          path: /etc/maxmind
        name: download-folder

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource loki/DaemonSet/geoipupdate
policy drop-all-capabilities -> resource loki/DaemonSet/geoipupdate failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource loki/DaemonSet/geoipupdate failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource loki/DaemonSet/geoipupdate failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource loki/DaemonSet/geoipupdate failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource loki/DaemonSet/geoipupdate failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource loki/DaemonSet/geoipupdate failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 6, warn: 0, error: 0, skip: 1 

##### FILE: geoserver-data.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/nfs-sh:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    storage: nfs-data
  name: nfs-sh
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 50Gi
  nfs:
    path: /data/geoserver_data_directory
    server: 10.36.0.11
  persistentVolumeReclaimPolicy: Retain

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geoserver-data_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/nfs-sh:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-sh
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  selector:
    matchLabels:
      storage: nfs-data
  storageClassName: ""

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gestion-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/gestion-configmap:
apiVersion: v1
data:
  url: gestion-service-back
kind: ConfigMap
metadata:
  name: gestion-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: getconnectionsdirectly-dep.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/getconnectionsdirectly:
apiVersion: v1
kind: Service
metadata:
  name: getconnectionsdirectly
  namespace: default
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: getconnectionsdirectly
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/getconnectionsdirectly failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: getconnectionsdirectly-dep_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to keep/Deployment/getconnectionsdirectly:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: getconnectionsdirectly
  namespace: keep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: getconnectionsdirectly
  template:
    metadata:
      labels:
        app: getconnectionsdirectly
    spec:
      containers:
      - image: docker.io/kavindukalinga/getconnectionsdirectly
        imagePullPolicy: IfNotPresent
        name: getconnectionsdirectly
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: 250m
            memory: 512Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource keep/Deployment/getconnectionsdirectly

skipped mutate policy add-safe-to-evict -> resource keep/Deployment/getconnectionsdirectly
policy disallow-latest-tag -> resource keep/Deployment/getconnectionsdirectly failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource keep/Deployment/getconnectionsdirectly failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource keep/Deployment/getconnectionsdirectly failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource keep/Deployment/getconnectionsdirectly failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource keep/Deployment/getconnectionsdirectly failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource keep/Deployment/getconnectionsdirectly failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource keep/Deployment/getconnectionsdirectly failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource keep/Deployment/getconnectionsdirectly failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: get-data-job.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Job/get-data:
apiVersion: batch/v1
kind: Job
metadata:
  name: get-data
  namespace: default
spec:
  backoffLimit: 0
  completions: 1
  parallelism: 1
  template:
    spec:
      containers:
      - command:
        - curl
        - http://kldsvklnsdiogjerkngernjk23432i90erfefjio.com/fsdkhjsadfjhsadfjsadu343
        image: curlimages/curl:latest
        name: curl-container
      restartPolicy: Never
      serviceAccountName: get-data-service-account

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Job/get-data

skipped mutate policy add-safe-to-evict -> resource default/Job/get-data
policy disallow-default-namespace -> resource default/Job/get-data failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Job/get-data failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Job/get-data failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Job/get-data failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Job/get-data failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-requests-limits -> resource default/Job/get-data failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Job/get-data failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Job/get-data failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: get-data-service-account.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/get-data-service-account:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: get-data-service-account
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geteway-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/cloud-gateway-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-gateway-app
  namespace: default
spec:
  selector:
    matchLabels:
      app: cloud-gateway-app
  template:
    metadata:
      labels:
        app: cloud-gateway-app
    spec:
      containers:
      - env:
        - name: CONFIG_SERVER
          valueFrom:
            configMapKeyRef:
              key: config-url
              name: config-cm
        image: valton93/gatewayservice
        imagePullPolicy: Always
        name: cloud-gateway-app
        ports:
        - containerPort: 9090

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/cloud-gateway-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/cloud-gateway-app
policy disallow-default-namespace -> resource default/Deployment/cloud-gateway-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/cloud-gateway-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/cloud-gateway-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/cloud-gateway-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/cloud-gateway-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/cloud-gateway-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/cloud-gateway-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/cloud-gateway-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/cloud-gateway-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: geteway-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/cloud-gateway-svc:
apiVersion: v1
kind: Service
metadata:
  name: cloud-gateway-svc
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 9090
  selector:
    app: cloud-gateway-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geth-bootnode-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/geth-bootnode:
apiVersion: v1
data:
  UTC--2022-08-19T17-38-31.257380510Z--123463a4b065722e99115d6c222f267d9cabb524: '{"address":"123463a4b065722e99115d6c222f267d9cabb524","crypto":{"cipher":"aes-128-ctr","ciphertext":"93b90389b855889b9f91c89fd15b9bd2ae95b06fe8e2314009fc88859fc6fde9","cipherparams":{"iv":"9dc2eff7967505f0e6a40264d1511742"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"c07503bb1b66083c37527cd8f06f8c7c1443d4c724767f625743bd47ae6179a4"},"mac":"6d359be5d6c432d5bbb859484009a4bf1bd71b76e89420c380bd0593ce25a817"},"id":"622df904-0bb1-4236-b254-f1b8dfdff1ec","version":3}'
  genesis-poa.json: "{\n  \"config\": {\n    \"chainId\": 32382,\n    \"homesteadBlock\":
    0,\n    \"daoForkSupport\": true,\n    \"eip150Block\": 0,\n    \"eip155Block\":
    0,\n    \"eip158Block\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\":
    0,\n    \"petersburgBlock\": 0,\n    \"istanbulBlock\": 0,\n    \"muirGlacierBlock\":
    0,\n    \"berlinBlock\": 0,\n    \"londonBlock\": 0,\n    \"arrowGlacierBlock\":
    0,\n    \"grayGlacierBlock\": 0,\n    \"clique\": {\n      \"period\": 12,\n      \"epoch\":
    30000\n    }\n  },\n  \"difficulty\": \"1\",\n  \"gasLimit\": \"8000000\",\n  \"extradata\":
    \"0x0000000000000000000000000000000000000000000000000000000000000000123463a4b065722e99115d6c222f267d9cabb5240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n
    \ \"alloc\": {\n      \"123463a4b065722e99115d6c222f267d9cabb524\": {\n    \"balance\":
    \"0x43c33c1937564800000\"\n  }\n  }\n}    \n"
  geth_password.txt: ""
  jwtsecret: 0xfad2709d0bb03bf0e8ba3c99bea194575d3e98863133d1af638ed056d1d59345
kind: ConfigMap
metadata:
  labels:
    project: ethernetes
  name: geth-bootnode
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geth-bootnode-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/geth-bootnode-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: geth-bootnode-deployment
    project: ethernetes
  name: geth-bootnode-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: geth-bootnode-pod
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: geth-bootnode-pod
        project: ethernetes
    spec:
      containers:
      - args:
        - --datadir=/execution
        - --networkid=32382
        - --verbosity=5
        - --nat=extip:0.0.0.0
        - --port=30303
        - --http
        - --http.addr=0.0.0.0
        - --http.api=admin,clique,debug,engine,eth,miner,net,rpc,txpool,web3
        - --http.corsdomain=*
        - --http.port=8545
        - --http.vhosts=*
        - --ws
        - --ws.api=admin,clique,debug,engine,eth,miner,net,rpc,txpool,web3
        - --ws.addr=0.0.0.0
        - --ws.port=8546
        - --ws.origins=*
        - --authrpc.vhosts=*
        - --authrpc.addr=0.0.0.0
        - --authrpc.port=8551
        - --allow-insecure-unlock
        - --unlock=0x123463a4b065722e99115d6c222f267d9cabb524
        - --password=/execution/geth_password.txt
        - --nodiscover
        - --syncmode=full
        - --metrics
        - --metrics.addr=0.0.0.0
        - --metrics.port=6060
        - --metrics.expensive
        - --mine
        - --miner.etherbase=0x123463a4b065722e99115d6c222f267d9cabb524
        image: docker.io/ethereum/client-go:v1.13.13
        name: geth
        ports:
        - containerPort: 8545
          name: http-endpoint
        - containerPort: 8546
          name: ws-endpoint
        - containerPort: 8551
          name: auth-rpc
        - containerPort: 6060
          name: metrics
        - containerPort: 30303
          name: listener
          protocol: TCP
        - containerPort: 30303
          name: discovery
          protocol: UDP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
        volumeMounts:
        - mountPath: /execution/
          name: shared-data
        - mountPath: shared-data-between-geth-nodes
          name: shared-data-between-geth-nodes
      initContainers:
      - args:
        - |
          ls -la /execution-ro/ && \
          cp /execution-ro/* /execution-rw/ && \
          chmod -R 777 /execution-rw/ && \
          mkdir -p /execution-rw/keystore && \
          mv /execution-rw/UTC--2022-08-19T17-38-31.257380510Z--123463a4b065722e99115d6c222f267d9cabb524 /execution-rw/keystore/UTC--2022-08-19T17-38-31.257380510Z--123463a4b065722e99115d6c222f267d9cabb524 && \
          cp -r /execution-rw/ /shared-data-between-geth-nodes/
        command:
        - sh
        - -c
        image: busybox
        name: init-configmap
        volumeMounts:
        - mountPath: /execution-ro/
          name: geth-bootnode-volume
          readOnly: false
        - mountPath: /execution-rw/
          name: shared-data
        - mountPath: shared-data-between-geth-nodes
          name: shared-data-between-geth-nodes
      - args:
        - init
        - --datadir=/execution
        - /execution/genesis-poa.json
        image: docker.io/ethereum/client-go:v1.13.13
        name: geth-init
        volumeMounts:
        - mountPath: /execution/
          name: shared-data
      restartPolicy: Always
      volumes:
      - configMap:
          name: geth-bootnode
        name: geth-bootnode-volume
      - emptyDir: {}
        name: shared-data
      - name: shared-data-between-geth-nodes
        persistentVolumeClaim:
          claimName: geth-nodes-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/geth-bootnode-deployment
policy disallow-default-namespace -> resource default/Deployment/geth-bootnode-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/geth-bootnode-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/geth-bootnode-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/geth-bootnode-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/geth-bootnode-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/geth-bootnode-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/geth-bootnode-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/geth-bootnode-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/geth-bootnode-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: geth-bootnode-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/geth-bootnode-svc:
apiVersion: v1
kind: Service
metadata:
  labels:
    project: ethernetes
  name: geth-bootnode-svc
  namespace: default
spec:
  ports:
  - name: http-endpoint
    port: 8545
    protocol: TCP
    targetPort: 8545
  - name: ws-endpoint
    port: 8546
    protocol: TCP
    targetPort: 8546
  - name: auth-rpc
    port: 8551
    protocol: TCP
    targetPort: 8551
  - name: metrics
    port: 6060
    protocol: TCP
    targetPort: 6060
  - name: listener
    port: 30303
    protocol: TCP
    targetPort: 30303
  - name: discovery
    port: 30303
    protocol: UDP
    targetPort: 30303
  selector:
    app: geth-bootnode-pod

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geth-miner.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to eth-project/ConfigMap/eth-geth:
apiVersion: v1
data:
  genesis.json: |
    {
      "config": {
        "chainId": 9596240610,
        "homesteadBlock": 0,
        "eip150Block": 0,
        "eip155Block": 0,
        "eip158Block": 0
      },
      "difficulty": "0x400",
      "gasLimit": "2000000",
      "nonce": "0x0000000000000000",
      "alloc": {
        "0x0E2Ac28B62681076cB2bc36cb891be3447798113": {
          "balance": "100000000000000000000"
        },
        "0x77c8c4Dce82a7B004B5f532c166ccC5945c61e6F": {
          "balance": "200000000000000000000"
        },
        "0x6530C6B52f42306966A7a91952c6A84a2bEE737D": {
          "balance": "300000000000000000000"
        }
      }
    }
  networkid: "9596240610"
kind: ConfigMap
metadata:
  labels:
    app: eth-geth
  name: eth-geth
  namespace: eth-project

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geth-miner_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to eth-project/Secret/eth-geth-miner:
apiVersion: v1
data:
  accountsecret: Yml0dG9Qcm9qZWN0
kind: Secret
metadata:
  labels:
    app: eth-geth-miner
  name: eth-geth-miner
  namespace: eth-project
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geth-miner_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to eth-project/Deployment/eth-geth-miner:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: eth-geth-miner
  name: eth-geth-miner
  namespace: eth-project
spec:
  replicas: 3
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: eth-geth-miner
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: eth-geth-miner
    spec:
      containers:
      - args:
        - -c
        - |
          ETHERBASE=$(geth account list | grep 'Account #0:' | awk '{print $3}' | tr -d '{}') &&
          geth --bootnodes=`cat /root/.ethereum/bootnodes` --miner.etherbase ${ETHERBASE} --mine --networkid=${NETWORK_ID} --ethstats=${HOSTNAME}:${ETHSTATS_SECRET}@${ETHSTATS_SVC} --verbosity=5 --nat extip:${POD_IP}
        command:
        - /bin/sh
        env:
        - name: ETHSTATS_SVC
          value: eth-ethstats.eth-project.svc.cluster.local
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              key: WS_SECRET
              name: eth-ethstats
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              key: networkid
              name: eth-geth
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        name: geth-miner
        ports:
        - containerPort: 30303
          name: discovery-tcp
        resources:
          limits:
            cpu: "1"
            memory: 1G
          requests:
            cpu: ".5"
            memory: 250Mi
        volumeMounts:
        - mountPath: /root/.ethereum
          name: data
      initContainers:
      - args:
        - -c
        - geth init /var/geth/genesis.json
        command:
        - /bin/sh
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        name: init-genesis
        volumeMounts:
        - mountPath: /root/.ethereum
          name: data
        - mountPath: /var/geth
          name: config
      - args:
        - -c
        - |-
          printf '$(ACCOUNT_SECRET)
          $(ACCOUNT_SECRET)
          ' | geth account new
        command:
        - /bin/sh
        env:
        - name: ACCOUNT_SECRET
          valueFrom:
            secretKeyRef:
              key: accountsecret
              name: eth-geth-miner
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        name: create-account
        volumeMounts:
        - mountPath: /root/.ethereum
          name: data
      - args:
        - -c
        - "apk add --no-cache curl; \nCNT=0; \necho \"retrieving bootnodes from $(BOOTNODE_REGISTRAR_SVC)\";
          \nwhile [ $CNT -le 90 ]; do \n  curl -m 5 -s $(BOOTNODE_REGISTRAR_SVC):8080
          | xargs echo -n >> /geth/bootnodes; \n  if [ -s /geth/bootnodes ]; then
          \n    cat /geth/bootnodes; \n    exit 0; \n  fi; \n  echo \"no bootnodes
          found. retrying $CNT...\"; \n  sleep 2 || break; \n  CNT=$((CNT+1)); \ndone;
          \necho \"WARNING. unable to find bootnodes. continuing but geth may not
          be able to find any peers.\"; \nexit 0;\n"
        command:
        - /bin/sh
        env:
        - name: BOOTNODE_REGISTRAR_SVC
          value: eth-bootnode.eth-project.svc.cluster.local
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        name: get-bootnodes
        volumeMounts:
        - mountPath: /geth
          name: data
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          name: eth-geth
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource eth-project/Deployment/eth-geth-miner
policy drop-all-capabilities -> resource eth-project/Deployment/eth-geth-miner failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource eth-project/Deployment/eth-geth-miner failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource eth-project/Deployment/eth-geth-miner failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource eth-project/Deployment/eth-geth-miner failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource eth-project/Deployment/eth-geth-miner failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource eth-project/Deployment/eth-geth-miner failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource eth-project/Deployment/eth-geth-miner failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: geth-nodes-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/geth-nodes-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
  name: geth-nodes-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /mnt/data
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geth-nodes-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/geth-nodes-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: geth-nodes-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
  storageClassName: manual

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: get-home-parameter-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/get-home-parameter:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: get-home-parameter
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: get-home-parameter
  template:
    metadata:
      labels:
        app: get-home-parameter
    spec:
      containers:
      - image: surajkarthicverticurl/get-home-parameter:latest
        name: get-home-parameter
        ports:
        - containerPort: 5001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/get-home-parameter

skipped mutate policy add-safe-to-evict -> resource default/Deployment/get-home-parameter
policy disallow-default-namespace -> resource default/Deployment/get-home-parameter failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/get-home-parameter failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/get-home-parameter failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/get-home-parameter failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: get-home-parameter-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/get-home-parameter-svc:
apiVersion: v1
kind: Service
metadata:
  name: get-home-parameter-svc
  namespace: default
spec:
  ports:
  - port: 5001
    protocol: TCP
    targetPort: 5001
  selector:
    app: get-home-parameter
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: get-home-parameter-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/get-home-parameter-nodeport:
apiVersion: v1
kind: Service
metadata:
  name: get-home-parameter-nodeport
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 5001
  selector:
    app: get-home-parameter
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/get-home-parameter-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: get-home-parameter-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/get-home-parameter:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: get-home-parameter
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: get-home-parameter
  template:
    metadata:
      labels:
        app: get-home-parameter
    spec:
      containers:
      - image: surajkarthicverticurl/get-home-parameter:latest
        name: get-home-parameter
        ports:
        - containerPort: 5001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/get-home-parameter

skipped mutate policy add-safe-to-evict -> resource default/Deployment/get-home-parameter
policy disallow-default-namespace -> resource default/Deployment/get-home-parameter failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/get-home-parameter failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/get-home-parameter failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/get-home-parameter failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: get-home-parameter-deployment1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/get-home-parameter-svc:
apiVersion: v1
kind: Service
metadata:
  name: get-home-parameter-svc
  namespace: default
spec:
  ports:
  - port: 5001
    protocol: TCP
    targetPort: 5001
  selector:
    app: get-home-parameter
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: get-home-parameter-deployment1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/get-home-parameter-nodeport:
apiVersion: v1
kind: Service
metadata:
  name: get-home-parameter-nodeport
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 5001
  selector:
    app: get-home-parameter
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/get-home-parameter-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: get-home-parameter-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/get-home-parameter:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: get-home-parameter
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: get-home-parameter
  template:
    metadata:
      labels:
        app: get-home-parameter
    spec:
      containers:
      - image: surajkarthicverticurl/get-home-parameter:latest
        name: get-home-parameter
        ports:
        - containerPort: 5001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/get-home-parameter

skipped mutate policy add-safe-to-evict -> resource default/Deployment/get-home-parameter
policy disallow-default-namespace -> resource default/Deployment/get-home-parameter failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/get-home-parameter failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/get-home-parameter failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/get-home-parameter failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: get-home-parameter-deployment2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/get-home-parameter-svc:
apiVersion: v1
kind: Service
metadata:
  name: get-home-parameter-svc
  namespace: default
spec:
  ports:
  - port: 5001
    protocol: TCP
    targetPort: 5001
  selector:
    app: get-home-parameter
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: get-home-parameter-deployment2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/get-home-parameter-nodeport:
apiVersion: v1
kind: Service
metadata:
  name: get-home-parameter-nodeport
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 5001
  selector:
    app: get-home-parameter
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/get-home-parameter-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: get-home-parameter-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/get-home-parameter:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: get-home-parameter
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: get-home-parameter
  template:
    metadata:
      labels:
        app: get-home-parameter
    spec:
      containers:
      - image: surajkarthicverticurl/get-home-parameter:latest
        name: get-home-parameter
        ports:
        - containerPort: 5001

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/get-home-parameter

skipped mutate policy add-safe-to-evict -> resource default/Deployment/get-home-parameter
policy disallow-default-namespace -> resource default/Deployment/get-home-parameter failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/get-home-parameter failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/get-home-parameter failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/get-home-parameter failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/get-home-parameter failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: get-home-parameter-deployment3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/get-home-parameter-svc:
apiVersion: v1
kind: Service
metadata:
  name: get-home-parameter-svc
  namespace: default
spec:
  ports:
  - port: 5001
    protocol: TCP
    targetPort: 5001
  selector:
    app: get-home-parameter
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: get-home-parameter-deployment3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/get-home-parameter-nodeport:
apiVersion: v1
kind: Service
metadata:
  name: get-home-parameter-nodeport
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 5001
  selector:
    app: get-home-parameter
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/get-home-parameter-nodeport failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: get-home-parameter-hpa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/get-home-parameter-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: get-home-parameter-hpa
  namespace: default
spec:
  maxReplicas: 7
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 10
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 10
        type: Utilization
    type: Resource
  minReplicas: 5
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: get-home-parameter

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: get-home-parameter-hpa1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/get-home-parameter-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: get-home-parameter-hpa
  namespace: default
spec:
  maxReplicas: 7
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 10
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 10
        type: Utilization
    type: Resource
  minReplicas: 5
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: get-home-parameter

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: get-home-parameter-hpa2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/get-home-parameter-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: get-home-parameter-hpa
  namespace: default
spec:
  maxReplicas: 7
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 10
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 10
        type: Utilization
    type: Resource
  minReplicas: 5
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: get-home-parameter

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: get-home-parameter-hpa3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/get-home-parameter-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: get-home-parameter-hpa
  namespace: default
spec:
  maxReplicas: 7
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 10
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 10
        type: Utilization
    type: Resource
  minReplicas: 5
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: get-home-parameter

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: geth-test-member-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/geth-member-node-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: geth-member-node-deployment
    project: ethernetes
  name: geth-member-node-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: geth-member-node-pod
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: geth-member-node-pod
        project: ethernetes
    spec:
      containers:
      - args:
        - --datadir=/execution
        - --networkid=32382
        - --config=/execution/config.toml
        - --verbosity=5
        - --nat=extip:0.0.0.0
        - --port=30303
        - --http
        - --http.addr=0.0.0.0
        - --http.api=admin,clique,debug,engine,eth,miner,net,rpc,txpool,web3
        - --http.corsdomain=*
        - --http.port=8545
        - --http.vhosts=*
        - --ws
        - --ws.api=admin,clique,debug,engine,eth,miner,net,rpc,txpool,web3
        - --ws.addr=0.0.0.0
        - --ws.port=8546
        - --ws.origins=*
        - --authrpc.vhosts=*
        - --authrpc.addr=0.0.0.0
        - --authrpc.port=8551
        - --allow-insecure-unlock
        - --unlock=0x123463a4b065722e99115d6c222f267d9cabb524
        - --password=/execution/geth_password.txt
        - --nodiscover
        - --syncmode=full
        - --metrics
        - --metrics.addr=0.0.0.0
        - --metrics.port=6060
        - --metrics.expensive
        image: docker.io/ethereum/client-go:v1.13.13
        name: geth
        ports:
        - containerPort: 8545
          name: http-endpoint
        - containerPort: 8546
          name: ws-endpoint
        - containerPort: 8551
          name: auth-rpc
        - containerPort: 6060
          name: metrics
        - containerPort: 30303
          name: listener
          protocol: TCP
        - containerPort: 30303
          name: discovery
          protocol: UDP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
        volumeMounts:
        - mountPath: /execution/
          name: shared-data
      initContainers:
      - args:
        - |
          apt update && \
          apt install curl jq -y && \
          echo "Going to retrieve enode" && \
          ls -larth /shared-data-between-geth-nodes && \
          rm -f /shared-data-between-geth-nodes/execution-rw/enode.txt && \
          until curl -s http://geth-bootnode-svc:8545 -X POST -H "Content-Type: application/json" --data '{"jsonrpc":"2.0","method":"admin_nodeInfo","params":[],"id":1}' | jq -r '.result.enode' > /shared-data-between-geth-nodes/execution-rw/enode.txt ; do
            echo "Entered" && \
            echo "Waiting for Geth bootnode to start..." && \
            sleep 5
          done
          enode=$(cat "/shared-data-between-geth-nodes/execution-rw/enode.txt") && \
          echo "[Node.P2P]" > /execution/config.toml
          echo StaticNodes = [\"$enode@geth-bootnode-svc:30303\"] >> /execution/config.toml && \
          echo "Content of /execution/config.toml:" && \
          cat /execution/config.toml && \

          echo "" && \
          echo "Enode retrieved" && \
          echo "" && \

          apt install tree && \
          sleep 5 && \
          cp -r /shared-data-between-geth-nodes/execution-rw/* /execution && \
          echo "Printing /execution" && \
          ls -larth /execution && \
          chmod -R 777 /execution && \
          echo"" && \
          echo "Content of /shared-data-between-geth-nodes" && \
          tree /shared-data-between-geth-nodes && \
          echo"" && \
          echo "Dir /execution mode changed" && \
          mkdir -p /execution/keystore && \
          echo "Dir /execution/keystore created" && \
          ls -l /execution && \
          tree /execution
        command:
        - /bin/sh
        - -c
        - --
        image: ubuntu
        name: init-execution-dir
        volumeMounts:
        - mountPath: /execution/
          name: shared-data
        - mountPath: shared-data-between-geth-nodes
          name: shared-data-between-geth-nodes
      - args:
        - init
        - --datadir=/execution
        - /execution/genesis-poa.json
        image: docker.io/ethereum/client-go:v1.13.13
        name: geth-init
        volumeMounts:
        - mountPath: /execution/
          name: shared-data
      restartPolicy: Always
      volumes:
      - emptyDir: {}
        name: shared-data
      - name: shared-data-between-geth-nodes
        persistentVolumeClaim:
          claimName: geth-nodes-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/geth-member-node-deployment
policy disallow-default-namespace -> resource default/Deployment/geth-member-node-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/geth-member-node-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/geth-member-node-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/geth-member-node-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/geth-member-node-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/geth-member-node-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/geth-member-node-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/geth-member-node-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/geth-member-node-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: geth-test-member-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/geth-member-node-svc:
apiVersion: v1
kind: Service
metadata:
  labels:
    project: ethernetes
  name: geth-member-node-svc
  namespace: default
spec:
  ports:
  - name: http-endpoint
    port: 8545
    protocol: TCP
    targetPort: 8545
  - name: ws-endpoint
    port: 8546
    protocol: TCP
    targetPort: 8546
  - name: auth-rpc
    port: 8551
    protocol: TCP
    targetPort: 8551
  - name: metrics
    port: 6060
    protocol: TCP
    targetPort: 6060
  - name: listener
    port: 30303
    protocol: TCP
    targetPort: 30303
  - name: discovery
    port: 30303
    protocol: UDP
    targetPort: 30303
  selector:
    app: geth-member-node-pod

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geth-tx.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to eth-project/Service/eth-geth-tx:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: eth-geth-tx
  name: eth-geth-tx
  namespace: eth-project
spec:
  ports:
  - name: rpc
    port: 8545
  - name: ws
    port: 8546
  selector:
    app: eth-geth-tx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: geth-tx_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to eth-project/Deployment/eth-geth-tx:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: eth-geth-tx
  name: eth-geth-tx
  namespace: eth-project
spec:
  replicas: 2
  selector:
    matchLabels:
      app: eth-geth-tx
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: eth-geth-tx
    spec:
      containers:
      - args:
        - -c
        - geth --bootnodes=`cat /root/.ethereum/bootnodes` --rpc --rpcapi=eth,net,web3
          --rpccorsdomain='*' --ws --networkid=${NETWORK_ID} --ethstats=${HOSTNAME}:${ETHSTATS_SECRET}@${ETHSTATS_SVC}
          --verbosity=5 --nat extip:${POD_IP}
        command:
        - /bin/sh
        env:
        - name: ETHSTATS_SVC
          value: eth-ethstats.dcp
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              key: WS_SECRET
              name: eth-ethstats
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              key: networkid
              name: eth-geth
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        name: geth-tx
        ports:
        - containerPort: 8545
          name: rpc
        - containerPort: 8546
          name: ws
        - containerPort: 30303
          name: discovery-tcp
        resources:
          limits:
            cpu: ".5"
            memory: 750Mi
          requests:
            cpu: ".25"
            memory: 250Mi
        volumeMounts:
        - mountPath: /root/.ethereum
          name: data
      initContainers:
      - args:
        - init
        - /var/geth/genesis.json
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        name: init-genesis
        volumeMounts:
        - mountPath: /root/.ethereum
          name: data
        - mountPath: /var/geth
          name: config
      - args:
        - -c
        - "apk add --no-cache curl; \nCNT=0; \necho \"retrieving bootnodes from $(BOOTNODE_REGISTRAR_SVC)\";
          \nwhile [ $CNT -le 90 ]; do \n  curl -m 5 -s $(BOOTNODE_REGISTRAR_SVC):8080
          | xargs echo -n >> /geth/bootnodes; \n  if [ -s /geth/bootnodes ]; then
          \n    cat /geth/bootnodes; \n    exit 0; \n  fi; \n  echo \"no bootnodes
          found. retrying $CNT...\"; \n  sleep 2 || break; \n  CNT=$((CNT+1)); \ndone;
          \necho \"WARNING. unable to find bootnodes. continuing but geth may not
          be able to find any peers.\"; \nexit 0;\n"
        command:
        - /bin/sh
        env:
        - name: BOOTNODE_REGISTRAR_SVC
          value: eth-bootnode.eth-project.svc.cluster.local
        image: ethereum/client-go:alltools-v1.11.6
        imagePullPolicy: IfNotPresent
        name: get-bootnodes
        volumeMounts:
        - mountPath: /geth
          name: data
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          name: eth-geth
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource eth-project/Deployment/eth-geth-tx
policy drop-all-capabilities -> resource eth-project/Deployment/eth-geth-tx failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource eth-project/Deployment/eth-geth-tx failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource eth-project/Deployment/eth-geth-tx failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource eth-project/Deployment/eth-geth-tx failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource eth-project/Deployment/eth-geth-tx failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource eth-project/Deployment/eth-geth-tx failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource eth-project/Deployment/eth-geth-tx failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: get-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/get-ingress:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: test
  name: get-ingress
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3333
  selector:
    app: test
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: get-ingress_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/nginx-get:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: nginx-get
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: null
    http:
      paths:
      - backend:
          service:
            name: get-ingress
            port:
              number: 80
        path: /test/
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource default/Ingress/nginx-get failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: getser.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/get-service:
apiVersion: v1
kind: Service
metadata:
  name: get-service
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 8000
  selector:
    app: get
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gfg-depl.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gfg-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongodb
  name: gfg-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: mongo-root-username
              name: gfg-secret
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongo-root-password
              name: gfg-secret
        image: mongo
        name: mongodb
        ports:
        - containerPort: 27017

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gfg-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gfg-deployment
policy disallow-default-namespace -> resource default/Deployment/gfg-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/gfg-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/gfg-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gfg-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gfg-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gfg-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gfg-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gfg-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gfg-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gfg-depl_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/mongodb-service:
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: default
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongodb

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gfg-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gfg-secret:
apiVersion: v1
data:
  mongo-root-password: Y3JhenlQYXNzd29yZA==
  mongo-root-username: c2h1YmhhbQ==
kind: Secret
metadata:
  name: gfg-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gfn-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/grafana-provisioning:
apiVersion: v1
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
  grafana.ini: |
    [auth]
    # Cambia las credenciales por las que quieras utilizar
    admin_user = admin
    admin_password = admin
kind: ConfigMap
metadata:
  name: grafana-provisioning
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gfn-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/grafana:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - image: grafana/grafana:latest
        name: grafana
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-data
        - mountPath: /etc/grafana/provisioning
          name: grafana-provisioning
      volumes:
      - name: grafana-data
        persistentVolumeClaim:
          claimName: grafana-pvc
      - configMap:
          name: grafana-provisioning
        name: grafana-provisioning

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/grafana

skipped mutate policy add-safe-to-evict -> resource default/Deployment/grafana
policy disallow-default-namespace -> resource default/Deployment/grafana failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/grafana failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/grafana failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/grafana failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/grafana failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/grafana failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/grafana failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/grafana failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/grafana failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gfn-hpa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/grafana-hpa:
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: grafana-hpa
  namespace: default
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: grafana
  targetCPUUtilizationPercentage: 80

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: gfn-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/grafana-pv:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-pv
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /mnt/data/grafana

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gfn-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/grafana-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gfn-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/grafana:
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: default
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gfs-endpoints.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Endpoints/glusterfs-cluster:
apiVersion: v1
kind: Endpoints
metadata:
  name: glusterfs-cluster
  namespace: default
subsets:
- addresses:
  - ip: 194.0.153.14
  ports:
  - port: 1
- addresses:
  - ip: 194.0.153.15
  ports:
  - port: 1
- addresses:
  - ip: 194.0.153.16
  ports:
  - port: 1

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gfs-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/glusterfs:
apiVersion: v1
kind: Pod
metadata:
  name: glusterfs
  namespace: default
spec:
  containers:
  - image: nginx
    name: glusterfs
    volumeMounts:
    - mountPath: /mnt/glusterfs
      name: glusterfsvol
  volumes:
  - glusterfs:
      endpoints: glusterfs-cluster
      path: gv0
      readOnly: false
    name: glusterfsvol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/glusterfs

skipped mutate policy add-safe-to-evict -> resource default/Pod/glusterfs
policy disallow-default-namespace -> resource default/Pod/glusterfs failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/glusterfs failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/glusterfs failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/glusterfs failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/glusterfs failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/glusterfs failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/glusterfs failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/glusterfs failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/glusterfs failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gfs-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/glusterfs-cluster:
apiVersion: v1
kind: Service
metadata:
  name: glusterfs-cluster
  namespace: default
spec:
  ports:
  - port: 1

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ghcr-io1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to delta/Pod/busybox-ghcr-io:
apiVersion: v1
kind: Pod
metadata:
  name: busybox-ghcr-io
  namespace: delta
spec:
  containers:
  - command:
    - sh
    - -c
    - echo "Success!" && sleep 60
    image: ghcr.io/kedacore/keda:2.11.2
    imagePullPolicy: Always
    name: busybox
  restartPolicy: OnFailure

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource delta/Pod/busybox-ghcr-io

skipped mutate policy add-safe-to-evict -> resource delta/Pod/busybox-ghcr-io
policy drop-all-capabilities -> resource delta/Pod/busybox-ghcr-io failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource delta/Pod/busybox-ghcr-io failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource delta/Pod/busybox-ghcr-io failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource delta/Pod/busybox-ghcr-io failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource delta/Pod/busybox-ghcr-io failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource delta/Pod/busybox-ghcr-io failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource delta/Pod/busybox-ghcr-io failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ghost_deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ghost-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ghost
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ghost
    spec:
      containers:
      - env:
        - name: database__client
          value: mysql
        - name: database__connection__host
          value: mysql-service
        - name: database__connection__user
          valueFrom:
            secretKeyRef:
              key: MYSQL_USER
              name: ghostdbsecrets
        - name: database__connection__password
          valueFrom:
            secretKeyRef:
              key: MYSQL_PASSWORD
              name: ghostdbsecrets
        - name: database__connection__database
          value: ghostdb
        - name: database__connection__port
          value: "3306"
        - name: url
          value: https://alexbissessur.dev
        image: ghost:5.71.0
        name: ghost
        ports:
        - containerPort: 2368
        volumeMounts:
        - mountPath: /var/lib/ghost/content
          name: ghost-data
      volumes:
      - name: ghost-data
        persistentVolumeClaim:
          claimName: ghost-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ghost-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ghost-deployment
policy disallow-default-namespace -> resource default/Deployment/ghost-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ghost-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ghost-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ghost-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/ghost-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/ghost-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ghost-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/ghost-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ghost_deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ghost/Service/ghost-svc:
apiVersion: v1
kind: Service
metadata:
  name: ghost-svc
  namespace: ghost
spec:
  loadBalancerIP: 192.168.0.56
  ports:
  - port: 80
    protocol: TCP
    targetPort: 2368
  selector:
    app: ghost
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ghostblog_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ghostblog-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cms-operator
    app.kubernetes.io/instance: ghostblog-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cms-operator
  name: ghostblog-editor-role
  namespace: default
rules:
- apiGroups:
  - cms.wellcom.rocks
  resources:
  - ghostblogs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cms.wellcom.rocks
  resources:
  - ghostblogs/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ghostblog_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ghostblog-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cms-operator
    app.kubernetes.io/instance: ghostblog-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cms-operator
  name: ghostblog-viewer-role
  namespace: default
rules:
- apiGroups:
  - cms.wellcom.rocks
  resources:
  - ghostblogs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cms.wellcom.rocks
  resources:
  - ghostblogs/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ghost-db-example.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ghost/Deployment/mysql:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: ghost
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: ""
        - name: MYSQL_DATABASE
          value: ""
        - name: MYSQL_USER
          value: ""
        - name: MYSQL_PASSWORD
          value: ""
        image: mysql:8.0
        name: mysql
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-storage
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: ghost-mysql-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ghost/Deployment/mysql

skipped mutate policy add-safe-to-evict -> resource ghost/Deployment/mysql
policy drop-all-capabilities -> resource ghost/Deployment/mysql failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ghost/Deployment/mysql failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ghost/Deployment/mysql failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ghost/Deployment/mysql failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource ghost/Deployment/mysql failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ghost/Deployment/mysql failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ghost/Deployment/mysql failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ghost-db-example_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ghost/Service/mysql:
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: ghost
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ghost-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/blog:
apiVersion: v1
kind: Deployment
metadata:
  name: blog
  namespace: default
spec:
  selector:
    matchLabels:
      app: blog
  template:
    metadata:
      labels:
        app: blog
    spec:
      containers:
      - env:
        - name: url
          value: http://exampleblog.com
        image: ghost:2.6-alpine
        imagePullPolicy: Always
        name: blog
        ports:
        - containerPort: 2368

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/blog

skipped mutate policy add-safe-to-evict -> resource default/Deployment/blog
policy disallow-default-namespace -> resource default/Deployment/blog failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/blog failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/blog failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/blog failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/blog failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/blog failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/blog failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/blog failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: ghost-example.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ghost/Deployment/ghost:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost
  namespace: ghost
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ghost
  template:
    metadata:
      labels:
        app: ghost
    spec:
      containers:
      - env:
        - name: NODE_ENV
          value: production
        - name: database__client
          value: mysql
        - name: database__connection__host
          value: ""
        - name: database__connection__user
          value: ""
        - name: database__connection__password
          value: ""
        - name: database__connection__database
          value: ""
        - name: mail__transport
          value: SMTP
        - name: mail__options__host
          value: ""
        - name: mail__options__port
          value: "465"
        - name: mail__options__secure
          value: "true"
        - name: mail__options__auth__user
          value: ""
        - name: mail__options__auth__pass
          value: ""
        - name: mail__from
          value: noreply@prayujt.com
        - name: url
          value: https://substack.prayujt.com
        image: ghost:alpine
        name: ghost
        ports:
        - containerPort: 2368
        volumeMounts:
        - mountPath: /var/lib/ghost/content
          name: ghost-content
      volumes:
      - name: ghost-content
        persistentVolumeClaim:
          claimName: ghost-content-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ghost/Deployment/ghost

skipped mutate policy add-safe-to-evict -> resource ghost/Deployment/ghost
policy drop-all-capabilities -> resource ghost/Deployment/ghost failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ghost/Deployment/ghost failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ghost/Deployment/ghost failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ghost/Deployment/ghost failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource ghost/Deployment/ghost failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ghost/Deployment/ghost failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource ghost/Deployment/ghost failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: ghost-example_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ghost/Service/ghost:
apiVersion: v1
kind: Service
metadata:
  name: ghost
  namespace: ghost
spec:
  ports:
  - port: 2368
    protocol: TCP
    targetPort: 2368
  selector:
    app: ghost
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ghost-persistent-volume.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/ghost-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ghost-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ghost-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/blog:
apiVersion: v1
kind: Service
metadata:
  name: blog
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 2368
  selector:
    app: blog
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ghost-services.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/ghost:
apiVersion: v1
kind: Service
metadata:
  name: ghost
  namespace: default
spec:
  ports:
  - name: http
    port: 2368
    targetPort: 2368
  selector:
    app: ghost

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gh-runner-helm-oci.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Secret/docker-io-helm-oci:
apiVersion: v1
kind: Secret
metadata:
  labels:
    argocd.argoproj.io/secret-type: repository
  name: docker-io-helm-oci
  namespace: argocd
stringData:
  enableOCI: "true"
  name: actions-runner-controller-charts
  type: helm
  url: ghcr.io/actions/actions-runner-controller-charts

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gh-runner-helm-oci1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Secret/docker-io-helm-oci:
apiVersion: v1
kind: Secret
metadata:
  labels:
    argocd.argoproj.io/secret-type: repository
  name: docker-io-helm-oci
  namespace: argocd
stringData:
  enableOCI: "true"
  name: actions-runner-controller-charts
  type: helm
  url: ghcr.io/actions/actions-runner-controller-charts

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gig.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to production/Deployment/freeln-gig:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: freeln-gig
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: freeln-gig
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      labels:
        app: freeln-gig
    spec:
      containers:
      - env:
        - name: ENABLE_APM
          value: "1"
        - name: NODE_ENV
          value: production
        - name: GATEWAY_JWT_TOKEN
          valueFrom:
            secretKeyRef:
              key: gateway-jwt-token
              name: freelance-backend-secret
        - name: JWT_TOKEN
          valueFrom:
            secretKeyRef:
              key: jwt-token
              name: freelance-backend-secret
        - name: RABBITMQ_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: freelance-rabbitmq-endpoint
              name: freelance-backend-secret
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: mongo-database-url
              name: freelance-backend-secret
        - name: CLOUD_NAME
          valueFrom:
            secretKeyRef:
              key: cloud-name
              name: freelance-backend-secret
        - name: CLOUD_API_KEY
          valueFrom:
            secretKeyRef:
              key: cloud-api-key
              name: freelance-backend-secret
        - name: CLOUD_API_SECRET
          valueFrom:
            secretKeyRef:
              key: cloud-api-secret
              name: freelance-backend-secret
        - name: API_GATEWAY_URL
          value: http://freeln-gateway.production.svc.cluster.local:4000
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              key: freelance-redis-host
              name: freelance-backend-secret
        - name: ELASTIC_SEARCH_URL
          valueFrom:
            secretKeyRef:
              key: freelance-elasticsearch-url
              name: freelance-backend-secret
        - name: ELASTIC_APM_SERVER_URL
          valueFrom:
            secretKeyRef:
              key: freelance-elastic-apm-server-url
              name: freelance-backend-secret
        - name: ELASTIC_APM_SECRET_TOKEN
          valueFrom:
            secretKeyRef:
              key: freelance-elastic-apm-secret-token
              name: freelance-backend-secret
        image: datz0512/freelancer-gig:stable
        imagePullPolicy: Always
        name: freeln-gig
        ports:
        - containerPort: 4004
          name: gig
        resources:
          limits:
            cpu: "0.5"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 150Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource production/Deployment/freeln-gig

skipped mutate policy add-safe-to-evict -> resource production/Deployment/freeln-gig
policy drop-all-capabilities -> resource production/Deployment/freeln-gig failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource production/Deployment/freeln-gig failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource production/Deployment/freeln-gig failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource production/Deployment/freeln-gig failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource production/Deployment/freeln-gig failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource production/Deployment/freeln-gig failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: ginkgo-rbac.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to twilio-system-testkube/ServiceAccount/testkube:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube
  namespace: twilio-system-testkube

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ginkgo-rbac_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/testkube-reader:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: testkube-reader
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: ginkgo-rbac_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/testkube-read-everything:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: testkube-read-everything
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: testkube-reader
subjects:
- kind: ServiceAccount
  name: testkube
  namespace: twilio-system-testkube

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: giropops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/giropops-senhas:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: giropops-senhas
  template:
    metadata:
      labels:
        app: giropops-senhas
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: redis-service
        image: aguinho/giropops-senhas-desafio:v1
        imagePullPolicy: Always
        name: giropops-senhas
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: "0.1"
            memory: 32Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas

skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas
policy disallow-default-namespace -> resource default/Deployment/giropops-senhas failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/giropops-senhas failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: giropops-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/giropops-senhas:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: giropops-senhas
  template:
    metadata:
      labels:
        app: giropops-senhas
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: redis-service
        image: bebianc/linuxtips-giropops-senhas_semvelnerabi:7.0
        imagePullPolicy: IfNotPresent
        name: giropops-senhas
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas

skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas
policy disallow-default-namespace -> resource default/Deployment/giropops-senhas failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/giropops-senhas failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: giropops-hpa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/giropops-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: giropops-hpa
  namespace: default
spec:
  behavior:
    scaleDown:
      policies:
      - periodSeconds: 15
        type: Percent
        value: 100
      stabilizationWindowSeconds: 300
    scaleUp:
      policies:
      - periodSeconds: 15
        type: Percent
        value: 100
      stabilizationWindowSeconds: 0
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 50
        type: Utilization
    type: Resource
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: giropops-senhas

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: giropops-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/giropops-senhas-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: giropops-senhas-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: giropopssenhas.israeldoamaral.com.br
    http:
      paths:
      - backend:
          service:
            name: giropops-senhas-service
            port:
              number: 5000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - giropopssenhas.israeldoamaral.com.br

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: giropops-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/giropops-pod:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: giropops-pod
  name: giropops-pod
  namespace: default
spec:
  containers:
  - env:
    - name: USERNAME
      valueFrom:
        secretKeyRef:
          key: username
          name: giropops-secret
    - name: PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: giropops-secret
    image: nginx
    name: giropops-container
    resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/giropops-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/giropops-pod
policy disallow-default-namespace -> resource default/Pod/giropops-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/giropops-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/giropops-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/giropops-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/giropops-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/giropops-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/giropops-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/giropops-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/giropops-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: giropops-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/giropops-pod:
apiVersion: v1
kind: Pod
metadata:
  name: giropops-pod
  namespace: default
spec:
  containers:
  - env:
    - name: USERNAME
      valueFrom:
        secretKeyRef:
          key: username
          name: giropops-secret
    - name: PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: giropops-secret
    image: nginx
    name: giropops-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/giropops-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/giropops-pod
policy disallow-default-namespace -> resource default/Pod/giropops-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/giropops-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/giropops-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/giropops-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/giropops-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/giropops-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/giropops-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/giropops-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/giropops-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: giropops-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/giropops-pod:
apiVersion: v1
kind: Pod
metadata:
  name: giropops-pod
  namespace: default
spec:
  containers:
  - env:
    - name: USERNAME
      valueFrom:
        secretKeyRef:
          key: username
          name: giropops-secret
    - name: PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: giropops-secret
    image: nginx
    name: giropops-container

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/giropops-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/giropops-pod
policy disallow-default-namespace -> resource default/Pod/giropops-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/giropops-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/giropops-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/giropops-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/giropops-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/giropops-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/giropops-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/giropops-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/giropops-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: giropops-pod-image-pull.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/meu-pod:
apiVersion: v1
kind: Pod
metadata:
  name: meu-pod
  namespace: default
spec:
  containers:
  - image: mirjahal/go-teste:1.0
    name: meu-container
  imagePullSecrets:
  - name: docker-hub-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/meu-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/meu-pod
policy disallow-default-namespace -> resource default/Pod/meu-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/meu-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/meu-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/meu-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/meu-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/meu-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/meu-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/meu-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: giropops-pod-secret-tls.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/giropops-pod-secret-tls:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nginx
  name: giropops-pod-secret-tls
  namespace: default
spec:
  containers:
  - image: nginx
    name: giropops-container-secret-tls
    ports:
    - containerPort: 80
    - containerPort: 443
    volumeMounts:
    - mountPath: /etc/nginx/nginx.conf
      name: nginx-config-volume
      subPath: nginx.conf
    - mountPath: /etc/nginx/tls
      name: nginx-tls
  volumes:
  - configMap:
      name: nginx-config
    name: nginx-config-volume
  - name: nginx-tls
    secret:
      items:
      - key: tls.crt
        path: certificado.crt
      - key: tls.key
        path: chave-privada.key
      secretName: meu-service-web-tls-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/giropops-pod-secret-tls

skipped mutate policy add-safe-to-evict -> resource default/Pod/giropops-pod-secret-tls
policy disallow-default-namespace -> resource default/Pod/giropops-pod-secret-tls failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/giropops-pod-secret-tls failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/giropops-pod-secret-tls failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/giropops-pod-secret-tls failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/giropops-pod-secret-tls failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/giropops-pod-secret-tls failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/giropops-pod-secret-tls failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/giropops-pod-secret-tls failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/giropops-pod-secret-tls failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: giropops-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/giropops-secret:
apiVersion: v1
data:
  password: Z2lyb3BvcHM=
  username: bnVkZXJ2YWw=
kind: Secret
metadata:
  name: giropops-secret
  namespace: default
type: opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: giropops-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/giropops-secret:
apiVersion: v1
data:
  password: amRzaGpzYWpoc2E=
  username: amRoZmRqaHNkYXM=
kind: Secret
metadata:
  name: giropops-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: giropops-senhas2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/giropops-senhas:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: giropops-senhas
  template:
    metadata:
      labels:
        app: giropops-senhas
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: redis-service
        image: aguinho/giropops-senhas-desafio:v1
        imagePullPolicy: Always
        name: giropops-senhas
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: "0.5"
            memory: 32Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas

skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas
policy disallow-default-namespace -> resource default/Deployment/giropops-senhas failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/giropops-senhas failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: giropops-senhas3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/giropops-senhas-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: giropops-senhas-deployment
  name: giropops-senhas-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: giropops-senhas-deployment
  strategy: {}
  template:
    metadata:
      labels:
        app: giropops-senhas-deployment
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: 192.168.15.143
        image: mushthielv/giropops-senhas-assinada:1.0
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        name: giropops-senhas
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5000
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 0.5
            memory: 256Mi
          requests:
            cpu: 0.25
            memory: 128Mi
        startupProbe:
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5000
          timeoutSeconds: 5

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas-deployment
policy disallow-default-namespace -> resource default/Deployment/giropops-senhas-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/giropops-senhas-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/giropops-senhas-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/giropops-senhas-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-ro-rootfs -> resource default/Deployment/giropops-senhas-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/giropops-senhas-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 6, warn: 0, error: 0, skip: 2 

##### FILE: giropops-senhas-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/giropops-senhas:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: giropops-senhas
  template:
    metadata:
      labels:
        app: giropops-senhas
    spec:
      containers:
      - image: linuxtips/giropops-senhas:1.0
        name: giropops-senhas
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas

skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas
policy disallow-default-namespace -> resource default/Deployment/giropops-senhas failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/giropops-senhas failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: giropops-senhas-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/giropops-senhas-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: giropops-senhas-deployment
  name: giropops-senhas-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: giropops-senhas-deployment
  template:
    metadata:
      labels:
        app: giropops-senhas-deployment
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: redis-service
        image: israeldoamaral/linuxtips-giropops-senhas:1.0
        imagePullPolicy: Always
        name: giropops-senhas
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: "1.0"
            memory: 256Mi
          requests:
            cpu: "0.5"
            memory: 128Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas-deployment
policy disallow-default-namespace -> resource default/Deployment/giropops-senhas-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/giropops-senhas-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/giropops-senhas-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/giropops-senhas-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/giropops-senhas-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/giropops-senhas-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/giropops-senhas-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: giropops-senhas-deployment2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/giropops-senhas:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: giropops-senhas
  template:
    metadata:
      labels:
        app: giropops-senhas
    spec:
      containers:
      - image: linuxtips/giropops-senhas:1.0
        imagePullPolicy: Always
        name: giropops-senhas
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas

skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas
policy disallow-default-namespace -> resource default/Deployment/giropops-senhas failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/giropops-senhas failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: giropops-senhas-deployment3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/giropops-senhas:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: giropops-senhas
  template:
    metadata:
      labels:
        app: giropops-senhas
    spec:
      containers:
      - image: linuxtips/giropops-senhas:1.0
        imagePullPolicy: Always
        name: giropops-senhas
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas

skipped mutate policy add-safe-to-evict -> resource default/Deployment/giropops-senhas
policy disallow-default-namespace -> resource default/Deployment/giropops-senhas failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/giropops-senhas failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/giropops-senhas failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/giropops-senhas failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: giropops-senhas-hpa.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/giropops-senhas-hpa:
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: giropops-senhas-hpa
  namespace: default
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 20
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: giropops-senhas-deployment

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: giropops-senhas-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/giropops-senhas:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  ports:
  - name: tcp-app
    nodePort: 32500
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: giropops-senhas
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/giropops-senhas failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: giropops-senhas-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/giropops-senhas-service:
apiVersion: v1
kind: Service
metadata:
  name: giropops-senhas-service
  namespace: default
spec:
  ports:
  - name: tcp-app
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: giropops-senhas-deployment
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: giropops-senhas-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/giropops-senhas:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  ports:
  - name: tcp-app
    nodePort: 30000
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: giropops-senhas
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/giropops-senhas failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: giropops-senhas-service4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/giropops-senhas:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  ports:
  - name: tcp-app
    nodePort: 32500
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: giropops-senha
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/giropops-senhas failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: giropops-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/giropops-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: giropops-service
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: http
    port: 80
  selector:
    app: nginx

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: giropops-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/giropops-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: giropops-service
  name: giropops-service
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: web
    port: 80
  selector:
    app: nginx

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: giropops-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/giropops-senhas:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  ports:
  - name: tcp-app
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: giropops-senhas
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: giropops-service3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/giropops-senhas:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: giropops-senhas
  name: giropops-senhas
  namespace: default
spec:
  ports:
  - name: tcp-app
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: giropops-senhas
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: giropops-set.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/giropops-set:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: giropops-set
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  serviceName: giropops-set
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:1.19.0
        name: nginx
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: nginx-persistent-storage
  volumeClaimTemplates:
  - metadata:
      name: nginx-persistent-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/giropops-set

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/giropops-set
policy disallow-default-namespace -> resource default/StatefulSet/giropops-set failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/giropops-set failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/giropops-set failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/giropops-set failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/giropops-set failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/StatefulSet/giropops-set failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/giropops-set failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/giropops-set failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: giropops-set1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/giropops-set:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: giropops-set
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  serviceName: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:1.19.0
        name: nginx
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: www
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/giropops-set

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/giropops-set
policy disallow-default-namespace -> resource default/StatefulSet/giropops-set failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/giropops-set failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/giropops-set failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/giropops-set failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/giropops-set failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/StatefulSet/giropops-set failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/StatefulSet/giropops-set failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/giropops-set failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: git.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/static-website:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: static-website
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: static-website
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: static-website
      name: static-website
    spec:
      containers:
      - image: nginx:alpine
        name: web-server
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: html
          readOnly: true
      initContainers:
      - command:
        - git
        - clone
        - https://github.com/brunobritodev/kubernetes-site.git
        - /kubernetes-site
        image: alpine/git
        name: git
        volumeMounts:
        - mountPath: /kubernetes-site
          name: html
      volumes:
      - emptyDir: {}
        name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/static-website
policy disallow-latest-tag -> resource default/ReplicaSet/static-website failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/static-website failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/static-website failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/static-website failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/static-website failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/static-website failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/static-website failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: git_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/static-website:
apiVersion: v1
kind: Service
metadata:
  name: static-website
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: static-website

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/static-website-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: static-website-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: static-website.devstore.info
    http:
      paths:
      - backend:
          service:
            name: static-website
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git_secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to repo-ns1/Secret/repo1:
apiVersion: v1
kind: Secret
metadata:
  labels:
    argocd.argoproj.io/secret-type: repository
  name: repo1
  namespace: repo-ns1
stringData:
  project: default
  type: git
  url: https://example.com
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/static-website:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: static-website
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: static-website
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: static-website
      name: static-website
    spec:
      containers:
      - image: nginx:alpine
        name: web-server
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: html
          readOnly: true
      initContainers:
      - command:
        - git
        - clone
        - https://github.com/brunobritodev/kubernetes-site.git
        - /kubernetes-site
        image: alpine/git
        name: git
        volumeMounts:
        - mountPath: /kubernetes-site
          name: html
      volumes:
      - emptyDir: {}
        name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/static-website
policy disallow-latest-tag -> resource default/ReplicaSet/static-website failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/static-website failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/static-website failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/static-website failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/static-website failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/static-website failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/static-website failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: git1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/static-website:
apiVersion: v1
kind: Service
metadata:
  name: static-website
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: static-website

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/static-website-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: static-website-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: static-website.devstore.info
    http:
      paths:
      - backend:
          service:
            name: static-website
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ReplicaSet/static-website:
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: static-website
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: static-website
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: static-website
      name: static-website
    spec:
      containers:
      - image: nginx:alpine
        name: web-server
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: html
          readOnly: true
      initContainers:
      - command:
        - git
        - clone
        - https://github.com/brunobritodev/kubernetes-site.git
        - /kubernetes-site
        image: alpine/git
        name: git
        volumeMounts:
        - mountPath: /kubernetes-site
          name: html
      volumes:
      - emptyDir: {}
        name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/ReplicaSet/static-website
policy disallow-latest-tag -> resource default/ReplicaSet/static-website failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/ReplicaSet/static-website failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/ReplicaSet/static-website failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/ReplicaSet/static-website failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/ReplicaSet/static-website failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/ReplicaSet/static-website failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/ReplicaSet/static-website failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: git2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/static-website:
apiVersion: v1
kind: Service
metadata:
  name: static-website
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: static-website

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/static-website-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: static-website-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: static-website.devstore.info
    http:
      paths:
      - backend:
          service:
            name: static-website
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-bearer-token.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to my-namespace/Secret/bearer-token-auth:
apiVersion: v1
kind: Secret
metadata:
  name: bearer-token-auth
  namespace: my-namespace
stringData:
  bearerToken: ghp_baR2qnFF0O41WlucePL3udt2N9vVZS4R0hAS

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-chart-helm-release_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/local-env-values:
apiVersion: v1
data:
  local-values.yaml: 'replicaCount: 1'
kind: ConfigMap
metadata:
  name: local-env-values
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-credentials.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/git-credentials:
apiVersion: v1
data:
  id_rsa: LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUJsd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFZRUFxQ2MwU05UOUpZYTN6ZUVFeGVGa2JqdkRBRmRUQWlsbmNZTkRDM0dCQWZQYmNEdUlhcGptCm5ORk55UzRYV0x4eGs4eTFrTWZmOFhyK0pFbFlMb3ZGZWd3YlM1U3VVNjg2VEIxdk8xNk9xOXBFVVRsUis0MGN5OGhzNVkKMlowbE10elBOQzkwNFVjRjZabmZEeWtLUXNkYUFzdnlNZ0NrelB3MWJxdk5CRFB6dFB6NjhwOHJhMzByVktmS0xqVlFpUgpKU3NDZDE4Q3VlYmh3TGY5b05KNldRekVhandxZG0vVU80V3dpeDFNejdNWHBMaC95dTgyVlhXUUQvK0tQMUxBM0w0QmM0ClNiZ2hmcGdDZUxjbTdWQTJOY0lEUnZXb1BzUm5sZXVTaFNKYVhmaWcxUm5hZzJpNFEzb0NMWVRaV2ZHTDdOOTN0cSt6NVMKdTMzRkhIWG1KSGozRFowYkcvQ0RqNzZsZWRtd2FiTE5XVmRQUHZsS1pZbVFWNFBtRUZMbzJNYzF4bmM1NytjYlB2d3IzSwpja01sV2MxYTRIQy9ZNnRuN3MvNUdoNE1MTHZXRmVkOWtXYzRvWGx3Q1R1YjVaS2duaGxZNzU5Tk44ZWt6K0tRVENmYnpiCmVtQkRUc3R3N1hhbmxiMUNzb0M1YmdQQlJ0OEdhWHBoLzRTVmw2MG5BQUFGbUlLNjRQV0N1dUQxQUFBQUIzTnphQzF5YzIKRUFBQUdCQUtnbk5FalUvU1dHdDgzaEJNWGhaRzQ3d3dCWFV3SXBaM0dEUXd0eGdRSHoyM0E3aUdxWTVwelJUY2t1RjFpOApjWlBNdFpESDMvRjYvaVJKV0M2THhYb01HMHVVcmxPdk9rd2RienRlanF2YVJGRTVVZnVOSE12SWJPV05tZEpUTGN6elF2CmRPRkhCZW1aM3c4cENrTEhXZ0xMOGpJQXBNejhOVzZyelFRejg3VDgrdktmSzJ0OUsxU255aTQxVUlrU1VyQW5kZkFybm0KNGNDMy9hRFNlbGtNeEdvOEtuWnYxRHVGc0lzZFRNK3pGNlM0Zjhydk5sVjFrQS8vaWo5U3dOeStBWE9FbTRJWDZZQW5pMwpKdTFRTmpYQ0EwYjFxRDdFWjVYcmtvVWlXbDM0b05VWjJvTm91RU42QWkyRTJWbnhpK3pmZDdhdnMrVXJ0OXhSeDE1aVI0Cjl3MmRHeHZ3ZzQrK3BYblpzR215elZsWFR6NzVTbVdKa0ZlRDVoQlM2TmpITmNaM09lL25Hejc4Szl5bkpESlZuTld1QncKdjJPclorN1ArUm9lREN5NzFoWG5mWkZuT0tGNWNBazdtK1dTb0o0WldPK2ZUVGZIcE0vaWtFd24yODIzcGdRMDdMY08xMgpwNVc5UXJLQXVXNER3VWJmQm1sNllmK0VsWmV0SndBQUFBTUJBQUVBQUFHQVdpYXFvV0dQVnM4ak8vMm4wVzlGcU5QaGVBCjFaTTQ5L0poeDVsV2tGQVViOEh1L0w4MXFHU1F6dDV5NE8xa1F4b0V2Z0MvOGMwUnBmcHBTcjhraDlWekdtY0o4RjExZmEKcVhRZWJuWURoNTg5Z1U1NTVhT0NETDhub3VxSHpYdEswdGFZMEgzTDkzTEFhUzBFM3djbHp1cFJFeWlCeFFQcFg1RDV5TQpEZlRNYy93dGptWkhvUms2WWVpVFBMTFl1cVJZTUpqM1lnd0FwSWZrb21jRkpueGRaU2Q2SktJYlZTMDVhWlQvd2xjalZTCk43Mnl4ZG42QjFkQUpWT2JpdGVTTCttQ3EzRzYya25Eb3o0UjEvWjgzMlNKbU5oZ0FPTFNtMnVYTzcwRldhdVNQU0FXWjgKTkVCTzhQTHc5OHF6NXBHNmJzeS8weUtKTjA5dUl1Y3liTC8xYXRKdHFVRjU4RE11TktaNHJWbzRjdFVPN3JQYkFLQUF0Wgp6M1VRbWZFMG5kOEJoenRlUXFTWVRiNXUwZTcwSmlPa3ZCUWFWTk9mQS9aNS9VdTRHTU1MMWRFYlJMVXVZUnRKZEdvcC9MCllLV0dWNDdEa0xBZGpEVUJCam5FZ1lKSm5TN0d6SkRPMHFYQWprQTJpNzk0Y0dTR0RYUzF0VS9XTXFUOVJtVnNvQkFBQUEKd0UrZnpmQmRBOC9CdUJZMElqYkNLVGJxZlFHLzlWbFQ0RlNkbm5FMldyNjZBM1dYektyUUdUOXExdm9rL21INFFYaWtDTApSYkd2ZHh6TkJ6R3pHejVLc3AxSXRzS2xUbzRnMUZ6Z1lKaEo1cTZ0UVQ4UFQxdDVsa0hORnVEaDZQVmV4YVhWb1ZlUitUCjhSdHBucUp5TndSZ3l6cWk4eExPNG1WVE93TzdtYU85d0ZOSDBwdkJFQitwZ3UyNU9aUmpvN0ZSdS9vMlVRY2ZmaDJPODgKTjVURHdKVGk3eHBCZXhCbmhFK3Z1V3JpNVBqSUxRcHZsSGpKMGE1Z0dLNDU4WHpRQUFBTUVBM0N0VmhLUGFBa0Q2UjduSgpMTWJrYm9zNExETU9ERFZnajlnWEpPa1diTThKN2tlekhKcGIrRjFmcXhudldsUlBLcVdwdG4wZUhxSUhsZGZNOVlKeWtpCnFjdkFVZXJvenFyaGlhbVhsZFpOeUs2NUp0dm5XTTlzZHBmZUFsL2VRZThVc1NpQzhaN2RiY0JDZkdFeVY2UHlMVXorSXUKVFpPY0w3dVRCdUg4Y09JVGtZS0FmTlRpbG9ZQkRJeHNpMzdFTVNoVXFKdWNuQ2NqQWFkeVJXWFVwMHhuZ21sbDFjTWU3eApFeTdhUWNtN211ZmtOTm5rSlRFdFFtMVBPdS9sSDFBQUFBd1FERGhNZkNNb3ZKZTFJM0JIUTlNNjI5b3E3dUtZakI3ZUVQClBaYVFYbmUxcjFoWHlwc3V6RUNpb2tSaTI5T0o2Qm1tSzd0dVlwR1piQXlXVXlsc3ZkVTNsenoxclFHb1BMTGRLK1FZTFkKU1RVTVkzZU9iRnkzNlpDVTdCdi9ZTndhODNGR1BIM1JHUk1vNlp5aW43THhXREhNa3d2NDg4YXhuc3VncFNwQkRqRndLWgpQYUtaNTlvcndDb0MyWlhnbTl1K3RnN2xJREdOR3ROWVZBaUlYNWlsSFF2d0NnOXB0ejlHVEwzR3lBUkh0NnV5Mk85ZmdBClU2UXhYMDgxeTVwU3NBQUFBZVMyVjVJSFZ6WldRZ1ptOXlJR1pzZFhnZ2NISmxjMlZ1ZEdGMGFXOXVBUUlEQkFVPQotLS0tLUVORCBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: git-credentials
  namespace: default
stringData:
  config: "Host *\nUser fluxpres\nIdentityFile /tekton/home/.ssh/id_rsa\nIdentitiesOnly
    yes\nStrictHostKeyChecking no\n# Not enabling StrictHostKeyChecking as this is
    local example sshd, where signature \n# will change from cluster to cluster\n"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-credentials1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/git-credentials:
apiVersion: v1
data:
  id_rsa: LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUJsd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFZRUFxQ2MwU05UOUpZYTN6ZUVFeGVGa2JqdkRBRmRUQWlsbmNZTkRDM0dCQWZQYmNEdUlhcGptCm5ORk55UzRYV0x4eGs4eTFrTWZmOFhyK0pFbFlMb3ZGZWd3YlM1U3VVNjg2VEIxdk8xNk9xOXBFVVRsUis0MGN5OGhzNVkKMlowbE10elBOQzkwNFVjRjZabmZEeWtLUXNkYUFzdnlNZ0NrelB3MWJxdk5CRFB6dFB6NjhwOHJhMzByVktmS0xqVlFpUgpKU3NDZDE4Q3VlYmh3TGY5b05KNldRekVhandxZG0vVU80V3dpeDFNejdNWHBMaC95dTgyVlhXUUQvK0tQMUxBM0w0QmM0ClNiZ2hmcGdDZUxjbTdWQTJOY0lEUnZXb1BzUm5sZXVTaFNKYVhmaWcxUm5hZzJpNFEzb0NMWVRaV2ZHTDdOOTN0cSt6NVMKdTMzRkhIWG1KSGozRFowYkcvQ0RqNzZsZWRtd2FiTE5XVmRQUHZsS1pZbVFWNFBtRUZMbzJNYzF4bmM1NytjYlB2d3IzSwpja01sV2MxYTRIQy9ZNnRuN3MvNUdoNE1MTHZXRmVkOWtXYzRvWGx3Q1R1YjVaS2duaGxZNzU5Tk44ZWt6K0tRVENmYnpiCmVtQkRUc3R3N1hhbmxiMUNzb0M1YmdQQlJ0OEdhWHBoLzRTVmw2MG5BQUFGbUlLNjRQV0N1dUQxQUFBQUIzTnphQzF5YzIKRUFBQUdCQUtnbk5FalUvU1dHdDgzaEJNWGhaRzQ3d3dCWFV3SXBaM0dEUXd0eGdRSHoyM0E3aUdxWTVwelJUY2t1RjFpOApjWlBNdFpESDMvRjYvaVJKV0M2THhYb01HMHVVcmxPdk9rd2RienRlanF2YVJGRTVVZnVOSE12SWJPV05tZEpUTGN6elF2CmRPRkhCZW1aM3c4cENrTEhXZ0xMOGpJQXBNejhOVzZyelFRejg3VDgrdktmSzJ0OUsxU255aTQxVUlrU1VyQW5kZkFybm0KNGNDMy9hRFNlbGtNeEdvOEtuWnYxRHVGc0lzZFRNK3pGNlM0Zjhydk5sVjFrQS8vaWo5U3dOeStBWE9FbTRJWDZZQW5pMwpKdTFRTmpYQ0EwYjFxRDdFWjVYcmtvVWlXbDM0b05VWjJvTm91RU42QWkyRTJWbnhpK3pmZDdhdnMrVXJ0OXhSeDE1aVI0Cjl3MmRHeHZ3ZzQrK3BYblpzR215elZsWFR6NzVTbVdKa0ZlRDVoQlM2TmpITmNaM09lL25Hejc4Szl5bkpESlZuTld1QncKdjJPclorN1ArUm9lREN5NzFoWG5mWkZuT0tGNWNBazdtK1dTb0o0WldPK2ZUVGZIcE0vaWtFd24yODIzcGdRMDdMY08xMgpwNVc5UXJLQXVXNER3VWJmQm1sNllmK0VsWmV0SndBQUFBTUJBQUVBQUFHQVdpYXFvV0dQVnM4ak8vMm4wVzlGcU5QaGVBCjFaTTQ5L0poeDVsV2tGQVViOEh1L0w4MXFHU1F6dDV5NE8xa1F4b0V2Z0MvOGMwUnBmcHBTcjhraDlWekdtY0o4RjExZmEKcVhRZWJuWURoNTg5Z1U1NTVhT0NETDhub3VxSHpYdEswdGFZMEgzTDkzTEFhUzBFM3djbHp1cFJFeWlCeFFQcFg1RDV5TQpEZlRNYy93dGptWkhvUms2WWVpVFBMTFl1cVJZTUpqM1lnd0FwSWZrb21jRkpueGRaU2Q2SktJYlZTMDVhWlQvd2xjalZTCk43Mnl4ZG42QjFkQUpWT2JpdGVTTCttQ3EzRzYya25Eb3o0UjEvWjgzMlNKbU5oZ0FPTFNtMnVYTzcwRldhdVNQU0FXWjgKTkVCTzhQTHc5OHF6NXBHNmJzeS8weUtKTjA5dUl1Y3liTC8xYXRKdHFVRjU4RE11TktaNHJWbzRjdFVPN3JQYkFLQUF0Wgp6M1VRbWZFMG5kOEJoenRlUXFTWVRiNXUwZTcwSmlPa3ZCUWFWTk9mQS9aNS9VdTRHTU1MMWRFYlJMVXVZUnRKZEdvcC9MCllLV0dWNDdEa0xBZGpEVUJCam5FZ1lKSm5TN0d6SkRPMHFYQWprQTJpNzk0Y0dTR0RYUzF0VS9XTXFUOVJtVnNvQkFBQUEKd0UrZnpmQmRBOC9CdUJZMElqYkNLVGJxZlFHLzlWbFQ0RlNkbm5FMldyNjZBM1dYektyUUdUOXExdm9rL21INFFYaWtDTApSYkd2ZHh6TkJ6R3pHejVLc3AxSXRzS2xUbzRnMUZ6Z1lKaEo1cTZ0UVQ4UFQxdDVsa0hORnVEaDZQVmV4YVhWb1ZlUitUCjhSdHBucUp5TndSZ3l6cWk4eExPNG1WVE93TzdtYU85d0ZOSDBwdkJFQitwZ3UyNU9aUmpvN0ZSdS9vMlVRY2ZmaDJPODgKTjVURHdKVGk3eHBCZXhCbmhFK3Z1V3JpNVBqSUxRcHZsSGpKMGE1Z0dLNDU4WHpRQUFBTUVBM0N0VmhLUGFBa0Q2UjduSgpMTWJrYm9zNExETU9ERFZnajlnWEpPa1diTThKN2tlekhKcGIrRjFmcXhudldsUlBLcVdwdG4wZUhxSUhsZGZNOVlKeWtpCnFjdkFVZXJvenFyaGlhbVhsZFpOeUs2NUp0dm5XTTlzZHBmZUFsL2VRZThVc1NpQzhaN2RiY0JDZkdFeVY2UHlMVXorSXUKVFpPY0w3dVRCdUg4Y09JVGtZS0FmTlRpbG9ZQkRJeHNpMzdFTVNoVXFKdWNuQ2NqQWFkeVJXWFVwMHhuZ21sbDFjTWU3eApFeTdhUWNtN211ZmtOTm5rSlRFdFFtMVBPdS9sSDFBQUFBd1FERGhNZkNNb3ZKZTFJM0JIUTlNNjI5b3E3dUtZakI3ZUVQClBaYVFYbmUxcjFoWHlwc3V6RUNpb2tSaTI5T0o2Qm1tSzd0dVlwR1piQXlXVXlsc3ZkVTNsenoxclFHb1BMTGRLK1FZTFkKU1RVTVkzZU9iRnkzNlpDVTdCdi9ZTndhODNGR1BIM1JHUk1vNlp5aW43THhXREhNa3d2NDg4YXhuc3VncFNwQkRqRndLWgpQYUtaNTlvcndDb0MyWlhnbTl1K3RnN2xJREdOR3ROWVZBaUlYNWlsSFF2d0NnOXB0ejlHVEwzR3lBUkh0NnV5Mk85ZmdBClU2UXhYMDgxeTVwU3NBQUFBZVMyVjVJSFZ6WldRZ1ptOXlJR1pzZFhnZ2NISmxjMlZ1ZEdGMGFXOXVBUUlEQkFVPQotLS0tLUVORCBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: git-credentials
  namespace: default
stringData:
  config: "Host *\nUser fluxpres\nIdentityFile /tekton/home/.ssh/id_rsa\nIdentitiesOnly
    yes\nStrictHostKeyChecking no\n# Not enabling StrictHostKeyChecking as this is
    local example sshd, where signature \n# will change from cluster to cluster\n"

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-credentials-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to orchestrator/Secret/git-credentials:
apiVersion: v1
data:
  GIT_SYNC_PASSWORD: Z2hwX2gzTTg3NmRWbW0zdUpTSzgxQmQ4ak1CaGo5Z3AzVzFxdHRnYw==
  GIT_SYNC_USERNAME: bHVhbm1vcmVub21hY2llbA==
  GITSYNC_PASSWORD: Z2hwX2gzTTg3NmRWbW0zdUpTSzgxQmQ4ak1CaGo5Z3AzVzFxdHRnYw==
  GITSYNC_USERNAME: bHVhbm1vcmVub21hY2llbA==
kind: Secret
metadata:
  name: git-credentials
  namespace: orchestrator

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-deploy-key.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/git-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: git-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBnbkdZamFHbTVoYXpCdGpx
      a214aFQvUUxWSW43SHV2QWFzVjJTeTNiSXhrCnF2VmR5eFlpc3JlcGY0R2J3aWdr
      aEZSL0gvRzZiYi9ELzZOeVkyRExkM0EKLS0tIGczRVRZY2U3S3F1ZVY2RnJwTWlw
      L0s5YXNFUlhmTS9GSkdZNWNJeDlCSm8K8j+Pvu+DUYLjQ27N2dPU8rGXYaZORK4I
      n6U4KG2qiRAZn1eVp4t/8/2A5/0UupsrcYyKvXAiMLrpsf9kaq3Xmw==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1g786w8t40g9y29l33rfd4jqlwhrgsxsc7ped6uju60k54j0q3enql3kfve
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2023-08-21T21:51:49Z"
  mac: ENC[AES256_GCM,data:lXLx3E5CrfeVN6/a9WDVie4Mfn0v7pcadSWmiKoge9B5obhgAIVChSG8d8KFPkAN6gCBi1D/O3ukSogAwASZ2q8t4yUes6YsD3t4aZrADw6YVgOjNDeJHMiaXMP6fQ0ze665NEgyGBnIRxDuaTXHpaNXsiqSHr+51rRHi0S6K2g=,iv:I616VwtsUKqqvDfmu2KiY9i2ODaTD0tZZHaYG8DjyZA=,tag:dKFmvDZWMBsfhnuqAyMm+g==,type:str]
  pgp: []
  version: 3.7.3
stringData:
  identity: ENC[AES256_GCM,data:DSBU1rLXKta1xWzwagSPpHvT3f/j8ICa4iTkYkby63sYefFfQt9u0qFAYMQChfR9imjUtLmV4AvwF/c9pnOpyHTTLXdZMgkK/y8/17NAbmolUOFQfFvvU7WarxArOqk5QYon4vvIxI1d0Xtug46h7KXHQjJl3UWeBJ2IUnYWEfsPAoN4fNrAxI5DNtS+ppPcFZbJ6BMHx8rPadOhuKbgLR4KACg8PFKHW9RLvJ4s2Kykv9bYyHxUPaLMdL4UAC55i0+RGydZ/72CHokIXDKmwtQquf1vL5HVup/5aB9FQA4oLe0Pk5v2m001YfrvMaO+1GXodU3V2+VIWVcdjJciQsTk/IbbJbr0IIdLlT53WOKx1FNmb1HODUBAX8/mt1Kv5pNDm/BtZXk9ad0chheBB96GRyDTU+/qUzSh3WYGxGrLX+KTE3W8NCbzieOwVgwrDt5P09i0iBrAbXJzSwuDfF0mENzoNN1uRWgA+cm9FGbR+HjEv0UHHN8I9/BCBRMIeXXZ,iv:hn3PwE5mnIgzJNLw+ruu5/jUqFQOpQTYh2oZUdeOplM=,tag:2qttj/0hdChixM7rzaLr5g==,type:str]
  known_hosts: ENC[AES256_GCM,data:Ej+HKpMCe/3FGSh/qd7cud4OyBAWpH9tAxP5lSq50kGdyNUz/pLWde4t8uxN6aLtV8Md0lewMtVQTIl3peQuOnroB+EOUnimJTTLLuno9G4zyzkcZRf1un9UY4Jvs9g1vT26DyE/paqIOvJ3u8pfotI4tyO1so60HpHc4lQoakp5L7VMzlPUY3g6hHlOGmqEMXfg8s07UUC0DRNyzBb5INXmL4YweGluI6ros1t1Rh0UKjfF7U0f/5xgzY80WvvcXmhd/NYuKaqUb5YMT7Gk/dUtD0RpxhH+iUi4WMaRyWcbwt+HvS4cUDrHi9ZypLBLxD0I6oiz8ZZYnbNAbe2vsqxiYOPbE+E+QXGY98B1eP18nVXe5YICMuclgAXV54Kcc+/Fw/25oNcJREgdvbxA0CGYwXooURan33kKAXFaBdGpGinj4mBXciepy+fPpxe3sa9YpY1pAF88lmBHzmBR77XltWebOmsagauI1gG/QEgItUaaMy3aDt1dNmrG1jzjkrXYJfCrmLdDXJ3kgd+ZS/95l+B0WfUralbZtQte1IzsgyCRTMhOv8NJ1okCetmi7i5kD2+hiZ7T90M4UMDczHfBXulq9mqlyqQKx1hzdKLP5CnmF0QLbupau+xOLvn8l8Qpt4pxZ6K/ul9jC6PlKZE2iTmgBb2WV1cXdG6sQfrxBFYKaibG4hv7jmIJAI+hzdFq9M+nQ0olIuU3FI3vQqSC05nzRMo0PH+408xnqAWKmY/43SfXpXzUa6eg1+GpoYZjK/BcWA7Nmcy1Fk1lf49JVu0eS3/dqxq+iBbPK9Zy/CQaaWXMg1wpu9y+13CwDuEYC/luz9SrryuY14T7hHldjSxDh+gp0qD2T2VrJA1f846Q7c2SWLcRSPuvYnRcGIS4gQpLjnNKLA14GqDhmFFA/cjkIkgnuILB08SxulMYFu0wu5s4p/vNYj+9BGj66CDvynyLZjCas0cT4ubfq8A=,iv:j1jftBGnQlln+7gECyaanotig27AzyHWLFOG5KWX53c=,tag:1NyHwqKx6RpruLKuYPYIxQ==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/gitea-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: openebs-local

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gitea-http:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-http
  namespace: default
spec:
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gitea-ssh:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-ssh
  namespace: default
spec:
  ports:
  - name: ssh
    port: 22
    targetPort: 2222
  selector:
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/gitea-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: issuer
    haproxy.org/ssl-passthrough: "true"
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-ingress
  namespace: default
spec:
  ingressClassName: haproxy
  rules:
  - host: gitea.domain.com
    http:
      paths:
      - backend:
          service:
            name: gitea-http
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - gitea.domain.com
    secretName: gitea-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/gitea-pvc:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: openebs-local

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gitea-http:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-http
  namespace: default
spec:
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gitea-ssh:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-ssh
  namespace: default
spec:
  ports:
  - name: ssh
    port: 22
    targetPort: 2222
  selector:
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea2_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/gitea-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: issuer
    haproxy.org/ssl-passthrough: "true"
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-ingress
  namespace: default
spec:
  ingressClassName: haproxy
  rules:
  - host: gitea.domain.com
    http:
      paths:
      - backend:
          service:
            name: gitea-http
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - gitea.domain.com
    secretName: gitea-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to apps/Service/gitea:
apiVersion: v1
kind: Service
metadata:
  name: gitea
  namespace: apps
spec:
  externalName: 192.168.1.60
  ports:
  - name: http
    port: 4000
    targetPort: 4000
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StatefulSet/gitea:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: gitea
  name: gitea
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitea
  template:
    metadata:
      labels:
        app: gitea
    spec:
      containers:
      - env:
        - name: TZ
          value: America/Sao_Paulo
        - name: USER_UID
          value: "1000"
        - name: USER_GID
          value: "1000"
        - name: GITEA__server__MINIMUM_KEY_SIZE_CHECK
          value: "false"
        - name: GITEA__server__SSH_PORT
          value: "32222"
        - name: DISABLE_REGISTRATION
          value: "true"
        envFrom:
        - secretRef:
            name: gitea-env
        image: gitea/gitea:1.22.4
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/healthz
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: gitea
        ports:
        - containerPort: 3000
        - containerPort: 22
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/healthz
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        startupProbe:
          failureThreshold: 20
          httpGet:
            path: /api/healthz
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /data
          name: data
      terminationGracePeriodSeconds: 30
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/gitea

skipped mutate policy add-safe-to-evict -> resource default/StatefulSet/gitea
policy disallow-default-namespace -> resource default/StatefulSet/gitea failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/StatefulSet/gitea failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/StatefulSet/gitea failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/StatefulSet/gitea failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/StatefulSet/gitea failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/StatefulSet/gitea failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/StatefulSet/gitea failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: gitea7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gitea-http:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gitea
  name: gitea-http
  namespace: default
spec:
  ports:
  - name: gitea
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: gitea

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea7_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gitea-ssh:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gitea
  name: gitea-ssh
  namespace: default
spec:
  ports:
  - name: ssh
    nodePort: 32222
    port: 22
    protocol: TCP
    targetPort: gitea-ssh
  selector:
    app: gitea
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/gitea-ssh failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: gitea-claim0-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/gitea-claim0:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: gitea-claim0
  name: gitea-claim0
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea-claim1-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/gitea-claim1:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: gitea-claim1
  name: gitea-claim1
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea-claim2-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/gitea-claim2:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: gitea-claim2
  name: gitea-claim2
  namespace: default
spec:
  accessModes:
  - ReadOnlyMany
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea-claim3-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/gitea-claim3:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: gitea-claim3
  name: gitea-claim3
  namespace: default
spec:
  accessModes:
  - ReadOnlyMany
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/gitea-inline-config:
apiVersion: v1
data:
  _generals_: APP_NAME=Gitea
  cron.update_checker: ENABLED=false
  indexer: ISSUE_INDEXER_TYPE=db
  metrics: ENABLED=false
  repository: |-
    DEFAULT_BRANCH=master
    ROOT=/data/git/gitea-repositories
  security: INSTALL_LOCK=true
  server: |-
    APP_DATA_PATH=/data
    CERT_FILE=https/tls.crt
    DOMAIN=gitea.domain.com
    ENABLE_PPROF=false
    HTTP_PORT=3000
    KEY_FILE=https/tls.key
    LANDING_PAGE=explore
    LFS_START_SERVER=true
    OFFLINE_MODE=true
    PORT_TO_REDIRECT=3080
    PROTOCOL=https
    REDIRECT_OTHER_PORT=true
    ROOT_URL=https://gitea.domain.com
    SSH_DOMAIN=gitea.domain.com
    SSH_LISTEN_PORT=2222
    SSH_PORT=22
    START_SSH_SERVER=true
  service: DISABLE_REGISTRATION=true
kind: ConfigMap
metadata:
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-inline-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea-config_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitea-secret:
apiVersion: v1
data:
  GITEA__CACHE__ADAPTER: redis
  GITEA__CACHE__HOST: redis://:password@redis.domain.com:6379/3?pool_size=100&idle_timeout=180s&
  GITEA__DATABASE__DB_TYPE: postgres
  GITEA__DATABASE__HOST: postgres.domain.com:5432
  GITEA__DATABASE__NAME: db_name
  GITEA__DATABASE__PASSWD: password
  GITEA__DATABASE__USER: user
  GITEA__QUEUE__CONN_STR: redis://:password@redis.domain.com:6379/3?pool_size=100&idle_timeout=180s&
  GITEA__QUEUE__TYPE: redis
  GITEA__SESSION__PROVIDER: redis
  GITEA__SESSION__PROVIDER_CONFIG: redis://:password@redis.domain.com:6379/3?pool_size=100&idle_timeout=180s&
  GITEA_ADMIN_PASSWORD: password
  GITEA_ADMIN_USERNAME: gitea_admin
kind: Secret
metadata:
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea-config_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitea-init:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-init
  namespace: default
stringData:
  configure_gitea.sh: |-
    #!/usr/bin/env bash

    set -euo pipefail

    echo '==== BEGIN GITEA CONFIGURATION ===='

    { # try
      gitea migrate
    } || { # catch
      echo "Gitea migrate might fail due to database connection...This init-container will try again in a few seconds"
      exit 1
    }
    function configure_admin_user() {
      local full_admin_list=$(gitea admin user list --admin)
      local actual_user_table=''

      # We might have distorted output due to warning logs, so we have to detect the actual user table by its headline and trim output above that line
      local regex="(.*)(ID\s+Username\s+Email\s+IsActive.*)"
      if [[ "${full_admin_list}" =~ $regex ]]; then
        actual_user_table=$(echo "${BASH_REMATCH[2]}" | tail -n+2) # tail'ing to drop the table headline
      else
        # This code block should never be reached, as long as the output table header remains the same.
        # If this code block is reached, the regex doesn't match anymore and we probably have to adjust this script.

        echo "ERROR: 'configure_admin_user' was not able to determine the current list of admin users."
        echo "       Please review the output of 'gitea admin user list --admin' shown below."
        echo "       If you think it is an issue with the Helm Chart provisioning, file an issue at https://gitea.com/gitea/helm-chart/issues."
        echo "DEBUG: Output of 'gitea admin user list --admin'"
        echo "--"
        echo "${full_admin_list}"
        echo "--"
        exit 1
      fi

      local ACCOUNT_ID=$(echo "${actual_user_table}" | grep -E "\s+${GITEA_ADMIN_USERNAME}\s+" | awk -F " " "{printf \$1}")
      if [[ -z "${ACCOUNT_ID}" ]]; then
        local -a create_args
        create_args=(--admin --username "${GITEA_ADMIN_USERNAME}" --password "${GITEA_ADMIN_PASSWORD}" --email "gitea@local.domain")
        if [[ "${GITEA_ADMIN_PASSWORD_MODE}" = initialOnlyRequireReset ]]; then
          create_args+=(--must-change-password=true)
        else
          create_args+=(--must-change-password=false)
        fi
        echo "No admin user '${GITEA_ADMIN_USERNAME}' found. Creating now..."
        gitea admin user create "${create_args[@]}"
        echo '...created.'
      else
        if [[ "${GITEA_ADMIN_PASSWORD_MODE}" = keepUpdated ]]; then
          echo "Admin account '${GITEA_ADMIN_USERNAME}' already exist. Running update to sync password..."
          # See https://gitea.com/gitea/helm-chart/issues/673
          # --must-change-password argument was added to change-password, defaulting to true, counter to the previous behavior
          #   which acted as if it were provided with =false. If the argument is present in this version of gitea, then we
          #   should add it to prevent requiring frequent admin password resets.
          local -a change_args
          change_args=(--username "${GITEA_ADMIN_USERNAME}" --password "${GITEA_ADMIN_PASSWORD}")
          if gitea admin user change-password --help | grep -qF -- '--must-change-password'; then
            change_args+=(--must-change-password=false)
          fi
          gitea admin user change-password "${change_args[@]}"
          echo '...password sync done.'
        else
          echo "Admin account '${GITEA_ADMIN_USERNAME}' already exist, but update mode is set to '${GITEA_ADMIN_PASSWORD_MODE}'. Skipping."
        fi
      fi
    }

    configure_admin_user

    function configure_ldap() {
        echo 'no ldap configuration... skipping.'
    }

    configure_ldap

    function configure_oauth() {
        echo 'no oauth configuration... skipping.'
    }

    configure_oauth

    echo '==== END GITEA CONFIGURATION ===='
  configure_gpg_environment.sh: |-
    #!/usr/bin/env bash
    set -eu

    gpg --batch --import /raw/private.asc
  init_directory_structure.sh: |-
    #!/usr/bin/env bash

    set -euo pipefail
    mkdir -pv /data/git/.ssh
    chmod -Rv 700 /data/git/.ssh
    [ ! -d /data/gitea/conf ] && mkdir -pv /data/gitea/conf

    # prepare temp directory structure
    mkdir -pv "${GITEA_TEMP}"
    chmod -v ug+rwx "${GITEA_TEMP}"
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea-config1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/gitea-inline-config:
apiVersion: v1
data:
  _generals_: APP_NAME=Gitea
  cron.update_checker: ENABLED=false
  indexer: ISSUE_INDEXER_TYPE=db
  metrics: ENABLED=false
  repository: |-
    DEFAULT_BRANCH=master
    ROOT=/data/git/gitea-repositories
  security: INSTALL_LOCK=true
  server: |-
    APP_DATA_PATH=/data
    CERT_FILE=https/tls.crt
    DOMAIN=gitea.domain.com
    ENABLE_PPROF=false
    HTTP_PORT=3000
    KEY_FILE=https/tls.key
    LANDING_PAGE=explore
    LFS_START_SERVER=true
    OFFLINE_MODE=true
    PORT_TO_REDIRECT=3080
    PROTOCOL=https
    REDIRECT_OTHER_PORT=true
    ROOT_URL=https://gitea.domain.com
    SSH_DOMAIN=gitea.domain.com
    SSH_LISTEN_PORT=2222
    SSH_PORT=22
    START_SSH_SERVER=true
  service: DISABLE_REGISTRATION=true
kind: ConfigMap
metadata:
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-inline-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea-config1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitea-secret:
apiVersion: v1
data:
  GITEA__CACHE__ADAPTER: redis
  GITEA__CACHE__HOST: redis://:password@redis.domain.com:6379/3?pool_size=100&idle_timeout=180s&
  GITEA__DATABASE__DB_TYPE: postgres
  GITEA__DATABASE__HOST: postgres.domain.com:5432
  GITEA__DATABASE__NAME: db_name
  GITEA__DATABASE__PASSWD: password
  GITEA__DATABASE__USER: user
  GITEA__QUEUE__CONN_STR: redis://:password@redis.domain.com:6379/3?pool_size=100&idle_timeout=180s&
  GITEA__QUEUE__TYPE: redis
  GITEA__SESSION__PROVIDER: redis
  GITEA__SESSION__PROVIDER_CONFIG: redis://:password@redis.domain.com:6379/3?pool_size=100&idle_timeout=180s&
  GITEA_ADMIN_PASSWORD: password
  GITEA_ADMIN_USERNAME: gitea_admin
kind: Secret
metadata:
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea-config1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitea-init:
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
  name: gitea-init
  namespace: default
stringData:
  configure_gitea.sh: |-
    #!/usr/bin/env bash

    set -euo pipefail

    echo '==== BEGIN GITEA CONFIGURATION ===='

    { # try
      gitea migrate
    } || { # catch
      echo "Gitea migrate might fail due to database connection...This init-container will try again in a few seconds"
      exit 1
    }
    function configure_admin_user() {
      local full_admin_list=$(gitea admin user list --admin)
      local actual_user_table=''

      # We might have distorted output due to warning logs, so we have to detect the actual user table by its headline and trim output above that line
      local regex="(.*)(ID\s+Username\s+Email\s+IsActive.*)"
      if [[ "${full_admin_list}" =~ $regex ]]; then
        actual_user_table=$(echo "${BASH_REMATCH[2]}" | tail -n+2) # tail'ing to drop the table headline
      else
        # This code block should never be reached, as long as the output table header remains the same.
        # If this code block is reached, the regex doesn't match anymore and we probably have to adjust this script.

        echo "ERROR: 'configure_admin_user' was not able to determine the current list of admin users."
        echo "       Please review the output of 'gitea admin user list --admin' shown below."
        echo "       If you think it is an issue with the Helm Chart provisioning, file an issue at https://gitea.com/gitea/helm-chart/issues."
        echo "DEBUG: Output of 'gitea admin user list --admin'"
        echo "--"
        echo "${full_admin_list}"
        echo "--"
        exit 1
      fi

      local ACCOUNT_ID=$(echo "${actual_user_table}" | grep -E "\s+${GITEA_ADMIN_USERNAME}\s+" | awk -F " " "{printf \$1}")
      if [[ -z "${ACCOUNT_ID}" ]]; then
        local -a create_args
        create_args=(--admin --username "${GITEA_ADMIN_USERNAME}" --password "${GITEA_ADMIN_PASSWORD}" --email "gitea@local.domain")
        if [[ "${GITEA_ADMIN_PASSWORD_MODE}" = initialOnlyRequireReset ]]; then
          create_args+=(--must-change-password=true)
        else
          create_args+=(--must-change-password=false)
        fi
        echo "No admin user '${GITEA_ADMIN_USERNAME}' found. Creating now..."
        gitea admin user create "${create_args[@]}"
        echo '...created.'
      else
        if [[ "${GITEA_ADMIN_PASSWORD_MODE}" = keepUpdated ]]; then
          echo "Admin account '${GITEA_ADMIN_USERNAME}' already exist. Running update to sync password..."
          # See https://gitea.com/gitea/helm-chart/issues/673
          # --must-change-password argument was added to change-password, defaulting to true, counter to the previous behavior
          #   which acted as if it were provided with =false. If the argument is present in this version of gitea, then we
          #   should add it to prevent requiring frequent admin password resets.
          local -a change_args
          change_args=(--username "${GITEA_ADMIN_USERNAME}" --password "${GITEA_ADMIN_PASSWORD}")
          if gitea admin user change-password --help | grep -qF -- '--must-change-password'; then
            change_args+=(--must-change-password=false)
          fi
          gitea admin user change-password "${change_args[@]}"
          echo '...password sync done.'
        else
          echo "Admin account '${GITEA_ADMIN_USERNAME}' already exist, but update mode is set to '${GITEA_ADMIN_PASSWORD_MODE}'. Skipping."
        fi
      fi
    }

    configure_admin_user

    function configure_ldap() {
        echo 'no ldap configuration... skipping.'
    }

    configure_ldap

    function configure_oauth() {
        echo 'no oauth configuration... skipping.'
    }

    configure_oauth

    echo '==== END GITEA CONFIGURATION ===='
  configure_gpg_environment.sh: |-
    #!/usr/bin/env bash
    set -eu

    gpg --batch --import /raw/private.asc
  init_directory_structure.sh: |-
    #!/usr/bin/env bash

    set -euo pipefail
    mkdir -pv /data/git/.ssh
    chmod -Rv 700 /data/git/.ssh
    [ ! -d /data/gitea/conf ] && mkdir -pv /data/gitea/conf

    # prepare temp directory structure
    mkdir -pv "${GITEA_TEMP}"
    chmod -v ug+rwx "${GITEA_TEMP}"
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gitea:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
    traefik.enable: "true"
    traefik.http.routers.gitea.entrypoints: websecure
    traefik.http.routers.gitea.middlewares: security-headers@file, error-pages-middleware@docker,
      ratelimit@file, geoblock@file
    traefik.http.routers.gitea.rule: Host(`git.`)
    traefik.http.routers.gitea.tls.certresolver: leresolver
    traefik.http.services.gitea.loadbalancer.server.port: "3000"
  creationTimestamp: null
  labels:
    io.kompose.service: gitea
  name: gitea
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: gitea
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
        traefik.enable: "true"
        traefik.http.routers.gitea.entrypoints: websecure
        traefik.http.routers.gitea.middlewares: security-headers@file, error-pages-middleware@docker,
          ratelimit@file, geoblock@file
        traefik.http.routers.gitea.rule: Host(`git.`)
        traefik.http.routers.gitea.tls.certresolver: leresolver
        traefik.http.services.gitea.loadbalancer.server.port: "3000"
      creationTimestamp: null
      labels:
        io.kompose.network/net: "true"
        io.kompose.service: gitea
    spec:
      containers:
      - env:
        - name: USER_GID
          value: "1000"
        - name: USER_UID
          value: "1000"
        image: gitea/gitea:1.17.2
        livenessProbe:
          exec:
            command:
            - curl
            - --fail
            - http://localhost:3000/api/v1/status
          failureThreshold: 3
          periodSeconds: 30
          timeoutSeconds: 10
        name: gitea
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/gitea
          name: gitea-claim0
        - mountPath: /etc/gitea
          name: gitea-claim1
        - mountPath: /etc/timezone
          name: timezone-volume
          readOnly: true
        - mountPath: /etc/localtime
          name: localtime-volume
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: gitea-claim0
        persistentVolumeClaim:
          claimName: gitea-claim0
      - name: gitea-claim1
        persistentVolumeClaim:
          claimName: gitea-claim1
      - hostPath:
          path: /etc/timezone
        name: timezone-volume
      - hostPath:
          path: /etc/localtime
        name: localtime-volume
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gitea
policy disallow-default-namespace -> resource default/Deployment/gitea failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gitea failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gitea failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gitea failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gitea failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource default/Deployment/gitea failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gitea failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 9, fail: 7, warn: 0, error: 0, skip: 1 

##### FILE: gitea-loadbalancer.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitea/Service/gitea:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gitea
  name: gitea
  namespace: gitea
spec:
  ports:
  - name: gitea-http
    port: 80
    protocol: TCP
    targetPort: 3000
  - name: gitea-ssh
    port: 22
    protocol: TCP
    targetPort: 2222
  selector:
    app: gitea
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/gitea-claim0:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: gitea-claim0
  name: gitea-claim0
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitea-pvc_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/gitea-claim1:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: gitea-claim1
  name: gitea-claim1
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-gitea-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitea/Secret/gitea-config:
apiVersion: v1
immutable: false
kind: Secret
metadata:
  name: gitea-config
  namespace: gitea
stringData:
  app.ini: |-
    [database]
    DB_TYPE: postgres
    HOST: postgres.db:5432
    NAME: gitea
    USER: gitea
    PASSWD: "!!!gitea"
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-gitea-namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/gitea:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: gitea
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/gitea:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: gitea
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/gitea:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: gitea
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/gitea:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: gitea
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/gitea:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: gitea
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github.com-conf.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to syngit-system/ConfigMap/github.com:
apiVersion: v1
data:
  authenticationEndpoint: https://api.github.com/user
kind: ConfigMap
metadata:
  name: github.com
  namespace: syngit-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: githubapp_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/githubapp-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: github-app-operator
    app.kubernetes.io/instance: githubapp-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: github-app-operator
  name: githubapp-editor-role
  namespace: default
rules:
- apiGroups:
  - githubapp.samir.io
  resources:
  - githubapps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - githubapp.samir.io
  resources:
  - githubapps/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: githubapp_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/githubapp-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: github-app-operator
    app.kubernetes.io/instance: githubapp-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: github-app-operator
  name: githubapp-viewer-role
  namespace: default
rules:
- apiGroups:
  - githubapp.samir.io
  resources:
  - githubapps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - githubapp.samir.io
  resources:
  - githubapps/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-auth.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/github-auth:
apiVersion: v1
kind: Secret
metadata:
  name: github-auth
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSB5NEJtSUllVjduV2owRG9V
      WlZCcmpTNi9hZUo3WGkzK3JCUndsSnhHV3hVCmRXbXV3akFDcTBMNjQyQ05hS2V2
      dW9nYVR2eVFYVGZ5K2g1MlppNEdiL0kKLS0tIDBTa0tOWVRYWXNwVm4wYmJQYVpL
      WHFpZHByVEsyRkxEN2ltbWhNaWtFejAKI6L74FEmN1nPJq/poTyCL5rpRhvMahRy
      Pk86q66iM3bsjWXrVAYKIQYly/YN4Naj6GfciqHhlouB9+LgH+PnnQ==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1nqn46tdx7vazgkjuglseduk52plfrpz60zcqjqk83rfg8gwuv95qd4cem4
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2025-02-22T11:05:50Z"
  mac: ENC[AES256_GCM,data:Tyk2c2znn6pfAnX+w5HAUx/Yi06RD2hvl3lP7vhNKuucQoe90eULE/KKAfRHhA5Wce3wenzi7Wcw7zSRnOoczucdrbZ52uj/nGwxe1H8fc9ej+yJMzBjsgSZ9ynkcZ/6+N7s8E3nMG6NnfabDgh7LvF+Sm/Fiy85pVClFt6FQ7o=,iv:j+MQVSMFal9aoFa4hZfNAhb/fNgWgOG6qt8o76SdXK0=,tag:RGsLgsXoNNm2MjRArTzDVA==,type:str]
  pgp: []
  version: 3.9.4
stringData:
  githubAppID: ENC[AES256_GCM,data:1NSAwRkLBQ==,iv:ZbLbauZ5d8aefqGXgNBs6pT1d5FezppyCaGFXAtV7FA=,tag:bFzR3e7HCF3kHX6PVGIyeQ==,type:str]
  githubAppInstallationID: ENC[AES256_GCM,data:QFM/7o3MxLo=,iv:MGIrQScBcqxNDrSJrD1RK3rPS5Fl5i6UxK6vYDc1SyE=,tag:M17w3HYPz+6NfAgpwpPMEw==,type:str]
  githubAppPrivateKey: ENC[AES256_GCM,data:O7QsfPKfZ80TYw1MnKcvRb6KuRsDnVXDyyj9CAQ09P98F0XVf2I6QB6Q1Pa7SiaUpgzxL3gf0xkRaKttlYQSbMIrpQvOG1jTULkzITmw5ZhR8PW0aMH8iuFSXtqybYjRcENwMNenu9ynvVHGT7OSdQpoIcP0f0TrjlCYoagsq7jZXBKfUAMUlmeAz/bguMOh4go6DILl2BfCsibGvhlvx09EcbjjXz/1jqYlwWldglcQ12FMgUCffzLKi6I39y8vspoc1Tf2gHazNSCDd9NNOLMAgmOCVT6vTuPt5PI5gA1oubXG/Ll64oLreJ5fWftTSdt4OmEPl+UGtOKrc+ufyIJ7nj9T8RLwnTiQ6si1ZsSq1PpRT4BeXlZSI8nUflfq0jXNCvLpIMfqeU/JnTihRMKEXeShnMnXDEfRY/ZFVmWJQ+7or5J2c6YK2gjlZsot0hYvGbpa8xkd1MYihacGfCqbgH3eWJzSk4pdlWMAfZrg/hZkXiWHvInUrsSigsS/+uGbs+qQnLbSkNECj0KLVAEIb/PH2kM+jSrBv+mEzYUZIOM4iMygOk1giRfsr3vIGTtLsBCJS46lyVTzuw7HBWnqLWV4O6qrCBNMQ9n8KK7W9BVEySEvs1DQGgE9Hf50G65JdyBvdVBI+gT2ft86Xajf4llvuDkAq6Cc4bDKGRsXCU12AyZZfT6uXjNcUB4enSv3Nm5WErt9FCkjrkuFxC+l2B8P/UJQBJfzeDDBiMoP8zjHi8QHH4AUmnNCuH55ui71cto5l6xKquixr7K6uHDlD89mYBtPdVCIlodzTi4vTXFCAsUlj6+mn6pS4mvBdKbkW9FoApxUcw9EfiAdH4svFaHkurSnFjIPXxtcj2Zo93SbMQHxk1kYTJHVvCt2bWMpwBuaHuLWI0RO00vGRUB/XxhQl7wM0Iv3ZoOzi7Vb9XJXZ6TBAIjYMVdia7ROcbvLgPoAbcnoXdhiR2yubrmiHnSB8bQ/ialCDWsiqr/HGriQtHmr3HGwsCebuNQTlia8Cx75WZR4tbd9+ipEej1pDeNUA9YAgVR6eGGYtVeCN1itgK4zcm8aOue6kin+ZQv+AWBjysKdWmrMY5ehqRzx26LAjWsTlNKyEY/X19JPXGHLvgf6WMZqM9TT+sDr1P/qhPmFN6AoLmDfl9fo4fB2GPhisZWcrMOmXpmpxN19eEZ8MDiRqK1vF4iixZMydEGjKE0MK3cBRkhf6+rujiPvWHf6N1ZxckKsktCG/upRcGi8+P6amhOqXY/45eUYgvvAVavKIOuZzEqOJnT+dlBpozWF97KZTOCb0qBsbFC/n6qlK8zM9BfrGO2vS9xUdfWQ9f7snUf0F/CaqoKVsMRQzgPf0Axv3iz5S4gYRRWQsQC+O5y1lZOsrTwv4ZRRbiU6vBuZXCTp3sNsZAoQzqAvDdgJLoOYT91Raj5M7zGm7JhQcF/sH7AkFoITG4zChUgbFwZc/uE0CX3hfoSRwfbd9sTiM6J6DwcVheN7la3BOYV6wzOXRDKEkewPY5HjxBniG3Fr3mCufFBDPKxDCKbAglyrAm1o1yvHxEIgmt1BAaMxOlqCloK8Gywg4RYINdK11tURxOtxpRjgmh14N/aN/Wcmr2aLRar4BuDa5l4Los4muoffI5mXUW9XwEtJc4tX8NgwxMhAsqXM8m/XpsMH3ZdcId5+YAjq7DRed4YGrk0zlgWLQY9fXsj2ozQQpDXcrguo2E/YWGBIWH6Mg0k1rC+Hba6tTp6/ETM+Px7nEbMNeLhW4VpxP2vkcgbxpvUD4aUYZqAwh/e5hDFWxaXZ3OfjKEAMnQLcKARAKkHMDQpENm2StgDENtmwZpSLZmxLPfstPjg9vENPMe4+hWNrYbg4VMIwJGoOgiUFLEHHm6oqNBVKoXfEax610eKgrtwtqC4ec+3FxyCjS6eQDJ+7HMGzHJZisdMMfS1F5XKo6mL9yGG9F10XflN7/DYJKsaazLK05XtGZQFr5z0+e6foLEDzJ4jIVbbaJx8iZjllb2Wm7xX7resnx7UbuIe5v3KAboeCe+2DCT45TPMwHAZ+1wl/gObNCTLSX7D9AlEqzaLZG84ozA0zkfViCb03yKC2Jilqa82wDshb0Z1e13ZfHGKglYzfKcPq+hQy+xmvz62umDHaEMW0r0gvSA5cT2oF9maksp1Sjz4N8Y6ukbc/uXMNLIkFbpt8oN1Obf0JpXrPsmYpCn1blg==,iv:5nWWh5k6sYNJ85PbZJgH6GiVf/FiB1WQMc8CAT3yHRc=,tag:8CvMgUW8itS+diXqSdQC6g==,type:str]
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-clusterrole-binding.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/continuous-deployment:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: continuous-deployment
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: continuous-deployment
subjects:
- kind: ServiceAccount
  name: github
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-deploy-key.secret.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/github-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBNR2dOYmlteXhHbm81SCto
      b21VMWZ6TnBjWmFWc0gyK0FnYldyUmpKT2hFCkxHTE1Hd1loWDQrWjJsTm1lMUl0
      TkF2M1YyTjVOT293QWNTZHRzcE5xWUUKLS0tIGI5ZU1ZRkU0ZXVmZklPMWFkNGJM
      U0VjMnhzZmdaQURicXZJbXdTZktudzAKnJ1gdnFBtdUWz0tsHgnDL5j5TWZ/0Dm0
      2eh7FWOmgkCDJaVJ9PHbtyt+nvBzq938cPdO5Dr3ydhkfMQ431MOSQ==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1myxsdyjgwefpljpsvf0n6pvjr4n9ygz0nh3zy7wkfjnqdg54jayqwaqqfm
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-01-09T22:10:47Z"
  mac: ENC[AES256_GCM,data:pchuREJVumXklzWTgRAKEjpE2PBQhw9eOzVtLPId0YDZ/96WV5/io756d6YbFVREBRlc/ogivNcviw+Htp89ee3HTaSTlH5Bnh+vlIzSxUhcR874v/wIzbKfsVfdGboeqw3j3VP3pk5VfD3Ii+toGc2KQL3P/c9O+M93SUtGQaw=,iv:OZPuFQPduM6fmdQNPg7Qg5XrpwjY1bgWx/X7P5WD+F8=,tag:OW58KR6J2XzIQuBrfE2AgA==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  identity: ENC[AES256_GCM,data:4SQj/wNQ0FxuW12h/+ZFswNiuG4iGqV5BaeKBBwWRSsJ/VI8bjE6ONUcNxQatJh5qYUuv9lW0ufr18uSdLbpdI866ayhWSLgV4FTXASSDVdpwYbMyG3y+MQ0NyTP4M2vjYJ+sNOX6ryghn5yvvUQn7O3+f45kjuHa9GtUw5NR9icLadiLeY6LCIwaLNehEu80UiNwU07RyR16xefcRzyC47yF8U2yJpaV/cTa2/+oetjmWXpWFqv3fJAbasaQoF+0o9l+drEXlZMqFGRe/EfpdyEAk3YEWzoCw8jifCWwg2AcNPRjLxY1+Hfu7rByszTnNkYh5oRWUqN5KR7RsKCXLgsGJccGgcmk5Ptj/LhRaENCwO0ja0C2tJnjZaWhxaZtfVxAvK0t9o6e4fa5mgL7ujlXf/z1m/Y+BxAFjCvcsvPoaaabxS31KtG1xlgzicnCZdRq8cw5dyL+4RZrR5Sm3gr1mWbNUI1U3gisVN2VBDJvQHqARlosohBrk6L5YcaCorc09VnvHqL8gKZRTxQDWiuueINn3iW7sDxK7fJ6aZnElvD3IwefpsD7dX/FpoIjnKBtj8EVAzcKp9MP/Y8yQ69tBIclhBivfox4edHMA2aAt3cLnMuxZ91MHEhei6CtvT34A80weZxsr+6fY7YWdlclWpOgZAziqSU9xauHeW+xqN7yVVC47KDNUtwfqclKN73pVyoYoD1BpgAdWyA8d/2ptceV/bNjQIaSO8+EjRAerRR0ZgonaOussvnPLqeVi0Kaf1eGlALraX28P4Y40XBaCDQv5WmB+9yUbSGgHOs+Q5ri2D+vSSxLCN3V1FbNZ14sbH/yFtH+ZLiFIod1tJC2TJFjBZ51Q1WLCw2E5ne8eh2I79DlTWf5nZox1U9/qOcVTNOfMqQyB+Cs/ECSIQTVGw8c1zm3T+lyA16lJ72fwqxsQKkpYIcLBJIRSXWoOO5R+TnEK3k5ICwEAizvQ==,iv:ri34wlLu40gp7hlK8NzUKrvPvIDcQ853sEQD8Exx54A=,tag:NeC/LAuCwfLaXADW9FewWw==,type:str]
  known_hosts: ENC[AES256_GCM,data:VJ9kv8VRi4rwPWhp/FhD7gSYGYjBoprUK/wiVUXUMTVEmiCdvmwNvmJv9GUvSxB9sbx1W7tLc41r7QNbUSb4PRptCeceb3JVqrRjWihfcf80CPmyb4Leo+eg9fDUPJfqx2g3671IXSCb3bDoBfvN+ejYfIWLjAlIcToxjtWSwUKb7UJA6zJ9BSQHw58rESL4X0WmmFrXLnxjaTQNPeDza5afS94gqIGewqnmjqEkx/8oPDxSEyvVleOjWh6O5l9xhagKXhOjB5qeGM9yhEDOcfEW4VQq1DRIEaNOAFl+3NjO9fNSJE0gSH23dPA8ENEnsWRathrihmLozAYwg0wtte90BGW0K1Sc3+FU8He6uJJml3N2+99akL7Hh9f1pup6oM7mLfzGa+HH1TUKdBrdlWvmrvyyK4KgRZSGlC0afIoNLc1oMl+HkTxwMqo2IBfMioHac2IKKHiCO9BjPtD7mNaMV5ozIwLycAHscXGRWvzM5hbZZ3m+wyyksHjWERR/RyslHFWtl+Cuo7jiXRdsMp8E3akxOTcyB9CG1Ne5uya4wlWJTGWESvkyLlD7F4Ob1c+P4gLPlYcd+V+xeSwiUxzH3jwsF7nL3ziy90z9QvOxWx5Ui2HhIMPZJj2gwLrkyoOVDiz9OxkxrpUXTvYwunjyVZjgnT7f1PZYZm4JpFl7okXs81oTzi9TJc+VQ3+LKBC21JWhPFZLHrfYYo0a+xiqETInYYnNVDyGPBogf86wf51PW4EWXZd4H/cG4Deky6kGuAavALsa/iMoHhPf/XLO1/UaPnq5RWeieGUoHb5Ke12opCx4TRFQHii/q/fIrs5nxyvu8t3Uuca2+36Gab7soi4pEu4VlcWdyJ8FZE33W7i0VKiBzbQYLjAa27/9d6VtnFB57MwIqPRD1qHjjuWtMFK0nO7tDCbArtG+bjNTzdOCJsTvGHVLQT+Ar6qBF6T9YvPsiax4kRm1kWzfoomg4Eu/xRUxnvDRdrxi0VLPyfdjWmygOsRhjdyMa9ekY9BQe8iXOjyhn/ivRsD45VPcgC2l0STZaAncwlQqryN8JH3fX0a908mOG5k0AZ3KMnUTWwFEDRHbzY//,iv:sMkTkhesOfW6q8NRTecAJNrPDOmzUO7zgbCR8UmJzxs=,tag:G+4FXJ+xrTXrmQx+ywcC3Q==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-deploy-key.secret.sops1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/github-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBNRTVrVkFUb0VSUlBzaG5j
      cHhkNTZ4cnJkb3MrbHczZWczOEF6dGp0TERFCklwM3o0bkdHN3NHT3JoTWpCaHlM
      V3JyZmE2RGtSZGtGV1BIRk8xbkZMMU0KLS0tIHcwOGdIWUY3VVBzb1NxM05seTBQ
      UDl1U1Axc0M3dmdXK2JTOW9ubkVQaFUKNMFUnaNfxcds8EY2hZ3rQP5DLb07cZMR
      eKDTpnSrcNee+CriqcnatNV31Wf3a+jZ/AxPvNu38+udAYcUaOXjqQ==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1zucujcrr89pecplrme76f4vxcc05lg3hm8849mmfggvcvcv4ppls7cquw8
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-03-08T03:55:51Z"
  mac: ENC[AES256_GCM,data:QXyyrwjCup3mY0YOmHhzST5j+T6TqMKl38Pj5UXODEybnL5fxGhLsI2/Uu4jqlgPTBFXOtsE9w1mWDFFwQGh6V7ayONDXwlX9lEgA3FkZ/xrLQg9U5Rw7MAgyz9GStxbNRQvctsV151VUpJ0K3pACI6Fgjyy+AlBUQ/JDT+9pW0=,iv:CYX2Q8UNNheLx3jUctoyw7gHfkNmvkKsOHVlFgyOWxc=,tag:fhtI5kdQPmaYckhzfpGOyQ==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  identity: ENC[AES256_GCM,data:FLE8ZdVal+lgl7/ZJXaTlbdutHEw5v2aFSMhu4URU5cuoQK8Hdzf7Jupv/LHLW9BQtbkwkJsYASjmC7k4kySuY9ZkY4Q3+km26o6GGRGLC6Kcsjs1EsLxHwktoyRHoC73s9kFMO19z/FgB4fi3yYtUIfTkFZ5UBlUa4UiOYAbTkGRUz1xeUXUYkXXnW6yrIf7UjV4YyDU6i/ukzpP8h37UKvxMHbJl5eONhN6lGq6LZvgZymWcgEEI1Z2mmTQjBHppYHgSvZW++l/EWVNQDGkn9wdi7U+ri6uAbiXNeIO8IzHjOWLeTWrHJLaBtcpysJ+k/UHU/CN0bcZT1y8c0b8RJsTDerUd8tYhCyAqRo3xLyHsl3vRqMi3V3I878UO6393o8RtQsiJQ/iVMSdEEBrhAc,iv:+qggXioAtpK/eeivbXC05BbHty3tIaMAN1iZimtr87s=,tag:JE+H2i2tDLZWH2qeXgIDUA==,type:str]
  known_hosts: ENC[AES256_GCM,data:nFSXWnD4Inm4K4PT288fVL3a94kJdLI5G+V4YCvRG0IW6+xu0ZPpVwpKaKQWSc6lr+jhqJvFzyDyFBxKFq22YYBB2ClUSsfwq7pTPlo1MGfKuIHpNNZzcjNKGQsQe+rDLqyIIRfFlQdxivJ74kcBTrwXODZQnogQ2gSCBfCWDLGijj1qVZ7oOKt8REJPO+6e3pGewNSWznP18VZjm27V2Fqz1C5RfoPdoQ+R6w==,iv:PH9eQBxYyUEtfC9XD9Zil2uVJ4BQUEZvGH4qjinCxfU=,tag:osLmcLgopOhTzUf37JvbhA==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-deploy-key.secret.sops2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/github-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBNMXhPR3B3eklBd1hsWWZl
      UVRLMXkvMk51ZlhzTWNJc3RxdFQ4OUlSalhZCkpaNEtrQlVhb0pOdTg5aG80M1FV
      bGJOdGRhSXVQSU5ja0lKbnpZZ0lxNWsKLS0tIFo1ZFhqWjFMZ2F4WWh1R3c3dDBk
      OFAzU0NwMU1vemJNYXRheGVqZmRVRVUKe9xAwWP6PRAKRZwSPPT0p6fTJ6tv6INs
      vDxvxo1b4QiTNM5YCv0TBePAwKnnAKcV6Md43xpmS5SyX7r++I53aA==
      -----END AGE ENCRYPTED FILE-----
    recipient: age16ve7n3m9ucqtxgfv220gdf7wlgp8vhurx5vspw365g797vwy5pds56p93y
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-05-20T05:48:42Z"
  mac: ENC[AES256_GCM,data:dczkae3QXLlXbHYofN7r8LTszmhZEpOeirklAFw9/2mZReMNz5MfLIFRtlwtAB/6lxoZTZapeNNvFlMpesLVucDdR2ScOiuccXUHhTtxecCPxlHF8v5Es2IqneQ5KMmpwg5dHjFPMhXkrPo/kULhG7JVWKXU0n3FHk/5k2NUbsM=,iv:GuhijpPLAVG3/UczuQDY8hCS0X6E6RZtTm/Aw7kGjns=,tag:5Liytva1J4KYVIkG7cpbBg==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  identity: ENC[AES256_GCM,data:BVkGjJMbb7y4u+7pG5a3gdh0TtM77TBlof9YIEbGAEswV67QUqcQiO0XPA5F2NzanHxxPOVREpa926BxIPq+ggvsD7AtNZCo5tHc0Xtsxf0/CPXR1Iki0hFPcbvTtISM7/h0CR2K+b8xGixdLGEx/Oigf4E1r5z30f2yjnbtSeNwInf7WBfRRPRguxd9QqaUZNoF6FAa+BcmiYi26mh/r/MyVIKSumE18OF/DUUPoZXJjYorVZ+15WW+v3TjavW5Yqczm2AT3I+Y6uGrPG6AeAa4p2wZZbO8WC46lr17JZ/ctVX1yk+NA7efRbBVtDlDFYUYSwxXvRDCS3T7GZjTmC/2yTEZIRHRlmezy+t+3EmLnkpPL4XbLe/h7U/mhsBbtHxJgBgBwg2ZcvY4FbXlDBhT6Hk5bl8eBhEuHJBmAlG+3qyq6WCjuB5IpVrdehwODKTI9wQjJXpFcrG8EpoTo2VYczN4VhhfgHAwz+meZv4kMxvRDfRYXRRt9wQdd/oW3/sLoZm4RDSje/yGztKNNFXRj09H6o5QpEaqazKFmOy8bT5Aex2QpxB4Upg2S/b4CzWpDL3apSkY7+M+bPAVL7nH9OpTeUsY+10/0tkpfpQJg/EkUKiNluZTOoV6SGHlTY/1XO3VxxvbO+0nIj8CXmSzQvD0jQsHsgdpdMYD/6/gIa00bu0Qw9yYgRWuqgRCwTzWzk4DzfTRCojBQJ/xirY/1cTLsV7fnTW46PDyCP/PmynaJJw3QJs87SZb8+8Iu6lNTKABg8ILkkn56nWBeE4/rmKKlduz3WVs58Zh2aSVLL8p3ErEyCAagTQdE2OkPujRUtSkeIJTADkw9N4AeAiRwd4zP2q3zoxLEMQ7XzESkXxERg0V4sY0tE68RgWZEFYO8+steVxd7mCl3//4Cf4T4N+tf+wTT21dOoV0Z2TaACsw/gOFzKj0wnH3DPv1vsTe1/D5I2sseyZEqrQ72w==,iv:F3uiIwk0vMmH9WZmbu1Le6Oh6+c0WgaBhGFKg2gZUGc=,tag:tIUHNcIh2DLHFA4O6PMGuw==,type:str]
  known_hosts: ENC[AES256_GCM,data:28yW+I0FjDFcNnJ82+Ro+3novdUNUSyAH3s+UzEblS1IEP7kxrl5RUdBF8qjPiZt+9CmN77Tft3j+Puki0c8GSrqbxJTlJlv/GJzpqNoO3Qiq3ALLyJgGRxKpT/vd3hOOcJuhz5a97BMESdq8Af7WKDma7ZNNRN8er3jKvgBF+xE6kjn4r+GryPgIEzVAIEJ2SCPyx33qquETHJrTvoN+BbQd1vCxwdBbzYyB9X7lS0E1FZohFZS6ntfyLSJsvXcPKgrZPSOMRxOTWcj5NS7uEsUmgDceQOY8DH8vNp2Q1uPaTThHf3hvrUn8iQSyoLQYmm3FTTg9NxvhCR/pCF7ork2f5r4HE/uo3RctFIIRlR+OETR7Fsy1ZiGb/nCaG5EY8lg1BMqVLY68qs6ZahyJ8q3PJaI6NPlE7A6amORVl4F5bsT+B6g1exqKPbjYklqbuDv9MMZT5EaQg0+++VWMgXw9YXBJEuWqRjk2yPQpcI0GhHtdQUlIC8eT9UnekqlL7+6Gwi31iUQBt97MEmEycvBwb76zFRBpOBseUdSsMxLDAOteblEJemqLPgY9B75zBed8+w62+zzX4+CcxfTMzO6/QFxiz7dS2mfnXInXETWDyNO1Rl/DCu/EUiSwk6v0rbXdFScv96uTzyphBmjcTfaCDqrV9uac+xR3O/UCEsM9Y7mVn86SIxUUhLy0jA86UEyVRF+3BJS4ohv+KA1nHuvrL1daMP+9e8U76wApCxXuxCdoIFtnb9pDGTt5X8HJINyT/Ddk5slAuFVJY+2+GYBUz1kq83MKDePPO2MJtFMAe/pySMthSp8ToOLuVz1PQ+8J5AsvqrEvPeMAKlTJrn2+xjgMuDxj9FTIJIASdue+wpy+lhyaE4+E+pIXQuXRkuoUsXA8THWvFyKaAjQtPd2NJaLf+6XFh8bGOCA/yFYNNKg0rAeSWZDo0+Bd3s4S95kkkr0X1TSxBhgdwuqkSQyxZmlYXw1rUfSgtjeYO/VD/2Hc5D/E00F/2k2OLs0B16rNcVJuKO6qxYRbRsJP3lOtHX30HVBd8bVzMYFyhrBjlSFQ6LdovTDLQfAYjWJtQaZEdofAM7zibhA,iv:Xo19qfv3rwDNwRv8HJlImpqEXFLDavupCzQo0YzINd4=,tag:WZzkOeMwPgrSdp7OhflvEA==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-deploy-key.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/github-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBMMmp0aGF4ZFJoWGRBOGIw
      cWtORzVvLzQxWE9RZE1ISlJpekhSNGNhWWdZCndPbHluY2dLcFUxT1NnNEtTYndy
      THBheDdPdEQ2NTNTejhTdUEyZFd0cUUKLS0tIE9GRlFvUXMvRFoxZXNmWTNvck51
      akdYWHhoZEVRdmFNS3pjR2RjazNGTFUKehhTqEX/OCVj0YLpD2urQ7ZkGibtYm1v
      +HyGPXj1ZDWC2g9PBMKsx4b5OM25AFzcxI0m7eLuKNdePWI0IZN6kg==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1s3dkl4qn66zsj38zl4nkjdw8c6j4d9v8ddd9vwajcfjrz04s2fgsgg3lxy
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-07-12T06:14:30Z"
  mac: ENC[AES256_GCM,data:7+ZYPHiZ+XKtmL9YCnFvziAv5tgh2eqyQ03AlqNQx+QGtME061lVOX3yRMRj2K2tJMc2cGSAJMuAEegLIuukY7JNRtIzpzPSRd1u4AefP4wy9nMFHsuKEosvfTA7al4JH1oUPMOZDuVRYO9zQpd0FcIhpRxBclBWHXqUJUQeLAk=,iv:dKSNDw0ruOchp45pntPJyhvFUWukJ2LqNBJMZ5ehHMI=,tag:qmguI3idFMmnYUe0k0dJKA==,type:str]
  pgp: []
  version: 3.9.0
stringData:
  identity: ENC[AES256_GCM,data:pFY3unndxEO3wN+KQCaY7MihgdGGnnVPl6Q3G2MTqBnb2ykJI4az3ccontK4J/cN5a1NNi2r3FZZfATYbIY6ND2MKCIrteLBxBcnIQa0R3OHthk2kvGfM68W5cHJDWd3N0UBzNbJE69spDyLGV40KfTID0P1DsSAO8bfE/zuHYDCN1crap+TWCSQ9ePgFmQcXu97E6DlK3DeNSqOMNTnLjOdnxLmZfrBJhR0Tazsj8hW2tguMVbItpuJOA6Nm52NyWbsUT/epT5NOz+xVQQKk9k3h7vdNwD/eRSr6jdrfKpcHf0bDwGRdVlDTZMhGWcLwx3EnmxKNWM8mbNyE5MkTC1CJQOYUNPvy7yTfSAxe+gTbrT4EvMqK8O6yKRcZp5VGHYhIuJtfFQFBY8VRxUlApEJ/CJz79++ooG8HjTlpS1NLblEatnf3gFTukeB1tqW7NW/IHLG07swwWwSHIe42OPqm1gKujBCzoojJgqdokNbRGoVeArpDnABhQQqhZcfb20WWuxjmb1cNTl+H3okzbggA9PXf2Tbppbccme84oPPd4q84ivrCy0++bGwT5hxYUKuOAPLUEMn1eHmQRJ7RedtpwzsBMMiVXJkOFVcs1RKTT8IfFIqMuk5Qt/ErERRqkeKiVvpIal6hdvhQQfaIv1f+V9x0hvJZARcxfQGRsvnS61BZmOCKmajHNiI2NHpdA1MEjOcgDyblVNwrqAChvzkV8Cm42i4/IocX+rUdt8Mbdt/NDjfnb3KsEwLWMK8kaWZin7dHca3YNfeKs6bEXzRGwo+ZNpLHG9vlWDWq9BaSl8NRp7h26JCxzErg0le/o3ACQjpRo1hfcIw85Y1LBxIx8GN/1yjK/9TYP8UUvdoGriNZIE+p6j56+MwNJpRZoT44Zk/TYGGDCnd9eZFB3RJ0jFOn1L+Ysf4NLZwcio7d5uJZFHIUWYB1ZTiVtwFovranEZXmeGh6BPktNB44Q==,iv:LdvBXNJIMDwlCVS4b2e+TnrGD9rMB23/kbKSW1QFOec=,tag:xnwD+/8OgIIhXv8G6bMMRA==,type:str]
  known_hosts: ENC[AES256_GCM,data:Wl7v48w27hZaDCCL529Ap2FlNyWChwwk34rc8NjJmyLitaxgs4KUdvGOYIlln9Nh8Qn+3X0oL6cRZRT2hKPCbf1gM452AMcdkV6BlYlsAZ+ttPKgEMHoH3kCKMqjYUoEvyEfYe/eMBK7DQ9UCwdVo77Ez7TjqTb/H7Y71rT5U/WHiCvu4s94JWiZdyiqnQYw/pZ2a8BZmYTDQFdoZoEY9JUR/Y3iSBvkb4Zoh+WfYED0hK5IViD+OIdSdJa1gVns1y3BFyLh5G132wJJiOIBcnkWQiOaEJ5B4lpN2f1b3GzmnyDw9oGXsmWonD3e+ETONpp8vAZ5hhEk2sdOMF1OD7Rnp2+2CfuX7X8WjlTKAnRJ6HzpMJjtknFm25Lt4hBRfguyZ0faVlSjRYkW68//eSm+NQ8/h0s8szcAm6166dPrdjGCknlOMDqtKHgzL0UdBLwBC4qZXEfkchLD+IzCjQFAwQnebk5NRt02vlMQIT58dHfJfJLAYXaHbVMcdyac7EV1ZF9x2pw+TEhBrRIgWmSBtdsmKs9T5UR90TfmWULKwgUbaWlCIXkqSwovPsXasmtyvh+RQy48/hDBLMSIX5mi/5/7PRnxQ7/xUzg+tICVxlQzdOlODLc+LnrJVo1xoT60utZNi5hDrkxCCw5yID0tRakaWUJFUrk3JDwLpNe9qQrnOS5/oMtYF+bTfFBT+2Zp+aMFjpzn15hYfBedEBNuT8TqAaV7QMiNRdEGfRpNmdHr2Eb4Totx57PTrkAZU1DF4RlG0UF231EQzabuv+IpKarICAhfmgg/Do0m/SCuIWFbf4kMhiOSphfAtapEn4AgaIvRIyx5Ouylr8fsu0SiDQt2rXRzxQTeQwQhU5Wl7CROcrXCFcpziISIFlzrEFy6XzbbB/z1Be0NhlXDxkJqegbzmeRsuMsGRqhx54QUyaeGELoVNVgw0ZOHCkUbKpF9Mhz/Tvl2gqK2qjLVLDky6naTt8W5lqnEDx1w1b8M7v7y+Rkm06SOABIcuwuFouB9+L0AVFHCBu2wERE7YFUy2OAak020w+mcZw+yngBn5uKQo5ZbYSmmLQyx+rG56juXiXURKT70wZTW,iv:NLhY8XzGt1NTxk5kUklwfzW1UfKSohqnJWCPmFUj18E=,tag:J35HcRLS/vWDW5Os32sUwQ==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-deploy-key.sops1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/github-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSB6b29yQXlVOVRDamdtdFRG
      cnVuUXhoSC9yM3ZiT01HTjVpK0ZCczhZQUZRCmJSRnNoQ0l3K3ZxRFhEZkJqM2N5
      d2FHSXEzeFBFMkRTTXU0ZnJrUmxMTkEKLS0tIHFibE4xWnJXNXE5MGRxaVRVc0g5
      bVViKytvMnhGVmFiamxHcy9aUkwwUmMKdBt3+W0POORRYSUz5bSTv5VbDjBaRuDE
      Kyzvp8hqQKNzWJ37N/flVKxjTsDoDxEHpCopGFpxEAreSAvUymmv0Q==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1hc5sdag42jn8z9gw87k67rrnz4qx7m6g7qnjmy9vefd6dxw2xc2q8jnjma
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-03-14T10:29:51Z"
  mac: ENC[AES256_GCM,data:VRZefvPFGGrsH08sLBuEM2I6E6+xBXPOGCL+Vs2o5P4c6ZnUVsYZ11yH+VLH1/+pcRvxPKX7v+uKG/EDXEDRKvKXpNjaWCLJuY90fejR59AoNQLx0rDtrkbVenhyfTw/gq3QeLGMr6gos7BFa3mUudLFabCRy/yqC/W8tIec/TU=,iv:m9YliPx4o//AK9ZcEuw9ydopvOaBYc+xu9KKK9wbwyI=,tag:juflYJTDmddGDKaZgrcFyQ==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  identity: ENC[AES256_GCM,data:GquRxvOcE+37ibWOvzKER7XyIiOPgYSr5YHAQa5h3KxIqIyVz4R2lFHOw60+o+maltTVor8eJpJ0V3W/bvaa8ZvmvIJB8Ol5nnWHDO2O12LwLqogTbxKu1DsUKhiUeasTP4gKfPUEtWq00EfxGro7SFOBbbv+OHvCfn0FvYiFjZGi4fYKIwB6ppITizXkHVpereMneC7bQACekPGlV76TwXCWsH7+TTohWtPqBNy0tgrUiqhXtEVf2kuCZlC1N9DmNVPFDSo/qfmPH9mckGgGWZbBY4+Dmh71vwBFieS0wy7W1ZWtpacSW3fNfEjaG+Q+UyV9su/kqPcKg6G+YKp3njGGBnT9x4kYrwx2WeqLYHoLdI2zPzmxszuIUrZ02iXEROmc7CWYFGb6sEl1U0sQJwPmwsmZt8gKViMzpbFEx9n8oMKXBFqQI0KGXZPPYExt3oWZtjxotaCvKLMldLfxioOQ3mUvN69n8qae0+eNVTB/VRmf7LYQzl5ULsGnc6G21h0pWCjfbiEeCeu62AGB+CvQo9bAZ32egTVHDgLxTlzrPgQzf5hb6sGUDOgAIAGgEndZipbRJ3fWJTNdW61P4bMfamqJN2bKqs+R9x7Gn66h29yySTdy9CDRRspBQ4lVIhfml6x2dYw15FfJw3gFtR5SG8OSOQFeR2x7D7AEuDgqIPCTGArhbBle6xc47U8X46p0m9xq0gTRPoKViL6xrS18jNJ3wySKDVUkWRo9RzePNm/UH3Ubz4PqqxrjiKEI/7i4QCNBMiOo2mEc0rHc7chdU3ujJP6PK5bFUmspPJTZxRm8sJuPLI50HFVjBp+aL12Zy+EClAa8N8R4IYtFBlO/ZcvP4e86MeoclDCqSmumJbkhvJqcuost+qD8vE7vFcA62Yxv/8ZZg4cGNiwWTvTfXfTwzWQyWDVcllo2iJi6mRKRtLRP2vYQbhUkZ1jiHLDFoki44QGil/FyrB8fg==,iv:2Vr8trS7VEGmFGLK+ZZSE0UARQ+w27ZTk1CUjgLoE9Y=,tag:+eFPTvUHoUy3ejewo+Gtaw==,type:str]
  known_hosts: ENC[AES256_GCM,data:ITvkwrJ6ox3REsLb6Tk6rJ40aLxzKN22csBUQ5uMxOPmOI3RX2Y0/ja2dFvq6cguksrz6kuxjPx3vwD8vYOFLgJxVlR5uawNxFbRh57tDxaVf1SLLu+YL76BTsCBU8qiHXrghltpbxugb3AUgP3UjIPtrWpUliblhuDYvsw1ovD3mV9l/CKq8CobgPzE1y+OLiBjsbgi/YhcMObcEqn1VsyRHVfcvh0mQ5R2oWmW5eyZB337vzbNYT0VX7Ky3OYnyu4XcraE8v6AFKggEZruYG0czHLySNlNcptFdsG47icHGFcMHP5JqwC2edb9mM5IQRNU/yKO+cG3ifoKpbZg3seyiD7u2nWc9Zb+r+pquhbeQb+Oly6vepRR/Z4JDbJEGZapFZzYuw5//djhaSdAvZlxfBSh3SceZlOhJe+ga6WoSniJzKGL26T9K8bJ8e00Mguoh9JbCwSm0sRm93Cu0Dys0hp1N6qNiQX6DPsU5wn0h5mcFMZy45BIU7aOEZqLkwoWZ2by68gAbuO7bTwJwqF7QbaiEfPhGwNZQPxXZsMd1T81VABZCigEk87WRdYhQNqdSRhqqwQOyjKz+5sNVxQ89Sx86lIe18dkQu5h0gRLHNP9Zx3v77FxoWaUvjsQxAujEWNMlyrwM8Bd1Jey9pSHUtmcw8PZReJncf5qdheAtWmw/4lBhBHti4iOOQMPb1JFMzKR5KMaxxwGayGMBSu+rH0foHrgy5pDfLOucxH/QNxgmmoJQekzpHOeccKto09SzCAlDzLam3S6INFtzbTwnbhCm2lgdFbJzggsBpobBl2HMqtJKk+t6uujFbwYN68p+RMAtFJook84h3nkqgRX2O96peI5ULZq5I3rS2boFd0iZx1XgfOmNkGOcMxVvjhYeGCfklBN7WsKTVVF6CEnGaEECLuxPEHO8v/gER4gxctyA6/+XUAOMjpY1R/Px6YN19ae0q1sjSCqWGyj3B+ME0XlvQi0vJMZxeqi9N/Gk3Cg0XJ64Is7WBDHCKaRDTXksDdCS5WuO+12lNNJ+0ZxeJwO5SaF7+D7s8sychvRvnQ8I/jmU/Vtf5jGpw1P7xQ4PiNNhFghkWth,iv:xsTNPW4YY6VHAnDGQLlDoZvxNArsGK/PypO2yhurYB4=,tag:A6PAIXCkE5DCJwJkeldhIA==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-deploy-key.sops2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/github-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBhU0dGdUE5b2l3ZXlQUC9N
      NGhlYzV1a0tzZXM3aEYrdU9hQzZCRVFHMnpBCmhUU2tSWVdWWHlDdmp6NjU2elRK
      SXBQdkV2a25RajJXU2pDWkRPTlJ3QW8KLS0tIEJEYm52MWhSZlRjSjhUdHc3cWpG
      Uzkyd1RuY1hNUGMrRUV1MDYrQXhLQ3cKPo4fcEdmsuXf9bU0c0JscC7zssRMneYw
      e7C1XtQwaf5TKJr1bywU1a/M/WFmBTOXE5jBR4RYsjoc+AdX7PdFAw==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1nkvss2a8xvmjauvr5mxzm233hyh2mk2fg4s6pt0t0kcn03dv34wqtgymg8
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSB6eWRXeVRjM0k1dnpYenZi
      ZFg5aERUc2RrMUhZUjY1ZVlQeHhzWmtGYmtvCmMxM2Ixa1lIZnZ4NlE3QUNvRmZs
      T3V0cUFKcmJxUXhZbjVIMnF3UVR6bEkKLS0tIHdjdGZwejlLNmxSQ3ppdVp3QndP
      QmQ0cWtzUHZSVE5xak91R20rSkFmclkKPZMf4QhC2yRHcjZ+RLCNILWuqe1x3kzG
      u5pUravwkV9SiHSayVZbdJlzRYMLv05L3+eEjto9eEOJtKm611Xu0Q==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1wxwqdrmkwkzsxajp58g0cgeextgf4wq287fv82pptv9yghkfgcqql66zhj
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-10-24T10:58:47Z"
  mac: ENC[AES256_GCM,data:yAB00zb6rFGnatc+/K6Y/vy8ukNVgiK7Z7LFIKamOf97QtrhRdljnPCdtx1kAm1z6/Jxs1HQR6yha8ehJCxqeGo6iGCmhaAPPVgH/TxvAyIz7PIjnx0LRcva2wDXQ5+orHxklDsjXS1SM9L+8oG/vlS9Ls/+SS8OOPs0mmzYjck=,iv:OKqPrQz1KaPZMKGPAgzZpgBBeM7W1gsJbC00kZAePaM=,tag:SDQfn1sIdGjBXUXxhANlmg==,type:str]
  pgp: []
  version: 3.9.1
stringData:
  identity: ENC[AES256_GCM,data:IdcylpYFLEx6gzJYOXUX2PdUrhb75KqaTkUyKkZVwwHPdBDphMXatuVkL6LLyJKXgRGN5BwAn/v+3tNVCQpTBlX+2TJMTbPfnrICQ6IuXFCnADvlGBWxqm7PgrwT9RFzwDVEjhDMx8HvSFCDnASpfP3CqPzT5QjLaMhBA2e1/dQay0TscN2TVXzbHLV8qIoayM6vtQhshNmwY9TJEW1Vb51Jg9HbPSE5xov2brBFDQYZCSERW9ov2FI/jisTHaxTvsE9Ckf/12obE01m6CGMTv+vtMhHk26tk4fd2FTbTWC4PPQ4jQ25KararNe6STlbWV5AzeTDWXtF3b8SgY053wQmJjCMW8Kc8w8A2SqBQBYNs0ZiR+CsKIpDLhUNdijOvmLwVpf/bO3QHo39vX0JnGLQNH+sP/raVpXfMNGKusETYYe7PukP/W9Lbk8O9a5tls8ev8GaZMBp1ZGYxAnexeDd9DR3Pa6/jctCW2a4IXBJqOSaznpsdha67JmI9inw1T5ziSylOXwVKn6CacCO1/gQhgycVmZfgjGV,iv:iNb3RiKwQNtmZaTydA9Hwle42OMkHA8/17Qn6R1B4ik=,tag:mQBxGU+FHxcLzoyyuz/dIw==,type:str]
  known_hosts: ENC[AES256_GCM,data:Gg9sIatOPh97GqutZ9B078KsHWgsdgOighWUeEFOCaHOnOTkh+iLd9iluiysoWqRCaMBZ2o3C/dYbm+ffMi4VxsKohEpzMGaktf2pQ8wJOABc6Wd3xMfziRPgkgiv+WC8FwN74HvpzXGdnpWLWnlCmEQxvYbHRijmaLzkHddE/Rn81+cqtOrWq75gAVTH10rhad/I+3pTM4hsndhdEXErT4DUYz5kcXJRQF0CC4VhQueDAmDlseyTQRo8zmAWXoXlfd3NbdmYhv1S1Jw1eIXLyicR+6IoJ9QJ6gaUtaJjdKKzqZXHIIKzCoWrXi7RP9QN75dM1jE6eJ42DAIUpV9JrRScQTiQ897L1+wuZ3AlyfAlSZ4L6BroDLxpM91z1ZpmTbUFR9x4Qshpc7SS50z0gwdeEWIh+b5eNPqmcJ+Ho8n83TsLKWMNcfQcgskC9hCnmCAtT7Zd4jUXFsonIEFtQi9u8lJDCoG8nhltJOZwL4F4I9qlj4Ue46EY7dLs7uP9ZaKifHqgYuT/6Sop0TppsgUn+7vbMlyfW8eXmZ+l8Law6EbJSD8A/kImaNdLG0ae6VpJuNmax398JnoU46GlAcd7OMgVJhKMoPeiFH1qNVWvoanmSWXYAN0dA6YLr6+v3BbnTVProYNMmwTD8NrNloU5VG5UoAVgvApX+733QauWvAnP26/tINvemdlLo36aIhHWnXbMOrb9pGvWLX9kOC03L3jMdPAu5YUp0+lED1Pwax9cD/WjuMpGxhUkrDESaOzQOOwYkyLcxbzViCU1t2rnrqF/ugOTwz5dogBGRZJw3ICVJV7lDGfRjSithmJfLvUW4a72AT5hOvwYMEDSr6wZf0iO9VM+R9yK7G1EIUx6mo/ThZYBSw+bx2xeuMfYsLl5jDTVSb7Nm2sFeH4BeJWT4U9Z5NTWRUYvVQfn1VAZtj2JBx0+OP0wPxJnDJQ1/fE2ss5b/kF0fSzmXZ0Xp/jqXRCsOPFU/pugZyftXdXsjJLDMryH91uwWkLyl2plM5elKVFqZ4klhhuSHbVwJA+8xtfhKQiVGKRqCs90DjF6PkUxVZDayvyJ59eV54jLg1rh8bMgxBZ18Wo,iv:m5OkxMR9uYjcavgJ3u81nqr2t42hdevS6Avrvm1i8Ao=,tag:jhqYJLmFUMffbxHYm/7ZtA==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-deploy-key.sops3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/github-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBxaExJb3o2aHRiSndMRXFv
      Z1ZsUDlHWnhpeEFzd0JYQWtab0JVbElhZmc0CnNEYitMTHdxSWZoYWdkOVZNWFR6
      MStzS0t6aVhpZlpSWk5qVUNja1VwWEEKLS0tIGJJa2Nza3daN1k2WGRXS0JRUzFN
      MElhVTJUdndSQVBJVVlYeVdXaW0zQlkK4hwjN+H4UvuZeG36+v/HNLOCfIKTnAqF
      PNRW03uhN2j9Q9Pjzut/wSOVC/GCeGKVFuuKYxAZ2My9zym8AlS1Og==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1lsg2agmek2496dy54f0clkk4k2d0sykfv5lt55hrsa8jhq3tgf2qe6dl2c
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-03-09T02:37:01Z"
  mac: ENC[AES256_GCM,data:TM6H64FgjlVuYs8czIQb+mt38XFBVDd/QODNJtILfpRuxOI2rRWLNWJLLDW8hsLadZSB/mpppFSLZb0gSBMJLURwz5acZCWzPFFiCPXf/znZFKdQCszgjDi3b/uY+30MDYprY6sstMHVcCSM8icd+vbIurhNGso+O83L0SSo7ko=,iv:WB0RE/dzDunrdhpYpz4yq6oYjAz3Sx9XrN86e072mU8=,tag:NdOe5GvdcUj5/eUBgjYF8g==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  identity: ENC[AES256_GCM,data:alI9gTExXEt83O7QwoYODsHsCm/CheHWhphplDCo4f91carOR/F7GlSOaslh7+UMj03c8mWOrLHnEKHFcQSmmW9p83+X9Tk1F9UW++J7+6OggvV+HKkxCbgxsKxtd/uGgZjgzIFpjawheyTHPRooZ+JDRZIBf+yur6Jbbl4K/cSAWJj+/KEIojYw25kURe4klGlLcrRoZAVnSbTR8tVvWJdN63RSVxadlFW5P+4N0GKNUqv6uouZnwYzAYsHXHgy6xIHkeydLG70DLCK4CzH+d8Pu60gZqtaZ7MzR9gIsTpdcEPnSyfuH/lRmDPaUVMRK5YbsW4xzZxWRyxw2mHMjhYAXuWpZBWCkMJ8F6pwHzcyxIXoC1WmCH9fTuhifjidZmCKELsm2SbshNxSHkO4z3JWyYlUGBuiAVh8DHCpxM3HKhMrXpDkpNzydBClZFN7TU7LLXAMYIPwNnH8ZjSDKjzF33qPguleA2F6jgE94PqQb9AzVWnDCQ+vHU4ZStcE53gXBBhW3Kz5EId5XzFBnP53dnWvudqOJ/zlJ92n+THZielsOxz4fb1UyAv7XmhaUmn+qxVNaRGhiqHyt1DLV91169wKVphPMiP0hqrMpZqGsIUiKxvLv+0VW6pUcWQ3TiwAVpJfzE3kMpbqIQc4LyWOfJYqiGnfQdu1XgvH26cj9vYw/WdpRVpWhOHFfY8TYL/3wjj4OeJlH4oXQS/CmeW1i1YDIH8Sve2IWznb7AUq/76eZcqH6S0kybVCxIrZ6ngaoQLTos470tVNdR3uAujbqjyXU00kQnNrxs+rg5nMBqGum6JVLn/Qy1854ekPI7QunLw58OSJNV6WB6QJ+bGm61W1yfO/69bGYo71OBZ8+mw96WMZuCfNe/RCiomsg5YDvejQViq2ckucIit6QukKav8Qty9EYZFA2hgHca5hrusgl/2jy0Mzmq/jMEfovIzfs1fhIQEHJZG/HU1jLw==,iv:Gm8X67yClj+x0oU5OkmBimZXgk4bsCb7X12G0jTqANY=,tag:nrqCkhcbp+DkOQ/hvnqXEg==,type:str]
  known_hosts: ENC[AES256_GCM,data:PKiZS21vwnKB4jVXHjRwl6RCDZ2kiuCwCFaHuBuYyqyaF+iCxXyFUy+N+rXxxrEVbjEI50EwiwciRFWcmyOHI+3mNcZotEMzY0O9Wb19/KWEBemiAOJFY0ex8bhQvOt7+LUagpsBtHf+/HbWgSik4Y8ufbrzvL5rMJMaELd/98QnHVQhoj0AmZFuO6b4pnZouZK3vPvpRuV/NS9hSmSIIXYQqNkUEzhbuo8uOG0+ilv2O2k7+kAa23KmNg80RsqQOIrUtt1wZm+DMFBbC7fxNc3SFolPpv8OP/Qbgx3OWtkmL8wDwqWVh3cyMJZTVzqGnzZhQDF20WgEfcNO6EjKnEsd3VTs6T2bEnHrt5xGEbI6K72L+vzjx9f31uBqVLuCR21VWUiVyIRUG30qamzbU4y37Pmh6K+AbRMWbasj9rA38EV8XE4DFDs/MvXr9T4Cnx+IVZ9veDvxOuWYrkcwTQ+N4R2COE2oawRMbHRvixZvM6KHHhkwwMYpHpCGWigrAuOmhDIwcdS9+f8TGnsg6b8y4YDk4xb3L1GC3K0hWg8P4wTfgBKLI+qwEFexpapoFnFqG40u2PH7Pc59uABW26cr+Q4nt3eHkwCP5F5WlMV5iOW3anvKCoOqTbZdngME86279+/5BeBA5PSah8XTh1Dy40ZHhajIpza5uRBArKUA96iks40V8rabb/WZH+Ds/BsAF79p6z7W7z3DGucU8Z68z7+vdDf07zNs8oWyqlM7Na64FckXisvpBwtypySxIY22MMNieZUMiwsHHn4EHazLcjO0i9OWO4ue0dDDm4x0/yPUR10/tFFM83l8s1ZFzWnJDJnn+1YUOfKqSHP3CM4V3qlWLKsVX84iiDMS7rZcWYXC9kigQjjSgGCqnuc8H/e4AYuTc1uFeN+1m3sy+1IQzZoY61gf6Vt5Ioev4oAHlGQCLpxaJItIM5XHKgCihhN44UV9HAQtSFNGomnB8dVVY0Crq7bddWjtyAcv1y1yMR/NN6GbtT+xmCCACQnPanxfhBvpeZ3SpNrAyH0z9iHcjuKKgGwXUAgWQLzDK80vvPPQC1lKYe4OVi5+OE1FNL+/qHQQ+sUu6X7i,iv:JHFj9XniRwFzm59ZPeLON9FRAcqQTz4SwRXGEMzEr/8=,tag:TFn40Mc1c3gSufWINNkbGw==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-deploy-key.sops4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/github-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA3RXdDQmZCdHFWbkdBNzZ5
      S2VtcldpUVRER3VZTlEwc2NLdEJVRHIwQzBnCmZYREIrQmZkL0Y2KzBodmJFK1Mr
      R2MreDU1UVAxOGE3QjJtRmR6TmZ1SGsKLS0tIEplZnNTV09mVE5QeDJtc0taYlA2
      ZFlBbFdiSEVUcDJtSW9RQ0RBTEZYUGMKicxVkds5N7EokIRwAVD7Lzq8nvYW83Ma
      wVCnLByfhnIoPwaA347ZEVd20/0sDBxJtwTzGAG2NVNkfDVeAsXzdw==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-05-13T22:24:11Z"
  mac: ENC[AES256_GCM,data:5aKyN4onWToCv/+GuTGFyJImNHsZxhXu28xPwYD63CgUCf+zWANMbxQri6y2V2yndGjJKreCc4JhQjA521hmkESJdM4+rhNDJTO2MxylCIv3SKVqek4N5Hl61KOBqUi72n7SIfLaK4A9y8Jmncl98+TD3AQjFQFDqAWqPn7q6WE=,iv:U+TOXAZ59wQ0Qt2zk4h7smFyjBbfWzRFxv4OnNgS+mQ=,tag:5JYS9W04p1HSJZePO/cY4w==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  identity: ENC[AES256_GCM,data:IPOszEiyZFM4uYBZtW2oJAbmHVtp2rtlGIvVO8oZTMW2y/+dkkx5hu7FuR6LLKlBRSBXE5EEnPW5TuO+SbXJ9XEeSYyQ8eaLJAikHch/EY2XksGPcuJUpsfmk0vyRjBwbxUD0jqZZfj9kIiRDfMJk630ZQQo6lgnFIPNNZinJzYpFoIe6JJcmKnk75lLHjSDPvxiji8sdbVs4lI/C0Ee0Ul0T3H0xWoDe+hFfXiPEtOaAJ6Fg8bw40MWUiVmM75gxoJAuxxPZQScW1+Q93wx+rp/swxKhAE35gfRPxBwM9u+xR1rgTx88xsVzgdWMlTKVjNoY/C8k5Y7o0PeP7SnBUX9rh9/b3O2E1C/qhB0ctLMLwy/5smTFU+vUiJ1Bc2miMAShyOSpbSb7ONy5p5r2yLAtjRMG34tjHOaddJfdHjvrMC++jiVS6+67auxQBbx+2Q9HstvJ1CJlB1irbJy/DI7CWC6vphQbO77iAXlmlBuH+kj/NxL5kfLUz+BYdfAzXZGiiV/c6i6DWxQ9lwxG+4+6G9DSUP7J5Wx5J5ijsMpNzRwdVdTlaEf0tMj5wrQ8kz0lfj+yGxDH/kP/B5/VsHVTIwA8nOB7pjwLSA+Oy8pc/t53tD8WIUpKg9LYf4SeD5awiGDfiGmGhCmMAUwMJWFdfb0rteMflX52ArT75sa0rNp9/V7XZeYXowkevm30PBluHnQ36+OxysrwdIs6Un5EZQwPics0ePfx1CPg7G4Me3SZWjZgiMu1fHReBU0dddY8DQCSjeXkYGEJPhI/BAok2LtXG0SKFWOMQb+dgpQ6l5Fz3ojLXG+cHl1iagJY2QWVI3azy9HHY+Qxehytfk9eV5odARHVosjqgakEBP2YeLVgzhlbDA7tGhgCf5+ICT+xsIrxhRoXPMTe9KJorOGSoPxZcygDGBqFRxj19uHVKHi0FhzKJofTMrOmoe0ySw3zCilX3Y3z1klYO6F6w==,iv:td7IHrvBExRXVzMbHiWYRlVFfYvUmNqU2n5T6VRBIrw=,tag:bKxWLZ9yOBzShDzq2zbGdA==,type:str]
  known_hosts: ENC[AES256_GCM,data:mNJyFG0HEaelELoyPYbZgOZrYEhNR5U8Xwp8+ynjVt+A/+BdRa+T5X8ZHj7A9UrcvHAlUGVGM3shA17znHBg5SZwSiHuOwFCssg/eVmendqHvGdGtuVl+Wp93UUZznqsNv5Npkpn3hyTTwqkAaB7yWK4BWCCDIar9XL9mAUWwYAkp2x1wrkAEroqbN4lIlz+fDEpYRgbzKWWQrFelx9RxQn8snGxr69arSsnX3AqE0c+IVjC16FXA8Hp9wO2U5wZbLIo6/yAJX8FHAmrdMY5kngWYSBEvLXdo0H0EHRpNlvRq5beJ9c0rPO1/RIeVT72m6lAkXfwn9WnxPrlpj4Q8WG/VyVzDJMHYMgaHRBr4kcEi2g9zZoorwPkymGE6EcsC5il7qbWGgTE+iOvZXhFTbX/P7i33Rj/pUqLzKs2QcJIVo9Dqr+lY8fZCUpoxHCpagX9wgJOrrC4WSR4KWDHetFKkL8CQCCoS7bM/c2q1nuWiF9XvnOmDzxE1myvnl2Iy967y5AnRH+nSzKBBWLKPFPcq+UVz0TrkYgpgBazxzXC4TO+6lsYSkwuvzf05yLYIhvJpK2QbF8xhqabRlJdvY/3oj1XIl0VZfjefYrbp5V47DEbVp1hG2XtMme+m8l3ARwf3RHvr+wXPPzQCiFrLrIYa8S3/OUyEt4Za0QILfdcCH3o7M8thoc94HrsGmSVLucANKoj+zWgxyXgYNAsymk2UnNLre0u8LqE4TO09CTvqa4B33Uwc9CyyK/mgqq70MLNity+ZYOYvqfWPUzHzNJVtQnTSH2FZDWG0hmKN6GY+ziuhV48QXpU4AfwppN32ObgcShhw5S9t2133KCPEZ84jg2hZ6m1vWupq2y8bkVbQXZv7z51CI/77xSdKdi6LzMY8t9N+/RNIXfN41WtT3iriejprCzSPcEJB943rOY4erETq/R7cEOaaaLBtahAUSsiVrVczQE2L5KNcuXYBKqPZJeLZLDi6onNkosmT70kmsDILRevG3d4XVRHVNZt5Eev6Plq5o2MSwm90Hctoqbjoh/nwzlwWYPYE7Cbc2mPq76P3jTWNkGOrhVFb2i1YZVHBAE58p+UWzn9,iv:KrEmZe/zmIEW7eyIr7epo2/1mcPH1mqs6SzDRMxZR2s=,tag:72OW4nX04MsnezUW7BEPkQ==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-deploy-key.sops5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/github-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBsUmcrZXpGVzlSODJaWjdv
      V1RRZWFMbG0vUzZOQ0d3WjR0RW1YNnpLVmhRCkpDVnNhOXZORE5yTS8rdjNSdG5V
      M1dwTHN4eTVIdTFLZHVQbmZJSkF4eEkKLS0tIHI5ZVRhZ0xzcjNRWFR1SmhScmQz
      R0czV0RxVDhncFV1WWNLMmZqR05zdVEKtSko++GrmUAIkRQ9l56cpK0CexVAFhPc
      IUuGYe49DCv8hWK8+KBrcUnhYGLqECn9d7ckLNEhUjjuJVLIpnlC+A==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1nzr5yww67m24y5ecsrz5wte3whjtjqfj0dgfzjtq996k3kvdav3qrlruy3
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-04-19T02:29:52Z"
  mac: ENC[AES256_GCM,data:43xGZF1/8zdeDXsVSDI2m2joqwPDuuiSYgxq91R6dq28xj5n4v/4+PCUaxtlrk9fQNzP8vQwUPV2FejT8utpa7exYNE2Po6UFh/AMyNAiijAA7HEsoyqqneoJQ/G2IePaeV80Y4OL1eD3mRIypVgzE88VF8JmXgiHB5QnS0AYCE=,iv:mztVuFBbAV1rknaL7l0th26H6vzIPKv8hmNHMEA0OqA=,tag:fxgBNykGP2KJZre+zNDGag==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  identity: ENC[AES256_GCM,data:EoTfMFjHYrL+czRA5mairZ7rej9nEsX4nrZ4DBfGge/QZF0Q0itsxH3Y1aPQK49Gaj0Jp9TdC9joFYvRTZvh9/CHiT/UnywxEl+vFSiqq2Vs/a2iSxGuF+7xEWYpxFlNTOttyYs0onSESoaYPXkSnrHkyr6IB+RlnU1E6U8BnTLHonyT5bRhIuhqGh2WTAAXSQS77NgxyzX64WkU3zY2lciEwd+E27LucX/9mchQxVe61JSm0HucFyKCPnLrXrrfyAQ9WCHEkYMggK+J73FaQWObxu52VzkkBPi2hYWd8dt0KzFfpNOtUqqcIKiYOCGL0E0FwyKRx8kWeMdWiACslozJxfX45BBDYyRAr17Ct9bLobrf21HvjpqhBTs3OqKs53ax0m/RvJHLCsEdg4rkowOZcAcUJaLRhdAgx/HASNixESvIRvYr1Z1MsmgU5M41JWA2MbKqBS6Yj9l5CycicBzzNMNCimtAc2EdaqrcGs/Kkccuwn95IlY/PWGsHO94GVaGXuKYV0u8/fiFalz2e6GyVYGgiiwlTP4uX5ox10Pad9fZJafhLzK+YKTwqhfTcgjZ7WEnb5goddLBsnk8iPWrs8Njy8wqz21qp+4RqM1xxKnF5re9RdAT8sZhbun01HWGJK4KSsL35Wn4xIqKYkt3AsP+SnTRkKfj7PKW0cNN9kiGhOzTDFh7vEE5TSnF+aNZXh8fpMZ+nQy2RsTsFNrRaXiL0fqv4IpOupA/KK6lS+1oiXXcMWU0wUoOAqVTZDVilRgZyE06MLHsqU/tcSVE0MzyGk9GVG6q7ZrTUNaLH7wh0zCY7o4Hdv1BKcoK+lA2kx7B76/aDl/UsPRno9SzMfT7YZJzdmendYjMDDcMSkR6C9c2kwn3HVvGalWOZiAqI6w0d5vg+qcGlPLJoxaF3BwrboHyRPgZHWMXm3EAqFq5djqkL+pc7xmkXJluYuJhTPrn+NWDekkv20v/dw==,iv:+cfqQwARNxYPaUTIavVW7QrXghuhIr+oJTV9PZzCvdU=,tag:4hMwMwgkRAsiEWHXm+Oq7w==,type:str]
  known_hosts: ENC[AES256_GCM,data:HL5D/cpClBzYiOvYOTTpShWsObJUKXjCbkRzSAGnyZSDhZ4SeXtITXsBDrKdr+WhXGiPU9ytaaQTZm4qnPvF58m0a40SyQQRlnEjk/2pER4jeN7amJJSj3wz3IqSZSVMEPMsHSA/wj1OpXJQiSiPNRKi+XQvFT0/UBldXf065w2qBH8VaEeWAA440t7NrcKzkZlaNbQRM1bhYlmm8+F75VG3cmXSE/T0GyTuuicfJdfXc0qzJ3Dc5Rdk9SpCwc+LXGosJPvv3XGLW41q/4eWWWKwN1iZPKKOcZ7MhbXkkCGJ6pV6PiqAi9VD5k/1jI8VVNmM04TDdJZ6SyXUJS/IWfEOVZ0psdZlmjf8b4Ffk8ufDjmD2Wn4EhF7s1VBq0dg9w9QGcO6q9pKpL81MmXllZrvxNHqbr6DVZoVeUMFhhm8vb4eeOKvQiHKf1vNU20tuBLqQ/NNFFasiek2gm6q6dg6eLwRb++vADW9LqBPEhsQMOlYmtWapnXWzWfpot6cce1woozoYvBQa47VyV8El5+UsNUGBp3ApTdPyKyS5eLOPvY/H4J83snaQ7CJ5659oevqCHSKWE6Mv+gT9BXCUjsFMGH5/yeoe7Jg5A6VoNMLPi/gz0+pU7u5NGVxibt8TTWMQQgd7PSzS0NF3+9lmXAYcUK/p4+r/LCA7foZpNICpeeKCls+1hQJcvEqLdV16EhEVkfbrMLlIlKm30xGkvoc3XoMVzx9cYkO0rj3ot1wAX9+git0WOq/WwIs4UbiSRTUMiXll4gE8ROwEW8G4ZuykGdQbuq5SIjo2eOMx7Lj5TrVrjlKCxwHoWXjOYyhMLCm4AYhcDeZVY7MSfWqisi31KWpJOWxfAIvkbjdCGalcSGdUWsNLzisTiLcSmeMc4RtqqPJr6ofXwvbBMpyz9IT3U+JW3GHjp5aJwez9U7AAFrpuaMVRKRE4y3Bi//77Yh/34Cttp74yFaO7kp+mRhpGvKinLtGXG4Oh78KGPVFvcAsbG2Dz/JIo1tUuDEnSD1EWASsMDlBLlKibpPAZVCjnmvinqob/gwEsxvM1TDC4ZpR3rSDIyWr5rzRnd7fYs3uyRMOWwQjwl3m,iv:vi9kxXIesc7t8XzDqO/4pIZFLQth2bfUC0W/2qQdn+I=,tag:hestiMpAQBFwPFtLz7gAcg==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-deploy-key.sops7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/github-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBTSnNMQURCVWhmcUJmQnNO
      UVhqUjNsWHVkMER3azU1bjZ0ci95RzZIN0E0ClE0eE1HYVEzMExxOWlVU0VBeUQ0
      WlQxZ2JuVy9CL1FwdXpwaEROSVhVRTQKLS0tIGxYTEJrZjh5eXlyVHdqTnhzdXJr
      bDQxL2pHLy9VWVVDL0RDN0Y4Z0E0cncKzZAO+flq40hjz2ELkkGX6yV97MMRzvS3
      q/7NbKhb34grjZFhOs3aNqr6a+s8S50W0SnWRnMQwfF5HlK7AXkCRA==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1ve9kzacrwq7l9l0emvs326uk6t576d75r596e083r2tq6xu28qcsacy3s7
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-04-21T17:52:58Z"
  mac: ENC[AES256_GCM,data:W3XwF/uBjyX+dRkNsogj4rArAInP81nHHyl5YCwTJ+4qxAnRGshNkDedUxDy0XjEkOTIZklFk1EGPTEXpuzGfXzY9VUdGJcy9D6a6C2X/HX1jatqMgMKoUbLzZzt9RbfNDgwFKiEuC/IaJC40mJQ/k0nLg5AKLmV8NRHQ1ycapE=,iv:JZqSjbu8IXkqkxvOf+UXFR2FZl/fTbYUp2EBBnzItjY=,tag:EfMNg31RmIngRSrr1D1JXw==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  identity: ENC[AES256_GCM,data:N3cO2xxSaWIG5k1X4xK3iEAisNPEH3IO+yKYdQV+2mQ6DEHerVY7GXXWyitGumrV2iu1H5HTJKZiNjD5au4t3qbwuOfXQbbe6Mm3KlD+7h3HRnRJfnaMtnSFi2i7WtHoKjDYCEo0BDWUVFy68U4j8LQVGmkz3YsUsN0jUkQh0nljOWt+7lpK4213RnPxZF//mmzt8xqtRKLi5EGcopCjbGwxG6I20LASuHigkMpXbFL00oe2YBD5gG1D1Z967ercrN4YGfChCF77wtnWJ+digiLlyLVSNLxIvIfq4AOm7dLhMXs21WqK3ZhzBPw+plrAFdjUNq/TIKdX12O5Lj9hM3axTN+v70yGuHVqd1yeILZbFMuTeaIZaaoIQoav6u+jb8ClaOILk4CgaU6zAIzIMbykKnhBBx1vHXB+Yv33NMkfdloPNq3UnS6rlEceWeO2GCrnvAJmzkkCjyjkkzhJ7QvnMjRul0kA6nkSIGVtw9v32Jas3dofyRFjRX7GL/GSe5CWgqHEMVCsvtXCjyQsKkqpuvIWMkS8YhM44grGfPao7ugSUrSf128ee1ku+A36MxVm69qr79aaOUG4WrrWV/TLqmWVATe7dkKJ9hOXKOhR6hm2dE1Kc/nlW0TAJstgy013xJM4L6avUl04/vnsMy7VNYzxnHWssAUd1p4ldJph6HQ1su9rgRD3F3u/vhcA4oEoKkhXGfbdMl7qsN9wym3C29NtFz3VGgYC76V+pCrcXgutArHQC6X5mnnaMSR3VF0K6GXJmnUGMaiqdpILGAazyKrt//6IUViZAu3wNjJvrH/64Usm//Inf8lDS5/Dz9o+sZkvaQamNgdX9hsn20tauWwomgthNXEtAbtO/qwDvEd8snShz0FKbKY9aeloE5IwTsndGd8kyaaFRUTD2j3b6YkRM1m7IhmTtzF2dA9YKttrOAAf6t0170+SyT1WUV65QDQm0rrz9ARkKKP+Hw==,iv:iD696FiZeGnFSNlpYOhbmP7KyifTJ2+VWK2IkmFLrYI=,tag:7+MXu7CZhmn5dj4cZ0xiBQ==,type:str]
  known_hosts: ENC[AES256_GCM,data:EF2LPAmhKmBJqxW/Y0T/N/m16XCThNv+9nKji1CoWN6DBKYuwlxPvvTNR7eq81XFCHRwCjgSoAwSRmOyCBzF48UiRSwQoqq9aUS0DGrmZmxZZ9QOItChGVHQUAuordzfDqTmTh0OmJUeMhAJanS2j51d1ilRR8IfgCPjNrAupAryQv7qMtLLMzMfRapHqDf8IzOB4O70Zl93755eVonIaFdhZFwba7urMfb2pVVSL7tihyODtc5oK0QNKR9jj81e/jY+80xuqCXGM8/Greo3HAL8Rq6O2o/kzfhJgG0+hM631QLV5TI+XwP21muJ0Bm4l+LWbf73JbBZOsq0rFyoVtV+gaIVsOVSBCK11CBKK/MJvg5IV6FiYKnfNlamOAQkX+3jJIRnHybM11SLBlCU9qlG91ui5JysjT2wx/6HW4sG93Tdh6gOHx6W2tg5c41WkqAhak6M701mtguV5iWuXDiOoV8gMBpvhAPo15RpHVKmXYAO9neQalR3MegIHIjau5DQ0APWb41NgqOo5jYNihIJtI92LzHeCVtZRWR6h1WvqSyFfOfcYXrSzvF+0X9bTT/98QbaWA+4BT39U750XQJqGfpBYNlG0gg9kxtM0er0IdGYcnvm+gflC3IbIsVAD1bCnyfDCfn4P/qO8yhTzQ9VCFL0Y1fQ59xSOGIOncoS2kB6Hwd02LdptFSdYqTA2v3m7//9RxCcOT2TQAYp6aczTApytyJ3klG3Qx0TbZSB2odE735TPvIEIS+mmzveoUaQaPPJxnL8OMean/PrajrXuK6a5qXxWlHGP+NgJv6/L6JzNS+Nz6Gc0C5Akv6x68mwWJtqAhfujmKCtXFCPqV5iKF14VsrkWzupzrBP8398zrgV135nbvmwOiAY7kZqUPa+PMSd4BVgw6J3mQOZVa4TRv+oDo04qyq9vJ7rvuNQ2dJuFubVCMNl6mZgEn16h1InPPa/Fe4GysDH3qQIBrdRiYmd+ENhEHv8vf8+HPVNalISjCznXtIRQviDuagSfRdgXyL5Wk3uKufrNfhYHh3vfKey/5XaBkY4kAs/Ci90NEFJzPUChvywYFLG5v6xrFMU00evKBIaQND,iv:5vXIioefq9xaM06W0655SVi+RyFPFPHMGs5IttVifdU=,tag:JebU0V0vWedJpc2fvYCbww==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-deploy-key.sops8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/github-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSB2L3dXa1VhMnQxc09iaFl5
      THZ5ZHhZVWM5U1M1eURLWnMyTk02VDByRW5FCjJaUENwSGhVK0c5LzZjNWF1M21Z
      aXF0aUlwTFNTVVVtTlBBRFVZQ2Z2YlEKLS0tIE5zN3F6aWxqc1QzdWtBQjRXcTZi
      S3ZpSEt6M09oSnNFNzR5dUxHd2o1UGcKrRiuM4XTyjbOz1vBX8a+oDDS63opc7x3
      FDjNDbyzDBKm6w66vcnH0xC9daCcldUlZwdioWXWgNhd9PZh00ly4A==
      -----END AGE ENCRYPTED FILE-----
    recipient: age17tn5txs6m4kdq4cfk9t7k5mcr58svuf0uwlrrmsxc9aslj4x9y4skkzs74
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-06-28T23:30:16Z"
  mac: ENC[AES256_GCM,data:D4iVvVaIJI63EIoDoEnAW0KGfum0yZbJURjuv2dxFOVexUa2huWtubuG6Lckvhc8vcBlh9Wt/FzqMwH5pkdDdx4x33AtYpGvWQdoTP5+9fIlvrOF14L6FcrrEXikG1rt48QQecjETETHKdaM4K6Qhah9+NPlsnCDQ/caWvxi0V4=,iv:F+H9HV6HySoRfxjEf5hDZSKcNNh0S+0LkGw/Wf1tvzI=,tag:bU/dtFfCkYkzgBcPr2Vy2w==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  identity: ENC[AES256_GCM,data:/6vRttREvTz6mlPSLB4erCncaZmu6KwQhZw5WKwt1LLRb0a3e8s55zszE78wN2Qx02ARHH/ioABjbV4KD4i3eYmeE3+LyrfaO39mSVd5PlD7GDmh0+aa/atnLrgQ3HfRFgg41RK3Lo2CtOntr1bZmkXW9DffRX2aKzNZhaeVnODLMODlR3eyGH+7k0ar+NkzAM7JTAf/aMam0VRXG9voxzTfQi4swrncmNkM4nJ0obzTR8SK00di1rLWwUhi955es57m9u3q/GPdQrUfhXY+c8O+xl0nHWT89ssRxFYaiCyWRBa5s9RvD53PtKlsxvtlqwhjuEYNVflVEOP1ozpF0MbecHguIOwqBkQ9bLyrk4XKYAoM3lVIwmovso/ME7+8xY0Z2RqO5sGsjlf3+hQs1SiB/viNndhNxgCivuN8LD8wxazgNUNAuGEbaVDs1uDotKN177E83KayOx9PqHgHc4CP/RUb+agDny2RmlQCt4zMuFXIZ6pX8wsW2MmzO0ChYgel6MP/sm3+08/hI1GshmD/R1XG5NXdBD4Rfmluv77mzOVtkAQEBALgIQ8tCUFy2weo7IWT1Blt+c1AF6SvsDgcrDLtqh7Rpx2EENIOFv4QQs9PeOVMD2kkKAPw7pMAECbAS7ZrSYJCX1h1peZ8OSrgAorDfIub0jhnt//AEtFm3n7df9cwlY6Rl+FD7RooN3Wi2Y1RhANVcJIc1hHDXvpnGL6mfCr/0iJ5UgBAAsmxZpTS0zdenEFQeVy0qEgKOOwKAgSCfGjHr8eqDvTXNZItiBJqMG1IAnzvIbNmxAxDo66YuyjOQR3f6I7wnLEzA5NizT3jfwY+MfUHosaRG9GuqShA2wCtXeoOnVdLCDxSch7XEraSNMdMHVIvFbs9CkTtSVloW3vyoBSMDNDp5xMb0U33P4ycv0Kk0qYjJwkPA0Zdo0FqEKT2r6wzs2QC4RTRdlfM54Vg/IKxAtMEzQ==,iv:gerUtouj8U9v2FEJ5gaI6Y1PJhAdf9gxi77RnV+VFho=,tag:ZSt0tvN3ggPBNPSq5abWZg==,type:str]
  known_hosts: ENC[AES256_GCM,data:nfknWt2WnRThOvpd7Sd+gm+LSTWnsjP6O4rry8kJ4Pw2z1dYHlysoVZyVcvhkCPmTZhnBDi+jLrGh0dYAe1qntGUasSOLNVV6P+meO3qx715KQmpXXJ4mRXDWFzo/FT2WaoRInZzskIzhBxlYLY9CTRpX2tOGeM36Bm3VSxqWhsOuWrvgZ1dF/I2OyECXCIrOQQSQLWg2tSHaXnKMSGHnhBKgRNBfLxMoKw+Loj0WFJdypDKKoHcGfrvddUbSHc0TlPFDukbucjt1vYNAjjcSLePrgMRMExfg0Uwc3e0o4bF/oDzf8VRpGKvx9btRUXumwDZGtcCVagWxc12wsMhY4fJUjqCSrue2IVQtQI14FtZJsbgMBYg9DQsBBjOLtuWB5ngzrb4rTo+t0eBgTOt5Tix3SUlpiXRlZMCf+n0pNt1PiYXoTy/g0suohmgCZi1xQPzCIR+l9UBdICKts9GB3EBjvk3vvtFghpd9FLN59GsnYlYJfl+Crfpt8sOv5L9N4v4NEd50KvWZV8WTvmDMd+Vd2rUl73R/EugUW7kN/bHU/eTu5zP6Ve+B3LqvWKQeotqWaSFGX95dGeKLpRhgr64Fymdk+9rODrziO+IQFtyxaAp50oj02fN6lbiEsT5OXQvq5p+d6wR+wa5Sim6TxAr29yozXM+nYWEHHlr8mecqQSDg6CqBRee1uAmjPNBD3krl8m2C+giiQmQS2u7P55MHUViqQzr3VklAA8dQqcDXE77dCSMa/4HZBuTTiK9f/WWW9QhmDQzpKASHsG47TnzSZ7qZ8b8BkpevN71Tp6l4wa7mxpbSCg56DPDhKX/WCa+tj3stj/hGwkWUybOGV1P0gOl+ZTN645mkt0ywn015shM9dp9CrIHIcTAYe+2hZ0Ms981rG7dE9duoMr2au1RtFpiPBQHPBvPh1aCtPmXvIja1rN0knzut/IGVF8d2hJqTfHYb/JQAX/Qef+M0EqgJmbAuT5mFYmVX/DYjLoZfP928a70ou4sxMLAnyw9RvneH3YIZ09Nr1RzgWSVuVg6/q47AULNmftfUHoOs3ZnSo/U4dCJovAxzxfNaTB7bo8gHQQRe+GMJiwO,iv:EMVEunJ/rokY8iBdQEoZu2DdBa9B0sbHJSftLQBJelQ=,tag:ApvOVie2ZdNRVEPIh6QVYw==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-deploy-key.sops9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/github-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-key
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBMdWJPeGVzLzJLVEhZZCtU
      NGZVYURJejlzWXJ4RG1SVTliZG1NUytzbEhvCjN5MDIyT1JubGRmTGNFQnNxb1Fx
      M2hDNG1jaTRJTU56UWtyUUg3K2hFSkkKLS0tIHR2ZTYvYUljN1lXUlFySnBZa2JW
      NlBNczhSb2FYWXFSRkJVcUVGT3BrL2sK8fWTkfTLXZREwbzy6QqUcqq1im8xaNZ/
      CCdjGsStwYLB5afce3y2dvopuDNJESdMS53e7a2w2X7VYq19zDB0/A==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1eytupcvu9e6ft9k0s7zt9ujvfqpqd998c9pj6urr7duyh6rtys3qk5zeyj
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2025-02-05T15:47:25Z"
  mac: ENC[AES256_GCM,data:W7WqestfEdrFM/nrbhLLProh/lD1Wm7CwhrF7jwBqi8Pql3wBCVYn3zD1axctKu4DHLzKb96oVzKuUWnPwUwEUkqCC2jOJFZikGvcfkqeBdRY2J/Vt5gpGW/qR5ZHmGQmNyYQNmbqSaft0lZUvVlNpX6IIr7ZKWxmaiilPThrCU=,iv:WWJvGoc4reVoiWjvCt6nbfKWpMiUDs4/RF4CJm/80+w=,tag:UmesSsdFOfZZMF9GFdS92g==,type:str]
  mac_only_encrypted: true
  pgp: []
  version: 3.9.4
stringData:
  identity: ENC[AES256_GCM,data:O/TWFXBhlgCjBwQm8NaEJlUqN9am7VfIZT0L+YCL8rRhNQVmPimKp+hOzCn23s/mU4hdKnLplv3AJx4KZIsp6aWa/DZxuajcX8KH8HUYA6L0CBlMcvCTzESYScfkLx905Uq1WxkRIMel9JvXxCpY55tLedRGOIb1m7zHXgyA2tEpO5N9+t1QiwVRbSPvdeyvgOLT+OYQ3ctMVBDGGpzlkKBO2GBLLwWp1nXZu73AfZ+icaypf99cYOS7Jco79j+K0c8e5JQkh6UY6D1wfRphRJP1BX1m+DYo8OScv/4bFuWnw4mZOiMEto6EXVEcyrGiFvbIjfQtPkTRQ6zh3ffemwf8RgCT74oLLFKXbrkR2RK8BpeKSonQ/xF5eYNi9UGqpzNEeBMQf8Lz3yjfqY4iPMSyl0LXCKG0u5NJgp8o2pSe17iLHrWtCGhnGrAbC5m0fJDKq1RZrnCr1WpGB20IdtUnxPzduYRLe6IFhODP5J52dFNZSUTyqtpVQMWQTexoKzBr,iv:wCHjC920fHK1VPXZQfoBYNKZ15YtEETns7Wlt4I0WXU=,tag:My4ellUbCzlpNBM4jyLK3g==,type:str]
  known_hosts: ENC[AES256_GCM,data:nl98tkpp56+PjYGPztXjOodyZkh2kvfLuLtRetkh2gTe573UNs0ZCYdvloWfQXL+YM3xnuo7R3wOwUbXwVM/wOkpeIIh2gabdGbawV9vj1dgnhzIPmM+GxJqqU7I4HZkQN0Hc4FYZCuWTzv1oFCM3VWLH5IpaBU4bcF62BFyu+XPu3wQhQeFMXMlFibK7P2thD5+uIv5npjs835krjT59o+/jsxvf3akPKIElzBZ9nN/oCxjFycB5PguCjizsyDA2pah7B9Xp8wLEy2+ueYVHKRr5uq2Sg5Qwtmrym9KoxXmbtyG7culjanZ14oZtfaHb9VTt6gaa8sx7/lrNY+1l/yJT9lk0wxibsMkKJlFj4pBG4ZlnMiZt1AMcZiRh9q8cI3gvHAWDy+8Qe+Jq+PJW8PjeG4VLU4awBrWNc/CczfOzYWhGcso1sh5YfVmlo9LZXhl+KUEsynG/Lpg3T272zXrz11+KmGX00+JPPjAS4bSAR4at0YNlDag7c2+pUdu5gvgoJMCOk/bMs7bkSteVsVqBdoFbWpR9C7vD5d6PX4DiPvt9XV7xVPJn6I62BbE79LR8BGPictyRaB9b2HgSJh02yVhwMjmS3/npaN1oDJ+oM+mhKgv310FTXUt4CtDZaDjFNKJmUOssxONaJipvGcGNTIboH7rLAGtRKLZoa6MDEmT5FR02cP1ew5AsWHQBPrvAiZICYvtsrZeHkrZCLRGAB068qfvFz2Wm/5oZR0DzMs3fAzpsNTVBoSXYbBpSLRLvL3AGJ7wncdVRIBqZPZJF5iBcUcwXt0EHVSwWYTSSSEVA5eMSzJyBBa4z0hNG4JdEOXlM3eU7TZh9im3UHIHYuacbpNeswsrEpnmqaRqqECalieBV4zPljQ8/H1Q1atxNdTlas6YZRcdh6nZ/B2kLcJmWfRq3r20a3clZZ5XajruvulpKWHfmz9mgSkpnI2STMyLHwmfHhVGLwngM9HvJwoBp9uDT5Xc6v4wmFLGtPtZquAuA8Bnj0nbkYW6IWbicX5oVb+9vqgA91Y8Bk+nkA14k7AxYykgXPyAZlioM69asqLBvIeW3CsDeScX8NHp0QObsPxra699,iv:wNdRrFoJb5sLVi4aD+UOrmHSYf9F5NwP2kQfSpmbLNA=,tag:5ZBEAZ/Fsul/iLUdT4kRiQ==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-pipeline_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tekton-builds/ServiceAccount/tekton-triggers-github-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-triggers-github-sa
  namespace: tekton-builds

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-pipeline_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tekton-builds/Secret/github-secret:
apiVersion: v1
kind: Secret
metadata:
  name: github-secret
  namespace: tekton-builds
stringData:
  secretToken: "1234567"
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-pipeline_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tekton-builds/RoleBinding/triggers-github-eventlistener-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: triggers-github-eventlistener-binding
  namespace: tekton-builds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-roles
subjects:
- kind: ServiceAccount
  name: tekton-triggers-github-sa

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-pipeline_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/triggers-github-eventlistener-clusterbinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: triggers-github-eventlistener-clusterbinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-clusterroles
subjects:
- kind: ServiceAccount
  name: tekton-triggers-github-sa
  namespace: tekton-builds

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-pipeline_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tekton-builds/Ingress/tekton-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "6000"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  name: tekton-ingress
  namespace: tekton-builds
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: el-github-listener
            port:
              number: 8080
        path: /tekton-github/(.*)
        pathType: ImplementationSpecific

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource tekton-builds/Ingress/tekton-ingress failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: github-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalsetter/Secret/github:
apiVersion: v1
data:
  ssh-privatekey: <base64 encoded private key>
kind: Secret
metadata:
  name: github
  namespace: goalsetter
type: kubernetes.io/ssh-auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ai-demo:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: minio-dev
  name: ai-demo
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ai-demo:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ai-demo
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ai-demo:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ai-demo
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ai-demo:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ai-demo
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ai-demo:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ai-demo
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-secret1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ai-demo/Secret/ghcr-secret:
apiVersion: v1
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJnaGNyLmlvIjogewoJCQkiYXV0aCI6ICJZVzF1WlhOamFHVnlPbWRwZEdoMVlsOXdZWFJmTVRGQk1qVkVNMUpCTUV3M2EyTllkM05LV214aWVWOVJVMlJIVm01VWRXRXpRVlkwYzFaMGQxUnZlSGw1TkRJeFRXbG5VbUowZWtST1JsWjViMlkyU25oVFNFMVpRVVJFU1VFME1WQkdWMXBhUlE9PSIKCQl9LAoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogIllXMXBibVZ6WTJobGNtTnNiM1ZrT2pFME9UZEFVMmx1WVE9PSIKCQl9Cgl9Cn0=
kind: Secret
metadata:
  name: ghcr-secret
  namespace: ai-demo
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalsetter/Secret/github:
apiVersion: v1
data:
  ssh-privatekey: <base64 encoded private key>
kind: Secret
metadata:
  name: github
  namespace: goalsetter
type: kubernetes.io/ssh-auth

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-secret3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ai-demo:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: minio-dev
  name: ai-demo
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ai-demo:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ai-demo
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ai-demo:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ai-demo
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ai-demo:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ai-demo
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ai-demo:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ai-demo
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-secret3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ai-demo/Secret/ghcr-secret:
apiVersion: v1
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJnaGNyLmlvIjogewoJCQkiYXV0aCI6ICJZVzF1WlhOamFHVnlPbWRwZEdoMVlsOXdZWFJmTVRGQk1qVkVNMUpCTUV3M2EyTllkM05LV214aWVWOVJVMlJIVm01VWRXRXpRVlkwYzFaMGQxUnZlSGw1TkRJeFRXbG5VbUowZWtST1JsWjViMlkyU25oVFNFMVpRVVJFU1VFME1WQkdWMXBhUlE9PSIKCQl9LAoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogIllXMXBibVZ6WTJobGNtTnNiM1ZrT2pFME9UZEFVMmx1WVE9PSIKCQl9Cgl9Cn0=
kind: Secret
metadata:
  name: ghcr-secret
  namespace: ai-demo
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: github-secret4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Secret/github-access-token:
apiVersion: v1
kind: Secret
metadata:
  name: github-access-token
  namespace: argocd
stringData:
  token: MYTOKEN
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: githubstore.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  name: webapp
  namespace: default
spec:
  containers:
  - image: nginx
    name: app
    volumeMounts:
    - mountPath: /data
      name: data-volume
  restartPolicy: Never
  volumes:
  - gitRepo:
      repository: https://github.com/shivagande26/kubeadm-scripts.git
    name: data-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/webapp failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: githubstore1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/webapp:
apiVersion: v1
kind: Pod
metadata:
  name: webapp
  namespace: default
spec:
  containers:
  - image: nginx
    name: app
    volumeMounts:
    - mountPath: /data
      name: data-volume
  restartPolicy: Never
  volumes:
  - gitRepo:
      repository: https://github.com/shivagande26/kubeadm-scripts.git
    name: data-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp

skipped mutate policy add-safe-to-evict -> resource default/Pod/webapp
policy disallow-default-namespace -> resource default/Pod/webapp failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/webapp failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/webapp failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/webapp failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/webapp failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/webapp failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/webapp failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/webapp failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/webapp failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gitlab.com-conf.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to syngit-system/ConfigMap/gitlab.com:
apiVersion: v1
data:
  authenticationEndpoint: https://gitlab.com/api/v4/user
kind: ConfigMap
metadata:
  name: gitlab.com
  namespace: syngit-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitlab/Service/gitlab:
apiVersion: v1
kind: Service
metadata:
  name: gitlab
  namespace: gitlab
spec:
  ports:
  - name: http
    nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    nodePort: 30443
    port: 443
    protocol: TCP
    targetPort: 443
  - name: ssh
    nodePort: 30222
    port: 22
    protocol: TCP
    targetPort: 22
  selector:
    app: gitlab
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource gitlab/Service/gitlab failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: gitlab_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitlab/Deployment/gitlab:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: gitlab
    spec:
      containers:
      - image: gitlab/gitlab-ce:latest
        imagePullPolicy: IfNotPresent
        name: gitlab
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 22
          name: ssh
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/gitlab
          name: gitlab-config
        - mountPath: /var/log/gitlab
          name: gitlab-logs
        - mountPath: /var/opt/gitlab
          name: gitlab-data
      volumes:
      - hostPath:
          path: /home/wolf/gitlab/config
          type: DirectoryOrCreate
        name: gitlab-config
      - hostPath:
          path: /home/wolf/gitlab/logs
          type: DirectoryOrCreate
        name: gitlab-logs
      - hostPath:
          path: /home/wolf/gitlab/data
          type: DirectoryOrCreate
        name: gitlab-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource gitlab/Deployment/gitlab
policy disallow-latest-tag -> resource gitlab/Deployment/gitlab failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource gitlab/Deployment/gitlab failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource gitlab/Deployment/gitlab failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource gitlab/Deployment/gitlab failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource gitlab/Deployment/gitlab failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource gitlab/Deployment/gitlab failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource gitlab/Deployment/gitlab failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource gitlab/Deployment/gitlab failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: gitlab1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitlab/Service/gitlab:
apiVersion: v1
kind: Service
metadata:
  name: gitlab
  namespace: gitlab
spec:
  ports:
  - name: http
    nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    nodePort: 30443
    port: 443
    protocol: TCP
    targetPort: 443
  - name: ssh
    nodePort: 30222
    port: 22
    protocol: TCP
    targetPort: 22
  selector:
    app: gitlab
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource gitlab/Service/gitlab failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: gitlab1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitlab/Deployment/gitlab:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: gitlab
    spec:
      containers:
      - image: gitlab/gitlab-ce:latest
        imagePullPolicy: IfNotPresent
        name: gitlab
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 22
          name: ssh
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/gitlab
          name: gitlab-config
        - mountPath: /var/log/gitlab
          name: gitlab-logs
        - mountPath: /var/opt/gitlab
          name: gitlab-data
      volumes:
      - hostPath:
          path: /home/wolf/gitlab/config
          type: DirectoryOrCreate
        name: gitlab-config
      - hostPath:
          path: /home/wolf/gitlab/logs
          type: DirectoryOrCreate
        name: gitlab-logs
      - hostPath:
          path: /home/wolf/gitlab/data
          type: DirectoryOrCreate
        name: gitlab-data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource gitlab/Deployment/gitlab
policy disallow-latest-tag -> resource gitlab/Deployment/gitlab failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource gitlab/Deployment/gitlab failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource gitlab/Deployment/gitlab failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource gitlab/Deployment/gitlab failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource gitlab/Deployment/gitlab failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource gitlab/Deployment/gitlab failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource gitlab/Deployment/gitlab failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource gitlab/Deployment/gitlab failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: gitlab8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gitlab:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab
  template:
    metadata:
      labels:
        app: gitlab
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: gitlab-config
        - secretRef:
            name: gitlab-secrets
        image: sameersbn/gitlab:17.0.0
        name: gitlab
        ports:
        - containerPort: 80
          name: http
        - containerPort: 22
          name: ssh
        volumeMounts:
        - mountPath: /home/git/data
          name: gitlab-storage
      volumes:
      - name: gitlab-storage
        persistentVolumeClaim:
          claimName: gitlab-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gitlab

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gitlab
policy disallow-default-namespace -> resource default/Deployment/gitlab failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gitlab failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gitlab failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gitlab failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gitlab failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gitlab failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gitlab failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gitlab failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gitlab8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gitlab:
apiVersion: v1
kind: Service
metadata:
  name: gitlab
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30080
    port: 80
    targetPort: 80
  - name: ssh
    nodePort: 30022
    port: 22
    targetPort: 22
  selector:
    app: gitlab
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab8_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/HorizontalPodAutoscaler/gitlab-autoscaler:
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: gitlab-autoscaler
  namespace: default
spec:
  maxReplicas: 10
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gitlab
  targetCPUUtilizationPercentage: 50

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 1 

##### FILE: gitlab-admin.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-admin-secret:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-admin-secret
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBlckphb2ttRVp3WnZGOXRj
      ai9OWXNFbFcvdGkyR3F4UzNWWGtPWGFHR0Q0ClhHWVVvWVM4NlJLNm15a1p2L1ly
      MGh4Q2prZkF0NmQwMUp5YUJoNU0vVGsKLS0tIC9GZTc5MCtMYkM4NUpwR045dDlP
      ZEpSZUt3Q3dpdEI5dUR3NXNtUTFUU00KV4iSiwGDhQrTDwhdNYpRu1iAZC7rYxMO
      eA1F6fW9azjynJOV72vIZh4ckzajSmG+lUyVkPrKspX2n3ZSqSZwTQ==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-06-07T18:05:58Z"
  mac: ENC[AES256_GCM,data:mhjx6OJbXuYBCWjdCYsqn1hF6vkv6jGA8GRMtJkxHGzfY/PP52MjuXp63iIgp+fdMVGmYWGoB08xGZHuohpujpTwkTQt+3jCY0f4Nard8JKjjItIsXEWT63EYdojS8omQ21w+YS7KVnq3kKLr0pN8I+cBnhuTasHEmydkAxGI7I=,iv:+KdYSdB/4JPcaYCFuEALQ2tupqK258PQT9IZHQB5Xoo=,tag:hUuevVtFWep1KQ1a19L3xg==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  initialRootPassword: ENC[AES256_GCM,data:N/iH2I9L4To3EF5dRtD8O/7MLGZ33K4AJ2T0sw0jHSPuDNRBF7nY7TTSyRBV6cRUF+suf3Nevms1PXqISEWNmowLscxvN4ogDjoCW/rPsnB5sJUhUB3rfQ==,iv:hupt7K+PE1HDRY7G63jQizO3p2VMBwI2jtlK3DRztvY=,tag:L7QYRorhKfSSb69X0XUmyQ==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-ci-token.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to kube-system/Secret/gitlab-ci-token-manual:
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: gitlab-ci
  name: gitlab-ci-token-manual
  namespace: kube-system
type: kubernetes.io/service-account-token

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-credentials-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-secret:
apiVersion: v1
kind: Secret
metadata:
  labels:
    type: gitlab
  name: gitlab-secret
  namespace: default
stringData:
  token: '**access token goes here**'
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-deploy-key.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to flux-system/Secret/gitlab-deploy-key:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-deploy-key
  namespace: flux-system
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBzVi94UFR0M3p2VXRqKy9t
      ZW1ua1BXR2tpdlU4SncvZlA0UUNSTmVMR0dVCnlMbUN1K0JEMzZiejFUM0Nlc092
      blA2TUl6QnRYUk1QNjZSN3JtK2FaZlUKLS0tIG80TDRNWkp3UVFFaS92bEhVdTI3
      N2YyTEsvRndUR3orM01EemFkdEN3eWMKrTFx5y1ENlRzqJtQco5fuNOjEtbDa5ni
      ICkYqijpYJgJ1tvvJasQuFosmTHc1dcx56QpvEZVMc7HdJ1w8Mc5GA==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-09-26T23:18:34Z"
  mac: ENC[AES256_GCM,data:BtUkX0MT4xbI7OGnfElqKmFqUeb2ijoKzHe/oAIUiEelniExz8jFS9tqxQ+ysiraiHbU3Y/TB6kU9luaEnxfuepy1yy5aGx9Z9f3DRH1fotNw0qu+Zfj3uxYsV/4TA6C6dSpLpnw3dKHQ0ERRaV4thmj7zmQRCZ5L76Bdp8uzfA=,iv:QeD5nsfj4gV0g1LjmPlmghjvFDQeJETOHDIjkAxQ+SQ=,tag:L0owP/TrB+StMJSMjSjtXA==,type:str]
  mac_only_encrypted: true
  pgp: []
  version: 3.9.0
stringData:
  identity: ENC[AES256_GCM,data:unYtLHw/maPrChoENDaJ00JiMMto/7ppOjhJNbaKDI2nVaUrvRLczPMcW+EBfvBzW02/q9iwv7o3ZZ3BMENexSS0OHINmSst4v2rhgXnZ8pOvwYB+Dkt3+IVEhcQoBK3WDijirIvvMeVlbGkc3apRicChO7L/aZsDQT9NLBMXOM7Vk8sEn1kP5LBKEk3pQHkd+rIZXjvNgKIV1GrI3kYn9RbU5+cIsFxnwuIpRD0DjREVdo+E7/fELS+NrE6KUIyjSzCBUruYeR25bhWk5qKlAORxjpl11Y//5NseP+DYui0t11vnbSMInHNiA7wCl5SsaNHwOENkaEGC9EhV4AjgQuNg47l+kAX+ZjOvjB25qbqWRRr8zE8Y67w8Vbzv6UIen9GyT0Dhk4Ik3pVGBU38+eUJ13VkVTgnKXYkanJMVuzLajRC81bUgAElYjrQ3aGqyUQlNC6lRSAeRvG05amsqBXWseGxl9P976Eyvy3icIipsrvagYofDkKDeEuGBy8FE11qFYKh99/NTXQltOkY+Ek9b1SCFVIuWDi,iv:i6lUQ1yELzSmw+pG3xmFhO2zYD+hrltGIS86bPNGUeo=,tag:e2/HNz1zXlYctReBXxn8aw==,type:str]
  identity.pub: ENC[AES256_GCM,data:hSyhelfLpfFHWVbGs/e/WuMRqneQ8Bm3wbVWS/EhJJwJW39T7qfibHqBUaX0i6Yttx5pBehRpgcHMyo5zu2tCuigAehcpOEhuWrWL1dfQzpdavUuszaH51gSuWQWJQdlKePy,iv:A5njlogBw9B/rk3pbVc3J4z1ZfmlX9FVGJpvCkQQTYw=,tag:k5CK31nZfb1MJPtL64fNqg==,type:str]
  known_hosts: ENC[AES256_GCM,data:tYIB8+jK0XW0DPzvahuIWaTcZ4A7gu2SuKJAueCOo3xMswvUfsDqldAS+gPdTIxbdDJ1XlLsjfn8mgTD4g9tfA7rjf37KpYxgJxMXBe25cvZ5HtJhI2/KFLBNY76wv9AeiR5ZGZ/OVJ0FrIYNKYNWXURs0srAuERmlTesvN7E0dUAimpGWxZiATE8zefq8HQ9gycykJG/tmFSwFu2yLw5xB3TECGRxBYQBTOtd+dAUhFae9q9YvmV6e6tvfdAw==,iv:shBTWzhEqnRnrA7NYE11NqnB6xVKV2RqS7/IixAJ3Kc=,tag:DlnMulsanLpDKK+Sqeh4Jg==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitlab/Deployment/gitlab-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-deployment
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab-ce
  template:
    metadata:
      labels:
        app: gitlab-ce
    spec:
      containers:
      - image: gitlab/gitlab-ce:latest
        name: gitlab-ce
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource gitlab/Deployment/gitlab-deployment

skipped mutate policy add-safe-to-evict -> resource gitlab/Deployment/gitlab-deployment
policy disallow-latest-tag -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gitlab-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitlab/Deployment/gitlab-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-deployment
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab-ce
  template:
    metadata:
      labels:
        app: gitlab-ce
    spec:
      containers:
      - image: gitlab/gitlab-ce:latest
        name: gitlab-ce
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource gitlab/Deployment/gitlab-deployment

skipped mutate policy add-safe-to-evict -> resource gitlab/Deployment/gitlab-deployment
policy disallow-latest-tag -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource gitlab/Deployment/gitlab-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gitlab-gitaly.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-gitaly-secret:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-gitaly-secret
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBneDlwc3FsYzhRSkNQZi8w
      YXBtY2ZlSkFxTGhQMHRpaUR4RnpSQUQ0OFRvCmNSMng5YUxkRDR4WlRRZHdCVS9W
      QTNYa01KMUJtZVBGUVlGczhjRXN4aTQKLS0tIEJqcVVLZEl3UmFxU3ZZazRCczZQ
      MDdMdGZ6OVc3dXYyTWF6VGJZWUVablEKYNJkESg9KC0MtKfS9qcgiQONxw+jmjvk
      ZXvV7wr6q9WM0h4aN69zLK24VlP+xQu3NrFmeBdQVMPguAofW/53pg==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-05-29T23:10:01Z"
  mac: ENC[AES256_GCM,data:GI0pBk/C5i58VdleMx9hUYYZ11IxuQSmZcNGAAsscq181u2A2MBu/RZzA6qGOD7+5O/cTI7S0x7OADVLjv8Hl/Fm8tfYuTbMrMkkgqUNJtvutYlZA0lHPIi6QMYt+KR9cHYdG02kCAvkIOsSwdEf/WPUJGmoPoeb+O4zUAC3NQo=,iv:fTZfm7u7PDuIRlvU3YVkz8Ikyvpel5Ors+rj/ehMM8U=,tag:zhxnk1rIMYijxiNlF8XMGg==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  authToken: ENC[AES256_GCM,data:AbVzWOOk7zytQnmWWkSTiR+lhTJ1AG+ef28cA+dg65IsDYs5BDriJ5/IViotXpU8kVcjqEwpasvqDD2OEDQyM0vM0axbEPjzb6mGqAWH2ZgAQZZS0JETHg==,iv:WLZeIiHpLXPkt4Q8lbl+qULu5VsVt4+1kV9Kp/bTstU=,tag:wgjKQpv1QZLktzkgzT1n1w==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-incoming-email-auth-token.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-incoming-email-auth-token:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-incoming-email-auth-token
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBUMzhvVDczVk1abkxwWWxa
      V2FJVVBlOHA4UjNnYytFMlI4cW0vZUYrWDBnCmNYdmM0NGhMTVM4enhVaHZRWTJ6
      RGFpWWl0RlQxV3RIUWxGRkZzanlsWnMKLS0tIEhFL0pYa3ZHcDJTZUErR2Z6bk93
      RC8xQ3p5Z2lQZ2tVd1B3bXRsOS9BamMKDAtyeC0vGhRzGXGiMSVVR/j2GBs51DfI
      5fWxg8bLifuXauVzGTtL++OvX/ZMEgx5bfFLz0gxtVlDW/2BzVGG0g==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-06-02T22:00:43Z"
  mac: ENC[AES256_GCM,data:iUpNHeZmXA9IKnbGXiQLe0y2k3iqaArni2eaYCrrI6t+0n8tTN4Fr3NQ/vp1oyRKF278lZmnXBfD1YTjeHsxR0851oGdgljz8H2c4xMbvHPYSxMhH9/LQRBk0HbznVUgNWn0F016IEpawMasOa4ouc6T27rc3eHNQklyxEUDUSg=,iv:1B+r/0JVBhB+XWR8soH7Vvknkyb865svIGA7+j1yZHY=,tag:uIyIj4JbagSuFRDRteQQGg==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  authToken: ENC[AES256_GCM,data:ef1O4VvIeFVg4SoGOZJg5PwqerWKm6Kyax1a+2t3qqaxLm16ro+GHXOcCMc=,iv:Lo4TGJJB3HHcatUjTTAZWpI3zB6fTZ+HfKU/UC/p1Fk=,tag:rJJJgTNwcG0OyMP000cD9w==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-kas.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-kas-secret:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-kas-secret
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBaUHN2RWsxVTRUcEJyTU5R
      V2dxTGFUNzJUNE9zdk1mQlBiTHFBM2N5MFhZCnJKTnBSM3loK09xUFRRZzc2SUVs
      R1V2UFBiK3pRNVUyVnVkUWJ2Q3ZLSVkKLS0tIEVlR003czhONEEveWloWGJ4NUgy
      V2ZMYVpWWEFrREUrNC9sc0ppZStwVFUK47oVeOmhizj1yJ5poqz5ptTyeq+5QOrI
      NKS5yyU+skB+qUexY6pUEQ2YkPqjyh+Qb0v2G3raaLxcGbySHFoJjQ==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-06-03T20:17:41Z"
  mac: ENC[AES256_GCM,data:YINBSp70yJw9G+JzexEwYgNKgNc7fZA8SwvRReQQDXwhGfeUbLLIjycubCtwcHHghVeuTOnHIjHwfAyG9TCKYS2Dwq2D9R7Bl8qzf+SEX4iKYGxv1HLB1UOw0MjgFFxByJ7x5WqifRaUvNQEHJ3SnTEn3sLU6qdOSaOMkdbju1o=,iv:cmmW/W+E20owm6uIjKKji+Q5kcmTf4B0kTwbhyr2uAk=,tag:REoU8OsscnPRpjImHS281Q==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  kas_private_api_secret: ENC[AES256_GCM,data:hG5vMGyH4tSoxz6tLBz7BdhR8pyKHf0/4Zs8H/536KP5OS38YWLwtnLoD3Q=,iv:q8TMwbRU7S9kNEKsUSVP4JIG7+lR+Iqq/WbVPC5t6LI=,tag:/OgCeVziFd8hI/HTfaWKeA==,type:str]
  kas_shared_secret: ENC[AES256_GCM,data:jIAZp+6ANOC60igWlnA8F/M5kOGHNTzSqVZ8B5K279T+mZDeR93i/hRjvOw=,iv:3256OoIOa5aemkqVGqQZBAL8V0AIf0qQBuC6U3oKbAs=,tag:T0MuQ63pUYAmCZ7OaaDTxQ==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-minio.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-minio-secret:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-minio-secret
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA0dkN2ZG5NczVwMnJyNlp4
      ZWVHWWJwcW5TR09KUGVQUHhNZDN2UHBMc0RjCnhTc29SdzR3WmNublhYK2N1ejU4
      UWE0Z3pJWHl3cGZrQlBJemNwNmlmU1UKLS0tIDdQWE5vaTlldDhjcTJsM2I4S2Rh
      bVVvTi9TSFl3RkxKSWxaUVNoc0ZyVTgK1NKRlGe/cA/MzwuPdodtdaGJ5ghfmQ6N
      EF5K9fmYV4xrIHzCwx6vsnclseYTjmRqe4xyEZrT7Xa4IZDHSZGYiA==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-06-08T09:14:15Z"
  mac: ENC[AES256_GCM,data:D1DMrHZae1OMN8JtUBoIN6Xo0NlOSfc4j33SQvL5OKyLJ43hPcxV2G+KPstrFzqQFgoqJ5uLFCFScoH0pnkecPEbygD63pOetsL0vqPzRY+R6UxFCvGRH3zQXNohZTf0n0U7tbn5YFtgscKilY60xp2APrc/Vkz8QVJjPug4CzI=,iv:R3SQAFYy1rOh9usmhdJO9TOjXfNEBxDD2Y6Ys43CxCY=,tag:FZxIMtryTZJNe6UKfBozeA==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  accesskey: ENC[AES256_GCM,data:ThhJjoAVaokj+pKQ7nTKc47mTK7cFleI472CW0mMqW64yJOC/YH/zzOfezkBGJYmLLWUBk9RRYnSOCcJSTqEYo2QOsYoa3vH4xQb7jTUNZvoq+Q6lLDQNw==,iv:dm3IFBlzvH1WAEmqdwPeBNlLs4WJHApPLCiuqrDsqac=,tag:qDVHK1oxMVgyDExEQgg7pA==,type:str]
  secretkey: ENC[AES256_GCM,data:geFoB9JrjXPThxwaLfhPe1ivETJ7YQ7uggWQ3ctAFV4Y+Pnyo6Wp4DOfukbQfq0uBVYKc6k0ClhVpH25l6JHfPjyb0EiS9R2nMnPnplHTa0uyAp+9JcGxg==,iv:9u65fA+RceWNUvX9bMyeumrGDKobo7jr0WEsD/1oQ7w=,tag:MEvL2/h4uM7JTUZhMTiusQ==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-oidc.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-oidc-secret:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-oidc-secret
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBPa05GaHZFMStNQzQ2Q2ZH
      ZkhZSWlaMEJTenlnM2xpY1kySE5jOFZER1dzCmtpZXcrbUlTQ0E2TEtLbkMvb0JO
      WXVjS0RlMllHVW1qeC9ZTXNhWi9IcXcKLS0tIFNJMWpsL2Rkb2tNcGZpQm9yNkZm
      bnJlVlRPUmVKVTdKSXlNeG1id2xTWW8KezOyWgYH8Acu5kzBSfoZGh8JGERJz6BZ
      JY2gvpd2vmcvWXJeYqnETxrGYRZX8Gc2Z4bAJbzDfJNPh3xzHUocvw==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-09-14T22:04:43Z"
  mac: ENC[AES256_GCM,data:12POWihATVihfKNYC9XE+GgHwSNkEeAQJrs7Uz4MNsbFVrlQ1Q9aFTcCF4kOgeBLTG9s4KehlvGucj7wA6+/6w7gTUsVqdidywcyMmOyAiiU/fkEDflcq6eLA+bRs7iAZgta/PFR4st4rvk8KxrkO+EqOKvzn0D51Ig1nHMPpog=,iv:Roe0Ujr5AH+W66tdD03wYa1xgfDSmnM5DoH2VItabR4=,tag:LwwTZIwQA5lOxnqS/9W/Bw==,type:str]
  mac_only_encrypted: true
  pgp: []
  version: 3.9.0
stringData:
  OIDC_CLIENT_ID: ENC[AES256_GCM,data:fnpl7FC9,iv:561IuSCG0/T4MjGdQnXluN5C3eOgAqbHvEHSswiABPQ=,tag:sNvueQIugCL3f/8UTj2aHQ==,type:str]
  OIDC_CLIENT_SECRET: ENC[AES256_GCM,data:33hMl4QaA8FhLzamI46mOKpRmYi0z0iXbqAyYbnKP8YrORpaOoIOEnzPjy2BvV3+D8gJ+2b7CeU0zpsfUiEki4CkiE//zXRV,iv:pgZz/txu+x1rUP2DMrZgNPOr5i4bbs7DFOgqId5NnV8=,tag:9wU4ATaFfrus4WsoLZqbYA==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-pages-secret.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-pages-secret:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-pages-secret
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBHWm1DU3FZRnB5elJCdGlI
      L0EwSkplekZxU2V0bWdjQkl1ald2T0h6Tlh3CllXRXRya1dqL011ZVMxalJ1eFdV
      TXZDZEtMVTRmd0E3dUo1Yi9LNTE3WTAKLS0tIGdCWjNFeFdZbEkwQ2hKcWQ2eDlr
      eSt6czV3alA1b2dIdGdib3BaZ2NZNFkK0wTFrc1edUNWsdlFJnIrljTUv+mK7Ztt
      KmbDccgfQ09Tr5rk3V2HItLjUuIzThh4m/TF2+S6ZxxjPZpnLy0l0A==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-06-03T23:10:23Z"
  mac: ENC[AES256_GCM,data:IhLcPiod8CzXcjzY78NJHrXOsCQl2EWfgQtFieCdRS0Ybr2k7EfNz5E9YSBYdLjtNhYTR5dYBZPneh/myP6CzxEHitNedTGWHYi8dkr8vOfYDlxL3XrbOiGECDsqL7fcMHNO9D+14uQTfBtI7vnjaeRTgoqcwq7icjp3BO0tGvU=,iv:YuNmF0AZRhOhmqzL94ij99WSebpHoezje0HSb3rDNTg=,tag:2l9kWs59sUXH0lRdPJIh+w==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  shared_secret: ENC[AES256_GCM,data:Vya/M9c+QUGFJbNc3ZwEUxgu9Fo9Ij7+BxIs54EjRh4q6EDIbPgNyISbv3M=,iv:CaRtay9L9iXE+skCL3KQXXKe8ylCnMNQxHCpb/WKQi0=,tag:3oPL3OVNTA+izeDMxPOp2g==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlabpasswdtoken.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitlab/Secret/gitlab-gitlab-initial-root-password:
apiVersion: v1
data:
  password: cnVuYWxzaDEyMw==
kind: Secret
metadata:
  name: gitlab-gitlab-initial-root-password
  namespace: gitlab

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlabpasswdtoken_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitlab/Secret/gitlab-gitlab-runner-secret:
apiVersion: v1
data:
  runner-registration-token: cnVuYWxzaDEyMw==
kind: Secret
metadata:
  name: gitlab-gitlab-runner-secret
  namespace: gitlab

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-pipeline_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tekton-builds/ServiceAccount/tekton-triggers-gitlab-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-triggers-gitlab-sa
  namespace: tekton-builds

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-pipeline_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tekton-builds/Secret/gitlab-secret:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-secret
  namespace: tekton-builds
stringData:
  secretToken: "1234567"
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-pipeline_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tekton-builds/RoleBinding/triggers-gitlab-eventlistener-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: triggers-gitlab-eventlistener-binding
  namespace: tekton-builds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-roles
subjects:
- kind: ServiceAccount
  name: tekton-triggers-gitlab-sa

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-pipeline_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/triggers-gitlab-eventlistener-clusterbinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: triggers-gitlab-eventlistener-clusterbinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-clusterroles
subjects:
- kind: ServiceAccount
  name: tekton-triggers-gitlab-sa
  namespace: tekton-builds

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-pipeline_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tekton-builds/Ingress/tekton-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "6000"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  name: tekton-ingress
  namespace: tekton-builds
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: el-gitlab-listener
            port:
              number: 8080
        path: /tekton-gitlab/(.*)
        pathType: ImplementationSpecific

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource tekton-builds/Ingress/tekton-ingress failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-registry-httpsecret.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-registry-httpsecret:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-registry-httpsecret
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA1c3ZZWHlzbkpITklwSlRV
      aEdtb3pwLzM0WWY3KzZYV1oxdHh4ZTZhU2pZCnA1SEQvUjhUS0x0SFdwWlh6SlhJ
      WHVkM2dtcFhLbTY4cW44RG1laWZDWWsKLS0tIFVMQ0QzTXpqR0tYZDRkRkg4VnB2
      UlVLa3orZll2VTJCbjZCWnAzV2UyTUUK/iopdfcWVa1xM7VpZ0JbFt1Tcy2NPxh3
      Tifk1Orrm6Y955kJG0ssgnKYo/RPKiNyr5nWClpYi7IaNURxSz7SHg==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-06-02T22:11:27Z"
  mac: ENC[AES256_GCM,data:NEXPof/9putoARGnGnyrSuTkrcWGn3rdUdPkfORkIzjBzx+tR6m6M+VbcqSAPcrdK1iB5riU7v+yOytkAPPgIzBYdNGs63MRzXCaI7BujiI/suxmKQri9oVCPvHhJSgHqGgbA9VnnY8WG8N69AKpQON4srQBWTCDkmAbDqFNFvI=,iv:TsgLfVD7M0YvMcBptGrDVJpPQwC4PFXtjQu7zv/28qU=,tag:o4ZJJMjofJDohR+E6AMvRg==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  secret: ENC[AES256_GCM,data:SFO9XLLoPXGs9kfB6czJ/o0glHtEqgQe2uXOLrMdCWKFaFD81zeFk7JnwCAE4kGjax3OL2ZV4H2HnBQZfhIxuTaf3Muy5Nfi+HW8oxjrgDanGmNT7twx8A==,iv:RVZ6odu1DfwH7H/4tqeqRX1L1AuW6VDI2PZN2JnJ+Xc=,tag:3FbOKEgvz1uiU92t1stwdw==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-registry-notification.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-registry-notification:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-registry-notification
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBPUE9TL3lZek1Fa3NYRlBi
      dHl4cmtOcUhzeWgwVGc5MUorMCtvSklCekVJClovQ01hMGszNUNyZUl4Tm5KRHQ4
      QSsrUzc4dEQ2VW1HRVV3OG5iN2s3dmsKLS0tIFczRlpCMWVpSmZ6MkxkWk1hZ3hD
      RE5hd2pMejBpZUtuRnZmd1ZlQnBsVEEKb3uClwDUtpAUIvvtnL9l1KEV3Wk6wNKt
      qifa7SnjPepp+BdkKyrWqFS23eVMQBezsfVlxBzDkuN39J9iiWjNsw==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-06-04T22:49:48Z"
  mac: ENC[AES256_GCM,data:FaHcBhJxK9KggzN9TR0N5NihvxbThLtrVHDgGhAZMTjjEl4fr9GCBbSfAUq5hbYvt8/GJy/GAmQCaH9o9YwezTyYLTG1TcuvzYjzUL+Y97tWTnVF8U0iSnpcZFqseqOfS6aHwg9m+UT4hqwZF63uVJ3b/CKSmZcYjxiCKNGpgeI=,iv:1rgiQZmG0jJuMi6MzHxxp8M/Lqrx6P0UY28CO6g3zWk=,tag:kDrmvfXFroPqbluc73SDaQ==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  secret: ENC[AES256_GCM,data:8C+276cA7UDPwIe1AkR8+3MjWeKZuohGYvvfQSHC0ToYnKi6,iv:F+6Hbnatjokgb5Gt8nGaMHKHPygpYnnHAx6OLF4Jxu0=,tag:5bf8kG68zkiqyPV84uLVpA==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-runner-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/gitlab-runner-config:
apiVersion: v1
data:
  config.toml: "concurrent = 4\n[[runners]]\n  name = \"Kubernetes Demo Runner\"\n
    \ url = \"http://gitlab:9090\"\n  token = \"glrt-M3Wz9JxVBUvvLLt6VJVy\"\n  executor
    = \"kubernetes\"\n  [runners.kubernetes]\n    image = \"ubuntu:22.04\"\n    poll_timeout
    = 600\n    cpu_request = \"1\"\n    service_cpu_request = \"200m\"  "
kind: ConfigMap
metadata:
  name: gitlab-runner-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-runner-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gitlab-runner:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-runner
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: gitlab-runner
  template:
    metadata:
      labels:
        name: gitlab-runner
    spec:
      containers:
      - args:
        - run
        image: gitlab/gitlab-runner:latest
        name: gitlab-runner
        resources:
          limits:
            cpu: 100m
          requests:
            cpu: 100m
        volumeMounts:
        - mountPath: /etc/gitlab-runner/config.toml
          name: config
          readOnly: true
          subPath: config.toml
      restartPolicy: Always
      serviceAccountName: gitlab-admin
      volumes:
      - configMap:
          name: gitlab-runner-config
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gitlab-runner

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gitlab-runner
policy disallow-default-namespace -> resource default/Deployment/gitlab-runner failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/gitlab-runner failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/gitlab-runner failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gitlab-runner failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gitlab-runner failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gitlab-runner failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-pod-probes -> resource default/Deployment/gitlab-runner failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gitlab-runner failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gitlab-runner failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gitlab-runner-role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/gitlab-runner-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gitlab-runner-role
  namespace: default
rules:
- apiGroups:
  - ""
  - batch
  - extensions
  - apps
  resources:
  - pods
  - services
  - deployments
  - replicasets
  - pods/exec
  - secrets
  - configmaps
  - namespaces
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - patch
  - update
  - execute

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-runner-role_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/gitlab-runner-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab-runner-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitlab-runner-role
subjects:
- kind: ServiceAccount
  name: gitlab-ci
  namespace: kube-system

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-runner-service-account.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/gitlab-admin:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-admin
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-runner-service-account_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Role/gitlab-admin:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitlab-admin
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-runner-service-account_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/RoleBinding/gitlab-admin:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-admin
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitlab-admin
subjects:
- kind: ServiceAccount
  name: gitlab-admin

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to k8s-test/Secret/gitlab-secret:
apiVersion: v1
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSIxMC4yMC4yLjE2OTo4MDAxIjogewoJCQkiYXV0aCI6ICJhbUpwTURJeE5Eb2hRRE0wVVhkbGNnPT0iCgkJfQoJfQp9
kind: Secret
metadata:
  name: gitlab-secret
  namespace: k8s-test
type: kubernetes.io/dockerconfigjson

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitlab/Service/gitlab-service:
apiVersion: v1
kind: Service
metadata:
  name: gitlab-service
  namespace: gitlab
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: gitlab-ce
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitlab/Service/gitlab-service:
apiVersion: v1
kind: Service
metadata:
  name: gitlab-service
  namespace: gitlab
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: gitlab-ce
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-service-desk-email-auth-token.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-service-desk-email-auth-token:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-service-desk-email-auth-token
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSB5VnBqRytadm5rNmF4SDlK
      b1F3OG04NEN2N3FWeHVqZ2dxYmp4eTltcm1nCkpJK0ZwZmQ4YitDV0U3N2I1b1cz
      SW4wcFp5UldUdUg2ZTZOVXkzU0h4ODgKLS0tIEpWc1dSZEhjMVFIV2s1azhnSEdm
      TWtZbXlTN045ekdQdE51YlV3OGpQTDQKiMrzJCOc05zqju3m0xikrPQZ/aXA79U8
      VSy5QZzR2ZPrm3Cfh9D4296jhk4A/Z7+zMvTo3q0OeR8J6fAPkD6+A==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-06-02T22:03:15Z"
  mac: ENC[AES256_GCM,data:P5dny/1FaxBGGYDdwnfqwMImgcbyobOZbbhupXiCOL0s6YlGg5oThbumGtAsYqF52I6OZPkl0bNUKMJKdQblHgiQ7HmX9K1hPyQF+BwMEm0NnR8xLhksjVFoVOnLAgMl3Yny60vojamt1bW1Q+jrxXqxnoTkXBricBP2NacLT88=,iv:za1y8Kw5qv0NGVJ97yLWQbaw1MGiZr/43as0Dujf4sk=,tag:NfJms7xUGUmPrmfvtbE6lw==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  authToken: ENC[AES256_GCM,data:diGNvFAIcgHnVTIxgxw/sdW/SiEdmDcKDr0FydazMgFUN0cF0042lNUw32E=,iv:C+iDstNPVxeN9TAf04+HE2+l1+229SfGZvljeCMZY0E=,tag:fOsVKm+iv3tYCJiDIO/unQ==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-shell.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-shell-secret:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-shell-secret
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBqVitRazkrODRVdUFaem9I
      YmZqaEdYUXR6aVlDSWtLSWJoek43UDhEckdBClpDL1ozUCsvNHVvL1ZIOEpTMysw
      VUtMZ216Z2FKcTd3OXgxUHVqYkJzRWcKLS0tIHdVMjNKSzNMS2ZHdnFFMlh0QzRt
      V0xUOER5d3pMRDB0NVFwVGJuRG4xazQKkMPJ1Asg6U5jxaTtd/NJA6/qVBXQzdM8
      UAFnaB+2dcq6LsXjPArEZL9SaSWAhGpoxctMlWRWVT33qLlp7BwiGA==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-05-30T00:05:28Z"
  mac: ENC[AES256_GCM,data:QF7n+Zq8mjW/xZz/WgcOWBeU9ayGUYUOSy4TVa7z6TDba73iVRwyAUDwm7CGHOdnVHl9dDxWsAa5QeCCnYnmGvO7Vxl9Dr7Y9KP2aTJMewrP/t/ITHjFYU0TLoL2/7ZAG+1YceTHsHoPs5/YgMX2comeBvKIZmTC+Gf0VBm6c1g=,iv:TG0HNURbCkjrZMDeCgfGbu3IX3IcGJPqC7bVjwh3H4c=,tag:eFeQRH/im/L6oWOAuL3KGQ==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  secret: ENC[AES256_GCM,data:TlgpN4eRVl4soyEUZFDPf5NY4Vd1O3WeJxelmhE16YrrCpo0gi+TVgGI8aRrUFmOibXCmrm27wg/sCoEMYoXmleclNkym20GAh1iyGtqbLUqXLgLr2QGXQ==,iv:WknWP0H4PVsOYbdJGxBd9GeAKFhxPRdXJHIul7b6xwA=,tag:9wj/Zgv14AoB4WR1Myk8nQ==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-shell-host-keys.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-shell-host-keys:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-shell-host-keys
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBLT0JzY2NPNFkzcHlKRTdq
      UjdmRnM0VkxsYm9ucEp2aldpZm84aWxnQnd3CkJTMnoybE5udFpTQW9VMktQQTha
      SzlxeVZ5VHM1Q1F1ZVpQdVhoZHEyY1UKLS0tIGVwa3NWN2I2cDhvTXhRQURlbUNX
      SSsrSlJDdUgwdnR2Y1p0Tk96Um9YTjgKqThUSs+Q49XLpcaXmoa6qcLSINW3Vp1l
      xgCQyRlartHSdg304DiSVOQtG/s3PD4WYT+uX1r728d/H+JecDhNnw==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-06-02T22:27:12Z"
  mac: ENC[AES256_GCM,data:eFyr5Cp85CaZ6v8H55xFe9Ki58peXfyZUfwe9aPcatBqQdd4e/yLnLXs31jy9ovm6bxK2z1g+teZ2V9kwQFedbl2ssAUda2pFpuLaXloAkhwwVbiapMDBQF5Wr0nP8i7kbtwdeIeSphjtXOoeUdHbgTsPWdfWaW+5PEHISg4JOo=,iv:Kz/GpyHbWgn3YKq/5fN7EjG+yDlk5/oKEFm72rn80x8=,tag:+c6jKAwsOQJipCEM2S+39w==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  ssh_host_ed25519_key: ENC[AES256_GCM,data:8LZCXBj+k9PdevYR8nOQM9ZTD6sMWqq2TQDAQh827WzjuZwxCQG2nBcioZXEYdbnexytTcZ5tG1S38DVgVVY8FBgRxUMDbHpjKgzpdrT2/hgmPhL+sIZnX9/4TbInDwlQl2NkpdVXAL87iT/Q8CuyyEmuIGgv9cYf8PQgCahSKXSFYldVfFrPZR48dcmHdwDaBXdODrTQ6l2HssifLHuvg7TtupJsqJXbMqezBbKgsJVPTZU5Wi7rwdxC1C23laNUggfWYP0XcUkDMguJ8blAPpEiWMInf3YrwBs9PHw99LW3nl29VehkCav1ic/ZKDmxUZge90I8EV7JQyV84ntuqzsPiiCeCwH9rh5qDH54zblSuTsmabf7UU33syLfKwE1UwS/rQ4L+ZOrZukxG03ZCrbGUjHXm7W0nkCW1EfKOlDpRxlmY7dDVyLswgdT8sy8xvs15gi/9J7qpVeSgxD5EJThIpp6eDSZ5pSfo4ZfCNSb5n46w5qs/epI3wKFQc+rx7epr+vmb+O1NOY5PSIYZPcbJwHr0iTDecjj7O2oiU9LgCoN1yN5PaHhh18/9wd,iv:6z2qrYwVYssbBbk5a1BbjHh79epzOKxoYGtiBGsHa60=,tag:84ycXJP9+fbE+uR/+9rLIg==,type:str]
  ssh_host_ed25519_key.pub: ENC[AES256_GCM,data:rynAtzEBJu6WB+NJ9pdFXQ6o551Un5pOdadXseW3FPqU1H4GuRCE9AF3/mtwhtfvqV50vLHO3/7t8KnVEqh13xK1dZ1r2wuLwprbJDHvjts6nMy8VHyfET9ccTThkXZLhOf9cjtHdRTfjPxb67s=,iv:tDiwXV4K1xP14X68B0QBvztO9CPrvEn5YsRfjcvA2FE=,tag:5/GAOASifuMyuIRdRbtRhA==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-shell-write.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitlab/Service/gitlab-write-shell:
apiVersion: v1
kind: Service
metadata:
  name: gitlab-write-shell
  namespace: gitlab
spec:
  ports:
  - name: ssh
    port: 22
    protocol: TCP
    targetPort: 2222
  selector:
    app: gitlab-shell
    release: gitlab
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-svc-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gitlab:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/name: gitlab
  name: gitlab
  namespace: default
spec:
  externalName: 192.168.0.56
  ports:
  - name: http
    port: 7080
    protocol: TCP
    targetPort: 7080
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-svc-ingress_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gitlab-registry:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/name: gitlab-registry
  name: gitlab-registry
  namespace: default
spec:
  externalName: 192.168.0.56
  ports:
  - name: http
    port: 7050
    protocol: TCP
    targetPort: 7050
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-svc-ingress_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gitlab-pages:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/name: gitlab-pages
  name: gitlab-pages
  namespace: default
spec:
  externalName: 192.168.0.56
  ports:
  - name: http
    port: 7091
    protocol: TCP
    targetPort: 7091
  type: ExternalName

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-svc-ingress_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/gitlab:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    auth.home.arpa/disabled: "true"
  labels:
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/name: gitlab
  name: gitlab
  namespace: default
spec:
  ingressClassName: traefik
  rules:
  - host: gitlab.${DOMAIN_NAME}
    http:
      paths:
      - backend:
          service:
            name: gitlab
            port:
              number: 7080
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-svc-ingress_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/gitlab-registry:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    auth.home.arpa/disabled: "true"
  labels:
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/name: gitlab-registry
  name: gitlab-registry
  namespace: default
spec:
  ingressClassName: traefik
  rules:
  - host: registry.${DOMAIN_NAME}
    http:
      paths:
      - backend:
          service:
            name: gitlab-registry
            port:
              number: 7050
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-svc-ingress_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/gitlab-pages:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    auth.home.arpa/disabled: "true"
  labels:
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/name: gitlab-pages
  name: gitlab-pages
  namespace: default
spec:
  ingressClassName: traefik
  rules:
  - host: '*.gitlab-pages.${DOMAIN_NAME}'
    http:
      paths:
      - backend:
          service:
            name: gitlab-pages
            port:
              number: 7091
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-token.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Secret/gitlab-token:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-token
  namespace: argocd
stringData:
  token: xxxxxx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-workhorse-secret.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-workhorse-secret:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-workhorse-secret
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBXRW9MamZsRU9DcDYzTkRl
      djlCdjNONWE0NXpUbUFSUTlIUVVqaWxrU0RjCnNGZFNzV1c0K0hjUEtOeHFLSFA0
      bUhtbXNaYnk5YU9NemdmQUZNSmFFY2sKLS0tIDRsUWZISml4Qll1U1FFOGVNUzdQ
      Y2RjcGV0dWFhWm5XR1dqMDZiK1IvOHcKA9wIyKd4zSJbTGJX8bUkUHQG+ppkejv6
      WE6w01+9lGCyl/SubPLucETAKGFqLiv049mKpytU0JVxn71v6fZJ2w==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-06-04T22:57:58Z"
  mac: ENC[AES256_GCM,data:53/iXcSO0OD0Y7CIzJZpFXZPlFx2m+Ah8lL6xai6O0BrtgSlXom4FwVO2S0m4Fe79rRKOWlasCyZXB/G/Uuoky9FODYCcdhB3R1bgiz/HeZUYYeBEYuSIlaCpppSFnIuofpK6HXNBtUVHZelfrN1n+ApJtKRqiIMGMJmpD2cL5w=,iv:DIGcZIUawQpSuDtWDnGQpogAH1O9rzb1S3+eHhAzNE4=,tag:LxQ/bnUm9IFFKY1vn/n6Ww==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  shared_secret: ENC[AES256_GCM,data:5IXf53EkZCTWB3uJFPmT81xp7bFHIsP8zYhlN6CJ14B6nvnAnAkxB7FwTHg=,iv:wrbWOvkPx5uqwjFbM6Bzc6KR+lz7D3NViteSDU3hw2o=,tag:BdnSdSEm75/a3ewkZirQqQ==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitlab-zoekt-basicauth.sops.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/gitlab-zoekt-basicauth:
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-zoekt-basicauth
  namespace: default
sops:
  age:
  - enc: |
      -----BEGIN AGE ENCRYPTED FILE-----
      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSB6b3BTc3B3dGpjQmt2M3FI
      Q1M2d2tNdGRZYVY1YmZSZW1SZWRpclJrTlh3CmtSSUFNRGp1N0xURDR6d0dQclpS
      T0x0SlJMTHZEMnlQRG5JV2pJVUdZYUkKLS0tIGU1Z2NYdEovUm9jYmZjSmorYzVO
      K21JS2JudnNHTktjYkVwcHR5ZldQMFEKNFqxmBRBkBKeEUyIyhqtzBQXFtg8ysqt
      W4wlrm+ALFzbG27/edCBNs5S/35C/JiMMUzkuRm2F63y5wW8/vhUzg==
      -----END AGE ENCRYPTED FILE-----
    recipient: age1euu8v7dznj6kjx28dqd4njgtxgw5thapckaptku9de3d4jrdy5nssvgcpz
  azure_kv: []
  encrypted_regex: ^(data|stringData)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2024-06-02T21:58:59Z"
  mac: ENC[AES256_GCM,data:DwTRfl4FXApvLpQWSbOGOEHp7EXSMETNmu73dN4Klr77nNX8lSfjGqn6XmbUCbq1uY81X3IpxWHLayX5VNB4IiXYxzS0LsAdiF3UFx0xTY2tE95FKVM/AjqHXlo7sRSVxvy/YaKSdMyj/oCD8uoqzzL4iUx3ktW6emyjTprGeAo=,iv:oUFfKKAYISbkYK7lWwbD4qPaOTLID1LYUNfCZseNKcg=,tag:T3awD16KfIPZ1Bqlw7UgEw==,type:str]
  pgp: []
  version: 3.8.1
stringData:
  gitlab_password: ENC[AES256_GCM,data:FWmdCLvVZEfqiqKkR3aMowweyJWlSJ7UueAw/OhqdNM/o48pGyWbVuH6G/c=,iv:ZJwdjuCVuKl3bM1OtGCRw6Cuedt5zheDFWT0xGmENew=,tag:TsYSYdUI39LENHS2RW57CQ==,type:str]
  gitlab_username: ENC[AES256_GCM,data:kVGDGh/f,iv:wwQcVuvzvmp2auBVYwTYjoLF7ymXnUn4OZG/DoFdN8g=,tag:D9/EXeEzXV2PkVrlxhlkSA==,type:str]

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitops-namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/openshift-gitops-operator:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    openshift.io/cluster-monitoring: "true"
  name: openshift-gitops-operator
  namespace: default
spec: {}

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/openshift-gitops-operator:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: openshift-gitops-operator
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/openshift-gitops-operator:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: openshift-gitops-operator
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/openshift-gitops-operator:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: openshift-gitops-operator
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/openshift-gitops-operator:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: openshift-gitops-operator
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitops-namespace1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/openshift-gitops-operator:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    openshift.io/cluster-monitoring: "true"
  name: openshift-gitops-operator
  namespace: default
spec: {}

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/openshift-gitops-operator:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: openshift-gitops-operator
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/openshift-gitops-operator:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: openshift-gitops-operator
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/openshift-gitops-operator:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: openshift-gitops-operator
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/openshift-gitops-operator:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: openshift-gitops-operator
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitops-operator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/gitops-operator:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: gitops-operator
  namespace: default
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          containers:
          - args:
            - git clone https://github.com/sandervanvugt/kube-app.git /tmp/kube-app
              && find /tmp/kube-app -name '*.yaml' -exec kubectl apply -f {} \;
            command:
            - sh
            - -e
            - -c
            image: sandervanvugt/gitops
            name: gitops-operator
          restartPolicy: Never
          serviceAccountName: gitops
  schedule: '*/2 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/gitops-operator

skipped mutate policy add-safe-to-evict -> resource default/CronJob/gitops-operator
policy disallow-latest-tag -> resource default/CronJob/gitops-operator failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/gitops-operator failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/gitops-operator failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/gitops-operator failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/gitops-operator failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/gitops-operator failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/gitops-operator failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 6, fail: 7, warn: 0, error: 0, skip: 3 

##### FILE: gitops-preprod-operator.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to preprod/CronJob/gitops-preprod-operator:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: gitops-preprod-operator
  namespace: preprod
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          containers:
          - args:
            - git clone https://github.com/sandervanvugt/preprod /preprod || (cd /preprod
              && git pull) && find /preprod -name '*.yaml' -exec kubectl apply -f
              {} \; && curl preprod | grep preproduction || exit 9 && find /preprod
              -type f -exec cp {} /prod/ \; && find /prod -type f -exec sed -i -e
              's/preprod/prod/g' {} \;
            command:
            - sh
            - -e
            - -c
            image: sandervanvugt/gittools
            name: gitops-operator
            volumeMounts:
            - mountPath: /preprod
              name: preprod
            - mountPath: /prod
              name: prod
          restartPolicy: Never
          serviceAccountName: gitops
          volumes:
          - hostPath:
              path: /preprod
            name: preprod
          - hostPath:
              path: /prod
            name: prod
  schedule: '*/2 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource preprod/CronJob/gitops-preprod-operator
policy disallow-latest-tag -> resource preprod/CronJob/gitops-preprod-operator failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource preprod/CronJob/gitops-preprod-operator failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource preprod/CronJob/gitops-preprod-operator failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource preprod/CronJob/gitops-preprod-operator failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource preprod/CronJob/gitops-preprod-operator failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource preprod/CronJob/gitops-preprod-operator failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource preprod/CronJob/gitops-preprod-operator failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: gitops-preprod-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pvpreprod:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
  name: pvpreprod
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 2Gi
  hostPath:
    path: /preprod
  storageClassName: preproduction

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitops-preprod-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-preprod:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-preprod
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: preproduction

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitops-prod-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pvprod:
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
  name: pvprod
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 2Gi
  hostPath:
    path: /production
  storageClassName: production

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitops-prod-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-prod:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-prod
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: production

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitops-pv-pod-preprod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/gitops-pod:
apiVersion: v1
kind: Pod
metadata:
  name: gitops-pod
  namespace: default
spec:
  containers:
  - image: nginx
    name: pv-container
    ports:
    - containerPort: 80
      name: http-server
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: pv-storage
  volumes:
  - name: pv-storage
    persistentVolumeClaim:
      claimName: pvc-preprod

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/gitops-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/gitops-pod
policy disallow-default-namespace -> resource default/Pod/gitops-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/gitops-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/gitops-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/gitops-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/gitops-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/gitops-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/gitops-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/gitops-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/gitops-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gitops-pv-pod-prod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/gitops-pod-prod:
apiVersion: v1
kind: Pod
metadata:
  name: gitops-pod-prod
  namespace: default
spec:
  containers:
  - image: nginx
    name: pv-container
    ports:
    - containerPort: 80
      name: http-server
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: pv-storage
  volumes:
  - name: pv-storage
    persistentVolumeClaim:
      claimName: pvc-prod

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/gitops-pod-prod

skipped mutate policy add-safe-to-evict -> resource default/Pod/gitops-pod-prod
policy disallow-default-namespace -> resource default/Pod/gitops-pod-prod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/gitops-pod-prod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/gitops-pod-prod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/gitops-pod-prod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/gitops-pod-prod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/gitops-pod-prod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/gitops-pod-prod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/gitops-pod-prod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/gitops-pod-prod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gitops-serviceacct.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to packages/ServiceAccount/pkg-gitops-pkgi-sa:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pkg-gitops-pkgi-sa
  namespace: packages

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitops-serviceacct_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/cluster-admin-cluster-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-admin-cluster-role
  namespace: default
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitops-serviceacct_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/cluster-admin-cluster-role-binding:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-admin-cluster-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin-cluster-role
subjects:
- kind: ServiceAccount
  name: pkg-gitops-pkgi-sa
  namespace: packages

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-git:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  labels:
    app: notes
  name: pod-git
  namespace: default
spec:
  containers:
  - image: php:apache
    name: container-git
    volumeMounts:
    - mountPath: /var/www/html
      name: git-volume
    - mountPath: /data
      name: data-volume
  volumes:
  - gitRepo:
      directory: .
      repository: https://github.com/shekeriev/k8s-notes.git
      revision: main
    name: git-volume
  - emptyDir: {}
    name: data-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-git
policy disallow-default-namespace -> resource default/Pod/pod-git failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/pod-git failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-git failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-git failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/pod-git failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/pod-git failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-git failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-git failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: git-postgres-database.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to db/Job/create-db-gitea:
apiVersion: batch/v1
kind: Job
metadata:
  name: create-db-gitea
  namespace: db
spec:
  activeDeadlineSeconds: 60
  backoffLimit: 7
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - "export PGPASSWORD=`echo -n \"$POSTGRES_PASSWORD\" | tr -d ' \n\r\t'`; psql
          --username=postgres --no-password --host=postgres.db --port=5432 --command
          \"CREATE ROLE gitea WITH LOGIN PASSWORD '!!!gitea';\" postgres && psql --username=postgres
          --no-password --host=postgres.db --port=5432 --command \"CREATE DATABASE
          giteadb WITH OWNER gitea TEMPLATE template0 ENCODING UTF8 LC_COLLATE 'en_US.UTF-8'
          LC_CTYPE 'en_US.UTF-8';\" postgres"
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: superUserPassword
              name: postgres-credentials
        image: postgres:16.1
        name: create-db
        resources:
          limits:
            memory: 32Mi
          requests:
            cpu: 5m
            memory: 16Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      restartPolicy: Never
      securityContext:
        runAsNonRoot: false
      serviceAccountName: generate-credentials
  ttlSecondsAfterFinished: 300

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource db/Job/create-db-gitea

skipped mutate policy add-safe-to-evict -> resource db/Job/create-db-gitea
policy drop-cap-net-raw -> resource db/Job/create-db-gitea failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource db/Job/create-db-gitea failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/

policy require-ro-rootfs -> resource db/Job/create-db-gitea failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource db/Job/create-db-gitea failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: git-refresh.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/cs548-git-refresh:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cs548-git-refresh
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/sh
            - /scripts/git_refresh.sh
            image: ubuntu:20.04
            name: ubuntu-cron-checker
            volumeMounts:
            - mountPath: /scripts
              name: config-volume
            - mountPath: /cs548-site
              name: cs548-site-volume
            - mountPath: /hy548_repo
              name: cs548-repo-volume
          restartPolicy: OnFailure
          volumes:
          - configMap:
              name: cs548-site-script
            name: config-volume
          - name: cs548-site-volume
            persistentVolumeClaim:
              claimName: cs548-site-pvc
          - name: cs548-repo-volume
            persistentVolumeClaim:
              claimName: cs548-repo-pvc
  schedule: 15 2 * * *

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/cs548-git-refresh

skipped mutate policy add-safe-to-evict -> resource default/CronJob/cs548-git-refresh
policy drop-all-capabilities -> resource default/CronJob/cs548-git-refresh failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/cs548-git-refresh failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/cs548-git-refresh failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/cs548-git-refresh failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/cs548-git-refresh failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/cs548-git-refresh failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: git-repo.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-gitrepo:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: pod-gitrepo
  name: pod-gitrepo
  namespace: default
spec:
  containers:
  - image: nginx
    name: repo
    ports:
    - containerPort: 80
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
    volumeMounts:
    - mountPath: /site
      name: git-volume
  volumes:
  - gitRepo:
      repository: https://github.com/higorbarbosa/SiteHTML-Treinamento.git
    name: git-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-gitrepo

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-gitrepo
policy disallow-default-namespace -> resource default/Pod/pod-gitrepo failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod-gitrepo failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod-gitrepo failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-gitrepo failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-gitrepo failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/pod-gitrepo failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/pod-gitrepo failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-gitrepo failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-gitrepo failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: git-repo1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/pod-gitrepo:
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: pod-gitrepo
  name: pod-gitrepo
  namespace: default
spec:
  containers:
  - image: nginx
    name: repo
    ports:
    - containerPort: 80
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
    volumeMounts:
    - mountPath: /site
      name: git-volume
  volumes:
  - gitRepo:
      repository: https://github.com/higorbarbosa/SiteHTML-Treinamento.git
    name: git-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-gitrepo

skipped mutate policy add-safe-to-evict -> resource default/Pod/pod-gitrepo
policy disallow-default-namespace -> resource default/Pod/pod-gitrepo failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/pod-gitrepo failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/pod-gitrepo failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/pod-gitrepo failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/pod-gitrepo failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/pod-gitrepo failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Pod/pod-gitrepo failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/pod-gitrepo failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/pod-gitrepo failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: git-repo-con.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gitops/Secret/private-modern-data-stack:
apiVersion: v1
kind: Secret
metadata:
  labels:
    argocd.argoproj.io/secret-type: repository
  name: private-modern-data-stack
  namespace: gitops
stringData:
  password: XXX
  url: https://github.com/WesleyJw/modern-data-stack.git
  username: not-used

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-repo-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Secret/lesson-158-private:
apiVersion: v1
kind: Secret
metadata:
  labels:
    argocd.argoproj.io/secret-type: repository
  name: lesson-158-private
  namespace: argocd
stringData:
  enableLfs: "true"
  insecure: "false"
  sshPrivateKey: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
    QyNTUxOQAAACAvG2MZK7C4yJzkfQcunxQp2OpOluYI+pSJmdfL4HNrwwAAAJine2Aip3tg
    IgAAAAtzc2gtZWQyNTUxOQAAACAvG2MZK7C4yJzkfQcunxQp2OpOluYI+pSJmdfL4HNrww
    AAAEApkokq4ThivZHCdSZE+xQBI/DvJki6B7QhPQUpGfzTTS8bYxkrsLjInOR9By6fFCnY
    6k6W5gj6lImZ18vgc2vDAAAAFWFyZ29jZEBhbnRvbnB1dHJhLmNvbQ==
    -----END OPENSSH PRIVATE KEY-----
  url: git@github.com:antonputra/lesson-158-private.git

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-repo-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Secret/lesson-158-private:
apiVersion: v1
kind: Secret
metadata:
  labels:
    argocd.argoproj.io/secret-type: repository
  name: lesson-158-private
  namespace: argocd
stringData:
  enableLfs: "true"
  insecure: "false"
  sshPrivateKey: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
    QyNTUxOQAAACAvG2MZK7C4yJzkfQcunxQp2OpOluYI+pSJmdfL4HNrwwAAAJine2Aip3tg
    IgAAAAtzc2gtZWQyNTUxOQAAACAvG2MZK7C4yJzkfQcunxQp2OpOluYI+pSJmdfL4HNrww
    AAAEApkokq4ThivZHCdSZE+xQBI/DvJki6B7QhPQUpGfzTTS8bYxkrsLjInOR9By6fFCnY
    6k6W5gj6lImZ18vgc2vDAAAAFWFyZ29jZEBhbnRvbnB1dHJhLmNvbQ==
    -----END OPENSSH PRIVATE KEY-----
  url: git@github.com:antonputra/lesson-158-private.git

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-repo-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Secret/lesson-158-private:
apiVersion: v1
kind: Secret
metadata:
  labels:
    argocd.argoproj.io/secret-type: repository
  name: lesson-158-private
  namespace: argocd
stringData:
  enableLfs: "true"
  insecure: "false"
  sshPrivateKey: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
    QyNTUxOQAAACAvG2MZK7C4yJzkfQcunxQp2OpOluYI+pSJmdfL4HNrwwAAAJine2Aip3tg
    IgAAAAtzc2gtZWQyNTUxOQAAACAvG2MZK7C4yJzkfQcunxQp2OpOluYI+pSJmdfL4HNrww
    AAAEApkokq4ThivZHCdSZE+xQBI/DvJki6B7QhPQUpGfzTTS8bYxkrsLjInOR9By6fFCnY
    6k6W5gj6lImZ18vgc2vDAAAAFWFyZ29jZEBhbnRvbnB1dHJhLmNvbQ==
    -----END OPENSSH PRIVATE KEY-----
  url: git@github.com:antonputra/lesson-158-private.git

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-repo-secret3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to argocd/Secret/lesson-158-private:
apiVersion: v1
kind: Secret
metadata:
  labels:
    argocd.argoproj.io/secret-type: repository
  name: lesson-158-private
  namespace: argocd
stringData:
  enableLfs: "true"
  insecure: "false"
  sshPrivateKey: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
    QyNTUxOQAAACAvG2MZK7C4yJzkfQcunxQp2OpOluYI+pSJmdfL4HNrwwAAAJine2Aip3tg
    IgAAAAtzc2gtZWQyNTUxOQAAACAvG2MZK7C4yJzkfQcunxQp2OpOluYI+pSJmdfL4HNrww
    AAAEApkokq4ThivZHCdSZE+xQBI/DvJki6B7QhPQUpGfzTTS8bYxkrsLjInOR9By6fFCnY
    6k6W5gj6lImZ18vgc2vDAAAAFWFyZ29jZEBhbnRvbnB1dHJhLmNvbQ==
    -----END OPENSSH PRIVATE KEY-----
  url: git@github.com:antonputra/lesson-158-private.git

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitrepository_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/gitrepository-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: gitrepository-editor-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: promoter
  name: gitrepository-editor-role
  namespace: default
rules:
- apiGroups:
  - promoter.argoproj.io
  resources:
  - gitrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - gitrepositories/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitrepository_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/gitrepository-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: gitrepository-viewer-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: promoter
  name: gitrepository-viewer-role
  namespace: default
rules:
- apiGroups:
  - promoter.argoproj.io
  resources:
  - gitrepositories
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - gitrepositories/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-repository4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/argo-cd-apps-git-repository:
apiVersion: v1
kind: Secret
metadata:
  labels:
    argocd.argoproj.io/secret-type: repository
  name: argo-cd-apps-git-repository
  namespace: default
stringData:
  project: default
  type: git
  url: <set-by-the-kustomize-overlay>

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gitrepo-volume-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/gitrepo-volume-pod:
apiVersion: v1
kind: Pod
metadata:
  name: gitrepo-volume-pod
  namespace: default
spec:
  containers:
  - image: nginx:alpine
    name: web-server
    ports:
    - containerPort: 80
      protocol: TCP
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - gitRepo:
      directory: .
      repository: https://github.com/luksa/kubia-website-example.git
      revision: master
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/gitrepo-volume-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/gitrepo-volume-pod
policy disallow-default-namespace -> resource default/Pod/gitrepo-volume-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/gitrepo-volume-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/gitrepo-volume-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/gitrepo-volume-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/gitrepo-volume-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/gitrepo-volume-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/gitrepo-volume-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/gitrepo-volume-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gitrepo-volume-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/gitrepo-volume-pod:
apiVersion: v1
kind: Pod
metadata:
  name: gitrepo-volume-pod
  namespace: default
spec:
  containers:
  - image: nginx:alpine
    name: web-server
    ports:
    - containerPort: 80
      protocol: TCP
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: html
      readOnly: true
  volumes:
  - gitRepo:
      directory: .
      repository: https://github.com/luksa/kubia-website-example.git
      revision: master
    name: html

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/gitrepo-volume-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/gitrepo-volume-pod
policy disallow-default-namespace -> resource default/Pod/gitrepo-volume-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/gitrepo-volume-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/gitrepo-volume-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/gitrepo-volume-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/gitrepo-volume-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/gitrepo-volume-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/gitrepo-volume-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/gitrepo-volume-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: git-resolver-config-cm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to tekton-pipelines/ConfigMap/git-resolver-config:
apiVersion: v1
data:
  api-token-secret-key: ""
  api-token-secret-name: ""
  api-token-secret-namespace: default
  default-org: ""
  default-revision: main
  default-url: https://github.com/tektoncd/catalog.git
  fetch-timeout: 1m
  scm-type: github
  server-url: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: tekton-pipeline
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    gitops.jenkins-x.io/pipeline: namespaces
  name: git-resolver-config
  namespace: tekton-pipelines

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-ssh-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to my-namespace/Secret/podinfo-auth:
apiVersion: v1
kind: Secret
metadata:
  name: podinfo-auth
  namespace: my-namespace
stringData:
  identity: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAaAAAABNlY2RzYS
    1zaGEyLW5pc3RwMjU2AAAACG5pc3RwMjU2AAAAQQTuiu+gGwLIu9E5J4vRshoIBHScKx4Y
    f9oniWMsLFHXq5p9GJ/eb9Cr3jgNACnGOIGOqlwBQvP5rCJuaJ0pCRKUAAAAuNE1GtvRNR
    rbAAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBO6K76AbAsi70Tkn
    i9GyGggEdJwrHhh/2ieJYywsUdermn0Yn95v0KveOA0AKcY4gY6qXAFC8/msIm5onSkJEp
    QAAAAhAPaO6PiN+1238KMrHg34M7XdftGypt2/UKEz2L2Pf40yAAAAH3NvbXRvY2hpb255
    ZWt3ZXJlQFNvbXRvY2hpcy1NQlA=
    -----END OPENSSH PRIVATE KEY-----
  identity.pub: |
    ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBO6K76AbAsi70Tkni9GyGggEdJwrHhh/2ieJYywsUdermn0Yn95v0KveOA0AKcY4gY6qXAFC8/msIm5onSkJEpQ=
  known_hosts: github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: git-ssh-secret-password.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to my-namespace/Secret/podinfo-auth:
apiVersion: v1
kind: Secret
metadata:
  name: podinfo-auth
  namespace: my-namespace
stringData:
  identity: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABA9i7hZ7m
    UBPxF7GuUswZiXAAAAEAAAAAEAAABoAAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlz
    dHAyNTYAAABBBOOAQfhwylg6WhJRXha2K1dJY5BG12nsS7YyFlKPAovOAC8d8rTOzjjDWu
    kG24JVRrXoWUN6eWWvxDvMd5pZT1wAAADAepYZPGTQnH6genhU+y9aD1GFO8BsODIllxEq
    T8n2eLAmPWYLv4HhgtmbqtsOmTE9sVM5ynYj/dAX1SreoGeoMEVFIt1cYtWgyuJccEiK4t
    1JQLFLMKnBRTY+yIdD6gX7tLRRL/jqzMR4XZF5/Yf48lvU4h+ljuOitWH3ea9142izl2Wk
    eXAfeoezJaDntZUUEYvKMI5U6iWVni+c7vOcJFTZgBeV4i54ua06tY5mE/mWARldiSDtJG
    yGEOankDnf
    -----END OPENSSH PRIVATE KEY-----
  identity.pub: |
    ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBOOAQfhwylg6WhJRXha2K1dJY5BG12nsS7YyFlKPAovOAC8d8rTOzjjDWukG24JVRrXoWUN6eWWvxDvMd5pZT1w=
  known_hosts: github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
  password: password

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gittools.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/gittools:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  creationTimestamp: null
  labels:
    run: gittools
  name: gittools
  namespace: default
spec:
  containers:
  - args:
    - sleep
    - infinity
    image: sandervanvugt/gitops
    name: gittools
    resources: {}
    volumeMounts:
    - mountPath: /preprod
      name: preprod
    - mountPath: /prod
      name: prod
    - mountPath: /kube-app
      name: kube-app
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  volumes:
  - hostPath:
      path: /preprod
    name: preprod
  - hostPath:
      path: /prod
    name: prod
  - hostPath:
      path: /kube-app
    name: kube-app
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/gittools
policy disallow-default-namespace -> resource default/Pod/gittools failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/gittools failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/gittools failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/gittools failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/gittools failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/gittools failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/gittools failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/gittools failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/gittools failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: gitVol.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gitvol:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitvol
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: gitvolumes
  template:
    metadata:
      labels:
        name: gitvolumes
      name: gitvol
    spec:
      containers:
      - image: httpd
        name: httpd
        volumeMounts:
        - mountPath: /var/usr/text
          name: git-vol
      volumes:
      - gitRepo:
          repository: https://github.com/Kumar-sanchit/kubernetes_volume.git
        name: git-vol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gitvol

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gitvol
policy disallow-default-namespace -> resource default/Deployment/gitvol failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/gitvol failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/gitvol failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gitvol failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gitvol failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gitvol failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gitvol failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gitvol failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gitvol failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gke_ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to mattermost-operator/Ingress/mattermost-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.global-static-ip-name: <static-ip-name-for-mattermost-ingress>
    networking.gke.io/managed-certificates: mattermost-cert
    networking.gke.io/v1beta1.FrontendConfig: mattermost-frontend-config
  name: mattermost-ingress
  namespace: mattermost-operator
spec:
  rules:
  - host: <Mattermost_URL>
    http:
      paths:
      - backend:
          service:
            name: mattermost
            port:
              number: 8065
        path: /*
        pathType: ImplementationSpecific
      - backend:
          service:
            name: php-ldap-client-service
            port:
              number: 80
        path: /oauth/*
        pathType: ImplementationSpecific

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke_resources.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/sakila-db:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sakila-db
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
      - image: docker.io/restsql/mysql-sakila:0.8.13
        name: database
        ports:
        - containerPort: 3306

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/sakila-db

skipped mutate policy add-safe-to-evict -> resource default/Deployment/sakila-db
policy disallow-default-namespace -> resource default/Deployment/sakila-db failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/sakila-db failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/sakila-db failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/sakila-db failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/sakila-db failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/sakila-db failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/sakila-db failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/sakila-db failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gke_resources_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/sakila-db-service:
apiVersion: v1
kind: Service
metadata:
  name: sakila-db-service
  namespace: default
spec:
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: database
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke_resources_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/quarkus-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quarkus-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quarkus-app
  template:
    metadata:
      labels:
        app: quarkus-app
    spec:
      containers:
      - env:
        - name: QUARKUS_DATASOURCE_JDBC_URL
          value: jdbc:mysql://sakila-db-service:3306/sakila
        - name: QUARKUS_DATASOURCE_PASSWORD
          value: sakila
        image: eu.gcr.io/liquid-idiom-410617/quarkus-tutorial:1.0.0-SNAPSHOT
        name: quarkus
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/quarkus-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/quarkus-deployment
policy disallow-default-namespace -> resource default/Deployment/quarkus-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/quarkus-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/quarkus-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/quarkus-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/quarkus-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/quarkus-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/quarkus-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/quarkus-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gke_resources_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/quarkus-service:
apiVersion: v1
kind: Service
metadata:
  name: quarkus-service
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: quarkus-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --enable-metrics=false
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.10.0@sha256:42b3f0e5d0846876b1791cd3afeb5f1cbbe4259d6f35651dcc1b5c980925379c
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: gke14_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: gke14_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: gke14_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke14_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gcp-devops-gke:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gcp-devops-gke
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gcp
  template:
    metadata:
      labels:
        app: gcp
    spec:
      containers:
      - env:
        - name: PORT
          value: "5000"
        image: gcr.io/theta-signal-418711/gcpdevops:latest
        name: gcp-devops-gke
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gcp-devops-gke

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gcp-devops-gke
policy disallow-default-namespace -> resource default/Deployment/gcp-devops-gke failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gke15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gcp-devops-dev/Service/gcp-devops-gke-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: gcp-cloud-build-deploy
  name: gcp-devops-gke-service
  namespace: gcp-devops-dev
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: gcp
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gcp-devops-gke:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gcp-devops-gke
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: gcp
  template:
    metadata:
      labels:
        app: gcp
    spec:
      containers:
      - env:
        - name: PORT
          value: "5000"
        image: gcr.io/qwiklabs-gcp-03-8d3de33afb85/gcpdevops:latest
        name: gcp-devops-gke
        ports:
        - containerPort: 5000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gcp-devops-gke

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gcp-devops-gke
policy disallow-default-namespace -> resource default/Deployment/gcp-devops-gke failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gcp-devops-gke failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gke18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to gcp-devops/Service/gke-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: gcp-cloud-build-deploy
  name: gke-service
  namespace: gcp-devops
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: gcp
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to puppeteer-gke-ns/Deployment/puppeteer-gke:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: puppeteer-gke
  name: puppeteer-gke
  namespace: puppeteer-gke-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: puppeteer-gke
  template:
    metadata:
      labels:
        app: puppeteer-gke
    spec:
      containers:
      - image: path to your artifactory docker image
        name: screenshotter
        resources:
          requests:
            cpu: 2000m
            memory: 1024Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource puppeteer-gke-ns/Deployment/puppeteer-gke

skipped mutate policy add-safe-to-evict -> resource puppeteer-gke-ns/Deployment/puppeteer-gke
policy disallow-latest-tag -> resource puppeteer-gke-ns/Deployment/puppeteer-gke failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource puppeteer-gke-ns/Deployment/puppeteer-gke failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource puppeteer-gke-ns/Deployment/puppeteer-gke failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource puppeteer-gke-ns/Deployment/puppeteer-gke failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource puppeteer-gke-ns/Deployment/puppeteer-gke failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource puppeteer-gke-ns/Deployment/puppeteer-gke failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource puppeteer-gke-ns/Deployment/puppeteer-gke failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource puppeteer-gke-ns/Deployment/puppeteer-gke failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gke6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/container-2-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-2-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: container-2
  template:
    metadata:
      labels:
        app: container-2
    spec:
      containers:
      - image: us-central1-docker.pkg.dev/cloud-computing-401614/image-repository/container-2:latest
        name: container-2
        ports:
        - containerPort: 6030
        volumeMounts:
        - mountPath: /gke_PV_dir
          name: mount-name-common-pv
      volumes:
      - name: mount-name-common-pv
        persistentVolumeClaim:
          claimName: pvc-claim-name

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/container-2-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/container-2-deployment
policy disallow-default-namespace -> resource default/Deployment/container-2-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/container-2-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/container-2-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/container-2-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/container-2-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/container-2-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/container-2-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/container-2-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/container-2-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gke6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/container-2-service:
apiVersion: v1
kind: Service
metadata:
  name: container-2-service
  namespace: default
spec:
  ports:
  - port: 6030
    protocol: TCP
    targetPort: 6030
  selector:
    app: container-2
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/container-2-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --enable-metrics=false
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.10.0@sha256:42b3f0e5d0846876b1791cd3afeb5f1cbbe4259d6f35651dcc1b5c980925379c
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: gke-deploy_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: gke-deploy_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: gke-deploy_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ingress-nginx
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ingress-nginx:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ingress-nginx
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ingress-nginx
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ingress-nginx:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ingress-nginx
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx:
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ConfigMap/ingress-nginx-controller:
apiVersion: v1
data:
  allow-snippet-annotations: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Service/ingress-nginx-controller-admission:
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Deployment/ingress-nginx-controller:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --election-id=ingress-nginx-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --enable-metrics=false
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.k8s.io/ingress-nginx/controller:v1.10.0@sha256:42b3f0e5d0846876b1791cd3afeb5f1cbbe4259d6f35651dcc1b5c980925379c
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 101
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Deployment/ingress-nginx-controller
policy drop-cap-net-raw -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-ro-rootfs -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource ingress-nginx/Deployment/ingress-nginx-controller failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 4, warn: 0, error: 0, skip: 2 

##### FILE: gke-deploy1_15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-create:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-create
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-create failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: gke-deploy1_16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Job/ingress-nginx-admission-patch:
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.10.0
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0@sha256:44d1d0e9f19c63f58b380c5fddaca7cf22c7cee564adeff365225a5df5ef3334
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch

skipped mutate policy add-safe-to-evict -> resource ingress-nginx/Job/ingress-nginx-admission-patch
policy drop-cap-net-raw -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource ingress-nginx/Job/ingress-nginx-admission-patch failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 11, fail: 3, warn: 0, error: 0, skip: 2 

##### FILE: gke-deploy1_17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/IngressClass/nginx:
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: nginx
  namespace: default
spec:
  controller: k8s.io/ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ValidatingWebhookConfiguration/ingress-nginx-admission:
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/ServiceAccount/ingress-nginx-admission:
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - ingress-nginx-leader
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/Role/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: default
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ingress-nginx/RoleBinding/ingress-nginx-admission:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-deploy1_9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/ingress-nginx:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.10.0
  name: ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to taskapp/Ingress/web:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: gce
  labels:
    app: web
  name: web
  namespace: taskapp
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: web
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.policy disallow-empty-ingress-host -> resource taskapp/Ingress/web failed:
1 - disallow-empty-ingress-host The Ingress host name must be defined, not empty.


pass: 0, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: gke-node-server-1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gke-node-deployment-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gke-node-deployment-1
  name: gke-node-deployment-1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gke-node-deployment-1
  template:
    metadata:
      labels:
        app: gke-node-deployment-1
    spec:
      containers:
      - image: us-central1-docker.pkg.dev/k8-assignment-ashish/node-server-repo/node-server-1:COMMIT_SHA
        imagePullPolicy: Always
        name: gke-node-deployment-1
        ports:
        - containerPort: 6000
        volumeMounts:
        - mountPath: /ashish_PV_dir
          name: gke-node-pv
      volumes:
      - name: gke-node-pv
        persistentVolumeClaim:
          claimName: gke-node-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gke-node-deployment-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gke-node-deployment-1
policy disallow-default-namespace -> resource default/Deployment/gke-node-deployment-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gke-node-server-1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gke-node-service-1:
apiVersion: v1
kind: Service
metadata:
  name: gke-node-service-1
  namespace: default
spec:
  ports:
  - nodePort: 32001
    port: 80
    protocol: TCP
    targetPort: 6000
  selector:
    app: gke-node-deployment-1
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-node-server-11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gke-node-deployment-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gke-node-deployment-1
  name: gke-node-deployment-1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gke-node-deployment-1
  template:
    metadata:
      labels:
        app: gke-node-deployment-1
    spec:
      containers:
      - image: us-central1-docker.pkg.dev/k8-assignment-ashish/node-server-repo/node-server-1:COMMIT_SHA
        imagePullPolicy: Always
        name: gke-node-deployment-1
        ports:
        - containerPort: 6000
        volumeMounts:
        - mountPath: /ashish_PV_dir
          name: gke-node-pv
      volumes:
      - name: gke-node-pv
        persistentVolumeClaim:
          claimName: gke-node-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gke-node-deployment-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gke-node-deployment-1
policy disallow-default-namespace -> resource default/Deployment/gke-node-deployment-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gke-node-deployment-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gke-node-server-11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gke-node-service-1:
apiVersion: v1
kind: Service
metadata:
  name: gke-node-service-1
  namespace: default
spec:
  ports:
  - nodePort: 32001
    port: 80
    protocol: TCP
    targetPort: 6000
  selector:
    app: gke-node-deployment-1
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-node-server-2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gke-node-deployment-2:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gke-node-deployment-2
  name: gke-node-deployment-2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gke-node-deployment-2
  template:
    metadata:
      labels:
        app: gke-node-deployment-2
    spec:
      containers:
      - image: us-central1-docker.pkg.dev/k8-assignment-ashish/node-server-repo/node-server-2:COMMIT_SHA
        name: gke-node-deployment-2
        ports:
        - containerPort: 3001
        volumeMounts:
        - mountPath: /ashish_PV_dir
          name: gke-node-pv
      volumes:
      - name: gke-node-pv
        persistentVolumeClaim:
          claimName: gke-node-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gke-node-deployment-2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gke-node-deployment-2
policy disallow-default-namespace -> resource default/Deployment/gke-node-deployment-2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gke-node-server-2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gke-node-service-2:
apiVersion: v1
kind: Service
metadata:
  name: gke-node-service-2
  namespace: default
spec:
  ports:
  - port: 3001
    protocol: TCP
    targetPort: 3001
  selector:
    app: gke-node-deployment-2

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-node-server-21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gke-node-deployment-2:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gke-node-deployment-2
  name: gke-node-deployment-2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gke-node-deployment-2
  template:
    metadata:
      labels:
        app: gke-node-deployment-2
    spec:
      containers:
      - image: us-central1-docker.pkg.dev/k8-assignment-ashish/node-server-repo/node-server-2:COMMIT_SHA
        name: gke-node-deployment-2
        ports:
        - containerPort: 3001
        volumeMounts:
        - mountPath: /ashish_PV_dir
          name: gke-node-pv
      volumes:
      - name: gke-node-pv
        persistentVolumeClaim:
          claimName: gke-node-pvc

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gke-node-deployment-2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gke-node-deployment-2
policy disallow-default-namespace -> resource default/Deployment/gke-node-deployment-2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gke-node-deployment-2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gke-node-server-21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gke-node-service-2:
apiVersion: v1
kind: Service
metadata:
  name: gke-node-service-2
  namespace: default
spec:
  ports:
  - port: 3001
    protocol: TCP
    targetPort: 3001
  selector:
    app: gke-node-deployment-2

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/pvc-claim-name:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-claim-name
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gke-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/container-1-service:
apiVersion: v1
kind: Service
metadata:
  name: container-1-service
  namespace: default
spec:
  ports:
  - port: 6000
    protocol: TCP
    targetPort: 6000
  selector:
    app: container-1
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glaceon_v1alpha1_machineproxy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/flycast:
apiVersion: v1
kind: Namespace
metadata:
  name: flycast
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/flycast:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: flycast
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/flycast:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: flycast
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/flycast:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: flycast
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/flycast:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: flycast
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glance2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/glance:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: glance
  namespace: default
spec:
  selector:
    matchLabels:
      app: glance
  template:
    metadata:
      labels:
        app: glance
    spec:
      containers:
      - env:
        - name: TZ
          value: America/Montreal
        image: glanceapp/glance:v0.7.7
        name: glance
        ports:
        - containerPort: 8080
          name: web
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /app/config/glance.yml
          name: config
          subPath: glance.yml
      volumes:
      - configMap:
          name: glance-config
        name: config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/glance

skipped mutate policy add-safe-to-evict -> resource default/Deployment/glance
policy disallow-default-namespace -> resource default/Deployment/glance failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/glance failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/glance failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/glance failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/glance failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/requests/

policy require-pod-probes -> resource default/Deployment/glance failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/glance failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/glance failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: glance2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/glance:
apiVersion: v1
kind: Service
metadata:
  name: glance
  namespace: default
spec:
  ports:
  - name: web
    port: 8080
    targetPort: web
  selector:
    app: glance

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glances-claim0-persistentvolumeclaim.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/glances-claim0:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: glances-claim0
  name: glances-claim0
  namespace: default
spec:
  accessModes:
  - ReadOnlyMany
  resources:
    requests:
      storage: 100Mi
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glances-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/glances:
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: glances
  name: glances
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: glances
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/net: "true"
        io.kompose.service: glances
    spec:
      containers:
      - env:
        - name: GLANCES_OPT
          value: -w
        image: nicolargo/glances
        name: glances
        ports:
        - containerPort: 61208
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: glances-claim0
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: glances-claim0
        persistentVolumeClaim:
          claimName: glances-claim0
          readOnly: true
status: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/glances

skipped mutate policy add-safe-to-evict -> resource default/Deployment/glances
policy disallow-default-namespace -> resource default/Deployment/glances failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/glances failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/glances failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/glances failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/glances failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/glances failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/glances failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/glances failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/glances failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: glances-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/glances:
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: glances
  name: glances
  namespace: default
spec:
  ports:
  - name: "61208"
    port: 61208
    targetPort: 61208
  selector:
    io.kompose.service: glances
status:
  loadBalancer: {}

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: global-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/global-configmap:
apiVersion: v1
data:
  AIRFLOW_PROJ_DIR: ./services/airflow
  AIRFLOW_UID: "501"
  AIRFLOW_WEBSERVER_PORT: "8080"
  CADVISOR_PORT: "8089"
  FORECAST_SERVICE_PORT: "4242"
  FORECAST_TABLE_NAME: forecast_results
  GRAFANA_PORT: "3000"
  KAFKA_TOPIC: sale_rossman_store
  KAFKA_UI_PORT: "8800"
  MAIN_DB_PW: SuperSecurePwdHere
  MLFLOW_ARTIFACT_ROOT: /storage/mlruns/
  MLFLOW_PORT: "5050"
  NGINX_PORT: "80"
  POSTGRES_PORT: "5432"
  PROMETHEUS_PORT: "9090"
  RAY_CLIENT_SERVER_PORT: "10001"
  RAY_DASHBOARD_PORT: "8265"
  RAY_HEAD_PORT: "6379"
  RAY_METRICS_EXPORT_PORT: "6565"
  SALES_TABLE_NAME: rossman_sales
  SPARK_STREAM_CHECKPOINTS_PATH: /opt/airflow/spark_streaming_checkpoints
  TRAINING_SERVICE_PORT: "4243"
  WEB_UI_PORT: "8000"
kind: ConfigMap
metadata:
  name: global-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: global-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/global-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-cert: grow-app-tls
  labels:
    name: global-ingress
  name: global-ingress
  namespace: default
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - grow-as-team.com
    secretName: grow-app-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: globaltenantresource_editor_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/globaltenantresource-editor-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: globaltenantresource-editor-role
  namespace: default
rules:
- apiGroups:
  - capsule.clastix.io
  resources:
  - globaltenantresources
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - capsule.clastix.io
  resources:
  - globaltenantresources/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: globaltenantresource_viewer_role.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRole/globaltenantresource-viewer-role:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: globaltenantresource-viewer-role
  namespace: default
rules:
- apiGroups:
  - capsule.clastix.io
  resources:
  - globaltenantresources
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - capsule.clastix.io
  resources:
  - globaltenantresources/status
  verbs:
  - get

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glpi.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/glpi:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    type: glpi
  name: glpi
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      type: glpi
  template:
    metadata:
      labels:
        type: glpi
    spec:
      containers:
      - args:
        - script.sh
        command:
        - /bin/bash
        image: localhost:5000/glpi:v1
        name: glpi
        volumeMounts:
        - mountPath: /var/www/html/glpi/config
          name: config
        - mountPath: /var/www/html/glpi/files
          name: files
        - mountPath: /var/www/html/glpi/marketplace
          name: marketplace
        - mountPath: /var/www/html/glpi/plugin
          name: plugin
      imagePullSecrets:
      - name: auth
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: config
      - name: files
        persistentVolumeClaim:
          claimName: files
      - name: marketplace
        persistentVolumeClaim:
          claimName: marketplace
      - name: plugin
        persistentVolumeClaim:
          claimName: plugin

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/glpi

skipped mutate policy add-safe-to-evict -> resource default/Deployment/glpi
policy disallow-default-namespace -> resource default/Deployment/glpi failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/glpi failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/glpi failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/glpi failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/glpi failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/glpi failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/glpi failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/glpi failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: glpi-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/glpi-ingress:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  labels:
    type: glpi
  name: glpi-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: '*.killercoda.com'
    http:
      paths:
      - backend:
          service:
            name: glpi
            port:
              number: 80
        path: /
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glpi-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/glpi:
apiVersion: v1
kind: Service
metadata:
  name: glpi
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    type: glpi

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gluetun-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to media/ConfigMap/gluetun-config:
apiVersion: v1
data:
  FIREWALL_INPUT_PORTS: 8000,8080,4000
  PORT_FORWARD_ONLY: "true"
  SERVER_REGIONS: CA Toronto
  TZ: America/Chicago
  VPN_PORT_FORWARDING: "on"
  VPN_SERVICE_PROVIDER: private internet access
kind: ConfigMap
metadata:
  name: gluetun-config
  namespace: media

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gluetun-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to media/Ingress/gluetun:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,192.168.0.0/16,172.20.0.0/12,10.244.0.0/16
  name: gluetun
  namespace: media
spec:
  ingressClassName: nginx
  rules:
  - host: gluetun.local.abbottland.io
    http:
      paths:
      - backend:
          service:
            name: gluetun-http
            port:
              number: 8000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - gluetun.local.abbottland.io
    secretName: gluetun-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gluetun-pvc-config.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to media/PersistentVolumeClaim/gluetun-config:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gluetun-config
  namespace: media
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Mi
  storageClassName: nas-storage

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gluetun-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to media/Service/gluetun-http:
apiVersion: v1
kind: Service
metadata:
  labels:
    api: gluetun
  name: gluetun-http
  namespace: media
spec:
  ports:
  - port: 8000
    protocol: TCP
  selector:
    api: gluetun

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gluetun-service-http-proxy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to media/Service/gluetun-http-proxy:
apiVersion: v1
kind: Service
metadata:
  labels:
    api: gluetun
  name: gluetun-http-proxy
  namespace: media
spec:
  ports:
  - port: 8888
    protocol: TCP
  selector:
    api: gluetun

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gluetun-sync-configmap.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to media/ConfigMap/gluetun-sync-config:
apiVersion: v1
data:
  CRON_EXPRESSION: '*/20 * * * *'
  GLUETUN_API_HOST: http://localhost:8000
  PORT: "4000"
  QBITTORRENT_API_HOST: http://localhost:8080
  QBITTORRENT_USERNAME: admin
kind: ConfigMap
metadata:
  name: gluetun-sync-config
  namespace: media

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gluetun-sync-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to media/Ingress/gluetun-sync:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,192.168.0.0/16,172.20.0.0/12,10.244.0.0/16
  name: gluetun-sync
  namespace: media
spec:
  ingressClassName: nginx
  rules:
  - host: gluetun-sync.local.abbottland.io
    http:
      paths:
      - backend:
          service:
            name: gluetun-sync
            port:
              number: 4000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - gluetun-sync.local.abbottland.io
    secretName: gluetun-sync-tls

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gluetun-sync-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to media/Service/gluetun-sync:
apiVersion: v1
kind: Service
metadata:
  labels:
    api: gluetun
  name: gluetun-sync
  namespace: media
spec:
  ports:
  - port: 4000
    protocol: TCP
  selector:
    api: gluetun

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-endpoints.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to spark-cluster/Endpoints/glusterfs-cluster:
apiVersion: v1
kind: Endpoints
metadata:
  name: glusterfs-cluster
  namespace: spark-cluster
subsets:
- addresses:
  - ip: 192.168.30.104
  ports:
  - port: 1
- addresses:
  - ip: 192.168.30.105
  ports:
  - port: 1

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-endpoints1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Endpoints/glusterfs-cluster:
apiVersion: v1
kind: Endpoints
metadata:
  name: glusterfs-cluster
  namespace: default
subsets:
- addresses:
  - ip: 10.240.106.152
  ports:
  - port: 1
- addresses:
  - ip: 10.240.79.157
  ports:
  - port: 1

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-endpoints2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to spark-cluster/Endpoints/glusterfs-cluster:
apiVersion: v1
kind: Endpoints
metadata:
  name: glusterfs-cluster
  namespace: spark-cluster
subsets:
- addresses:
  - ip: 192.168.30.104
  ports:
  - port: 1
- addresses:
  - ip: 192.168.30.105
  ports:
  - port: 1

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-endpoints3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Endpoints/glusterfs-cluster:
apiVersion: v1
kind: Endpoints
metadata:
  name: glusterfs-cluster
  namespace: default
subsets:
- addresses:
  - ip: 10.240.106.152
  ports:
  - port: 1
- addresses:
  - ip: 10.240.79.157
  ports:
  - port: 1

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-endpoints4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to spark-cluster/Endpoints/glusterfs-cluster:
apiVersion: v1
kind: Endpoints
metadata:
  name: glusterfs-cluster
  namespace: spark-cluster
subsets:
- addresses:
  - ip: 192.168.30.104
  ports:
  - port: 1
- addresses:
  - ip: 192.168.30.105
  ports:
  - port: 1

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-endpoints5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Endpoints/glusterfs-cluster:
apiVersion: v1
kind: Endpoints
metadata:
  name: glusterfs-cluster
  namespace: default
subsets:
- addresses:
  - ip: 10.240.106.152
  ports:
  - port: 1
- addresses:
  - ip: 10.240.79.157
  ports:
  - port: 1

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/glusterfs:
apiVersion: v1
kind: Pod
metadata:
  name: glusterfs
  namespace: default
spec:
  containers:
  - image: nginx
    name: glusterfs
    volumeMounts:
    - mountPath: /mnt/glusterfs
      name: glusterfsvol
  volumes:
  - glusterfs:
      endpoints: glusterfs-cluster
      path: kube_vol
      readOnly: true
    name: glusterfsvol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/glusterfs

skipped mutate policy add-safe-to-evict -> resource default/Pod/glusterfs
policy disallow-default-namespace -> resource default/Pod/glusterfs failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/glusterfs failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/glusterfs failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/glusterfs failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/glusterfs failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/glusterfs failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/glusterfs failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/glusterfs failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/glusterfs failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: glusterfs-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/glusterfs:
apiVersion: v1
kind: Pod
metadata:
  name: glusterfs
  namespace: default
spec:
  containers:
  - image: nginx
    name: glusterfs
    volumeMounts:
    - mountPath: /mnt/glusterfs
      name: glusterfsvol
  volumes:
  - glusterfs:
      endpoints: glusterfs-cluster
      path: kube_vol
      readOnly: true
    name: glusterfsvol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/glusterfs

skipped mutate policy add-safe-to-evict -> resource default/Pod/glusterfs
policy disallow-default-namespace -> resource default/Pod/glusterfs failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/glusterfs failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/glusterfs failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/glusterfs failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/glusterfs failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/glusterfs failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/glusterfs failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/glusterfs failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/glusterfs failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: glusterfs-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/glusterfs:
apiVersion: v1
kind: Pod
metadata:
  name: glusterfs
  namespace: default
spec:
  containers:
  - image: nginx
    name: glusterfs
    volumeMounts:
    - mountPath: /mnt/glusterfs
      name: glusterfsvol
  volumes:
  - glusterfs:
      endpoints: glusterfs-cluster
      path: kube_vol
      readOnly: true
    name: glusterfsvol

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/glusterfs

skipped mutate policy add-safe-to-evict -> resource default/Pod/glusterfs
policy disallow-default-namespace -> resource default/Pod/glusterfs failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/glusterfs failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/glusterfs failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/glusterfs failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/glusterfs failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/glusterfs failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/glusterfs failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/glusterfs failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/glusterfs failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: glusterfs-pv.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/gluster-dev-volume:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: gluster-dev-volume
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 8Gi
  glusterfs:
    endpoints: glusterfs-cluster
    path: k8s-volume
    readOnly: false

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-pv1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/gluster-dev-volume:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: gluster-dev-volume
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 8Gi
  glusterfs:
    endpoints: glusterfs-cluster
    path: k8s-volume
    readOnly: false

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-pvc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/glusterfs-nginx:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: glusterfs-nginx
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 8Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-pvc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolumeClaim/glusterfs-nginx:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: glusterfs-nginx
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 8Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/heketi-secret:
apiVersion: v1
data:
  key: bXlwYXNzd29yZA==
kind: Secret
metadata:
  name: heketi-secret
  namespace: default
type: kubernetes.io/glusterfs

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/heketi-secret:
apiVersion: v1
data:
  key: bXlwYXNzd29yZA==
kind: Secret
metadata:
  name: heketi-secret
  namespace: default
type: kubernetes.io/glusterfs

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-secret2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/heketi-secret:
apiVersion: v1
data:
  key: bXlwYXNzd29yZA==
kind: Secret
metadata:
  name: heketi-secret
  namespace: default
type: kubernetes.io/glusterfs

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/glusterfs-cluster:
apiVersion: v1
kind: Service
metadata:
  name: glusterfs-cluster
  namespace: default
spec:
  ports:
  - port: 1

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/glusterfs-cluster:
apiVersion: v1
kind: Service
metadata:
  name: glusterfs-cluster
  namespace: default
spec:
  ports:
  - port: 1

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-service2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/glusterfs-cluster:
apiVersion: v1
kind: Service
metadata:
  name: glusterfs-cluster
  namespace: default
spec:
  ports:
  - port: 1

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-storageclass.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/slow:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: slow
  namespace: default
parameters:
  clusterid: 630372ccdc720a92c681fb928f27b53f
  customepnameprefix: dbstorage
  gidMax: "50000"
  gidMin: "40000"
  resturl: http://127.0.0.1:8081
  restuser: admin
  secretName: heketi-secret
  secretNamespace: default
  snapfactor: "10"
  volumenameprefix: dept-dev
  volumeoptions: client.ssl on, server.ssl on
  volumetype: replicate:3
provisioner: kubernetes.io/glusterfs

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-storageclass1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/slow:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: slow
  namespace: default
parameters:
  clusterid: 630372ccdc720a92c681fb928f27b53f
  customepnameprefix: dbstorage
  gidMax: "50000"
  gidMin: "40000"
  resturl: http://127.0.0.1:8081
  restuser: admin
  secretName: heketi-secret
  secretNamespace: default
  snapfactor: "10"
  volumenameprefix: dept-dev
  volumeoptions: client.ssl on, server.ssl on
  volumetype: replicate:3
provisioner: kubernetes.io/glusterfs

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: glusterfs-storageclass2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/slow:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: slow
  namespace: default
parameters:
  clusterid: 630372ccdc720a92c681fb928f27b53f
  customepnameprefix: dbstorage
  gidMax: "50000"
  gidMin: "40000"
  resturl: http://127.0.0.1:8081
  restuser: admin
  secretName: heketi-secret
  secretNamespace: default
  snapfactor: "10"
  volumenameprefix: dept-dev
  volumeoptions: client.ssl on, server.ssl on
  volumetype: replicate:3
provisioner: kubernetes.io/glusterfs

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gnb-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/ueransim-gnb:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ueransim
    component: gnb
    name: gnb
  name: ueransim-gnb
  namespace: default
spec:
  replicas: null
  selector:
    matchLabels:
      app: ueransim
      component: gnb
      name: gnb
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: '[ { "name": "n2network", "interface": "n2",
          "ips": [ "10.10.2.22/24" ] }, { "name": "n3network", "interface": "n3",
          "ips": [ "10.10.3.22/24" ] } ]'
      labels:
        app: ueransim
        component: gnb
        name: gnb
    spec:
      containers:
      - command:
        - /ueransim/config/wrapper.sh
        image: edierbra/ueransim:v3.2.6
        name: gnb
        ports:
        - containerPort: 4997
          name: gnb-ue
          protocol: UDP
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        volumeMounts:
        - mountPath: /ueransim/config
          name: gnb-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - configMap:
          items:
          - key: free5gc-gnb.yaml
            path: free5gc-gnb.yaml
          - key: wrapper.sh
            mode: 511
            path: wrapper.sh
          name: gnb-configmap
        name: gnb-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/ueransim-gnb

skipped mutate policy add-safe-to-evict -> resource default/Deployment/ueransim-gnb
policy disallow-default-namespace -> resource default/Deployment/ueransim-gnb failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/ueransim-gnb failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/ueransim-gnb failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/ueransim-gnb failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/ueransim-gnb failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/ueransim-gnb failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/ueransim-gnb failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: gnb-service1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gnb-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ueransim
    component: gnb
    name: gnb
  name: gnb-service
  namespace: default
spec:
  ports:
  - nodePort: null
    port: 4997
    protocol: UDP
  selector:
    app: ueransim
    component: gnb
    name: gnb
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: go4cloud_deploy-webapp-nfs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to webapp/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webapp-nfs
  name: webapp
  namespace: webapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webapp-nfs
  template:
    metadata:
      labels:
        app: webapp-nfs
    spec:
      containers:
      - image: nginx:1.23.2
        name: nginx
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: vol-nfs
      volumes:
      - name: vol-nfs
        persistentVolumeClaim:
          claimName: pvc-nfs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource webapp/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource webapp/Deployment/webapp
policy drop-all-capabilities -> resource webapp/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource webapp/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource webapp/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: go4cloud_deploy-webapp-nfs1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to webapp/Deployment/webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webapp-nfs
  name: webapp
  namespace: webapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webapp-nfs
  template:
    metadata:
      labels:
        app: webapp-nfs
    spec:
      containers:
      - image: nginx:1.23.2
        name: nginx
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: vol-nfs
      volumes:
      - name: vol-nfs
        persistentVolumeClaim:
          claimName: pvc-nfs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource webapp/Deployment/webapp

skipped mutate policy add-safe-to-evict -> resource webapp/Deployment/webapp
policy drop-all-capabilities -> resource webapp/Deployment/webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource webapp/Deployment/webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource webapp/Deployment/webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource webapp/Deployment/webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: go4cloud_pvc-nfs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to webapp/PersistentVolumeClaim/pvc-nfs:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nfs
  namespace: webapp
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: go4cloud_pvc-nfs1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to webapp/PersistentVolumeClaim/pvc-nfs:
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nfs
  namespace: webapp
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: go4cloud_pv-nfs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-nfs:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 10Gi
  nfs:
    path: /srv/share
    readOnly: false
    server: k8scp
  persistentVolumeReclaimPolicy: Retain

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: go4cloud_pv-nfs1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/PersistentVolume/pv-nfs:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 10Gi
  nfs:
    path: /srv/share
    readOnly: false
    server: k8scp
  persistentVolumeReclaimPolicy: Retain

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goalora-ha2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalsetter/Service/goalora-ha2:
apiVersion: v1
kind: Service
metadata:
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  labels:
    postgres-operator.crunchydata.com/cluster: goalora
    postgres-operator.crunchydata.com/patroni: goalora-ha
    velero.io/backup-name: backup
    velero.io/restore-name: restore-itd
  name: goalora-ha2
  namespace: goalsetter
spec:
  allocateLoadBalancerNodePorts: true
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: postgres
    nodePort: 32118
    port: 5432
    protocol: TCP
    targetPort: postgres
  selector:
    postgres-operator.crunchydata.com/patroni: goalora-ha
  sessionAffinity: None
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goalora-ha21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalsetter/Service/goalora-ha2:
apiVersion: v1
kind: Service
metadata:
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  labels:
    postgres-operator.crunchydata.com/cluster: goalora
    postgres-operator.crunchydata.com/patroni: goalora-ha
    velero.io/backup-name: backup
    velero.io/restore-name: restore-itd
  name: goalora-ha2
  namespace: goalsetter
spec:
  allocateLoadBalancerNodePorts: true
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: postgres
    nodePort: 32118
    port: 5432
    protocol: TCP
    targetPort: postgres
  selector:
    postgres-operator.crunchydata.com/patroni: goalora-ha
  sessionAffinity: None
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goalora-landing-page-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/goalora-landing-page:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: goalora-landing-page
    app.kubernetes.io/component: goalora-landing-page
    app.kubernetes.io/instance: goalora-landing-page
    app.kubernetes.io/name: goalora-landing-page
    app.kubernetes.io/part-of: goalora-landing-page
    app.openshift.io/runtime: httpd
  name: goalora-landing-page
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: goalora-landing-page
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: goalora-landing-page
        deployment: goalora-landing-page
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/goalsetter/goalora-landing-page
        imagePullPolicy: Always
        name: goalora-landing-page
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/goalora-landing-page

skipped mutate policy add-safe-to-evict -> resource default/Deployment/goalora-landing-page
policy disallow-default-namespace -> resource default/Deployment/goalora-landing-page failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: goalora-landing-page-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/goalora-landing-page:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: goalora-landing-page
    app.kubernetes.io/component: goalora-landing-page
    app.kubernetes.io/instance: goalora-landing-page
    app.kubernetes.io/name: goalora-landing-page
    app.kubernetes.io/part-of: goalora-landing-page
    app.openshift.io/runtime: httpd
  name: goalora-landing-page
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: goalora-landing-page
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: goalora-landing-page
        deployment: goalora-landing-page
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/goalsetter/goalora-landing-page
        imagePullPolicy: Always
        name: goalora-landing-page
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/goalora-landing-page

skipped mutate policy add-safe-to-evict -> resource default/Deployment/goalora-landing-page
policy disallow-default-namespace -> resource default/Deployment/goalora-landing-page failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/goalora-landing-page failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: goalora-landing-page-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/goalora-landing-page:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: goalora-landing-page
    app.kubernetes.io/component: goalora-landing-page
    app.kubernetes.io/instance: goalora-landing-page
    app.kubernetes.io/name: goalora-landing-page
    app.kubernetes.io/part-of: goalora-landing-page
    app.openshift.io/runtime: httpd
    app.openshift.io/runtime-version: 2.4-el7
  name: goalora-landing-page
  namespace: default
spec:
  internalTrafficPolicy: Cluster
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: 8443-tcp
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app: goalora-landing-page
    deployment: goalora-landing-page
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goalora-landing-page-svc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/goalora-landing-page:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: goalora-landing-page
    app.kubernetes.io/component: goalora-landing-page
    app.kubernetes.io/instance: goalora-landing-page
    app.kubernetes.io/name: goalora-landing-page
    app.kubernetes.io/part-of: goalora-landing-page
    app.openshift.io/runtime: httpd
    app.openshift.io/runtime-version: 2.4-el7
  name: goalora-landing-page
  namespace: default
spec:
  internalTrafficPolicy: Cluster
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: 8443-tcp
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app: goalora-landing-page
    deployment: goalora-landing-page
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goal-setter-react-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalsetter/Deployment/goal-setter-react:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: goal-setter-react
    app.kubernetes.io/component: goal-setter-react
    app.kubernetes.io/instance: goal-setter-react
    app.kubernetes.io/name: goal-setter-react
    app.kubernetes.io/part-of: goal-setter-react
    app.openshift.io/runtime: httpd
    app.openshift.io/runtime-version: 2.4-el7
  name: goal-setter-react
  namespace: goalsetter
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: goal-setter-react
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: goal-setter-react
        deployment: goal-setter-react
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/goalsetter/goal-setter-react
        imagePullPolicy: Always
        name: goal-setter-react
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource goalsetter/Deployment/goal-setter-react

skipped mutate policy add-safe-to-evict -> resource goalsetter/Deployment/goal-setter-react
policy drop-all-capabilities -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: goal-setter-react-deployment1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to goalsetter/Deployment/goal-setter-react:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: goal-setter-react
    app.kubernetes.io/component: goal-setter-react
    app.kubernetes.io/instance: goal-setter-react
    app.kubernetes.io/name: goal-setter-react
    app.kubernetes.io/part-of: goal-setter-react
    app.openshift.io/runtime: httpd
    app.openshift.io/runtime-version: 2.4-el7
  name: goal-setter-react
  namespace: goalsetter
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: goal-setter-react
  strategy:
    rollingUpdate:
      maxSurge: 25%!
(MISSING)      maxUnavailable: 25%!
(MISSING)    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: goal-setter-react
        deployment: goal-setter-react
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/goalsetter/goal-setter-react
        imagePullPolicy: Always
        name: goal-setter-react
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource goalsetter/Deployment/goal-setter-react

skipped mutate policy add-safe-to-evict -> resource goalsetter/Deployment/goal-setter-react
policy drop-all-capabilities -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/

policy require-pod-probes -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource goalsetter/Deployment/goal-setter-react failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: goal-setter-react-generic-webhook-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/goal-setter-react-generic-webhook-secret:
apiVersion: v1
data:
  WebHookSecretKey: <base64 encoded secret>
kind: Secret
metadata:
  labels:
    app: goal-setter-react
    app.kubernetes.io/component: goal-setter-react
    app.kubernetes.io/instance: goal-setter-react
    app.kubernetes.io/name: goal-setter-react
    app.kubernetes.io/part-of: goal-setter-react
    app.openshift.io/runtime: httpd
    app.openshift.io/runtime-version: 2.4-el7
  name: goal-setter-react-generic-webhook-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goal-setter-react-generic-webhook-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/goal-setter-react-generic-webhook-secret:
apiVersion: v1
data:
  WebHookSecretKey: <base64 encoded secret>
kind: Secret
metadata:
  labels:
    app: goal-setter-react
    app.kubernetes.io/component: goal-setter-react
    app.kubernetes.io/instance: goal-setter-react
    app.kubernetes.io/name: goal-setter-react
    app.kubernetes.io/part-of: goal-setter-react
    app.openshift.io/runtime: httpd
    app.openshift.io/runtime-version: 2.4-el7
  name: goal-setter-react-generic-webhook-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goal-setter-react-github-webhook-secret.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/goal-setter-react-github-webhook-secret:
apiVersion: v1
data:
  WebHookSecretKey: <base64 encoded secret>
kind: Secret
metadata:
  labels:
    app: goal-setter-react
    app.kubernetes.io/component: goal-setter-react
    app.kubernetes.io/instance: goal-setter-react
    app.kubernetes.io/name: goal-setter-react
    app.kubernetes.io/part-of: goal-setter-react
    app.openshift.io/runtime: httpd
    app.openshift.io/runtime-version: 2.4-el7
  name: goal-setter-react-github-webhook-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goal-setter-react-github-webhook-secret1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/goal-setter-react-github-webhook-secret:
apiVersion: v1
data:
  WebHookSecretKey: <base64 encoded secret>
kind: Secret
metadata:
  labels:
    app: goal-setter-react
    app.kubernetes.io/component: goal-setter-react
    app.kubernetes.io/instance: goal-setter-react
    app.kubernetes.io/name: goal-setter-react
    app.kubernetes.io/part-of: goal-setter-react
    app.openshift.io/runtime: httpd
    app.openshift.io/runtime-version: 2.4-el7
  name: goal-setter-react-github-webhook-secret
  namespace: default
type: Opaque

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goal-setter-react-svc.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/goal-setter-react:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: goal-setter-react
    app.kubernetes.io/component: goal-setter-react
    app.kubernetes.io/instance: goal-setter-react
    app.kubernetes.io/name: goal-setter-react
    app.kubernetes.io/part-of: goal-setter-react
    app.openshift.io/runtime: httpd
    app.openshift.io/runtime-version: 2.4-el7
  name: goal-setter-react
  namespace: default
spec:
  internalTrafficPolicy: Cluster
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: 8443-tcp
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app: goal-setter-react
    deployment: goal-setter-react
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goal-setter-react-svc1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/goal-setter-react:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: goal-setter-react
    app.kubernetes.io/component: goal-setter-react
    app.kubernetes.io/instance: goal-setter-react
    app.kubernetes.io/name: goal-setter-react
    app.kubernetes.io/part-of: goal-setter-react
    app.openshift.io/runtime: httpd
    app.openshift.io/runtime-version: 2.4-el7
  name: goal-setter-react
  namespace: default
spec:
  internalTrafficPolicy: Cluster
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: 8443-tcp
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app: goal-setter-react
    deployment: goal-setter-react
  sessionAffinity: None
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goapp.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/go-webapp:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-webapp
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gowebapp
  template:
    metadata:
      labels:
        app: gowebapp
    spec:
      containers:
      - image: thenjdevopsguy/gowebappskaffold
        name: gowebapp
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-webapp

skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-webapp
policy disallow-default-namespace -> resource default/Deployment/go-webapp failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/go-webapp failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/go-webapp failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/go-webapp failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/go-webapp failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/go-webapp failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/go-webapp failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/go-webapp failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/go-webapp failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: go-bus-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/go-bus-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-bus-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: go-bus
  template:
    metadata:
      labels:
        app: go-bus
    spec:
      containers:
      - image: aswinmanoj/go-bus-reservation:latest
        name: go-bus-container
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-bus-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-bus-deployment
policy disallow-default-namespace -> resource default/Deployment/go-bus-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/go-bus-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/go-bus-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/go-bus-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/go-bus-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/go-bus-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/go-bus-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/go-bus-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/go-bus-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: go-bus-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/go-bus-service:
apiVersion: v1
kind: Service
metadata:
  name: go-bus-service
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: go-bus

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goechoapp-envoy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/goechoapp-envoy-deploy:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: envoy-sidecar
  name: goechoapp-envoy-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: envoy-sidecar
  template:
    metadata:
      labels:
        app: envoy-sidecar
      name: envoy-sidecar-pod
    spec:
      containers:
      - image: akoserwal/goechoapp
        name: goechoapp
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
      - image: envoyproxy/envoy:v1.15-latest
        name: sidecar
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/envoy
          name: sidecar-config
          readOnly: true
        - mountPath: /certs
          name: sidecar-certs
          readOnly: true
      volumes:
      - configMap:
          name: envoy-sidecar-configmap
        name: sidecar-config
      - name: sidecar-certs
        secret:
          secretName: envoy-sidecar-secret

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/goechoapp-envoy-deploy

skipped mutate policy add-safe-to-evict -> resource default/Deployment/goechoapp-envoy-deploy
policy disallow-default-namespace -> resource default/Deployment/goechoapp-envoy-deploy failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/goechoapp-envoy-deploy failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/goechoapp-envoy-deploy failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/goechoapp-envoy-deploy failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/goechoapp-envoy-deploy failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/goechoapp-envoy-deploy failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/goechoapp-envoy-deploy failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/goechoapp-envoy-deploy failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/goechoapp-envoy-deploy failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: goechoapp-envoy_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/envoy-sidecar-configmap:
apiVersion: v1
data:
  envoy.yaml: |
    # Simple Envoy TLS terminating sidecar configuration.
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 8443
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: service
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: local_service
              http_filters:
              - name: envoy.filters.http.router
                typed_config: {}
          tls_context:
            common_tls_context:
              tls_certificates:
                - certificate_chain:
                    filename: "/certs/tls.crt"
                  private_key:
                    filename: "/certs/tls.key"
      clusters:
      - name: local_service
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: 127.0.0.1
            port_value: 3000
    admin:
      access_log_path: /dev/null
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8082
kind: ConfigMap
metadata:
  labels:
    app: envoy-sidecar
  name: envoy-sidecar-configmap
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goechoapp-envoy_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Secret/envoy-sidecar-secret:
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lVQVNJTXJyNlRuMzI5bHpteC82RTcxeDZCU0RVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZERVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNQjRYRFRJME1ERXhNekE0TVRVME1sb1hEVEkwTURJeApNakE0TVRVME1sb3dGREVTTUJBR0ExVUVBd3dKYkc5allXeG9iM04wTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBMWlzVDFFOTYzTEllMDd1bEdzaTgvQmV1WExkN0JoQWdZSGxqeUFJOWNQM08KbGpsK2h2QUo4OExTN3RUZlkwdXpQQkR5bU9ITGl4bkJ4bEg0VGdCeEZaQ0tLYU5STzl4c2J4L0prVjhmRGpHYgovcTAya1pTYm5EVXNHNXBVRnl6WG5ZN1g5ZXR6ZFV5SG0rUXE1djE0V1BHMlBzU0VObDRCbCtxU052Q0RNYkJ4CmNHZU1kQWRnL1NhZnkxbE16UTVMek9jMU5FZ1RILzd6OSsvTmxsMklFakZwVmNzL1R4dm9zM2JrWTlram54TW4KVko5MGU3dmw5T0ZaL25LSVY4b1NZM2phOC9oZmNoYWxaOFEva3V6VEZQSzA2Z1ZLUzFjSU55Y2NGTThoUi9qQQpyWjA5M3BVMGNkb3FvS1JTdW1YYXRtWkFBdUY5VXRxcmpDM0tUMk11SndJREFRQUJvMWt3VnpBVUJnTlZIUkVFCkRUQUxnZ2xzYjJOaGJHaHZjM1F3Q3dZRFZSMFBCQVFEQWdlQU1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUIKTUIwR0ExVWREZ1FXQkJSYXAzbmZHYnFyRTVsSVNob3hlQnNHMUs2anNqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBZEk3cFVENFF4YlRDY1V5RE9wc2JURFJMUktDbHoydHhTNDhlT3RhbmtkcEVzOCtHeVcxVUdzVEp2MEErCjAzK3dRU2hqSy80MEwwc3FHanhZR085cW5XOStoTCs1ZUFVYjlQWC9iWThTejVjb2xPV2w4RENQUkhjQjUzWloKYm9YbFJkbndqZGk1T1BQeUorVXMrQUFJTi9qaDVTUmUxdUF5cFozSG1KTUZOOTltdmZiRW1BY3I1b1B6OHlkbwpici9IQk5CMWNxNDlXUzBMVGtKZUlMSTcrakM5UE8reXRsUEErR2M2b2hYQUlvUE5SeVI4Q252NHFCUGVrTXEwCnJWVzJRNGJkTUZlSzRPdm1ZSUFOS1JEQlJHZ1NXdHBNV3EwaElydTYxc1ZIU01xOUFMYkpPWHl4cFpRNWNVb2cKYlI5VkpLVkJ2b2ZuUUordTJDZnRDd0c3OFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRFdLeFBVVDNyY3NoN1QKdTZVYXlMejhGNjVjdDNzR0VDQmdlV1BJQWoxdy9jNldPWDZHOEFuend0THUxTjlqUzdNOEVQS1k0Y3VMR2NIRwpVZmhPQUhFVmtJb3BvMUU3M0d4dkg4bVJYeDhPTVp2K3JUYVJsSnVjTlN3Ym1sUVhMTmVkanRmMTYzTjFUSWViCjVDcm0vWGhZOGJZK3hJUTJYZ0dYNnBJMjhJTXhzSEZ3WjR4MEIyRDlKcC9MV1V6TkRrdk01elUwU0JNZi92UDMKNzgyV1hZZ1NNV2xWeXo5UEcraXpkdVJqMlNPZkV5ZFVuM1I3dStYMDRWbitjb2hYeWhKamVOcnorRjl5RnFWbgp4RCtTN05NVThyVHFCVXBMVndnM0p4d1V6eUZIK01DdG5UM2VsVFJ4MmlxZ3BGSzZaZHEyWmtBQzRYMVMycXVNCkxjcFBZeTRuQWdNQkFBRUNnZ0VBQUxtNG9YbDdjdy92WnN3MTdQZE5ISlYvODdSemFEdlp3RG5wQ3A1blV1Q3AKT0gwTlhxdWxmUHZsOXdVbGxKS0hFdWNEeTF6SWNib3VtOXRmT2ZScWJhWkZzWXBxRmdmVEhqVS9XNHkwOERsZQp5K2dPVFVQeG12L2JIR1RUY0Jpb3lsSFhqVyswdm1yNThwODlQZmNSMTB0S1VNQWRxb2w2KytiQmhBb2doNlNOCng2cmQvV1VVbEFWek0vV0xwdXBYaE84S0NMZkEwY3RJWXA2NklLMWNmMlNHRG1XdWFWU3lzMzZFN29nQXFpOGUKWVR1bnlCYTBMTjhtWXNXZW5TZHJkVFJmaCtjRkRCaFpOb2tIQlJRUUFXNnlyVlZzZWlrc2toOHNFU21hcTArZwpzQlo1TEh2d3VacTdZNHZndnRLVTVpVXpGY3R0WXgzbGhiNHFhOWRud1FLQmdRRHRwZUFmejhMUWtnTzV0UU5HCnZnYkxhNEtaQi94YXdlUmRqU0trQ0todDRsSTJFd3JKVHhRK0RYQlNFWU9HQk5yL25yMm5sU2VvTlRQajYvNlgKNTJIbjZxLzI2YTRheHBvSlhDNndEcVY1MjUxV2JqU1BXcG52bTdCcDB3T0lKNjRrSXhiRlUxS2pTdGdOQnZKUApiVzBneVFXMExDaXNkTTI4cnR6NFNoRWJNUUtCZ1FEbXRRYXFuQjFqVkFwc2lNbkprRENEaGFaZ2ZVTUhUZGQvCmQxdEtoMkM0YytJa1hHeUFYVThnREdieCtaNEp5SmhlcUFEckxZUEs3RWFJbk5NMHZIbnBMTjhiRXVGanJDNysKTW9PZmlmTVNUNVhSd3pIUUxSclBuaEVBU1JmbWZET011WjVpcnVCT3kySFZ5S3JCNnBPUjRidGhMY1ZLZVdZawpVMHdFd0ZUWTF3S0JnUURzOE50N0hDeEN3N0pQTC9qcVNZQ0F4TnBiTmFrWDNBV1NlS3MzSFNMQkhFdVhlbmpnCnFhV25FTU1TTUVBUUdUczRiYzd1RFRxUzdTaWxjS0JRVi9RM3hMaFkyRGdzbmlMcWZpeFdnT1Bma1dWWHpWMCsKS0xrZU92NHpKSjU2M0FVMkpuNEhrOEhxNlM1c0hxYnRKazhOeHgrV3VnaDdtYUdmSkVGUWxKaGxvUUtCZ1FDOApIbnBjSGNZODJ5ZFF6czB6aFZaNXVENHRTWmFoV3hEUVNFUHhacWd3WDVYVHJtVnUyaWNONis3NWVtQXFmQjM2CmVTV2VudE5yWVBRMnF5SHhTNHBnM3d6aFo2alBmSFFwSklsOVNxQWdtektBQTVrWHRkKzUwWnJ0VDZ5a2JUd2YKa0srY3Fob1BSZm4xdDVXOVg0aUxHTFNSRGlCa2xNNzc2Y3YveDlDbnF3S0JnQkRyWmwyaDhQYU02NWJvTENQUwpweC83SkdkbllOcjlKR3JKdDlnZDNDSkRKcTdoeG5nNzl4elVNaVBtT2hweS9ZaWlISmFMcWVpOFgydVUwRmpoCkErQy81cSs4ci8yRU02UHpNc1ZRMTNVSTNXWUhpK1k1YlpESWc3STdCZmNjVCtGeXJDV0taYitSdURVTEdiYzEKNjR4a1V5RXhreEhhRXh4RmpLcFU5NGpMCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  labels:
    app: envoy-sidecar
  name: envoy-sidecar-secret
  namespace: default
type: kubernetes.io/tls

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goechoapp-envoy_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/envoy-sidecar-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: envoy-sidecar
  name: envoy-sidecar-service
  namespace: default
spec:
  ports:
  - nodePort: 30000
    port: 8443
    targetPort: 8443
  selector:
    app: envoy-sidecar
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/envoy-sidecar-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: go-feature-flag.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to open-feature-demo/Deployment/open-feature-demo-go-feature-flag:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-feature-demo-go-feature-flag
  namespace: open-feature-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: open-feature-demo-goff
  template:
    metadata:
      labels:
        app: open-feature-demo-goff
    spec:
      containers:
      - image: thomaspoignant/go-feature-flag:v1.26
        name: open-feature-demo-goff
        ports:
        - containerPort: 1031
        volumeMounts:
        - mountPath: /goff/
          name: goff-config-volume
      volumes:
      - configMap:
          name: goff-config
        name: goff-config-volume

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource open-feature-demo/Deployment/open-feature-demo-go-feature-flag

skipped mutate policy add-safe-to-evict -> resource open-feature-demo/Deployment/open-feature-demo-go-feature-flag
policy drop-all-capabilities -> resource open-feature-demo/Deployment/open-feature-demo-go-feature-flag failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource open-feature-demo/Deployment/open-feature-demo-go-feature-flag failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource open-feature-demo/Deployment/open-feature-demo-go-feature-flag failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource open-feature-demo/Deployment/open-feature-demo-go-feature-flag failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource open-feature-demo/Deployment/open-feature-demo-go-feature-flag failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource open-feature-demo/Deployment/open-feature-demo-go-feature-flag failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource open-feature-demo/Deployment/open-feature-demo-go-feature-flag failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: go-feature-flag_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to open-feature-demo/Service/open-feature-demo-goff-service:
apiVersion: v1
kind: Service
metadata:
  name: open-feature-demo-goff-service
  namespace: open-feature-demo
spec:
  ports:
  - port: 1031
    targetPort: 1031
  selector:
    app: open-feature-demo-goff
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: go-feature-flag_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to open-feature-demo/ConfigMap/goff-config:
apiVersion: v1
data:
  flags.yaml: "# Go Feature Flag\n#\n# More information on configuring a feature flag
    can be found here:\n# https://docs.gofeatureflag.org/v0.28.0/flag_format/\n# Controls
    the welcome banner message\n# true: \"Welcome to Fib3r: Fibonacci as a service!\"\n#
    false: \"Welcome to FaaS: Fibonacci as a service!\"\nnew-welcome-message:\n  true:
    false\n  false: false\n  default: false\n  percentage: 100\n# Must be a valid
    hex value\n# red: \"c05543\"\n# green: \"2f5230\"\n# blue: \"0d507b\"\nhex-color:\n
    \ true: c05543\n  false: 2f5230\n  default: c05543\n  percentage: 100\n# Controls
    whether the remote fib service is used\n#  - true\n#  - false\nuse-remote-fib-service:\n
    \ true: true\n  false: false\n  default: true\n  percentage: 100\n# Must be a
    valid algorithm name\n#  - recurive\n#  - memo\n#  - loop\n#  - binet    \nfib-algo:\n
    \ true: binet\n  false: recursive\n  default: recursive\n  percentage: 100\n  rule:
    email ew \"@faas.com\"\nexample-flag:\n  true: true\n  false: false\n  default:
    true\n  percentage: 100\n"
  goff-proxy.yaml: |
    # Go Feature Flag Relay Proxy
    #
    # Additional information and configuration options can be found here:
    # https://github.com/thomaspoignant/go-feature-flag-relay-proxy
    listen: 1031
    pollingInterval: 1000
    startWithRetrieverError: false
    retriever:
      kind: file
      path: /goff/flags.yaml
    exporter:
      kind: log
kind: ConfigMap
metadata:
  name: goff-config
  namespace: open-feature-demo

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gogs.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gogs:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch11
  name: gogs
  namespace: default
spec:
  ports:
  - port: 3000
    targetPort: gogs
  selector:
    app: gogs
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gogs_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gogs:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kiamol: ch11
  name: gogs
  namespace: default
spec:
  selector:
    matchLabels:
      app: gogs
  template:
    metadata:
      labels:
        app: gogs
    spec:
      containers:
      - image: kiamol/ch11-gogs
        name: gogs
        ports:
        - containerPort: 3000
          name: gogs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gogs

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gogs
policy disallow-default-namespace -> resource default/Deployment/gogs failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/gogs failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/gogs failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gogs failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gogs failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gogs failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gogs failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gogs failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gogs failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gogs1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gogs:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch11
  name: gogs
  namespace: default
spec:
  ports:
  - port: 3000
    targetPort: gogs
  selector:
    app: gogs
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gogs1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gogs:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kiamol: ch11
  name: gogs
  namespace: default
spec:
  selector:
    matchLabels:
      app: gogs
  template:
    metadata:
      labels:
        app: gogs
    spec:
      containers:
      - image: kiamol/ch11-gogs
        name: gogs
        ports:
        - containerPort: 3000
          name: gogs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gogs

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gogs
policy disallow-default-namespace -> resource default/Deployment/gogs failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/gogs failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/gogs failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gogs failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gogs failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gogs failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gogs failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gogs failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gogs failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gogs3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/Service/gogs:
apiVersion: v1
kind: Service
metadata:
  labels:
    team: infrastructure
  name: gogs
  namespace: infra
spec:
  ports:
  - nodePort: 30031
    port: 3000
    targetPort: gogs
  selector:
    app: gogs
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource infra/Service/gogs failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: gogs3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/Deployment/gogs:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    team: infrastructure
  name: gogs
  namespace: infra
spec:
  selector:
    matchLabels:
      app: gogs
  template:
    metadata:
      labels:
        app: gogs
    spec:
      containers:
      - image: kiamol/ch11-gogs
        name: gogs
        ports:
        - containerPort: 3000
          name: gogs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource infra/Deployment/gogs

skipped mutate policy add-safe-to-evict -> resource infra/Deployment/gogs
policy disallow-latest-tag -> resource infra/Deployment/gogs failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource infra/Deployment/gogs failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource infra/Deployment/gogs failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource infra/Deployment/gogs failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource infra/Deployment/gogs failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource infra/Deployment/gogs failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource infra/Deployment/gogs failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource infra/Deployment/gogs failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gogs4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/Service/gogs:
apiVersion: v1
kind: Service
metadata:
  labels:
    team: infrastructure
  name: gogs
  namespace: infra
spec:
  ports:
  - nodePort: 30030
    port: 3000
    targetPort: gogs
  selector:
    app: gogs
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource infra/Service/gogs failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: gogs4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/Deployment/gogs:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    team: infrastructure
  name: gogs
  namespace: infra
spec:
  selector:
    matchLabels:
      app: gogs
  template:
    metadata:
      labels:
        app: gogs
    spec:
      containers:
      - image: kiamol/ch11-gogs
        name: gogs
        ports:
        - containerPort: 3000
          name: gogs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource infra/Deployment/gogs

skipped mutate policy add-safe-to-evict -> resource infra/Deployment/gogs
policy disallow-latest-tag -> resource infra/Deployment/gogs failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource infra/Deployment/gogs failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource infra/Deployment/gogs failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource infra/Deployment/gogs failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource infra/Deployment/gogs failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource infra/Deployment/gogs failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource infra/Deployment/gogs failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource infra/Deployment/gogs failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gogs5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/Service/gogs:
apiVersion: v1
kind: Service
metadata:
  labels:
    team: infrastructure
  name: gogs
  namespace: infra
spec:
  ports:
  - nodePort: 30030
    port: 3000
    targetPort: gogs
  selector:
    app: gogs
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource infra/Service/gogs failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: gogs5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to infra/Deployment/gogs:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    team: infrastructure
  name: gogs
  namespace: infra
spec:
  selector:
    matchLabels:
      app: gogs
  template:
    metadata:
      labels:
        app: gogs
    spec:
      automountServiceAccountToken: false
      containers:
      - image: kiamol/ch11-gogs
        name: gogs
        ports:
        - containerPort: 3000
          name: gogs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource infra/Deployment/gogs

skipped mutate policy add-safe-to-evict -> resource infra/Deployment/gogs
policy disallow-latest-tag -> resource infra/Deployment/gogs failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource infra/Deployment/gogs failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource infra/Deployment/gogs failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource infra/Deployment/gogs failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource infra/Deployment/gogs failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource infra/Deployment/gogs failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource infra/Deployment/gogs failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource infra/Deployment/gogs failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: gogs6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gogs:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch11
  name: gogs
  namespace: default
spec:
  ports:
  - port: 3000
    targetPort: gogs
  selector:
    app: gogs
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gogs6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gogs:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kiamol: ch11
  name: gogs
  namespace: default
spec:
  selector:
    matchLabels:
      app: gogs
  template:
    metadata:
      labels:
        app: gogs
    spec:
      containers:
      - image: kiamol/ch11-gogs
        name: gogs
        ports:
        - containerPort: 3000
          name: gogs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gogs

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gogs
policy disallow-default-namespace -> resource default/Deployment/gogs failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/gogs failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/gogs failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gogs failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gogs failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gogs failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gogs failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gogs failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gogs failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: gogs7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/gogs:
apiVersion: v1
kind: Service
metadata:
  labels:
    kiamol: ch11
  name: gogs
  namespace: default
spec:
  ports:
  - port: 3000
    targetPort: gogs
  selector:
    app: gogs
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gogs7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gogs:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kiamol: ch11
  name: gogs
  namespace: default
spec:
  selector:
    matchLabels:
      app: gogs
  template:
    metadata:
      labels:
        app: gogs
    spec:
      containers:
      - image: kiamol/ch11-gogs
        name: gogs
        ports:
        - containerPort: 3000
          name: gogs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gogs

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gogs
policy disallow-default-namespace -> resource default/Deployment/gogs failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/gogs failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/gogs failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gogs failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gogs failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gogs failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gogs failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gogs failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gogs failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: go-http-forwarder-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/go-http-forwarder-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-http-forwarder-service
  namespace: dev
spec:
  selector:
    matchLabels:
      name: go-http-forwarder-service
  template:
    metadata:
      labels:
        name: go-http-forwarder-service
    spec:
      containers:
      - image: go-http-forwarder-service
        imagePullPolicy: Never
        name: go-http-forwarder-service
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/go-http-forwarder-service

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/go-http-forwarder-service
policy disallow-latest-tag -> resource dev/Deployment/go-http-forwarder-service failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource dev/Deployment/go-http-forwarder-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/go-http-forwarder-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/go-http-forwarder-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dev/Deployment/go-http-forwarder-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/go-http-forwarder-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/go-http-forwarder-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: go-http-forwarder-service_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Service/go-http-forwarder-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: go-http-forwarder-service
  name: go-http-forwarder-service
  namespace: dev
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    name: go-http-forwarder-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: go-http-receiver-service.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Deployment/go-http-receiver-service:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-http-receiver-service
  namespace: dev
spec:
  selector:
    matchLabels:
      name: go-http-receiver-service
  template:
    metadata:
      labels:
        name: go-http-receiver-service
    spec:
      containers:
      - image: go-http-receiver-service
        imagePullPolicy: Never
        name: go-http-receiver-service
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource dev/Deployment/go-http-receiver-service

skipped mutate policy add-safe-to-evict -> resource dev/Deployment/go-http-receiver-service
policy disallow-latest-tag -> resource dev/Deployment/go-http-receiver-service failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource dev/Deployment/go-http-receiver-service failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource dev/Deployment/go-http-receiver-service failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource dev/Deployment/go-http-receiver-service failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource dev/Deployment/go-http-receiver-service failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource dev/Deployment/go-http-receiver-service failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource dev/Deployment/go-http-receiver-service failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: go-http-receiver-service_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to dev/Service/go-http-receiver-service:
apiVersion: v1
kind: Service
metadata:
  labels:
    name: go-http-receiver-service
  name: go-http-receiver-service
  namespace: dev
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    name: go-http-receiver-service

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: golang-api1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elympics/Deployment/golang-api:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang-api
  namespace: elympics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: golang-api
  template:
    metadata:
      labels:
        app: golang-api
    spec:
      containers:
      - image: corey773/elympics-golang:latest
        name: golang-api
        ports:
        - containerPort: 8000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource elympics/Deployment/golang-api

skipped mutate policy add-safe-to-evict -> resource elympics/Deployment/golang-api
policy disallow-latest-tag -> resource elympics/Deployment/golang-api failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource elympics/Deployment/golang-api failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource elympics/Deployment/golang-api failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource elympics/Deployment/golang-api failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource elympics/Deployment/golang-api failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource elympics/Deployment/golang-api failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource elympics/Deployment/golang-api failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource elympics/Deployment/golang-api failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: golang-api1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to elympics/Service/golang-api-service:
apiVersion: v1
kind: Service
metadata:
  name: golang-api-service
  namespace: elympics
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: golang-api
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: golang-app.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/golang-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: golang-app
  template:
    metadata:
      labels:
        app: golang-app
    spec:
      containers:
      - image: your-golang-app-image:tag
        name: golang-app
        ports:
        - containerPort: 8080
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: golang-app
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/golang-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/golang-app
policy disallow-default-namespace -> resource default/Deployment/golang-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/golang-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/golang-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/golang-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/golang-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/golang-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/golang-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/golang-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: golang-app_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/golang-app:
apiVersion: v1
kind: Service
metadata:
  name: golang-app
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: golang-app

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: golang-app-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/group-18-fastfood-backend:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: group-18-fastfood-backend
  name: group-18-fastfood-backend
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: group-18-fastfood-backend
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: group-18-fastfood-backend
      name: group-18-fastfood-backend
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: configmap-group-18-fastfood-backend
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_HOST
              name: configmap-group-18-fastfood-backend
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: POSTGRES_USER
              name: secret-group-18-fastfood-backend
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: secret-group-18-fastfood-backend
        image: tech-challenge-go
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /customers
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 60
        name: group-18-fastfood-backend
        ports:
        - containerPort: 8080
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /customers
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 20
        resources:
          limits:
            cpu: 8m
          requests:
            cpu: 8m

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/group-18-fastfood-backend

skipped mutate policy add-safe-to-evict -> resource default/Deployment/group-18-fastfood-backend
policy disallow-default-namespace -> resource default/Deployment/group-18-fastfood-backend failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/group-18-fastfood-backend failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/group-18-fastfood-backend failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/group-18-fastfood-backend failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/group-18-fastfood-backend failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/group-18-fastfood-backend failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/limits/memory/

policy require-ro-rootfs -> resource default/Deployment/group-18-fastfood-backend failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/group-18-fastfood-backend failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: golang-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/admission-controller-debug-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: admission-controller-debug-deployment
  name: admission-controller-debug-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admission-controller-debug-deployment
  template:
    metadata:
      labels:
        app: admission-controller-debug-deployment
    spec:
      containers:
      - args:
        - infinity
        command:
        - sleep
        image: golang
        name: go-container
        ports:
        - containerPort: 443
        volumeMounts:
        - mountPath: /etc/webhook/certs
          name: webhook-certs
          readOnly: true
      volumes:
      - name: webhook-certs
        secret:
          secretName: webhook-certs

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/admission-controller-debug-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/admission-controller-debug-deployment
policy disallow-default-namespace -> resource default/Deployment/admission-controller-debug-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/admission-controller-debug-deployment failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/admission-controller-debug-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/admission-controller-debug-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/admission-controller-debug-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/admission-controller-debug-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/admission-controller-debug-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/admission-controller-debug-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/admission-controller-debug-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: golang-metrics.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to test-deployment/Deployment/hello-world:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
  namespace: test-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      annotations:
        telegraf.influxdata.com/namepass: '[''go_info'',''hello_processed_total'',''go_memstats*'']'
        telegraf.influxdata.com/ports: "8080"
      labels:
        app: hello-world
    spec:
      containers:
      - image: okteto/hello-world:golang-metrics
        name: hello-world

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource test-deployment/Deployment/hello-world

skipped mutate policy add-safe-to-evict -> resource test-deployment/Deployment/hello-world
policy drop-all-capabilities -> resource test-deployment/Deployment/hello-world failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource test-deployment/Deployment/hello-world failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource test-deployment/Deployment/hello-world failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource test-deployment/Deployment/hello-world failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource test-deployment/Deployment/hello-world failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource test-deployment/Deployment/hello-world failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource test-deployment/Deployment/hello-world failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: golang-ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/golang:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
    monitoring: prometheus
  name: golang
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/golang:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: golang
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/golang:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: golang
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/golang:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: golang
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/golang:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: golang
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: golang-ns1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/golang:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
    monitoring: prometheus
  name: golang
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/golang:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: golang
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/golang:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: golang
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/golang:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: golang
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/golang:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: golang
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: golden.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to echo/Service/a:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: a
  name: a
  namespace: echo
spec:
  ports:
  - name: http
    port: 80
    targetPort: 18080
  - name: grpc
    port: 7070
    targetPort: 17070
  - name: http2
    port: 85
    targetPort: 18085
  - name: tcp
    port: 9090
    targetPort: 19090
  - name: https
    port: 443
    targetPort: 18443
  - name: tcp-server
    port: 9091
    targetPort: 16060
  - name: auto-tcp
    port: 9092
    targetPort: 19091
  - name: auto-tcp-server
    port: 9093
    targetPort: 16061
  - name: auto-http
    port: 81
    targetPort: 18081
  - name: auto-grpc
    port: 7071
    targetPort: 17071
  - name: auto-https
    port: 9443
    targetPort: 19443
  - name: http-instance
    port: 82
    targetPort: 18082
  - name: http-localhost
    port: 84
    targetPort: 18084
  - name: tcp-for-http
    port: 86
    targetPort: 18086
  selector:
    app: a

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: golden_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to echo/Deployment/a-v1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: a-v1
  namespace: echo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: a
      version: v1
  template:
    metadata:
      annotations:
        prometheus.io/port: "15014"
        prometheus.io/scrape: "true"
      labels:
        app: a
        test.istio.io/class: standard
        version: v1
    spec:
      containers:
      - image: auto
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        securityContext:
          readOnlyRootFilesystem: false
      - args:
        - --metrics=15014
        - --cluster=fake
        - --port=18080
        - --grpc=17070
        - --port=18085
        - --tcp=19090
        - --port=18443
        - --tls=18443
        - --tcp=16060
        - --server-first=16060
        - --tcp=19091
        - --tcp=16061
        - --server-first=16061
        - --port=18081
        - --grpc=17071
        - --port=19443
        - --tls=19443
        - --port=18082
        - --bind-ip=18082
        - --port=18084
        - --bind-localhost=18084
        - --tcp=19092
        - --port=18083
        - --port=18086
        - --port=8080
        - --port=3333
        - --version=v1
        - --istio-version=
        - --crt=/cert.crt
        - --key=/cert.key
        env:
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: testhub/app:testtag
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          initialDelaySeconds: 10
          periodSeconds: 10
          tcpSocket:
            port: tcp-health-port
        name: app
        ports:
        - containerPort: 18080
        - containerPort: 17070
        - containerPort: 18085
        - containerPort: 19090
        - containerPort: 18443
        - containerPort: 16060
        - containerPort: 19091
        - containerPort: 16061
        - containerPort: 18081
        - containerPort: 17071
        - containerPort: 19443
        - containerPort: 18082
        - containerPort: 18084
        - containerPort: 19092
        - containerPort: 18083
        - containerPort: 18086
        - containerPort: 8080
        - containerPort: 3333
          name: tcp-health-port
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 2
        startupProbe:
          failureThreshold: 10
          periodSeconds: 1
          tcpSocket:
            port: tcp-health-port

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource echo/Deployment/a-v1

skipped mutate policy add-safe-to-evict -> resource echo/Deployment/a-v1
policy disallow-latest-tag -> resource echo/Deployment/a-v1 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource echo/Deployment/a-v1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource echo/Deployment/a-v1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource echo/Deployment/a-v1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource echo/Deployment/a-v1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource echo/Deployment/a-v1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource echo/Deployment/a-v1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource echo/Deployment/a-v1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: goldpinger.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ServiceAccount/goldpinger-serviceaccount:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: goldpinger-serviceaccount
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goldpinger_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/DaemonSet/goldpinger:
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: goldpinger
  name: goldpinger
  namespace: default
spec:
  selector:
    matchLabels:
      app: goldpinger
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: goldpinger
    spec:
      containers:
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8080"
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: docker.io/bloomberg/goldpinger:v3.0.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 5
        name: goldpinger
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 5
        resources:
          limits:
            memory: 80Mi
          requests:
            cpu: 1m
            memory: 40Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccount: goldpinger-serviceaccount
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
  updateStrategy:
    type: RollingUpdate

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/goldpinger

skipped mutate policy add-safe-to-evict -> resource default/DaemonSet/goldpinger
policy disallow-default-namespace -> resource default/DaemonSet/goldpinger failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/DaemonSet/goldpinger failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/DaemonSet/goldpinger failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/DaemonSet/goldpinger failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy restrict-image-registries -> resource default/DaemonSet/goldpinger failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 10, fail: 5, warn: 0, error: 0, skip: 2 

##### FILE: goldpinger_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/goldpinger:
apiVersion: v1
kind: Service
metadata:
  labels:
    app: goldpinger
  name: goldpinger
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 30080
    port: 8080
  selector:
    app: goldpinger
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/goldpinger failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: goldpinger_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ClusterRoleBinding/default:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: goldpinger-serviceaccount
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goldpinger-deny-all.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/goldpinger-deny-all:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: goldpinger-deny-all
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: goldpinger
  policyTypes:
  - Egress
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: goldpinger-deny-all1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/NetworkPolicy/goldpinger-deny-all:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: goldpinger-deny-all
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: goldpinger
  policyTypes:
  - Egress
status: {}

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: gold-storage.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/StorageClass/gold:
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
  name: gold
  namespace: default
parameters:
  type: pd-ssd
provisioner: kubernetes.io/gce-pd

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-cm.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testnamespace/ConfigMap/goodcm01:
apiVersion: v1
data:
  foo: bar
kind: ConfigMap
metadata:
  name: goodcm01
  namespace: testnamespace

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-cm1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testnamespace/ConfigMap/goodcm01:
apiVersion: v1
data:
  foo: bar
kind: ConfigMap
metadata:
  name: goodcm01
  namespace: testnamespace

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-cm2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testnamespace/ConfigMap/goodcm01:
apiVersion: v1
data:
  foo: bar
kind: ConfigMap
metadata:
  name: goodcm01
  namespace: testnamespace

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-cm3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testnamespace/ConfigMap/goodcm01:
apiVersion: v1
data:
  foo: bar
kind: ConfigMap
metadata:
  name: goodcm01
  namespace: testnamespace

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-cm4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testnamespace/ConfigMap/goodcm01:
apiVersion: v1
data:
  foo: bar
kind: ConfigMap
metadata:
  name: goodcm01
  namespace: testnamespace

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-deploy.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeployment-ht:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeployment-ht
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:v1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment-ht

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment-ht
policy disallow-default-namespace -> resource default/Deployment/gooddeployment-ht failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        ports:
        - containerPort: 80
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy1_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy03:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy03
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy03
policy disallow-default-namespace -> resource default/Deployment/gooddeploy03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeployment-ht:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeployment-ht
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:v1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment-ht

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment-ht
policy disallow-default-namespace -> resource default/Deployment/gooddeployment-ht failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        ports:
        - containerPort: 80
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy3_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy03:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy03
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy03
policy disallow-default-namespace -> resource default/Deployment/gooddeploy03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeployment-ht:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeployment-ht
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:v1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment-ht

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment-ht
policy disallow-default-namespace -> resource default/Deployment/gooddeployment-ht failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        ports:
        - containerPort: 80
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy5_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy03:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy03
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy03
policy disallow-default-namespace -> resource default/Deployment/gooddeploy03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeployment-ht:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeployment-ht
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:v1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment-ht

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment-ht
policy disallow-default-namespace -> resource default/Deployment/gooddeployment-ht failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        ports:
        - containerPort: 80
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy7_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy03:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy03
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy03
policy disallow-default-namespace -> resource default/Deployment/gooddeploy03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeployment-ht:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeployment-ht
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - command:
        - sleep
        - "3600"
        image: busybox:v1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment-ht

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeployment-ht
policy disallow-default-namespace -> resource default/Deployment/gooddeployment-ht failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeployment-ht failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02
        ports:
        - containerPort: 80

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        ports:
        - containerPort: 80
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-deploy9_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy03:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy03
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bbserver
  template:
    metadata:
      labels:
        app: bbserver
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
      - image: busybox:1.35
        name: busybox02

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy03

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy03
policy disallow-default-namespace -> resource default/Deployment/gooddeploy03 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy03 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-ingress.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ingress-wildcard-host:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-wildcard-host
  namespace: default
spec:
  rules:
  - host: foo.bar.com
    http:
      paths:
      - backend:
          service:
            name: service1
            port:
              number: 80
        path: /bar
        pathType: Prefix
  - host: '*.foo.com'
    http:
      paths:
      - backend:
          service:
            name: service2
            port:
              number: 80
        path: /foo
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ingress1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ingress-wildcard-host:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-wildcard-host
  namespace: default
spec:
  rules:
  - host: foo.bar.com
    http:
      paths:
      - backend:
          service:
            name: service1
            port:
              number: 80
        path: /bar
        pathType: Prefix
  - host: '*.foo.com'
    http:
      paths:
      - backend:
          service:
            name: service2
            port:
              number: 80
        path: /foo
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ingress2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ingress-wildcard-host:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-wildcard-host
  namespace: default
spec:
  rules:
  - host: foo.bar.com
    http:
      paths:
      - backend:
          service:
            name: service1
            port:
              number: 80
        path: /bar
        pathType: Prefix
  - host: '*.foo.com'
    http:
      paths:
      - backend:
          service:
            name: service2
            port:
              number: 80
        path: /foo
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ingress3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ingress-wildcard-host:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-wildcard-host
  namespace: default
spec:
  rules:
  - host: foo.bar.com
    http:
      paths:
      - backend:
          service:
            name: service1
            port:
              number: 80
        path: /bar
        pathType: Prefix
  - host: '*.foo.com'
    http:
      paths:
      - backend:
          service:
            name: service2
            port:
              number: 80
        path: /foo
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ingress4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Ingress/ingress-wildcard-host:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-wildcard-host
  namespace: default
spec:
  rules:
  - host: foo.bar.com
    http:
      paths:
      - backend:
          service:
            name: service1
            port:
              number: 80
        path: /bar
        pathType: Prefix
  - host: '*.foo.com'
    http:
      paths:
      - backend:
          service:
            name: service2
            port:
              number: 80
        path: /foo
        pathType: Prefix

---


Mutation:
Mutation has been applied successfully.
pass: 1, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-namespace.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/mynamespace:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    gatekeeper: OPA
  name: mynamespace
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/mynamespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: mynamespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/mynamespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: mynamespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mynamespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: mynamespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mynamespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: mynamespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-namespace1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/mynamespace:
apiVersion: v1
kind: Namespace
metadata:
  labels:
    gatekeeper: OPA
  name: mynamespace
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/mynamespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: mynamespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/mynamespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: mynamespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mynamespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: mynamespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/mynamespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: mynamespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ns.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    foo: bar
    linkerd.io/inject: enabled
  name: ld-meshinj-goodns01
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ld-meshinj-goodns01
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ld-meshinj-goodns01
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ld-meshinj-goodns01
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ld-meshinj-goodns01
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ns_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    foo: bar
    linkerd.io/inject: enabled
  name: ld-meshinj-goodns02
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ld-meshinj-goodns02
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ld-meshinj-goodns02
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ld-meshinj-goodns02
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ld-meshinj-goodns02
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ns1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    foo: bar
    linkerd.io/inject: enabled
  name: ld-meshinj-goodns01
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ld-meshinj-goodns01
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ld-meshinj-goodns01
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ld-meshinj-goodns01
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ld-meshinj-goodns01
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ns1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    foo: bar
    linkerd.io/inject: enabled
  name: ld-meshinj-goodns02
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ld-meshinj-goodns02
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ld-meshinj-goodns02
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ld-meshinj-goodns02
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ld-meshinj-goodns02
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ns2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    foo: bar
    linkerd.io/inject: enabled
  name: ld-meshinj-goodns01
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ld-meshinj-goodns01
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ld-meshinj-goodns01
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ld-meshinj-goodns01
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ld-meshinj-goodns01
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ns2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    foo: bar
    linkerd.io/inject: enabled
  name: ld-meshinj-goodns02
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ld-meshinj-goodns02
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ld-meshinj-goodns02
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ld-meshinj-goodns02
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ld-meshinj-goodns02
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ns3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    foo: bar
    linkerd.io/inject: enabled
  name: ld-meshinj-goodns01
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ld-meshinj-goodns01
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ld-meshinj-goodns01
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ld-meshinj-goodns01
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ld-meshinj-goodns01
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ns3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    foo: bar
    linkerd.io/inject: enabled
  name: ld-meshinj-goodns02
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ld-meshinj-goodns02
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ld-meshinj-goodns02
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ld-meshinj-goodns02
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ld-meshinj-goodns02
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ns4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    foo: bar
    linkerd.io/inject: enabled
  name: ld-meshinj-goodns01
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ld-meshinj-goodns01
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ld-meshinj-goodns01
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ld-meshinj-goodns01
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns01:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ld-meshinj-goodns01
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-ns4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    foo: bar
    linkerd.io/inject: enabled
  name: ld-meshinj-goodns02
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ld-meshinj-goodns02
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ld-meshinj-goodns02
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ld-meshinj-goodns02
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ld-meshinj-goodns02:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ld-meshinj-goodns02
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-pod.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: goodpod01
  namespace: default
spec:
  containers:
  - command:
    - /bin/sleep
    - "300"
    image: ubuntu:18.04
    name: myshell
  volumes:
  - hostPath:
      path: /data
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: good-pod-01.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/good-pod-01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: good-pod-01
  namespace: default
spec:
  containers:
  - image: asdfeasdfasada:latest
    name: test-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  volumes:
  - hostPath:
      path: /var/log
    name: foo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/good-pod-01
policy disallow-default-namespace -> resource default/Pod/good-pod-01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/good-pod-01 failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/good-pod-01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/good-pod-01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/good-pod-01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/good-pod-01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/good-pod-01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/good-pod-01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/good-pod-01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: good-pod-011.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/good-pod-01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: good-pod-01
  namespace: default
spec:
  containers:
  - image: asdfeasdfasada:latest
    name: test-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  volumes:
  - hostPath:
      path: /var/log
    name: foo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/good-pod-01
policy disallow-default-namespace -> resource default/Pod/good-pod-01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/good-pod-01 failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/good-pod-01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/good-pod-01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/good-pod-01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/good-pod-01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/good-pod-01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/good-pod-01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/good-pod-01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: good-pod-012.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/good-pod-01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: good-pod-01
  namespace: default
spec:
  containers:
  - image: asdfeasdfasada:latest
    name: test-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  volumes:
  - hostPath:
      path: /var/log
    name: foo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/good-pod-01
policy disallow-default-namespace -> resource default/Pod/good-pod-01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/good-pod-01 failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/good-pod-01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/good-pod-01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/good-pod-01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/good-pod-01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/good-pod-01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/good-pod-01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/good-pod-01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: good-pod-013.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/good-pod-01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: good-pod-01
  namespace: default
spec:
  containers:
  - image: asdfeasdfasada:latest
    name: test-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  volumes:
  - hostPath:
      path: /var/log
    name: foo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/good-pod-01
policy disallow-default-namespace -> resource default/Pod/good-pod-01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/good-pod-01 failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/good-pod-01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/good-pod-01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/good-pod-01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/good-pod-01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/good-pod-01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/good-pod-01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/good-pod-01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: good-pod-014.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/good-pod-01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: good-pod-01
  namespace: default
spec:
  containers:
  - image: asdfeasdfasada:latest
    name: test-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  volumes:
  - hostPath:
      path: /var/log
    name: foo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/good-pod-01
policy disallow-default-namespace -> resource default/Pod/good-pod-01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/good-pod-01 failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/good-pod-01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/good-pod-01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/good-pod-01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/good-pod-01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/good-pod-01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/good-pod-01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/good-pod-01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: good-pod1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod-ht:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod-ht
  namespace: default
spec:
  containers:
  - image: busybox:v1.35
    name: busybox
  - image: busybox:v1.35
    name: nothelmbox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht
policy disallow-default-namespace -> resource default/Pod/goodpod-ht failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod-ht failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod-ht failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod-ht failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod-ht failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod-ht failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod-ht failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod-ht failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod-ht:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod-ht
  namespace: default
spec:
  containers:
  - image: busybox:v1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht
policy disallow-default-namespace -> resource default/Pod/goodpod-ht failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod-ht failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod-ht failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod-ht failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod-ht failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod-ht failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod-ht failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod-ht failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/add-capabilities-good:
apiVersion: v1
kind: Pod
metadata:
  name: add-capabilities-good
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: add-capabilities
    securityContext:
      capabilities:
        add:
        - SYS_TIME
        drop:
        - ALL
  - image: busybox:1.35
    name: add-capabilities-again
    securityContext:
      capabilities:
        add:
        - SYS_TIME
        drop:
        - ALL
  initContainers:
  - image: busybox:1.35
    name: init
    securityContext:
      capabilities:
        drop:
        - ALL

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/add-capabilities-good

skipped mutate policy add-safe-to-evict -> resource default/Pod/add-capabilities-good
policy disallow-default-namespace -> resource default/Pod/add-capabilities-good failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Pod/add-capabilities-good failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/add-capabilities-good failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/add-capabilities-good failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/add-capabilities-good failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/add-capabilities-good failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/add-capabilities-good failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/drop-capnetraw-good:
apiVersion: v1
kind: Pod
metadata:
  name: drop-capnetraw-good
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: add-capabilities
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW
  - image: busybox:1.35
    name: add-capabilities-again
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW
  initContainers:
  - image: busybox:1.35
    name: init
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/drop-capnetraw-good

skipped mutate policy add-safe-to-evict -> resource default/Pod/drop-capnetraw-good
policy disallow-default-namespace -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/drop-capnetraw-good failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/Pod/drop-capnetraw-good failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    linkerd.io/inject: enabled
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    foo: bar
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: goodpod01
  namespace: default
spec:
  containers:
  - command:
    - /bin/sleep
    - "300"
    image: ubuntu:18.04
    name: myshell
  volumes:
  - hostPath:
      path: /data
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: good-pod17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod-ht:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod-ht
  namespace: default
spec:
  containers:
  - image: busybox:v1.35
    name: busybox
  - image: busybox:v1.35
    name: nothelmbox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht
policy disallow-default-namespace -> resource default/Pod/goodpod-ht failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod-ht failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod-ht failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod-ht failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod-ht failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod-ht failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod-ht failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod-ht failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod-ht:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod-ht
  namespace: default
spec:
  containers:
  - image: busybox:v1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht
policy disallow-default-namespace -> resource default/Pod/goodpod-ht failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod-ht failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod-ht failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod-ht failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod-ht failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod-ht failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod-ht failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod-ht failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/add-capabilities-good:
apiVersion: v1
kind: Pod
metadata:
  name: add-capabilities-good
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: add-capabilities
    securityContext:
      capabilities:
        add:
        - SYS_TIME
        drop:
        - ALL
  - image: busybox:1.35
    name: add-capabilities-again
    securityContext:
      capabilities:
        add:
        - SYS_TIME
        drop:
        - ALL
  initContainers:
  - image: busybox:1.35
    name: init
    securityContext:
      capabilities:
        drop:
        - ALL

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/add-capabilities-good

skipped mutate policy add-safe-to-evict -> resource default/Pod/add-capabilities-good
policy disallow-default-namespace -> resource default/Pod/add-capabilities-good failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Pod/add-capabilities-good failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/add-capabilities-good failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/add-capabilities-good failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/add-capabilities-good failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/add-capabilities-good failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/add-capabilities-good failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod-ht:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod-ht
  namespace: default
spec:
  containers:
  - image: busybox:v1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht
policy disallow-default-namespace -> resource default/Pod/goodpod-ht failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod-ht failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod-ht failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod-ht failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod-ht failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod-ht failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod-ht failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod-ht failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/drop-capnetraw-good:
apiVersion: v1
kind: Pod
metadata:
  name: drop-capnetraw-good
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: add-capabilities
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW
  - image: busybox:1.35
    name: add-capabilities-again
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW
  initContainers:
  - image: busybox:1.35
    name: init
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/drop-capnetraw-good

skipped mutate policy add-safe-to-evict -> resource default/Pod/drop-capnetraw-good
policy disallow-default-namespace -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/drop-capnetraw-good failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/Pod/drop-capnetraw-good failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    linkerd.io/inject: enabled
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod22_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    foo: bar
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: goodpod01
  namespace: default
spec:
  containers:
  - command:
    - /bin/sleep
    - "300"
    image: ubuntu:18.04
    name: myshell
  volumes:
  - hostPath:
      path: /data
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: good-pod25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod-ht:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod-ht
  namespace: default
spec:
  containers:
  - image: busybox:v1.35
    name: busybox
  - image: busybox:v1.35
    name: nothelmbox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht
policy disallow-default-namespace -> resource default/Pod/goodpod-ht failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod-ht failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod-ht failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod-ht failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod-ht failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod-ht failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod-ht failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod-ht failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod-ht:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod-ht
  namespace: default
spec:
  containers:
  - image: busybox:v1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht
policy disallow-default-namespace -> resource default/Pod/goodpod-ht failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod-ht failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod-ht failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod-ht failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod-ht failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod-ht failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod-ht failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod-ht failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/add-capabilities-good:
apiVersion: v1
kind: Pod
metadata:
  name: add-capabilities-good
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: add-capabilities
    securityContext:
      capabilities:
        add:
        - SYS_TIME
        drop:
        - ALL
  - image: busybox:1.35
    name: add-capabilities-again
    securityContext:
      capabilities:
        add:
        - SYS_TIME
        drop:
        - ALL
  initContainers:
  - image: busybox:1.35
    name: init
    securityContext:
      capabilities:
        drop:
        - ALL

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/add-capabilities-good

skipped mutate policy add-safe-to-evict -> resource default/Pod/add-capabilities-good
policy disallow-default-namespace -> resource default/Pod/add-capabilities-good failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Pod/add-capabilities-good failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/add-capabilities-good failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/add-capabilities-good failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/add-capabilities-good failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/add-capabilities-good failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/add-capabilities-good failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/drop-capnetraw-good:
apiVersion: v1
kind: Pod
metadata:
  name: drop-capnetraw-good
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: add-capabilities
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW
  - image: busybox:1.35
    name: add-capabilities-again
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW
  initContainers:
  - image: busybox:1.35
    name: init
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/drop-capnetraw-good

skipped mutate policy add-safe-to-evict -> resource default/Pod/drop-capnetraw-good
policy disallow-default-namespace -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/drop-capnetraw-good failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/Pod/drop-capnetraw-good failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    linkerd.io/inject: enabled
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod29_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/add-capabilities-good:
apiVersion: v1
kind: Pod
metadata:
  name: add-capabilities-good
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: add-capabilities
    securityContext:
      capabilities:
        add:
        - SYS_TIME
        drop:
        - ALL
  - image: busybox:1.35
    name: add-capabilities-again
    securityContext:
      capabilities:
        add:
        - SYS_TIME
        drop:
        - ALL
  initContainers:
  - image: busybox:1.35
    name: init
    securityContext:
      capabilities:
        drop:
        - ALL

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/add-capabilities-good

skipped mutate policy add-safe-to-evict -> resource default/Pod/add-capabilities-good
policy disallow-default-namespace -> resource default/Pod/add-capabilities-good failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Pod/add-capabilities-good failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/add-capabilities-good failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/add-capabilities-good failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/add-capabilities-good failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/add-capabilities-good failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/add-capabilities-good failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod30_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    foo: bar
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: goodpod01
  namespace: default
spec:
  containers:
  - command:
    - /bin/sleep
    - "300"
    image: ubuntu:18.04
    name: myshell
  volumes:
  - hostPath:
      path: /data
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: good-pod33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod-ht:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod-ht
  namespace: default
spec:
  containers:
  - image: busybox:v1.35
    name: busybox
  - image: busybox:v1.35
    name: nothelmbox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht
policy disallow-default-namespace -> resource default/Pod/goodpod-ht failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod-ht failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod-ht failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod-ht failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod-ht failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod-ht failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod-ht failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod-ht failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod-ht:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod-ht
  namespace: default
spec:
  containers:
  - image: busybox:v1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht
policy disallow-default-namespace -> resource default/Pod/goodpod-ht failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod-ht failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod-ht failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod-ht failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod-ht failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod-ht failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod-ht failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod-ht failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/add-capabilities-good:
apiVersion: v1
kind: Pod
metadata:
  name: add-capabilities-good
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: add-capabilities
    securityContext:
      capabilities:
        add:
        - SYS_TIME
        drop:
        - ALL
  - image: busybox:1.35
    name: add-capabilities-again
    securityContext:
      capabilities:
        add:
        - SYS_TIME
        drop:
        - ALL
  initContainers:
  - image: busybox:1.35
    name: init
    securityContext:
      capabilities:
        drop:
        - ALL

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/add-capabilities-good

skipped mutate policy add-safe-to-evict -> resource default/Pod/add-capabilities-good
policy disallow-default-namespace -> resource default/Pod/add-capabilities-good failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Pod/add-capabilities-good failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/add-capabilities-good failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/add-capabilities-good failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/add-capabilities-good failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/add-capabilities-good failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/add-capabilities-good failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod36.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/drop-capnetraw-good:
apiVersion: v1
kind: Pod
metadata:
  name: drop-capnetraw-good
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: add-capabilities
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW
  - image: busybox:1.35
    name: add-capabilities-again
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW
  initContainers:
  - image: busybox:1.35
    name: init
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/drop-capnetraw-good

skipped mutate policy add-safe-to-evict -> resource default/Pod/drop-capnetraw-good
policy disallow-default-namespace -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/drop-capnetraw-good failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/Pod/drop-capnetraw-good failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    linkerd.io/inject: enabled
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod37_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod38_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    foo: bar
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/drop-capnetraw-good:
apiVersion: v1
kind: Pod
metadata:
  name: drop-capnetraw-good
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: add-capabilities
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW
  - image: busybox:1.35
    name: add-capabilities-again
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW
  initContainers:
  - image: busybox:1.35
    name: init
    securityContext:
      capabilities:
        drop:
        - CAP_NET_RAW

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/drop-capnetraw-good

skipped mutate policy add-safe-to-evict -> resource default/Pod/drop-capnetraw-good
policy disallow-default-namespace -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/drop-capnetraw-good failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/Pod/drop-capnetraw-good failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Pod/drop-capnetraw-good failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/good-pod:
apiVersion: v1
kind: Pod
metadata:
  name: good-pod
  namespace: default
spec:
  containers:
  - image: kubernetes/pause
    name: pause
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/good-pod

skipped mutate policy add-safe-to-evict -> resource default/Pod/good-pod
policy disallow-default-namespace -> resource default/Pod/good-pod failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/good-pod failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/good-pod failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/good-pod failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/good-pod failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/good-pod failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/good-pod failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/good-pod failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/good-pod failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: good-pod5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    linkerd.io/inject: enabled
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    foo: bar
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    resources: {}

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/limits/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pod8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: goodpod01
  namespace: default
spec:
  containers:
  - command:
    - /bin/sleep
    - "300"
    image: ubuntu:18.04
    name: myshell
  volumes:
  - hostPath:
      path: /data
    name: data

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 8, warn: 0, error: 0, skip: 1 

##### FILE: good-pod9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod-ht:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod-ht
  namespace: default
spec:
  containers:
  - image: busybox:v1.35
    name: busybox
  - image: busybox:v1.35
    name: nothelmbox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod-ht
policy disallow-default-namespace -> resource default/Pod/goodpod-ht failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod-ht failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod-ht failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod-ht failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod-ht failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod-ht failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod-ht failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod-ht failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dropall-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dropall-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: busybox:1.35
        name: add-capabilities
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      - image: busybox:1.35
        name: add-capabilities-again
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      initContainers:
      - image: busybox:1.35
        name: init
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      - image: busybox:1.35
        name: init2
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropall-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropall-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dropall-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dropall-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: add-capabilities
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          - image: busybox:1.35
            name: add-capabilities-again
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          initContainers:
          - image: busybox:1.35
            name: init
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          - image: busybox:1.35
            name: init2
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropall-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropall-goodcronjob01
policy drop-cap-net-raw -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dropcapnetraw-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dropcapnetraw-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: busybox:1.35
        name: add-capabilities
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      - image: busybox:1.35
        name: add-capabilities-again
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      initContainers:
      - image: busybox:1.35
        name: init
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      - image: busybox:1.35
        name: init2
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropcapnetraw-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropcapnetraw-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dropcapnetraw-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dropcapnetraw-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: add-capabilities
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          - image: busybox:1.35
            name: add-capabilities-again
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          initContainers:
          - image: busybox:1.35
            name: init
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          - image: busybox:1.35
            name: init2
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropcapnetraw-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropcapnetraw-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dropcapnetraw-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dropcapnetraw-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: busybox:1.35
        name: add-capabilities
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      - image: busybox:1.35
        name: add-capabilities-again
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      initContainers:
      - image: busybox:1.35
        name: init
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      - image: busybox:1.35
        name: init2
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropcapnetraw-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropcapnetraw-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dropcapnetraw-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dropcapnetraw-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: add-capabilities
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          - image: busybox:1.35
            name: add-capabilities-again
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          initContainers:
          - image: busybox:1.35
            name: init
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          - image: busybox:1.35
            name: init2
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropcapnetraw-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropcapnetraw-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqlabels-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqlabels-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bar
      foo: bar
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bar
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqlabels-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqlabels-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqlabels-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqlabels-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: bar
            foo: bar
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqlabels-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqlabels-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqpodlimits-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqpodlimits-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox
        name: busybox
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      - image: busybox
        name: busybox-again
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqpodlimits-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqpodlimits-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers12_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqpodlimits-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqpodlimits-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox
            name: busybox
            resources:
              limits:
                memory: 100Mi
              requests:
                cpu: 100m
                memory: 50Mi
          - image: busybox
            name: busybox-again
            resources:
              limits:
                memory: 100Mi
              requests:
                cpu: 100m
                memory: 50Mi
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqpodlimits-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqpodlimits-goodcronjob01
policy disallow-latest-tag -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-ro-rootfs -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqprobes-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqprobes-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        livenessProbe:
          periodSeconds: 20
          tcpSocket:
            port: 7070
        name: busybox
      - image: busybox:1.35
        name: busybox-again
        readinessProbe:
          periodSeconds: 10
          tcpSocket:
            port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqprobes-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqprobes-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqro-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqro-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        securityContext:
          readOnlyRootFilesystem: true
      - image: busybox:1.35
        name: busybox-again
        securityContext:
          readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqro-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqro-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqprobes-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqprobes-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
            securityContext:
              readOnlyRootFilesystem: true
          - image: busybox:1.35
            name: busybox-again
            securityContext:
              readOnlyRootFilesystem: true
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqprobes-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqprobes-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Deployment/reqro-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqro-gooddeployment01
  namespace: ir-pods-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: eu.foo.io/nginx
        name: busybox
      - image: bar.io/nginx
        name: k8s-nginx
      initContainers:
      - image: bar.io/nginx
        name: k8s-nginx-init
      - image: eu.foo.io/busybox
        name: busybox-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01
policy disallow-latest-tag -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/CronJob/reqprobes-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqprobes-goodcronjob01
  namespace: ir-pods-namespace
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: eu.foo.io/nginx
            name: busybox
          - image: bar.io/nginx
            name: k8s-nginx
          initContainers:
          - image: bar.io/nginx
            name: k8s-nginx-init
          - image: eu.foo.io/busybox
            name: busybox-init
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01
policy disallow-latest-tag -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers16_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers16_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers16_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob02:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob02
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            linkerd.io/inject: enabled
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02
policy drop-all-capabilities -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers17_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        foo: bar
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers17_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers17_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob02:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob02
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            foo: bar
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02
policy drop-all-capabilities -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dropall-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dropall-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: busybox:1.35
        name: add-capabilities
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      - image: busybox:1.35
        name: add-capabilities-again
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      initContainers:
      - image: busybox:1.35
        name: init
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      - image: busybox:1.35
        name: init2
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropall-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropall-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dropall-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dropall-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: add-capabilities
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          - image: busybox:1.35
            name: add-capabilities-again
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          initContainers:
          - image: busybox:1.35
            name: init
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          - image: busybox:1.35
            name: init2
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropall-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropall-goodcronjob01
policy drop-cap-net-raw -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dropcapnetraw-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dropcapnetraw-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: busybox:1.35
        name: add-capabilities
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      - image: busybox:1.35
        name: add-capabilities-again
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      initContainers:
      - image: busybox:1.35
        name: init
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      - image: busybox:1.35
        name: init2
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropcapnetraw-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropcapnetraw-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dropcapnetraw-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dropcapnetraw-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: add-capabilities
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          - image: busybox:1.35
            name: add-capabilities-again
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          initContainers:
          - image: busybox:1.35
            name: init
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          - image: busybox:1.35
            name: init2
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropcapnetraw-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropcapnetraw-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqlabels-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqlabels-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bar
      foo: bar
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bar
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqlabels-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqlabels-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqlabels-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqlabels-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: bar
            foo: bar
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqlabels-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqlabels-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqlabels-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqlabels-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bar
      foo: bar
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bar
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqlabels-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqlabels-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers20_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqlabels-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqlabels-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: bar
            foo: bar
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqlabels-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqlabels-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqpodlimits-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqpodlimits-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox
        name: busybox
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      - image: busybox
        name: busybox-again
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqpodlimits-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqpodlimits-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqpodlimits-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqpodlimits-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox
            name: busybox
            resources:
              limits:
                memory: 100Mi
              requests:
                cpu: 100m
                memory: 50Mi
          - image: busybox
            name: busybox-again
            resources:
              limits:
                memory: 100Mi
              requests:
                cpu: 100m
                memory: 50Mi
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqpodlimits-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqpodlimits-goodcronjob01
policy disallow-latest-tag -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-ro-rootfs -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqprobes-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqprobes-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        livenessProbe:
          periodSeconds: 20
          tcpSocket:
            port: 7070
        name: busybox
      - image: busybox:1.35
        name: busybox-again
        readinessProbe:
          periodSeconds: 10
          tcpSocket:
            port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqprobes-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqprobes-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqro-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqro-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        securityContext:
          readOnlyRootFilesystem: true
      - image: busybox:1.35
        name: busybox-again
        securityContext:
          readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqro-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqro-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers23_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqprobes-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqprobes-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
            securityContext:
              readOnlyRootFilesystem: true
          - image: busybox:1.35
            name: busybox-again
            securityContext:
              readOnlyRootFilesystem: true
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqprobes-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqprobes-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Deployment/reqro-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqro-gooddeployment01
  namespace: ir-pods-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: eu.foo.io/nginx
        name: busybox
      - image: bar.io/nginx
        name: k8s-nginx
      initContainers:
      - image: bar.io/nginx
        name: k8s-nginx-init
      - image: eu.foo.io/busybox
        name: busybox-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01
policy disallow-latest-tag -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers24_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/CronJob/reqprobes-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqprobes-goodcronjob01
  namespace: ir-pods-namespace
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: eu.foo.io/nginx
            name: busybox
          - image: bar.io/nginx
            name: k8s-nginx
          initContainers:
          - image: bar.io/nginx
            name: k8s-nginx-init
          - image: eu.foo.io/busybox
            name: busybox-init
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01
policy disallow-latest-tag -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers25.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers25_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers25_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers25_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob02:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob02
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            linkerd.io/inject: enabled
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02
policy drop-all-capabilities -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers26.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers26_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        foo: bar
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers26_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers26_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob02:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob02
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            foo: bar
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02
policy drop-all-capabilities -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers27.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dropall-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dropall-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: busybox:1.35
        name: add-capabilities
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      - image: busybox:1.35
        name: add-capabilities-again
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      initContainers:
      - image: busybox:1.35
        name: init
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      - image: busybox:1.35
        name: init2
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropall-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropall-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers27_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dropall-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dropall-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: add-capabilities
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          - image: busybox:1.35
            name: add-capabilities-again
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          initContainers:
          - image: busybox:1.35
            name: init
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          - image: busybox:1.35
            name: init2
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropall-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropall-goodcronjob01
policy drop-cap-net-raw -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers28.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dropcapnetraw-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dropcapnetraw-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: busybox:1.35
        name: add-capabilities
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      - image: busybox:1.35
        name: add-capabilities-again
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      initContainers:
      - image: busybox:1.35
        name: init
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      - image: busybox:1.35
        name: init2
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropcapnetraw-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropcapnetraw-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers28_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dropcapnetraw-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dropcapnetraw-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: add-capabilities
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          - image: busybox:1.35
            name: add-capabilities-again
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          initContainers:
          - image: busybox:1.35
            name: init
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          - image: busybox:1.35
            name: init2
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropcapnetraw-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropcapnetraw-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers29.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqlabels-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqlabels-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bar
      foo: bar
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bar
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqlabels-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqlabels-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers29_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqlabels-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqlabels-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: bar
            foo: bar
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqlabels-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqlabels-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqpodlimits-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqpodlimits-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox
        name: busybox
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      - image: busybox
        name: busybox-again
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqpodlimits-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqpodlimits-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqpodlimits-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqpodlimits-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox
            name: busybox
            resources:
              limits:
                memory: 100Mi
              requests:
                cpu: 100m
                memory: 50Mi
          - image: busybox
            name: busybox-again
            resources:
              limits:
                memory: 100Mi
              requests:
                cpu: 100m
                memory: 50Mi
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqpodlimits-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqpodlimits-goodcronjob01
policy disallow-latest-tag -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-ro-rootfs -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers30.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqpodlimits-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqpodlimits-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox
        name: busybox
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      - image: busybox
        name: busybox-again
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqpodlimits-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqpodlimits-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers30_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqpodlimits-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqpodlimits-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox
            name: busybox
            resources:
              limits:
                memory: 100Mi
              requests:
                cpu: 100m
                memory: 50Mi
          - image: busybox
            name: busybox-again
            resources:
              limits:
                memory: 100Mi
              requests:
                cpu: 100m
                memory: 50Mi
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqpodlimits-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqpodlimits-goodcronjob01
policy disallow-latest-tag -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-ro-rootfs -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers31.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqprobes-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqprobes-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        livenessProbe:
          periodSeconds: 20
          tcpSocket:
            port: 7070
        name: busybox
      - image: busybox:1.35
        name: busybox-again
        readinessProbe:
          periodSeconds: 10
          tcpSocket:
            port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqprobes-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqprobes-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers32.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqro-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqro-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        securityContext:
          readOnlyRootFilesystem: true
      - image: busybox:1.35
        name: busybox-again
        securityContext:
          readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqro-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqro-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers32_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqprobes-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqprobes-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
            securityContext:
              readOnlyRootFilesystem: true
          - image: busybox:1.35
            name: busybox-again
            securityContext:
              readOnlyRootFilesystem: true
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqprobes-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqprobes-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers33.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Deployment/reqro-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqro-gooddeployment01
  namespace: ir-pods-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: eu.foo.io/nginx
        name: busybox
      - image: bar.io/nginx
        name: k8s-nginx
      initContainers:
      - image: bar.io/nginx
        name: k8s-nginx-init
      - image: eu.foo.io/busybox
        name: busybox-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01
policy disallow-latest-tag -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers33_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/CronJob/reqprobes-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqprobes-goodcronjob01
  namespace: ir-pods-namespace
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: eu.foo.io/nginx
            name: busybox
          - image: bar.io/nginx
            name: k8s-nginx
          initContainers:
          - image: bar.io/nginx
            name: k8s-nginx-init
          - image: eu.foo.io/busybox
            name: busybox-init
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01
policy disallow-latest-tag -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers34.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers34_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers34_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers34_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob02:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob02
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            linkerd.io/inject: enabled
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02
policy drop-all-capabilities -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers35.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers35_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        foo: bar
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers35_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers35_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob02:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob02
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            foo: bar
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02
policy drop-all-capabilities -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers36.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dropall-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dropall-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: busybox:1.35
        name: add-capabilities
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      - image: busybox:1.35
        name: add-capabilities-again
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      initContainers:
      - image: busybox:1.35
        name: init
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      - image: busybox:1.35
        name: init2
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropall-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropall-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers36_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dropall-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dropall-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: add-capabilities
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          - image: busybox:1.35
            name: add-capabilities-again
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          initContainers:
          - image: busybox:1.35
            name: init
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          - image: busybox:1.35
            name: init2
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropall-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropall-goodcronjob01
policy drop-cap-net-raw -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers37.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dropcapnetraw-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dropcapnetraw-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: busybox:1.35
        name: add-capabilities
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      - image: busybox:1.35
        name: add-capabilities-again
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      initContainers:
      - image: busybox:1.35
        name: init
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW
      - image: busybox:1.35
        name: init2
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - CAP_NET_RAW

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropcapnetraw-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropcapnetraw-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dropcapnetraw-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers37_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dropcapnetraw-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dropcapnetraw-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: add-capabilities
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          - image: busybox:1.35
            name: add-capabilities-again
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          initContainers:
          - image: busybox:1.35
            name: init
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          - image: busybox:1.35
            name: init2
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - CAP_NET_RAW
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropcapnetraw-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropcapnetraw-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy require-labels -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/dropcapnetraw-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers38.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqlabels-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqlabels-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bar
      foo: bar
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bar
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqlabels-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqlabels-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqlabels-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers38_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqlabels-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqlabels-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: bar
            foo: bar
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqlabels-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqlabels-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/reqlabels-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers39.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqpodlimits-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqpodlimits-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox
        name: busybox
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      - image: busybox
        name: busybox-again
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqpodlimits-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqpodlimits-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqpodlimits-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers39_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqpodlimits-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqpodlimits-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox
            name: busybox
            resources:
              limits:
                memory: 100Mi
              requests:
                cpu: 100m
                memory: 50Mi
          - image: busybox
            name: busybox-again
            resources:
              limits:
                memory: 100Mi
              requests:
                cpu: 100m
                memory: 50Mi
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqpodlimits-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqpodlimits-goodcronjob01
policy disallow-latest-tag -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-ro-rootfs -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/reqpodlimits-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqprobes-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqprobes-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        livenessProbe:
          periodSeconds: 20
          tcpSocket:
            port: 7070
        name: busybox
      - image: busybox:1.35
        name: busybox-again
        readinessProbe:
          periodSeconds: 10
          tcpSocket:
            port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqprobes-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqprobes-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers40.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqprobes-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqprobes-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        livenessProbe:
          periodSeconds: 20
          tcpSocket:
            port: 7070
        name: busybox
      - image: busybox:1.35
        name: busybox-again
        readinessProbe:
          periodSeconds: 10
          tcpSocket:
            port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqprobes-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqprobes-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/reqprobes-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers41.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqro-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqro-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        securityContext:
          readOnlyRootFilesystem: true
      - image: busybox:1.35
        name: busybox-again
        securityContext:
          readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqro-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqro-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers41_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqprobes-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqprobes-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
            securityContext:
              readOnlyRootFilesystem: true
          - image: busybox:1.35
            name: busybox-again
            securityContext:
              readOnlyRootFilesystem: true
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqprobes-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqprobes-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers42.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Deployment/reqro-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqro-gooddeployment01
  namespace: ir-pods-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: eu.foo.io/nginx
        name: busybox
      - image: bar.io/nginx
        name: k8s-nginx
      initContainers:
      - image: bar.io/nginx
        name: k8s-nginx-init
      - image: eu.foo.io/busybox
        name: busybox-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01
policy disallow-latest-tag -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers42_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/CronJob/reqprobes-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqprobes-goodcronjob01
  namespace: ir-pods-namespace
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: eu.foo.io/nginx
            name: busybox
          - image: bar.io/nginx
            name: k8s-nginx
          initContainers:
          - image: bar.io/nginx
            name: k8s-nginx-init
          - image: eu.foo.io/busybox
            name: busybox-init
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01
policy disallow-latest-tag -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers43.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers43_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers43_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers43_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob02:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob02
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            linkerd.io/inject: enabled
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02
policy drop-all-capabilities -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers44.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers44_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        foo: bar
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers44_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers44_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob02:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob02
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            foo: bar
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02
policy drop-all-capabilities -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/reqro-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqro-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: busybox:1.35
        name: busybox
        securityContext:
          readOnlyRootFilesystem: true
      - image: busybox:1.35
        name: busybox-again
        securityContext:
          readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqro-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/reqro-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/reqprobes-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqprobes-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: busybox
            securityContext:
              readOnlyRootFilesystem: true
          - image: busybox:1.35
            name: busybox-again
            securityContext:
              readOnlyRootFilesystem: true
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqprobes-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/reqprobes-goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy restrict-image-registries -> resource default/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Deployment/reqro-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reqro-gooddeployment01
  namespace: ir-pods-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      foo: bar
  template:
    metadata:
      labels:
        foo: bar
    spec:
      containers:
      - image: eu.foo.io/nginx
        name: busybox
      - image: bar.io/nginx
        name: k8s-nginx
      initContainers:
      - image: bar.io/nginx
        name: k8s-nginx-init
      - image: eu.foo.io/busybox
        name: busybox-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01
policy disallow-latest-tag -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Deployment/reqro-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/CronJob/reqprobes-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reqprobes-goodcronjob01
  namespace: ir-pods-namespace
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: eu.foo.io/nginx
            name: busybox
          - image: bar.io/nginx
            name: k8s-nginx
          initContainers:
          - image: bar.io/nginx
            name: k8s-nginx-init
          - image: eu.foo.io/busybox
            name: busybox-init
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01
policy disallow-latest-tag -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-image-tag validation failure: validation error: An image tag is required. rule autogen-cronjob-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource ir-pods-namespace/CronJob/reqprobes-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers7_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers7_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers7_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob02:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob02
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            linkerd.io/inject: enabled
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02
policy drop-all-capabilities -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers8.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy01:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy01
policy disallow-default-namespace -> resource default/Deployment/gooddeploy01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers8_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/gooddeploy02:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: busybox
  name: gooddeploy02
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      annotations:
        foo: bar
      labels:
        app: busybox
    spec:
      containers:
      - image: busybox:1.35
        name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02

skipped mutate policy add-safe-to-evict -> resource default/Deployment/gooddeploy02
policy disallow-default-namespace -> resource default/Deployment/gooddeploy02 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/gooddeploy02 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers8_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob01
policy drop-all-capabilities -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers8_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/goodcronjob02:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob02
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            foo: bar
        spec:
          containers:
          - command:
            - sleep
            - "3600"
            image: busybox:1.35
            name: hello
          restartPolicy: OnFailure
  schedule: '* * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02

skipped mutate policy add-safe-to-evict -> resource default/CronJob/goodcronjob02
policy drop-all-capabilities -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/labels/

policy require-requests-limits -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/containers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/CronJob/goodcronjob02 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/containers/0/image/


pass: 7, fail: 6, warn: 0, error: 0, skip: 3 

##### FILE: good-podcontrollers9.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/dropall-gooddeployment01:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dropall-gooddeployment01
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: busybox:1.35
        name: add-capabilities
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      - image: busybox:1.35
        name: add-capabilities-again
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      initContainers:
      - image: busybox:1.35
        name: init
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL
      - image: busybox:1.35
        name: init2
        securityContext:
          capabilities:
            add:
            - SYS_TIME
            drop:
            - ALL

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropall-gooddeployment01

skipped mutate policy add-safe-to-evict -> resource default/Deployment/dropall-gooddeployment01
policy disallow-default-namespace -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-cap-net-raw -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/initContainers/0/resources/

policy require-pod-probes -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/Deployment/dropall-gooddeployment01 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/initContainers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-podcontrollers9_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/CronJob/dropall-goodcronjob01:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dropall-goodcronjob01
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: busybox:1.35
            name: add-capabilities
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          - image: busybox:1.35
            name: add-capabilities-again
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          initContainers:
          - image: busybox:1.35
            name: init
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          - image: busybox:1.35
            name: init2
            securityContext:
              capabilities:
                add:
                - SYS_TIME
                drop:
                - ALL
          restartPolicy: OnFailure
  schedule: '*/1 * * * *'

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropall-goodcronjob01

skipped mutate policy add-safe-to-evict -> resource default/CronJob/dropall-goodcronjob01
policy drop-cap-net-raw -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-cronjob-check-for-labels failed at path /spec/jobTemplate/spec/template/metadata/

policy require-requests-limits -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-cronjob-validate-resources failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/resources/

policy require-ro-rootfs -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-cronjob-validate-readOnlyRootFilesystem failed at path /spec/jobTemplate/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem/

policy restrict-image-registries -> resource default/CronJob/dropall-goodcronjob01 failed:
1 - autogen-cronjob-validate-registries validation error: Unknown image registry. rule autogen-cronjob-validate-registries failed at path /spec/jobTemplate/spec/template/spec/initContainers/0/image/


pass: 8, fail: 5, warn: 0, error: 0, skip: 3 

##### FILE: good-pod-not-admin.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testnamespace/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02
  namespace: testnamespace
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource testnamespace/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource testnamespace/Pod/goodpod02
policy drop-all-capabilities -> resource testnamespace/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource testnamespace/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource testnamespace/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod-not-admin1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testnamespace/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02
  namespace: testnamespace
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource testnamespace/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource testnamespace/Pod/goodpod02
policy drop-all-capabilities -> resource testnamespace/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource testnamespace/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource testnamespace/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod-not-admin2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testnamespace/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02
  namespace: testnamespace
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource testnamespace/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource testnamespace/Pod/goodpod02
policy drop-all-capabilities -> resource testnamespace/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource testnamespace/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource testnamespace/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod-not-admin3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testnamespace/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02
  namespace: testnamespace
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource testnamespace/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource testnamespace/Pod/goodpod02
policy drop-all-capabilities -> resource testnamespace/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource testnamespace/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource testnamespace/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pod-not-admin4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to testnamespace/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02
  namespace: testnamespace
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource testnamespace/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource testnamespace/Pod/goodpod02
policy drop-all-capabilities -> resource testnamespace/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource testnamespace/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource testnamespace/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource testnamespace/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01-label:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/name: busybox
  name: goodpod01-label
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-label

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-label
policy disallow-default-namespace -> resource default/Pod/goodpod01-label failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01-label failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01-label failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Pod/goodpod01-label failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01-label failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01-label failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01-label failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox
    name: busybox
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/goodpod01 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pods1_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox
    name: busybox
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi
  - image: busybox
    name: busybox-again
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/goodpod02 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pods10.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01-label:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/name: busybox
  name: goodpod01-label
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-label

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-label
policy disallow-default-namespace -> resource default/Pod/goodpod01-label failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01-label failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01-label failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Pod/goodpod01-label failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01-label failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01-label failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01-label failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods10_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02-label:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/name: busybox
    foo: bar
  name: goodpod02-label
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-label

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-label
policy disallow-default-namespace -> resource default/Pod/goodpod02-label failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02-label failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02-label failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Pod/goodpod02-label failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod02-label failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02-label failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02-label failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods11.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox
    name: busybox
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/goodpod01 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pods11_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox
    name: busybox
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi
  - image: busybox
    name: busybox-again
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/goodpod02 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pods12.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    livenessProbe:
      periodSeconds: 20
      tcpSocket:
        port: 7070
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods12_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    livenessProbe:
      periodSeconds: 20
      tcpSocket:
        port: 7070
    name: busybox
  - image: busybox:1.35
    name: busybox-again
    readinessProbe:
      periodSeconds: 10
      tcpSocket:
        port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods12_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod03:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod03
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    startupProbe:
      grpc:
        port: 8888

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod03

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod03
policy disallow-default-namespace -> resource default/Pod/goodpod03 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod03 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod03 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod03 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/goodpod03 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/goodpod03 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod03 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods13.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01-roroot:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01-roroot
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    securityContext:
      readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-roroot

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-roroot
policy disallow-default-namespace -> resource default/Pod/goodpod01-roroot failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01-roroot failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01-roroot failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01-roroot failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01-roroot failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01-roroot failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Pod/goodpod01-roroot failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods13_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02-roroot:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02-roroot
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    securityContext:
      readOnlyRootFilesystem: true
  - image: busybox:1.35
    name: busybox-again
    securityContext:
      readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-roroot

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-roroot
policy disallow-default-namespace -> resource default/Pod/goodpod02-roroot failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02-roroot failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02-roroot failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02-roroot failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02-roroot failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod02-roroot failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Pod/goodpod02-roroot failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods14.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ir-pods-namespace:
apiVersion: v1
kind: Namespace
metadata:
  name: ir-pods-namespace
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ir-pods-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ir-pods-namespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ir-pods-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ir-pods-namespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ir-pods-namespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ir-pods-namespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ir-pods-namespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ir-pods-namespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-pods14_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Pod/goodpod01-registry:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01-registry
  namespace: ir-pods-namespace
spec:
  containers:
  - image: eu.foo.io/nginx
    name: k8s-nginx
  initContainers:
  - image: bar.io/nginx
    name: k8s-nginx-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod01-registry

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod01-registry
policy disallow-latest-tag -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods14_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Pod/goodpod02-registry:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02-registry
  namespace: ir-pods-namespace
spec:
  containers:
  - image: bar.io/nginx
    name: k8s-nginx
  - image: eu.foo.io/busybox
    name: busybox
  initContainers:
  - image: bar.io/nginx
    name: nginx-init
  - image: eu.foo.io/busybox
    name: busybox-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod02-registry

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod02-registry
policy disallow-latest-tag -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods15.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01-label:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/name: busybox
  name: goodpod01-label
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-label

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-label
policy disallow-default-namespace -> resource default/Pod/goodpod01-label failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01-label failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01-label failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Pod/goodpod01-label failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01-label failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01-label failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01-label failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods15_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02-label:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/name: busybox
    foo: bar
  name: goodpod02-label
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-label

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-label
policy disallow-default-namespace -> resource default/Pod/goodpod02-label failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02-label failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02-label failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Pod/goodpod02-label failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod02-label failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02-label failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02-label failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods16.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox
    name: busybox
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/goodpod01 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pods16_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox
    name: busybox
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi
  - image: busybox
    name: busybox-again
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/goodpod02 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pods17.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    livenessProbe:
      periodSeconds: 20
      tcpSocket:
        port: 7070
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods17_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    livenessProbe:
      periodSeconds: 20
      tcpSocket:
        port: 7070
    name: busybox
  - image: busybox:1.35
    name: busybox-again
    readinessProbe:
      periodSeconds: 10
      tcpSocket:
        port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods17_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod03:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod03
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    startupProbe:
      grpc:
        port: 8888

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod03

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod03
policy disallow-default-namespace -> resource default/Pod/goodpod03 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod03 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod03 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod03 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/goodpod03 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/goodpod03 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod03 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods18.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01-roroot:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01-roroot
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    securityContext:
      readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-roroot

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-roroot
policy disallow-default-namespace -> resource default/Pod/goodpod01-roroot failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01-roroot failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01-roroot failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01-roroot failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01-roroot failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01-roroot failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Pod/goodpod01-roroot failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods18_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02-roroot:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02-roroot
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    securityContext:
      readOnlyRootFilesystem: true
  - image: busybox:1.35
    name: busybox-again
    securityContext:
      readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-roroot

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-roroot
policy disallow-default-namespace -> resource default/Pod/goodpod02-roroot failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02-roroot failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02-roroot failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02-roroot failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02-roroot failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod02-roroot failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Pod/goodpod02-roroot failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods19.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ir-pods-namespace:
apiVersion: v1
kind: Namespace
metadata:
  name: ir-pods-namespace
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ir-pods-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ir-pods-namespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ir-pods-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ir-pods-namespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ir-pods-namespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ir-pods-namespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ir-pods-namespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ir-pods-namespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-pods19_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Pod/goodpod01-registry:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01-registry
  namespace: ir-pods-namespace
spec:
  containers:
  - image: eu.foo.io/nginx
    name: k8s-nginx
  initContainers:
  - image: bar.io/nginx
    name: k8s-nginx-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod01-registry

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod01-registry
policy disallow-latest-tag -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods19_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Pod/goodpod02-registry:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02-registry
  namespace: ir-pods-namespace
spec:
  containers:
  - image: bar.io/nginx
    name: k8s-nginx
  - image: eu.foo.io/busybox
    name: busybox
  initContainers:
  - image: bar.io/nginx
    name: nginx-init
  - image: eu.foo.io/busybox
    name: busybox-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod02-registry

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod02-registry
policy disallow-latest-tag -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    livenessProbe:
      periodSeconds: 20
      tcpSocket:
        port: 7070
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods2_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    livenessProbe:
      periodSeconds: 20
      tcpSocket:
        port: 7070
    name: busybox
  - image: busybox:1.35
    name: busybox-again
    readinessProbe:
      periodSeconds: 10
      tcpSocket:
        port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods2_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod03:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod03
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    startupProbe:
      grpc:
        port: 8888

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod03

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod03
policy disallow-default-namespace -> resource default/Pod/goodpod03 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod03 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod03 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod03 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/goodpod03 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/goodpod03 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod03 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods20.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01-label:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/name: busybox
  name: goodpod01-label
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-label

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-label
policy disallow-default-namespace -> resource default/Pod/goodpod01-label failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01-label failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01-label failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Pod/goodpod01-label failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01-label failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01-label failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01-label failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods20_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02-label:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/name: busybox
    foo: bar
  name: goodpod02-label
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-label

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-label
policy disallow-default-namespace -> resource default/Pod/goodpod02-label failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02-label failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02-label failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Pod/goodpod02-label failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod02-label failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02-label failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02-label failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods21.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox
    name: busybox
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/goodpod01 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pods21_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox
    name: busybox
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi
  - image: busybox
    name: busybox-again
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/goodpod02 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pods22.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    livenessProbe:
      periodSeconds: 20
      tcpSocket:
        port: 7070
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/goodpod01 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods22_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    livenessProbe:
      periodSeconds: 20
      tcpSocket:
        port: 7070
    name: busybox
  - image: busybox:1.35
    name: busybox-again
    readinessProbe:
      periodSeconds: 10
      tcpSocket:
        port: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/goodpod02 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods22_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod03:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod03
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    startupProbe:
      grpc:
        port: 8888

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod03

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod03
policy disallow-default-namespace -> resource default/Pod/goodpod03 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod03 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod03 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod03 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Pod/goodpod03 failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-ro-rootfs -> resource default/Pod/goodpod03 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod03 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods23.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01-roroot:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01-roroot
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    securityContext:
      readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-roroot

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-roroot
policy disallow-default-namespace -> resource default/Pod/goodpod01-roroot failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01-roroot failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01-roroot failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01-roroot failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01-roroot failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01-roroot failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Pod/goodpod01-roroot failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods23_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02-roroot:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02-roroot
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    securityContext:
      readOnlyRootFilesystem: true
  - image: busybox:1.35
    name: busybox-again
    securityContext:
      readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-roroot

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-roroot
policy disallow-default-namespace -> resource default/Pod/goodpod02-roroot failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02-roroot failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02-roroot failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02-roroot failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02-roroot failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod02-roroot failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Pod/goodpod02-roroot failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods24.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ir-pods-namespace:
apiVersion: v1
kind: Namespace
metadata:
  name: ir-pods-namespace
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ir-pods-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ir-pods-namespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ir-pods-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ir-pods-namespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ir-pods-namespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ir-pods-namespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ir-pods-namespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ir-pods-namespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-pods24_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Pod/goodpod01-registry:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01-registry
  namespace: ir-pods-namespace
spec:
  containers:
  - image: eu.foo.io/nginx
    name: k8s-nginx
  initContainers:
  - image: bar.io/nginx
    name: k8s-nginx-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod01-registry

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod01-registry
policy disallow-latest-tag -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods24_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Pod/goodpod02-registry:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02-registry
  namespace: ir-pods-namespace
spec:
  containers:
  - image: bar.io/nginx
    name: k8s-nginx
  - image: eu.foo.io/busybox
    name: busybox
  initContainers:
  - image: bar.io/nginx
    name: nginx-init
  - image: eu.foo.io/busybox
    name: busybox-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod02-registry

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod02-registry
policy disallow-latest-tag -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01-roroot:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01-roroot
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    securityContext:
      readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-roroot

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-roroot
policy disallow-default-namespace -> resource default/Pod/goodpod01-roroot failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01-roroot failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01-roroot failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01-roroot failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod01-roroot failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01-roroot failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Pod/goodpod01-roroot failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods3_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02-roroot:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02-roroot
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox
    securityContext:
      readOnlyRootFilesystem: true
  - image: busybox:1.35
    name: busybox-again
    securityContext:
      readOnlyRootFilesystem: true

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-roroot

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-roroot
policy disallow-default-namespace -> resource default/Pod/goodpod02-roroot failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02-roroot failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02-roroot failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02-roroot failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/goodpod02-roroot failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod02-roroot failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy restrict-image-registries -> resource default/Pod/goodpod02-roroot failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Namespace/ir-pods-namespace:
apiVersion: v1
kind: Namespace
metadata:
  name: ir-pods-namespace
  namespace: default

---


Mutation:
Mutation has been applied successfully.
policy add-networkpolicy applied to default/Namespace/ir-pods-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: default-deny
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-deny
  namespace: ir-pods-namespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---


Generate:
Generation completed successfully.
policy add-networkpolicy-dns applied to default/Namespace/ir-pods-namespace:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-networkpolicy-dns
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: add-netpol-dns
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: allow-dns
  namespace: ir-pods-namespace
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  podSelector:
    matchLabels: {}
  policyTypes:
  - Egress

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ir-pods-namespace:
apiVersion: v1
kind: ResourceQuota
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-resourcequota
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-resourcequota
  namespace: ir-pods-namespace
spec:
  hard:
    limits.cpu: "4"
    limits.memory: 16Gi
    requests.cpu: "4"
    requests.memory: 16Gi

---


Generate:
Generation completed successfully.
policy add-ns-quota applied to default/Namespace/ir-pods-namespace:
apiVersion: v1
kind: LimitRange
metadata:
  labels:
    app.kubernetes.io/managed-by: kyverno
    generate.kyverno.io/policy-name: add-ns-quota
    generate.kyverno.io/policy-namespace: ""
    generate.kyverno.io/rule-name: generate-limitrange
    generate.kyverno.io/trigger-group: ""
    generate.kyverno.io/trigger-kind: Namespace
    generate.kyverno.io/trigger-namespace: default
    generate.kyverno.io/trigger-uid: ""
    generate.kyverno.io/trigger-version: v1
  name: default-limitrange
  namespace: ir-pods-namespace
spec:
  limits:
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 200m
      memory: 256Mi
    type: Container

---


Generate:
Generation completed successfully.
pass: 5, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: good-pods4_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Pod/goodpod01-registry:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01-registry
  namespace: ir-pods-namespace
spec:
  containers:
  - image: eu.foo.io/nginx
    name: k8s-nginx
  initContainers:
  - image: bar.io/nginx
    name: k8s-nginx-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod01-registry

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod01-registry
policy disallow-latest-tag -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Pod/goodpod01-registry failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods4_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to ir-pods-namespace/Pod/goodpod02-registry:
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02-registry
  namespace: ir-pods-namespace
spec:
  containers:
  - image: bar.io/nginx
    name: k8s-nginx
  - image: eu.foo.io/busybox
    name: busybox
  initContainers:
  - image: bar.io/nginx
    name: nginx-init
  - image: eu.foo.io/busybox
    name: busybox-init

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod02-registry

skipped mutate policy add-safe-to-evict -> resource ir-pods-namespace/Pod/goodpod02-registry
policy disallow-latest-tag -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/initContainers/0/resources/

policy require-pod-probes -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource ir-pods-namespace/Pod/goodpod02-registry failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01-label:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/name: busybox
  name: goodpod01-label
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-label

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01-label
policy disallow-default-namespace -> resource default/Pod/goodpod01-label failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod01-label failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01-label failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Pod/goodpod01-label failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod01-label failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01-label failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01-label failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods5_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02-label:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/name: busybox
    foo: bar
  name: goodpod02-label
  namespace: default
spec:
  containers:
  - image: busybox:1.35
    name: busybox

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-label

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02-label
policy disallow-default-namespace -> resource default/Pod/goodpod02-label failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Pod/goodpod02-label failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02-label failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-requests-limits -> resource default/Pod/goodpod02-label failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/containers/0/resources/

policy require-pod-probes -> resource default/Pod/goodpod02-label failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02-label failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02-label failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 8, fail: 7, warn: 0, error: 0, skip: 2 

##### FILE: good-pods6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod01:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod01
  namespace: default
spec:
  containers:
  - image: busybox
    name: busybox
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod01
policy disallow-default-namespace -> resource default/Pod/goodpod01 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/goodpod01 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/goodpod01 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod01 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod01 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/goodpod01 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod01 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod01 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pods6_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/goodpod02:
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: goodpod02
  namespace: default
spec:
  containers:
  - image: busybox
    name: busybox
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi
  - image: busybox
    name: busybox-again
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02

skipped mutate policy add-safe-to-evict -> resource default/Pod/goodpod02
policy disallow-default-namespace -> resource default/Pod/goodpod02 failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/goodpod02 failed:
1 - require-image-tag validation failure: validation error: An image tag is required. rule require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/goodpod02 failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/goodpod02 failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/goodpod02 failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/app.kubernetes.io/name/

policy require-pod-probes -> resource default/Pod/goodpod02 failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/goodpod02 failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/goodpod02 failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: good-pods-all.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/bad-pods-all:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: bad-pods-all
  namespace: default
spec:
  containers:
  - image: asdfeasdfasada:latest
    name: test-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  - image: sjbonmqopcta:latest
    name: test-webserver02
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  ephemeralContainers:
  - image: asdfeasdfasada:latest
    name: ephemtest-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  initContainers:
  - image: fjtyonaq:latest
    name: inittest-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  volumes:
  - hostPath:
      path: /var/log
    name: foo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/bad-pods-all
policy disallow-default-namespace -> resource default/Pod/bad-pods-all failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/bad-pods-all failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/bad-pods-all failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/bad-pods-all failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/bad-pods-all failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/bad-pods-all failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/ephemeralContainers/0/resources/

policy require-pod-probes -> resource default/Pod/bad-pods-all failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/bad-pods-all failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/bad-pods-all failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/ephemeralContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: good-pods-all1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/bad-pods-all:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: bad-pods-all
  namespace: default
spec:
  containers:
  - image: asdfeasdfasada:latest
    name: test-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  - image: sjbonmqopcta:latest
    name: test-webserver02
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  ephemeralContainers:
  - image: asdfeasdfasada:latest
    name: ephemtest-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  initContainers:
  - image: fjtyonaq:latest
    name: inittest-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  volumes:
  - hostPath:
      path: /var/log
    name: foo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/bad-pods-all
policy disallow-default-namespace -> resource default/Pod/bad-pods-all failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/bad-pods-all failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/bad-pods-all failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/bad-pods-all failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/bad-pods-all failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/bad-pods-all failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/ephemeralContainers/0/resources/

policy require-pod-probes -> resource default/Pod/bad-pods-all failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/bad-pods-all failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/bad-pods-all failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/ephemeralContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: good-pods-all2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/bad-pods-all:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: bad-pods-all
  namespace: default
spec:
  containers:
  - image: asdfeasdfasada:latest
    name: test-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  - image: sjbonmqopcta:latest
    name: test-webserver02
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  ephemeralContainers:
  - image: asdfeasdfasada:latest
    name: ephemtest-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  initContainers:
  - image: fjtyonaq:latest
    name: inittest-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  volumes:
  - hostPath:
      path: /var/log
    name: foo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/bad-pods-all
policy disallow-default-namespace -> resource default/Pod/bad-pods-all failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/bad-pods-all failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/bad-pods-all failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/bad-pods-all failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/bad-pods-all failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/bad-pods-all failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/ephemeralContainers/0/resources/

policy require-pod-probes -> resource default/Pod/bad-pods-all failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/bad-pods-all failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/bad-pods-all failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/ephemeralContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: good-pods-all3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/bad-pods-all:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: bad-pods-all
  namespace: default
spec:
  containers:
  - image: asdfeasdfasada:latest
    name: test-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  - image: sjbonmqopcta:latest
    name: test-webserver02
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  ephemeralContainers:
  - image: asdfeasdfasada:latest
    name: ephemtest-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  initContainers:
  - image: fjtyonaq:latest
    name: inittest-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  volumes:
  - hostPath:
      path: /var/log
    name: foo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/bad-pods-all
policy disallow-default-namespace -> resource default/Pod/bad-pods-all failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/bad-pods-all failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/bad-pods-all failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/bad-pods-all failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/bad-pods-all failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/bad-pods-all failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/ephemeralContainers/0/resources/

policy require-pod-probes -> resource default/Pod/bad-pods-all failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/bad-pods-all failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/bad-pods-all failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/ephemeralContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: good-pods-all4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Pod/bad-pods-all:
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  name: bad-pods-all
  namespace: default
spec:
  containers:
  - image: asdfeasdfasada:latest
    name: test-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  - image: sjbonmqopcta:latest
    name: test-webserver02
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  ephemeralContainers:
  - image: asdfeasdfasada:latest
    name: ephemtest-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  initContainers:
  - image: fjtyonaq:latest
    name: inittest-webserver
    volumeMounts:
    - mountPath: /some/dir
      name: foo
      readOnly: true
  volumes:
  - hostPath:
      path: /var/log
    name: foo

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Pod/bad-pods-all
policy disallow-default-namespace -> resource default/Pod/bad-pods-all failed:
1 - validate-namespace validation error: Using 'default' namespace is not allowed. rule validate-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Pod/bad-pods-all failed:
1 - validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Pod/bad-pods-all failed:
1 - require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Pod/bad-pods-all failed:
1 - require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Pod/bad-pods-all failed:
1 - check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule check-for-labels failed at path /metadata/labels/

policy require-requests-limits -> resource default/Pod/bad-pods-all failed:
1 - validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule validate-resources failed at path /spec/ephemeralContainers/0/resources/

policy require-pod-probes -> resource default/Pod/bad-pods-all failed:
1 - validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Pod/bad-pods-all failed:
1 - validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule validate-readOnlyRootFilesystem failed at path /spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Pod/bad-pods-all failed:
1 - validate-registries validation error: Unknown image registry. rule validate-registries failed at path /spec/ephemeralContainers/0/image/


pass: 7, fail: 9, warn: 0, error: 0, skip: 1 

##### FILE: go-todo.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/go-todo-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: go-todo
  name: go-todo-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-todo
  template:
    metadata:
      labels:
        app: go-todo
    spec:
      containers:
      - env:
        - name: DB_USER
          value: root
        - name: DB_PASS
          value: my-secret-pw
        - name: DB_PORT
          value: "3306"
        - name: DB_DATABASE
          value: gotodo
        image: monu1/go-todo:v2
        name: go-todo
        ports:
        - containerPort: 4040

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-todo-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-todo-deployment
policy disallow-default-namespace -> resource default/Deployment/go-todo-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy drop-all-capabilities -> resource default/Deployment/go-todo-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/go-todo-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/go-todo-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/go-todo-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/go-todo-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/go-todo-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/go-todo-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 7, fail: 8, warn: 0, error: 0, skip: 2 

##### FILE: go-todo_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/go-todo-service:
apiVersion: v1
kind: Service
metadata:
  name: go-todo-service
  namespace: default
spec:
  ports:
  - nodePort: 30100
    port: 4040
    protocol: TCP
    targetPort: 4040
  selector:
    app: go-todo
  type: NodePort

---


Mutation:
Mutation has been applied successfully.policy restrict-nodeport -> resource default/Service/go-todo-service failed:
1 - validate-nodeport validation error: Services of type NodePort are not allowed. rule validate-nodeport failed at path /spec/type/


pass: 1, fail: 1, warn: 0, error: 0, skip: 0 

##### FILE: go-webapp-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/go-web-app-1:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-web-app-1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-web-app-1
  template:
    metadata:
      labels:
        app: go-web-app-1
    spec:
      containers:
      - image: go_web_app
        imagePullPolicy: Never
        name: go-web-app-1
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-web-app-1

skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-web-app-1
policy disallow-default-namespace -> resource default/Deployment/go-web-app-1 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/go-web-app-1 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/go-web-app-1 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/go-web-app-1 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/go-web-app-1 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/go-web-app-1 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/go-web-app-1 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/go-web-app-1 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/go-web-app-1 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: go-webapp-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/go-web-app-1:
apiVersion: v1
kind: Service
metadata:
  name: go-web-app-1
  namespace: default
spec:
  ports:
  - port: 8091
    protocol: TCP
    targetPort: 8080
  selector:
    app: go-web-app-1
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: go-webapp-deployment_2.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/go-web-app-2:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-web-app-2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-web-app-2
  template:
    metadata:
      labels:
        app: go-web-app-2
    spec:
      containers:
      - image: go_web_app
        imagePullPolicy: Never
        name: go-web-app-2
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-web-app-2

skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-web-app-2
policy disallow-default-namespace -> resource default/Deployment/go-web-app-2 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/go-web-app-2 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/go-web-app-2 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/go-web-app-2 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/go-web-app-2 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/go-web-app-2 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/go-web-app-2 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/go-web-app-2 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/go-web-app-2 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: go-webapp-deployment_3.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/go-web-app-2:
apiVersion: v1
kind: Service
metadata:
  name: go-web-app-2
  namespace: default
spec:
  ports:
  - port: 8092
    protocol: TCP
    targetPort: 8080
  selector:
    app: go-web-app-2
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: go-webapp-deployment_4.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/go-web-app-3:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-web-app-3
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-web-app-3
  template:
    metadata:
      labels:
        app: go-web-app-3
    spec:
      containers:
      - image: go_web_app
        imagePullPolicy: Never
        name: go-web-app-3
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-web-app-3

skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-web-app-3
policy disallow-default-namespace -> resource default/Deployment/go-web-app-3 failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/go-web-app-3 failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/go-web-app-3 failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/go-web-app-3 failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/go-web-app-3 failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/go-web-app-3 failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/go-web-app-3 failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/go-web-app-3 failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/go-web-app-3 failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: go-webapp-deployment_5.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/go-web-app-3:
apiVersion: v1
kind: Service
metadata:
  name: go-web-app-3
  namespace: default
spec:
  ports:
  - port: 8093
    protocol: TCP
    targetPort: 8080
  selector:
    app: go-web-app-3
  type: ClusterIP

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: go-webapp-deployment_6.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/ConfigMap/nginx-config:
apiVersion: v1
data:
  nginx.conf: |
    # Configuração do Nginx como balanceador de carga
    worker_processes 1;

    events {
      worker_connections 1024;
    }

    http {
      upstream go-services {
        server go-web-app-1:8091;
        server go-web-app-2:8092;
        server go-web-app-3:8093;
      }

      server {
        listen 80;
        server_name example.com;

        location ~ ^/(endpoint1|endpoint2) {
          proxy_pass http://go-services;
        }
      }
    }
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default

---


Mutation:
Mutation has been applied successfully.
pass: 0, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: go-webapp-deployment_7.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/nginx-deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-config
          subPath: nginx.conf
      volumes:
      - configMap:
          name: nginx-config
        name: nginx-config

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment

skipped mutate policy add-safe-to-evict -> resource default/Deployment/nginx-deployment
policy disallow-default-namespace -> resource default/Deployment/nginx-deployment failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-image-tag validation failure: validation error: Using a mutable image tag e.g. 'latest' is not allowed. rule autogen-validate-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/nginx-deployment failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/nginx-deployment failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/nginx-deployment failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

##### FILE: go-webapp-loadbalancer-deployment.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Service/go-web-app:
apiVersion: v1
kind: Service
metadata:
  name: go-web-app
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: go-web-app
  type: LoadBalancer

---


Mutation:
Mutation has been applied successfully.
pass: 2, fail: 0, warn: 0, error: 0, skip: 0 

##### FILE: go-webapp-loadbalancer-deployment_1.yaml #####

Applying 61 policy rule(s) to 1 resource(s)...

policy add-safe-to-evict applied to default/Deployment/go-web-app:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-web-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: go-web-app
  template:
    metadata:
      labels:
        app: go-web-app
    spec:
      containers:
      - image: go_web_app
        imagePullPolicy: Never
        name: go-web-app
        ports:
        - containerPort: 8080

---


Mutation:
Mutation has been applied successfully.
skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-web-app

skipped mutate policy add-safe-to-evict -> resource default/Deployment/go-web-app
policy disallow-default-namespace -> resource default/Deployment/go-web-app failed:
1 - validate-podcontroller-namespace validation error: Using 'default' namespace is not allowed for pod controllers. rule validate-podcontroller-namespace failed at path /metadata/namespace/

policy disallow-latest-tag -> resource default/Deployment/go-web-app failed:
1 - autogen-require-image-tag validation failure: validation error: An image tag is required. rule autogen-require-image-tag failed at path /image/

policy drop-all-capabilities -> resource default/Deployment/go-web-app failed:
1 - autogen-require-drop-all validation failure: Containers must drop `ALL` capabilities.

policy drop-cap-net-raw -> resource default/Deployment/go-web-app failed:
1 - autogen-require-drop-cap-net-raw validation failure: Containers must drop the `CAP_NET_RAW` capability.

policy require-labels -> resource default/Deployment/go-web-app failed:
1 - autogen-check-for-labels validation error: The label `app.kubernetes.io/name` is required. rule autogen-check-for-labels failed at path /spec/template/metadata/labels/app.kubernetes.io/name/

policy require-requests-limits -> resource default/Deployment/go-web-app failed:
1 - autogen-validate-resources validation error: CPU and memory resource requests and memory limits are required for containers. rule autogen-validate-resources failed at path /spec/template/spec/containers/0/resources/

policy require-pod-probes -> resource default/Deployment/go-web-app failed:
1 - autogen-validate-probes validation failure: Liveness, readiness, or startup probes are required for all containers.

policy require-ro-rootfs -> resource default/Deployment/go-web-app failed:
1 - autogen-validate-readOnlyRootFilesystem validation error: Root filesystem must be read-only. rule autogen-validate-readOnlyRootFilesystem failed at path /spec/template/spec/containers/0/securityContext/

policy restrict-image-registries -> resource default/Deployment/go-web-app failed:
1 - autogen-validate-registries validation error: Unknown image registry. rule autogen-validate-registries failed at path /spec/template/spec/containers/0/image/


pass: 6, fail: 9, warn: 0, error: 0, skip: 2 

